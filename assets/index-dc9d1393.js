import{_ as C,a as L,h as S,o}from"./jsxRuntime.module-9121d302.js";import{u as b}from"./useKey-ea23d921.js";import{b as y,f as D}from"./index-76ffaf5a.js";import{S as w}from"./Stretcher-961678e0.js";import{h as k,i as x}from"./BoneManager-e22483f6.js";import{h as E,v as l}from"./viewer-7c94c9c1.js";import{B as n}from"./Box-9fcd2e2c.js";import{a as N,b as q}from"./DialogTitle-b23f8be5.js";import{S as I}from"./Gallery-44e2f555.js";import{M as K}from"./filterConfig-b75132fe.js";import{B as T}from"./Button-1aaa8f1a.js";import"./index-d7a93f3d.js";import"./_commonjsHelpers-35101cd5.js";import"./compat.module-90d28d8c.js";import"./immer.esm-6fa25dee.js";import"./preload-helper-45408441.js";/* empty css               */import"./ModelIcon-6ce365e9.js";import"./Accordion-b426e74d.js";import"./useToggleState-3fb9d00b.js";import"./createSvgIcon-f2a0048b.js";import"./ButtonBase-c56a8b38.js";import"./Popover-851dcb03.js";import"./ColorButton-28f4d73a.js";import"./SkipPrevious-6e1cb3e1.js";import"./Close-0ad613b5.js";import"./FaceSelect-23c7fcb9.js";import"./useIsMount-3cd333ef.js";import"./FacePartSelector-ce967422.js";import"./Selector-dc749ac1.js";import"./GlowToggle-14284aac.js";import"./MeshMouthSelect-f4b84919.js";import"./FaceTexture-8543109d.js";import"./lists-8bda5b9b.js";import"./styles-f5bd6115.js";import"./index-f60cacb5.js";import"./helper-aa3b0c96.js";import"./AddWeapon-a8e5ab16.js";import"./index-cb8eaac3.js";import"./initAniSelectState-54296060.js";import"./three-95e0c7cb.js";import"./CopyShader-e27bbfcf.js";import"./ShaderPass-ffe7d003.js";import"./Pass-b3525e48.js";function Dt(){var p;const{activeModel:e}=y();if(!e)return null;const[h,u]=b(),{inputModel:f}=D(),a=C(()=>{}),i=["root",...((p=e==null?void 0:e.bones)==null?void 0:p.list)??[]],[m,c]=L(i[0]),g=E(e.attachment.list.map(t=>t.parentBone));S(()=>{if(!e)return;c("root"),a.current();const t=e.addEventListener("AttachmentChanged",u);return a.current=()=>e.removeEventListener("AttachmentChanged",t),a.current},[e]);const A=t=>{c(t.target.value)},s=async(t=m)=>{const d=await f();if(!d)return;const[v,B]=d,r=await l.loadDLModel(v);r.userData.name=B,e.attach(r,t==="root"?void 0:t),r.outline.code=e.outline.code,r.material.code=e.material.code,l.render()},M=()=>s();return o(n,{className:"AttachmentManager",children:[o(n,{className:"AttachmentManager-top",children:[o(N,{children:"Manage Attachments"}),o(n,{className:"AttachmentManager-add",children:[o(I,{onChange:A,value:m,className:"AttachmentManager-select",children:i.map(t=>o(K,{value:t,children:t},t))}),o(T,{title:"Add Attachment",variant:"contained",onClick:M,children:o(k,{})})]})]}),o(q,{className:"AttachmentManager-body",children:[o(w,{}),g.map(t=>o(x,{add:s,bone:t},t))]},h)]})}export{Dt as default};
