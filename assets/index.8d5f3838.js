var uv=Object.defineProperty;var hv=(r,e,t)=>e in r?uv(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var yn=(r,e,t)=>(hv(r,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerpolicy&&(s.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?s.credentials="include":i.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();var Ma,we,om,Ws,If,lm,nl={},cm=[],fv=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function Yn(r,e){for(var t in e)r[t]=e[t];return r}function um(r){var e=r.parentNode;e&&e.removeChild(r)}function On(r,e,t){var n,i,s,a={};for(s in e)s=="key"?n=e[s]:s=="ref"?i=e[s]:a[s]=e[s];if(arguments.length>2&&(a.children=arguments.length>3?Ma.call(arguments,2):t),typeof r=="function"&&r.defaultProps!=null)for(s in r.defaultProps)a[s]===void 0&&(a[s]=r.defaultProps[s]);return Xs(r,a,n,i,null)}function Xs(r,e,t,n,i){var s={type:r,props:e,key:t,ref:n,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:i==null?++om:i};return i==null&&we.vnode!=null&&we.vnode(s),s}function hm(){return{current:null}}function Fn(r){return r.children}function En(r,e){this.props=r,this.context=e}function Ks(r,e){if(e==null)return r.__?Ks(r.__,r.__.__k.indexOf(r)+1):null;for(var t;e<r.__k.length;e++)if((t=r.__k[e])!=null&&t.__e!=null)return t.__e;return typeof r.type=="function"?Ks(r):null}function fm(r){var e,t;if((r=r.__)!=null&&r.__c!=null){for(r.__e=r.__c.base=null,e=0;e<r.__k.length;e++)if((t=r.__k[e])!=null&&t.__e!=null){r.__e=r.__c.base=t.__e;break}return fm(r)}}function tu(r){(!r.__d&&(r.__d=!0)&&Ws.push(r)&&!il.__r++||If!==we.debounceRendering)&&((If=we.debounceRendering)||setTimeout)(il)}function il(){for(var r;il.__r=Ws.length;)r=Ws.sort(function(e,t){return e.__v.__b-t.__v.__b}),Ws=[],r.some(function(e){var t,n,i,s,a,o;e.__d&&(a=(s=(t=e).__v).__e,(o=t.__P)&&(n=[],(i=Yn({},s)).__v=s.__v+1,rh(o,s,i,t.__n,o.ownerSVGElement!==void 0,s.__h!=null?[a]:null,n,a==null?Ks(s):a,s.__h),gm(n,s),s.__e!=a&&fm(s)))})}function dm(r,e,t,n,i,s,a,o,l,c){var u,h,f,d,p,m,g,v=n&&n.__k||cm,x=v.length;for(t.__k=[],u=0;u<e.length;u++)if((d=t.__k[u]=(d=e[u])==null||typeof d=="boolean"?null:typeof d=="string"||typeof d=="number"||typeof d=="bigint"?Xs(null,d,null,null,d):Array.isArray(d)?Xs(Fn,{children:d},null,null,null):d.__b>0?Xs(d.type,d.props,d.key,d.ref?d.ref:null,d.__v):d)!=null){if(d.__=t,d.__b=t.__b+1,(f=v[u])===null||f&&d.key==f.key&&d.type===f.type)v[u]=void 0;else for(h=0;h<x;h++){if((f=v[h])&&d.key==f.key&&d.type===f.type){v[h]=void 0;break}f=null}rh(r,d,f=f||nl,i,s,a,o,l,c),p=d.__e,(h=d.ref)&&f.ref!=h&&(g||(g=[]),f.ref&&g.push(f.ref,null,d),g.push(h,d.__c||p,d)),p!=null?(m==null&&(m=p),typeof d.type=="function"&&d.__k===f.__k?d.__d=l=pm(d,l,r):l=mm(r,d,f,v,p,l),typeof t.type=="function"&&(t.__d=l)):l&&f.__e==l&&l.parentNode!=r&&(l=Ks(f))}for(t.__e=m,u=x;u--;)v[u]!=null&&vm(v[u],v[u]);if(g)for(u=0;u<g.length;u++)_m(g[u],g[++u],g[++u])}function pm(r,e,t){for(var n,i=r.__k,s=0;i&&s<i.length;s++)(n=i[s])&&(n.__=r,e=typeof n.type=="function"?pm(n,e,t):mm(t,n,n,i,n.__e,e));return e}function ti(r,e){return e=e||[],r==null||typeof r=="boolean"||(Array.isArray(r)?r.some(function(t){ti(t,e)}):e.push(r)),e}function mm(r,e,t,n,i,s){var a,o,l;if(e.__d!==void 0)a=e.__d,e.__d=void 0;else if(t==null||i!=s||i.parentNode==null)e:if(s==null||s.parentNode!==r)r.appendChild(i),a=null;else{for(o=s,l=0;(o=o.nextSibling)&&l<n.length;l+=1)if(o==i)break e;r.insertBefore(i,s),a=s}return a!==void 0?a:i.nextSibling}function dv(r,e,t,n,i){var s;for(s in t)s==="children"||s==="key"||s in e||rl(r,s,null,t[s],n);for(s in e)i&&typeof e[s]!="function"||s==="children"||s==="key"||s==="value"||s==="checked"||t[s]===e[s]||rl(r,s,e[s],t[s],n)}function Df(r,e,t){e[0]==="-"?r.setProperty(e,t):r[e]=t==null?"":typeof t!="number"||fv.test(e)?t:t+"px"}function rl(r,e,t,n,i){var s;e:if(e==="style")if(typeof t=="string")r.style.cssText=t;else{if(typeof n=="string"&&(r.style.cssText=n=""),n)for(e in n)t&&e in t||Df(r.style,e,"");if(t)for(e in t)n&&t[e]===n[e]||Df(r.style,e,t[e])}else if(e[0]==="o"&&e[1]==="n")s=e!==(e=e.replace(/Capture$/,"")),e=e.toLowerCase()in r?e.toLowerCase().slice(2):e.slice(2),r.l||(r.l={}),r.l[e+s]=t,t?n||r.addEventListener(e,s?Ff:Of,s):r.removeEventListener(e,s?Ff:Of,s);else if(e!=="dangerouslySetInnerHTML"){if(i)e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(e!=="href"&&e!=="list"&&e!=="form"&&e!=="tabIndex"&&e!=="download"&&e in r)try{r[e]=t==null?"":t;break e}catch{}typeof t=="function"||(t==null||t===!1&&e.indexOf("-")==-1?r.removeAttribute(e):r.setAttribute(e,t))}}function Of(r){this.l[r.type+!1](we.event?we.event(r):r)}function Ff(r){this.l[r.type+!0](we.event?we.event(r):r)}function rh(r,e,t,n,i,s,a,o,l){var c,u,h,f,d,p,m,g,v,x,_,y,M,w,C,b=e.type;if(e.constructor!==void 0)return null;t.__h!=null&&(l=t.__h,o=e.__e=t.__e,e.__h=null,s=[o]),(c=we.__b)&&c(e);try{e:if(typeof b=="function"){if(g=e.props,v=(c=b.contextType)&&n[c.__c],x=c?v?v.props.value:c.__:n,t.__c?m=(u=e.__c=t.__c).__=u.__E:("prototype"in b&&b.prototype.render?e.__c=u=new b(g,x):(e.__c=u=new En(g,x),u.constructor=b,u.render=mv),v&&v.sub(u),u.props=g,u.state||(u.state={}),u.context=x,u.__n=n,h=u.__d=!0,u.__h=[],u._sb=[]),u.__s==null&&(u.__s=u.state),b.getDerivedStateFromProps!=null&&(u.__s==u.state&&(u.__s=Yn({},u.__s)),Yn(u.__s,b.getDerivedStateFromProps(g,u.__s))),f=u.props,d=u.state,h)b.getDerivedStateFromProps==null&&u.componentWillMount!=null&&u.componentWillMount(),u.componentDidMount!=null&&u.__h.push(u.componentDidMount);else{if(b.getDerivedStateFromProps==null&&g!==f&&u.componentWillReceiveProps!=null&&u.componentWillReceiveProps(g,x),!u.__e&&u.shouldComponentUpdate!=null&&u.shouldComponentUpdate(g,u.__s,x)===!1||e.__v===t.__v){for(u.props=g,u.state=u.__s,e.__v!==t.__v&&(u.__d=!1),u.__v=e,e.__e=t.__e,e.__k=t.__k,e.__k.forEach(function(A){A&&(A.__=e)}),_=0;_<u._sb.length;_++)u.__h.push(u._sb[_]);u._sb=[],u.__h.length&&a.push(u);break e}u.componentWillUpdate!=null&&u.componentWillUpdate(g,u.__s,x),u.componentDidUpdate!=null&&u.__h.push(function(){u.componentDidUpdate(f,d,p)})}if(u.context=x,u.props=g,u.__v=e,u.__P=r,y=we.__r,M=0,"prototype"in b&&b.prototype.render){for(u.state=u.__s,u.__d=!1,y&&y(e),c=u.render(u.props,u.state,u.context),w=0;w<u._sb.length;w++)u.__h.push(u._sb[w]);u._sb=[]}else do u.__d=!1,y&&y(e),c=u.render(u.props,u.state,u.context),u.state=u.__s;while(u.__d&&++M<25);u.state=u.__s,u.getChildContext!=null&&(n=Yn(Yn({},n),u.getChildContext())),h||u.getSnapshotBeforeUpdate==null||(p=u.getSnapshotBeforeUpdate(f,d)),C=c!=null&&c.type===Fn&&c.key==null?c.props.children:c,dm(r,Array.isArray(C)?C:[C],e,t,n,i,s,a,o,l),u.base=e.__e,e.__h=null,u.__h.length&&a.push(u),m&&(u.__E=u.__=null),u.__e=!1}else s==null&&e.__v===t.__v?(e.__k=t.__k,e.__e=t.__e):e.__e=pv(t.__e,e,t,n,i,s,a,l);(c=we.diffed)&&c(e)}catch(A){e.__v=null,(l||s!=null)&&(e.__e=o,e.__h=!!l,s[s.indexOf(o)]=null),we.__e(A,e,t)}}function gm(r,e){we.__c&&we.__c(e,r),r.some(function(t){try{r=t.__h,t.__h=[],r.some(function(n){n.call(t)})}catch(n){we.__e(n,t.__v)}})}function pv(r,e,t,n,i,s,a,o){var l,c,u,h=t.props,f=e.props,d=e.type,p=0;if(d==="svg"&&(i=!0),s!=null){for(;p<s.length;p++)if((l=s[p])&&"setAttribute"in l==!!d&&(d?l.localName===d:l.nodeType===3)){r=l,s[p]=null;break}}if(r==null){if(d===null)return document.createTextNode(f);r=i?document.createElementNS("http://www.w3.org/2000/svg",d):document.createElement(d,f.is&&f),s=null,o=!1}if(d===null)h===f||o&&r.data===f||(r.data=f);else{if(s=s&&Ma.call(r.childNodes),c=(h=t.props||nl).dangerouslySetInnerHTML,u=f.dangerouslySetInnerHTML,!o){if(s!=null)for(h={},p=0;p<r.attributes.length;p++)h[r.attributes[p].name]=r.attributes[p].value;(u||c)&&(u&&(c&&u.__html==c.__html||u.__html===r.innerHTML)||(r.innerHTML=u&&u.__html||""))}if(dv(r,f,h,i,o),u)e.__k=[];else if(p=e.props.children,dm(r,Array.isArray(p)?p:[p],e,t,n,i&&d!=="foreignObject",s,a,s?s[0]:t.__k&&Ks(t,0),o),s!=null)for(p=s.length;p--;)s[p]!=null&&um(s[p]);o||("value"in f&&(p=f.value)!==void 0&&(p!==r.value||d==="progress"&&!p||d==="option"&&p!==h.value)&&rl(r,"value",p,h.value,!1),"checked"in f&&(p=f.checked)!==void 0&&p!==r.checked&&rl(r,"checked",p,h.checked,!1))}return r}function _m(r,e,t){try{typeof r=="function"?r(e):r.current=e}catch(n){we.__e(n,t)}}function vm(r,e,t){var n,i;if(we.unmount&&we.unmount(r),(n=r.ref)&&(n.current&&n.current!==r.__e||_m(n,null,e)),(n=r.__c)!=null){if(n.componentWillUnmount)try{n.componentWillUnmount()}catch(s){we.__e(s,e)}n.base=n.__P=null,r.__c=void 0}if(n=r.__k)for(i=0;i<n.length;i++)n[i]&&vm(n[i],e,t||typeof r.type!="function");t||r.__e==null||um(r.__e),r.__=r.__e=r.__d=void 0}function mv(r,e,t){return this.constructor(r,t)}function ns(r,e,t){var n,i,s;we.__&&we.__(r,e),i=(n=typeof t=="function")?null:t&&t.__k||e.__k,s=[],rh(e,r=(!n&&t||e).__k=On(Fn,null,[r]),i||nl,nl,e.ownerSVGElement!==void 0,!n&&t?[t]:i?null:e.firstChild?Ma.call(e.childNodes):null,s,!n&&t?t:i?i.__e:e.firstChild,n),gm(s,r)}function ym(r,e){ns(r,e,ym)}function gv(r,e,t){var n,i,s,a=Yn({},r.props);for(s in e)s=="key"?n=e[s]:s=="ref"?i=e[s]:a[s]=e[s];return arguments.length>2&&(a.children=arguments.length>3?Ma.call(arguments,2):t),Xs(r.type,a,n||r.key,i||r.ref,null)}function xm(r,e){var t={__c:e="__cC"+lm++,__:r,Consumer:function(n,i){return n.children(i)},Provider:function(n){var i,s;return this.getChildContext||(i=[],(s={})[e]=this,this.getChildContext=function(){return s},this.shouldComponentUpdate=function(a){this.props.value!==a.value&&i.some(tu)},this.sub=function(a){i.push(a);var o=a.componentWillUnmount;a.componentWillUnmount=function(){i.splice(i.indexOf(a),1),o&&o.call(a)}}),n.children}};return t.Provider.__=t.Consumer.contextType=t}Ma=cm.slice,we={__e:function(r,e,t,n){for(var i,s,a;e=e.__;)if((i=e.__c)&&!i.__)try{if((s=i.constructor)&&s.getDerivedStateFromError!=null&&(i.setState(s.getDerivedStateFromError(r)),a=i.__d),i.componentDidCatch!=null&&(i.componentDidCatch(r,n||{}),a=i.__d),a)return i.__E=i}catch(o){r=o}throw r}},om=0,En.prototype.setState=function(r,e){var t;t=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=Yn({},this.state),typeof r=="function"&&(r=r(Yn({},t),this.props)),r&&Yn(t,r),r!=null&&this.__v&&(e&&this._sb.push(e),tu(this))},En.prototype.forceUpdate=function(r){this.__v&&(this.__e=!0,r&&this.__h.push(r),tu(this))},En.prototype.render=Fn,Ws=[],il.__r=0,lm=0;const _v="modulepreload",vv=function(r){return"/dl-model/"+r},Nf={},ut=function(e,t,n){if(!t||t.length===0)return e();const i=document.getElementsByTagName("link");return Promise.all(t.map(s=>{if(s=vv(s),s in Nf)return;Nf[s]=!0;const a=s.endsWith(".css"),o=a?'[rel="stylesheet"]':"";if(!!n)for(let u=i.length-1;u>=0;u--){const h=i[u];if(h.href===s&&(!a||h.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${s}"]${o}`))return;const c=document.createElement("link");if(c.rel=a?"stylesheet":_v,a||(c.as="script",c.crossOrigin=""),c.href=s,document.head.appendChild(c),a)return new Promise((u,h)=>{c.addEventListener("load",u),c.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${s}`)))})})).then(()=>e())};var Ei,rt,ic,kf,is=0,bm=[],Vo=[],zf=we.__b,Bf=we.__r,Uf=we.diffed,Vf=we.__c,Gf=we.unmount;function _r(r,e){we.__h&&we.__h(rt,r,is||e),is=0;var t=rt.__H||(rt.__H={__:[],__h:[]});return r>=t.__.length&&t.__.push({__V:Vo}),t.__[r]}function wl(r){return is=1,sh(Tm,r)}function sh(r,e,t){var n=_r(Ei++,2);if(n.t=r,!n.__c&&(n.__=[t?t(e):Tm(void 0,e),function(s){var a=n.__N?n.__N[0]:n.__[0],o=n.t(a,s);a!==o&&(n.__N=[o,n.__[1]],n.__c.setState({}))}],n.__c=rt,!rt.u)){rt.u=!0;var i=rt.shouldComponentUpdate;rt.shouldComponentUpdate=function(s,a,o){if(!n.__c.__H)return!0;var l=n.__c.__H.__.filter(function(u){return u.__c});if(l.every(function(u){return!u.__N}))return!i||i.call(this,s,a,o);var c=!1;return l.forEach(function(u){if(u.__N){var h=u.__[0];u.__=u.__N,u.__N=void 0,h!==u.__[0]&&(c=!0)}}),!(!c&&n.__c.props===s)&&(!i||i.call(this,s,a,o))}}return n.__N||n.__}function rs(r,e){var t=_r(Ei++,3);!we.__s&&oh(t.__H,e)&&(t.__=r,t.i=e,rt.__H.__h.push(t))}function wa(r,e){var t=_r(Ei++,4);!we.__s&&oh(t.__H,e)&&(t.__=r,t.i=e,rt.__h.push(t))}function Qs(r){return is=5,Sl(function(){return{current:r}},[])}function Mm(r,e,t){is=6,wa(function(){return typeof r=="function"?(r(e()),function(){return r(null)}):r?(r.current=e(),function(){return r.current=null}):void 0},t==null?t:t.concat(r))}function Sl(r,e){var t=_r(Ei++,7);return oh(t.__H,e)?(t.__V=r(),t.i=e,t.__h=r,t.__V):t.__}function wm(r,e){return is=8,Sl(function(){return r},e)}function Sm(r){var e=rt.context[r.__c],t=_r(Ei++,9);return t.c=r,e?(t.__==null&&(t.__=!0,e.sub(rt)),e.props.value):r.__}function ah(r,e){we.useDebugValue&&we.useDebugValue(e?e(r):r)}function yv(r){var e=_r(Ei++,10),t=wl();return e.__=r,rt.componentDidCatch||(rt.componentDidCatch=function(n,i){e.__&&e.__(n,i),t[1](n)}),[t[0],function(){t[1](void 0)}]}function Am(){var r=_r(Ei++,11);if(!r.__){for(var e=rt.__v;e!==null&&!e.__m&&e.__!==null;)e=e.__;var t=e.__m||(e.__m=[0,0]);r.__="P"+t[0]+"-"+t[1]++}return r.__}function xv(){for(var r;r=bm.shift();)if(r.__P&&r.__H)try{r.__H.__h.forEach(Go),r.__H.__h.forEach(nu),r.__H.__h=[]}catch(e){r.__H.__h=[],we.__e(e,r.__v)}}we.__b=function(r){rt=null,zf&&zf(r)},we.__r=function(r){Bf&&Bf(r),Ei=0;var e=(rt=r.__c).__H;e&&(ic===rt?(e.__h=[],rt.__h=[],e.__.forEach(function(t){t.__N&&(t.__=t.__N),t.__V=Vo,t.__N=t.i=void 0})):(e.__h.forEach(Go),e.__h.forEach(nu),e.__h=[])),ic=rt},we.diffed=function(r){Uf&&Uf(r);var e=r.__c;e&&e.__H&&(e.__H.__h.length&&(bm.push(e)!==1&&kf===we.requestAnimationFrame||((kf=we.requestAnimationFrame)||bv)(xv)),e.__H.__.forEach(function(t){t.i&&(t.__H=t.i),t.__V!==Vo&&(t.__=t.__V),t.i=void 0,t.__V=Vo})),ic=rt=null},we.__c=function(r,e){e.some(function(t){try{t.__h.forEach(Go),t.__h=t.__h.filter(function(n){return!n.__||nu(n)})}catch(n){e.some(function(i){i.__h&&(i.__h=[])}),e=[],we.__e(n,t.__v)}}),Vf&&Vf(r,e)},we.unmount=function(r){Gf&&Gf(r);var e,t=r.__c;t&&t.__H&&(t.__H.__.forEach(function(n){try{Go(n)}catch(i){e=i}}),t.__H=void 0,e&&we.__e(e,t.__v))};var Hf=typeof requestAnimationFrame=="function";function bv(r){var e,t=function(){clearTimeout(n),Hf&&cancelAnimationFrame(e),setTimeout(r)},n=setTimeout(t,100);Hf&&(e=requestAnimationFrame(t))}function Go(r){var e=rt,t=r.__c;typeof t=="function"&&(r.__c=void 0,t()),rt=e}function nu(r){var e=rt;r.__c=r.__(),rt=e}function oh(r,e){return!r||r.length!==e.length||e.some(function(t,n){return t!==r[n]})}function Tm(r,e){return typeof e=="function"?e(r):e}function Em(r,e){for(var t in e)r[t]=e[t];return r}function iu(r,e){for(var t in r)if(t!=="__source"&&!(t in e))return!0;for(var n in e)if(n!=="__source"&&r[n]!==e[n])return!0;return!1}function rc(r,e){return r===e&&(r!==0||1/r==1/e)||r!=r&&e!=e}function sl(r){this.props=r}function Cm(r,e){function t(i){var s=this.props.ref,a=s==i.ref;return!a&&s&&(s.call?s(null):s.current=null),e?!e(this.props,i)||!a:iu(this.props,i)}function n(i){return this.shouldComponentUpdate=t,On(r,i)}return n.displayName="Memo("+(r.displayName||r.name)+")",n.prototype.isReactComponent=!0,n.__f=!0,n}(sl.prototype=new En).isPureReactComponent=!0,sl.prototype.shouldComponentUpdate=function(r,e){return iu(this.props,r)||iu(this.state,e)};var Wf=we.__b;we.__b=function(r){r.type&&r.type.__f&&r.ref&&(r.props.ref=r.ref,r.ref=null),Wf&&Wf(r)};var Mv=typeof Symbol<"u"&&Symbol.for&&Symbol.for("react.forward_ref")||3911;function Pm(r){function e(t){var n=Em({},t);return delete n.ref,r(n,t.ref||null)}return e.$$typeof=Mv,e.render=e,e.prototype.isReactComponent=e.__f=!0,e.displayName="ForwardRef("+(r.displayName||r.name)+")",e}var Xf=function(r,e){return r==null?null:ti(ti(r).map(e))},Lm={map:Xf,forEach:Xf,count:function(r){return r?ti(r).length:0},only:function(r){var e=ti(r);if(e.length!==1)throw"Children.only";return e[0]},toArray:ti},wv=we.__e;we.__e=function(r,e,t,n){if(r.then){for(var i,s=e;s=s.__;)if((i=s.__c)&&i.__c)return e.__e==null&&(e.__e=t.__e,e.__k=t.__k),i.__c(r,e)}wv(r,e,t,n)};var $f=we.unmount;function Rm(r,e,t){return r&&(r.__c&&r.__c.__H&&(r.__c.__H.__.forEach(function(n){typeof n.__c=="function"&&n.__c()}),r.__c.__H=null),(r=Em({},r)).__c!=null&&(r.__c.__P===t&&(r.__c.__P=e),r.__c=null),r.__k=r.__k&&r.__k.map(function(n){return Rm(n,e,t)})),r}function Im(r,e,t){return r&&(r.__v=null,r.__k=r.__k&&r.__k.map(function(n){return Im(n,e,t)}),r.__c&&r.__c.__P===e&&(r.__e&&t.insertBefore(r.__e,r.__d),r.__c.__e=!0,r.__c.__P=t)),r}function tr(){this.__u=0,this.t=null,this.__b=null}function Dm(r){var e=r.__.__c;return e&&e.__a&&e.__a(r)}function Jt(r){var e,t,n;function i(s){if(e||(e=r()).then(function(a){t=a.default||a},function(a){n=a}),n)throw n;if(!t)throw e;return On(t,s)}return i.displayName="Lazy",i.__f=!0,i}function Jr(){this.u=null,this.o=null}we.unmount=function(r){var e=r.__c;e&&e.__R&&e.__R(),e&&r.__h===!0&&(r.type=null),$f&&$f(r)},(tr.prototype=new En).__c=function(r,e){var t=e.__c,n=this;n.t==null&&(n.t=[]),n.t.push(t);var i=Dm(n.__v),s=!1,a=function(){s||(s=!0,t.__R=null,i?i(o):o())};t.__R=a;var o=function(){if(!--n.__u){if(n.state.__a){var c=n.state.__a;n.__v.__k[0]=Im(c,c.__c.__P,c.__c.__O)}var u;for(n.setState({__a:n.__b=null});u=n.t.pop();)u.forceUpdate()}},l=e.__h===!0;n.__u++||l||n.setState({__a:n.__b=n.__v.__k[0]}),r.then(a,a)},tr.prototype.componentWillUnmount=function(){this.t=[]},tr.prototype.render=function(r,e){if(this.__b){if(this.__v.__k){var t=document.createElement("div"),n=this.__v.__k[0].__c;this.__v.__k[0]=Rm(this.__b,t,n.__O=n.__P)}this.__b=null}var i=e.__a&&On(Fn,null,r.fallback);return i&&(i.__h=null),[On(Fn,null,e.__a?null:r.children),i]};var qf=function(r,e,t){if(++t[1]===t[0]&&r.o.delete(e),r.props.revealOrder&&(r.props.revealOrder[0]!=="t"||!r.o.size))for(t=r.u;t;){for(;t.length>3;)t.pop()();if(t[1]<t[0])break;r.u=t=t[2]}};function Sv(r){return this.getChildContext=function(){return r.context},r.children}function Av(r){var e=this,t=r.i;e.componentWillUnmount=function(){ns(null,e.l),e.l=null,e.i=null},e.i&&e.i!==t&&e.componentWillUnmount(),r.__v?(e.l||(e.i=t,e.l={nodeType:1,parentNode:t,childNodes:[],appendChild:function(n){this.childNodes.push(n),e.i.appendChild(n)},insertBefore:function(n,i){this.childNodes.push(n),e.i.appendChild(n)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),e.i.removeChild(n)}}),ns(On(Sv,{context:e.context},r.__v),e.l)):e.l&&e.componentWillUnmount()}function Om(r,e){var t=On(Av,{__v:r,i:e});return t.containerInfo=e,t}(Jr.prototype=new En).__a=function(r){var e=this,t=Dm(e.__v),n=e.o.get(r);return n[0]++,function(i){var s=function(){e.props.revealOrder?(n.push(i),qf(e,r,n)):i()};t?t(s):s()}},Jr.prototype.render=function(r){this.u=null,this.o=new Map;var e=ti(r.children);r.revealOrder&&r.revealOrder[0]==="b"&&e.reverse();for(var t=e.length;t--;)this.o.set(e[t],this.u=[1,0,this.u]);return r.children},Jr.prototype.componentDidUpdate=Jr.prototype.componentDidMount=function(){var r=this;this.o.forEach(function(e,t){qf(r,t,e)})};var Fm=typeof Symbol<"u"&&Symbol.for&&Symbol.for("react.element")||60103,Tv=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,Ev=typeof document<"u",Cv=function(r){return(typeof Symbol<"u"&&typeof Symbol()=="symbol"?/fil|che|rad/i:/fil|che|ra/i).test(r)};function Nm(r,e,t){return e.__k==null&&(e.textContent=""),ns(r,e),typeof t=="function"&&t(),r?r.__c:null}function km(r,e,t){return ym(r,e),typeof t=="function"&&t(),r?r.__c:null}En.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach(function(r){Object.defineProperty(En.prototype,r,{configurable:!0,get:function(){return this["UNSAFE_"+r]},set:function(e){Object.defineProperty(this,r,{configurable:!0,writable:!0,value:e})}})});var jf=we.event;function Pv(){}function Lv(){return this.cancelBubble}function Rv(){return this.defaultPrevented}we.event=function(r){return jf&&(r=jf(r)),r.persist=Pv,r.isPropagationStopped=Lv,r.isDefaultPrevented=Rv,r.nativeEvent=r};var zm,Yf={configurable:!0,get:function(){return this.class}},Zf=we.vnode;we.vnode=function(r){var e=r.type,t=r.props,n=t;if(typeof e=="string"){var i=e.indexOf("-")===-1;for(var s in n={},t){var a=t[s];Ev&&s==="children"&&e==="noscript"||s==="value"&&"defaultValue"in t&&a==null||(s==="defaultValue"&&"value"in t&&t.value==null?s="value":s==="download"&&a===!0?a="":/ondoubleclick/i.test(s)?s="ondblclick":/^onchange(textarea|input)/i.test(s+e)&&!Cv(t.type)?s="oninput":/^onfocus$/i.test(s)?s="onfocusin":/^onblur$/i.test(s)?s="onfocusout":/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(s)?s=s.toLowerCase():i&&Tv.test(s)?s=s.replace(/[A-Z0-9]/g,"-$&").toLowerCase():a===null&&(a=void 0),/^oninput$/i.test(s)&&(s=s.toLowerCase(),n[s]&&(s="oninputCapture")),n[s]=a)}e=="select"&&n.multiple&&Array.isArray(n.value)&&(n.value=ti(t.children).forEach(function(o){o.props.selected=n.value.indexOf(o.props.value)!=-1})),e=="select"&&n.defaultValue!=null&&(n.value=ti(t.children).forEach(function(o){o.props.selected=n.multiple?n.defaultValue.indexOf(o.props.value)!=-1:n.defaultValue==o.props.value})),r.props=n,t.class!=t.className&&(Yf.enumerable="className"in t,t.className!=null&&(n.class=t.className),Object.defineProperty(n,"className",Yf))}r.$$typeof=Fm,Zf&&Zf(r)};var Jf=we.__r;we.__r=function(r){Jf&&Jf(r),zm=r.__c};var Bm={ReactCurrentDispatcher:{current:{readContext:function(r){return zm.__n[r.__c].props.value}}}},Iv="17.0.2";function Um(r){return On.bind(null,r)}function lh(r){return!!r&&r.$$typeof===Fm}function Vm(r){return lh(r)?gv.apply(null,arguments):r}function Gm(r){return!!r.__k&&(ns(null,r),!0)}function Hm(r){return r&&(r.base||r.nodeType===1&&r)||null}var Wm=function(r,e){return r(e)},Xm=function(r,e){return r(e)},$m=Fn;function ch(r){r()}function qm(r){return r}function jm(){return[!1,ch]}var Ym=wa;function Zm(r,e){var t=e(),n=wl({h:{__:t,v:e}}),i=n[0].h,s=n[1];return wa(function(){i.__=t,i.v=e,rc(i.__,e())||s({h:i})},[r,t,e]),rs(function(){return rc(i.__,i.v())||s({h:i}),r(function(){rc(i.__,i.v())||s({h:i})})},[r]),t}var Dv={useState:wl,useId:Am,useReducer:sh,useEffect:rs,useLayoutEffect:wa,useInsertionEffect:Ym,useTransition:jm,useDeferredValue:qm,useSyncExternalStore:Zm,startTransition:ch,useRef:Qs,useImperativeHandle:Mm,useMemo:Sl,useCallback:wm,useContext:Sm,useDebugValue:ah,version:"17.0.2",Children:Lm,render:Nm,hydrate:km,unmountComponentAtNode:Gm,createPortal:Om,createElement:On,createContext:xm,createFactory:Um,cloneElement:Vm,createRef:hm,Fragment:Fn,isValidElement:lh,findDOMNode:Hm,Component:En,PureComponent:sl,memo:Cm,forwardRef:Pm,flushSync:Xm,unstable_batchedUpdates:Wm,StrictMode:$m,Suspense:tr,SuspenseList:Jr,lazy:Jt,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:Bm};const Ov=Object.freeze(Object.defineProperty({__proto__:null,Children:Lm,PureComponent:sl,StrictMode:$m,Suspense:tr,SuspenseList:Jr,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:Bm,cloneElement:Vm,createFactory:Um,createPortal:Om,default:Dv,findDOMNode:Hm,flushSync:Xm,forwardRef:Pm,hydrate:km,isValidElement:lh,lazy:Jt,memo:Cm,render:Nm,startTransition:ch,unmountComponentAtNode:Gm,unstable_batchedUpdates:Wm,useDeferredValue:qm,useInsertionEffect:Ym,useSyncExternalStore:Zm,useTransition:jm,version:Iv,Component:En,Fragment:Fn,createContext:xm,createElement:On,createRef:hm,useCallback:wm,useContext:Sm,useDebugValue:ah,useEffect:rs,useErrorBoundary:yv,useId:Am,useImperativeHandle:Mm,useLayoutEffect:wa,useMemo:Sl,useReducer:sh,useRef:Qs,useState:wl},Symbol.toStringTag,{value:"Module"})),Fv=()=>{const r=Qs(!0);return rs(()=>{r.current=!1},[]),r.current},Kf=r=>{let e;const t=new Set,n=(l,c)=>{const u=typeof l=="function"?l(e):l;if(!Object.is(u,e)){const h=e;e=(c!=null?c:typeof u!="object")?u:Object.assign({},e,u),t.forEach(f=>f(e,h))}},i=()=>e,o={setState:n,getState:i,subscribe:l=>(t.add(l),()=>t.delete(l)),destroy:()=>t.clear()};return e=r(n,i,o),o},Nv=r=>r?Kf(r):Kf;var qr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function kv(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}function zv(r){var e=r.default;if(typeof e=="function"){var t=function(){return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(r).forEach(function(n){var i=Object.getOwnPropertyDescriptor(r,n);Object.defineProperty(t,n,i.get?i:{enumerable:!0,get:function(){return r[n]}})}),t}var Jm={exports:{}},Km={};const Qm=zv(Ov);var eg={exports:{}},tg={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ss=Qm;function Bv(r,e){return r===e&&(r!==0||1/r===1/e)||r!==r&&e!==e}var Uv=typeof Object.is=="function"?Object.is:Bv,Vv=ss.useState,Gv=ss.useEffect,Hv=ss.useLayoutEffect,Wv=ss.useDebugValue;function Xv(r,e){var t=e(),n=Vv({inst:{value:t,getSnapshot:e}}),i=n[0].inst,s=n[1];return Hv(function(){i.value=t,i.getSnapshot=e,sc(i)&&s({inst:i})},[r,t,e]),Gv(function(){return sc(i)&&s({inst:i}),r(function(){sc(i)&&s({inst:i})})},[r]),Wv(t),t}function sc(r){var e=r.getSnapshot;r=r.value;try{var t=e();return!Uv(r,t)}catch{return!0}}function $v(r,e){return e()}var qv=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?$v:Xv;tg.useSyncExternalStore=ss.useSyncExternalStore!==void 0?ss.useSyncExternalStore:qv;(function(r){r.exports=tg})(eg);/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Al=Qm,jv=eg.exports;function Yv(r,e){return r===e&&(r!==0||1/r===1/e)||r!==r&&e!==e}var Zv=typeof Object.is=="function"?Object.is:Yv,Jv=jv.useSyncExternalStore,Kv=Al.useRef,Qv=Al.useEffect,ey=Al.useMemo,ty=Al.useDebugValue;Km.useSyncExternalStoreWithSelector=function(r,e,t,n,i){var s=Kv(null);if(s.current===null){var a={hasValue:!1,value:null};s.current=a}else a=s.current;s=ey(function(){function l(d){if(!c){if(c=!0,u=d,d=n(d),i!==void 0&&a.hasValue){var p=a.value;if(i(p,d))return h=p}return h=d}if(p=h,Zv(u,d))return p;var m=n(d);return i!==void 0&&i(p,m)?p:(u=d,h=m)}var c=!1,u,h,f=t===void 0?null:t;return[function(){return l(e())},f===null?void 0:function(){return l(f())}]},[e,t,n,i]);var o=Jv(r,s[0],s[1]);return Qv(function(){a.hasValue=!0,a.value=o},[o]),ty(o),o};(function(r){r.exports=Km})(Jm);const ny=kv(Jm.exports),{useSyncExternalStoreWithSelector:iy}=ny;function ry(r,e=r.getState,t){const n=iy(r.subscribe,r.getState,r.getServerState||r.getState,e,t);return ah(n),n}const Qf=r=>{const e=typeof r=="function"?Nv(r):r,t=(n,i)=>ry(e,n,i);return Object.assign(t,e),t},uh=r=>r?Qf(r):Qf;function An(r){for(var e=arguments.length,t=Array(e>1?e-1:0),n=1;n<e;n++)t[n-1]=arguments[n];throw Error("[Immer] minified error nr: "+r+(t.length?" "+t.map(function(i){return"'"+i+"'"}).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function as(r){return!!r&&!!r[on]}function lr(r){var e;return!!r&&(function(t){if(!t||typeof t!="object")return!1;var n=Object.getPrototypeOf(t);if(n===null)return!0;var i=Object.hasOwnProperty.call(n,"constructor")&&n.constructor;return i===Object||typeof i=="function"&&Function.toString.call(i)===fy}(r)||Array.isArray(r)||!!r[od]||!!(!((e=r.constructor)===null||e===void 0)&&e[od])||hh(r)||fh(r))}function ea(r,e,t){t===void 0&&(t=!1),_s(r)===0?(t?Object.keys:_h)(r).forEach(function(n){t&&typeof n=="symbol"||e(n,r[n],r)}):r.forEach(function(n,i){return e(i,n,r)})}function _s(r){var e=r[on];return e?e.i>3?e.i-4:e.i:Array.isArray(r)?1:hh(r)?2:fh(r)?3:0}function ru(r,e){return _s(r)===2?r.has(e):Object.prototype.hasOwnProperty.call(r,e)}function sy(r,e){return _s(r)===2?r.get(e):r[e]}function ng(r,e,t){var n=_s(r);n===2?r.set(e,t):n===3?(r.delete(e),r.add(t)):r[e]=t}function ay(r,e){return r===e?r!==0||1/r==1/e:r!=r&&e!=e}function hh(r){return uy&&r instanceof Map}function fh(r){return hy&&r instanceof Set}function Wi(r){return r.o||r.t}function dh(r){if(Array.isArray(r))return Array.prototype.slice.call(r);var e=dy(r);delete e[on];for(var t=_h(e),n=0;n<t.length;n++){var i=t[n],s=e[i];s.writable===!1&&(s.writable=!0,s.configurable=!0),(s.get||s.set)&&(e[i]={configurable:!0,writable:!0,enumerable:s.enumerable,value:r[i]})}return Object.create(Object.getPrototypeOf(r),e)}function ph(r,e){return e===void 0&&(e=!1),mh(r)||as(r)||!lr(r)||(_s(r)>1&&(r.set=r.add=r.clear=r.delete=oy),Object.freeze(r),e&&ea(r,function(t,n){return ph(n,!0)},!0)),r}function oy(){An(2)}function mh(r){return r==null||typeof r!="object"||Object.isFrozen(r)}function In(r){var e=py[r];return e||An(18,r),e}function ed(){return ta}function ac(r,e){e&&(In("Patches"),r.u=[],r.s=[],r.v=e)}function al(r){su(r),r.p.forEach(ly),r.p=null}function su(r){r===ta&&(ta=r.l)}function td(r){return ta={p:[],l:ta,h:r,m:!0,_:0}}function ly(r){var e=r[on];e.i===0||e.i===1?e.j():e.O=!0}function oc(r,e){e._=e.p.length;var t=e.p[0],n=r!==void 0&&r!==t;return e.h.g||In("ES5").S(e,r,n),n?(t[on].P&&(al(e),An(4)),lr(r)&&(r=ol(e,r),e.l||ll(e,r)),e.u&&In("Patches").M(t[on].t,r,e.u,e.s)):r=ol(e,t,[]),al(e),e.u&&e.v(e.u,e.s),r!==ig?r:void 0}function ol(r,e,t){if(mh(e))return e;var n=e[on];if(!n)return ea(e,function(s,a){return nd(r,n,e,s,a,t)},!0),e;if(n.A!==r)return e;if(!n.P)return ll(r,n.t,!0),n.t;if(!n.I){n.I=!0,n.A._--;var i=n.i===4||n.i===5?n.o=dh(n.k):n.o;ea(n.i===3?new Set(i):i,function(s,a){return nd(r,n,i,s,a,t)}),ll(r,i,!1),t&&r.u&&In("Patches").R(n,t,r.u,r.s)}return n.o}function nd(r,e,t,n,i,s){if(as(i)){var a=ol(r,i,s&&e&&e.i!==3&&!ru(e.D,n)?s.concat(n):void 0);if(ng(t,n,a),!as(a))return;r.m=!1}if(lr(i)&&!mh(i)){if(!r.h.F&&r._<1)return;ol(r,i),e&&e.A.l||ll(r,i)}}function ll(r,e,t){t===void 0&&(t=!1),r.h.F&&r.m&&ph(e,t)}function lc(r,e){var t=r[on];return(t?Wi(t):r)[e]}function id(r,e){if(e in r)for(var t=Object.getPrototypeOf(r);t;){var n=Object.getOwnPropertyDescriptor(t,e);if(n)return n;t=Object.getPrototypeOf(t)}}function au(r){r.P||(r.P=!0,r.l&&au(r.l))}function cc(r){r.o||(r.o=dh(r.t))}function ou(r,e,t){var n=hh(e)?In("MapSet").N(e,t):fh(e)?In("MapSet").T(e,t):r.g?function(i,s){var a=Array.isArray(i),o={i:a?1:0,A:s?s.A:ed(),P:!1,I:!1,D:{},l:s,t:i,k:null,o:null,j:null,C:!1},l=o,c=lu;a&&(l=[o],c=Gs);var u=Proxy.revocable(l,c),h=u.revoke,f=u.proxy;return o.k=f,o.j=h,f}(e,t):In("ES5").J(e,t);return(t?t.A:ed()).p.push(n),n}function cy(r){return as(r)||An(22,r),function e(t){if(!lr(t))return t;var n,i=t[on],s=_s(t);if(i){if(!i.P&&(i.i<4||!In("ES5").K(i)))return i.t;i.I=!0,n=rd(t,s),i.I=!1}else n=rd(t,s);return ea(n,function(a,o){i&&sy(i.t,a)===o||ng(n,a,e(o))}),s===3?new Set(n):n}(r)}function rd(r,e){switch(e){case 2:return new Map(r);case 3:return Array.from(r)}return dh(r)}var sd,ta,gh=typeof Symbol<"u"&&typeof Symbol("x")=="symbol",uy=typeof Map<"u",hy=typeof Set<"u",ad=typeof Proxy<"u"&&Proxy.revocable!==void 0&&typeof Reflect<"u",ig=gh?Symbol.for("immer-nothing"):((sd={})["immer-nothing"]=!0,sd),od=gh?Symbol.for("immer-draftable"):"__$immer_draftable",on=gh?Symbol.for("immer-state"):"__$immer_state",fy=""+Object.prototype.constructor,_h=typeof Reflect<"u"&&Reflect.ownKeys?Reflect.ownKeys:Object.getOwnPropertySymbols!==void 0?function(r){return Object.getOwnPropertyNames(r).concat(Object.getOwnPropertySymbols(r))}:Object.getOwnPropertyNames,dy=Object.getOwnPropertyDescriptors||function(r){var e={};return _h(r).forEach(function(t){e[t]=Object.getOwnPropertyDescriptor(r,t)}),e},py={},lu={get:function(r,e){if(e===on)return r;var t=Wi(r);if(!ru(t,e))return function(i,s,a){var o,l=id(s,a);return l?"value"in l?l.value:(o=l.get)===null||o===void 0?void 0:o.call(i.k):void 0}(r,t,e);var n=t[e];return r.I||!lr(n)?n:n===lc(r.t,e)?(cc(r),r.o[e]=ou(r.A.h,n,r)):n},has:function(r,e){return e in Wi(r)},ownKeys:function(r){return Reflect.ownKeys(Wi(r))},set:function(r,e,t){var n=id(Wi(r),e);if(n!=null&&n.set)return n.set.call(r.k,t),!0;if(!r.P){var i=lc(Wi(r),e),s=i==null?void 0:i[on];if(s&&s.t===t)return r.o[e]=t,r.D[e]=!1,!0;if(ay(t,i)&&(t!==void 0||ru(r.t,e)))return!0;cc(r),au(r)}return r.o[e]===t&&typeof t!="number"&&(t!==void 0||e in r.o)||(r.o[e]=t,r.D[e]=!0,!0)},deleteProperty:function(r,e){return lc(r.t,e)!==void 0||e in r.t?(r.D[e]=!1,cc(r),au(r)):delete r.D[e],r.o&&delete r.o[e],!0},getOwnPropertyDescriptor:function(r,e){var t=Wi(r),n=Reflect.getOwnPropertyDescriptor(t,e);return n&&{writable:!0,configurable:r.i!==1||e!=="length",enumerable:n.enumerable,value:t[e]}},defineProperty:function(){An(11)},getPrototypeOf:function(r){return Object.getPrototypeOf(r.t)},setPrototypeOf:function(){An(12)}},Gs={};ea(lu,function(r,e){Gs[r]=function(){return arguments[0]=arguments[0][0],e.apply(this,arguments)}}),Gs.deleteProperty=function(r,e){return Gs.set.call(this,r,e,void 0)},Gs.set=function(r,e,t){return lu.set.call(this,r[0],e,t,r[0])};var my=function(){function r(t){var n=this;this.g=ad,this.F=!0,this.produce=function(i,s,a){if(typeof i=="function"&&typeof s!="function"){var o=s;s=i;var l=n;return function(m){var g=this;m===void 0&&(m=o);for(var v=arguments.length,x=Array(v>1?v-1:0),_=1;_<v;_++)x[_-1]=arguments[_];return l.produce(m,function(y){var M;return(M=s).call.apply(M,[g,y].concat(x))})}}var c;if(typeof s!="function"&&An(6),a!==void 0&&typeof a!="function"&&An(7),lr(i)){var u=td(n),h=ou(n,i,void 0),f=!0;try{c=s(h),f=!1}finally{f?al(u):su(u)}return typeof Promise<"u"&&c instanceof Promise?c.then(function(m){return ac(u,a),oc(m,u)},function(m){throw al(u),m}):(ac(u,a),oc(c,u))}if(!i||typeof i!="object"){if((c=s(i))===void 0&&(c=i),c===ig&&(c=void 0),n.F&&ph(c,!0),a){var d=[],p=[];In("Patches").M(i,c,d,p),a(d,p)}return c}An(21,i)},this.produceWithPatches=function(i,s){if(typeof i=="function")return function(c){for(var u=arguments.length,h=Array(u>1?u-1:0),f=1;f<u;f++)h[f-1]=arguments[f];return n.produceWithPatches(c,function(d){return i.apply(void 0,[d].concat(h))})};var a,o,l=n.produce(i,s,function(c,u){a=c,o=u});return typeof Promise<"u"&&l instanceof Promise?l.then(function(c){return[c,a,o]}):[l,a,o]},typeof(t==null?void 0:t.useProxies)=="boolean"&&this.setUseProxies(t.useProxies),typeof(t==null?void 0:t.autoFreeze)=="boolean"&&this.setAutoFreeze(t.autoFreeze)}var e=r.prototype;return e.createDraft=function(t){lr(t)||An(8),as(t)&&(t=cy(t));var n=td(this),i=ou(this,t,void 0);return i[on].C=!0,su(n),i},e.finishDraft=function(t,n){var i=t&&t[on],s=i.A;return ac(s,n),oc(void 0,s)},e.setAutoFreeze=function(t){this.F=t},e.setUseProxies=function(t){t&&!ad&&An(20),this.g=t},e.applyPatches=function(t,n){var i;for(i=n.length-1;i>=0;i--){var s=n[i];if(s.path.length===0&&s.op==="replace"){t=s.value;break}}i>-1&&(n=n.slice(i+1));var a=In("Patches").$;return as(t)?a(t,n):this.produce(t,function(o){return a(o,n)})},r}(),ln=new my,gy=ln.produce;ln.produceWithPatches.bind(ln);ln.setAutoFreeze.bind(ln);ln.setUseProxies.bind(ln);ln.applyPatches.bind(ln);ln.createDraft.bind(ln);ln.finishDraft.bind(ln);const _y=gy,rg=r=>({indices:[0,0],_indicesCache:{},setIndex:(e,t)=>{r(n=>{var h,f;const{indices:i,_indicesCache:s}=n;i[e]=t;const a=i.slice(0,e+1).join(),o=(h=s[a])!=null?h:[],{length:l}=i;for(let d=0;e+1+d<l;d++)i[e+1+d]=(f=o[d])!=null?f:0;const c=i.slice(e),u=i.slice(0,e).join();u&&(s[u]=c)})},showFilter:!1,toggleFilter:()=>r(e=>{e.showFilter=!e.showFilter}),searchAll:!1,toggleSearchAll:()=>r(e=>{e.searchAll=!e.searchAll})}),ld=r=>r==="true";function sg(r,e){return r&&e&&Object.keys(e).forEach(t=>{const n=e[t];typeof n=="object"?(r[t]||(r[t]={}),sg(r[t],n)):r[t]=n}),r}const vy=(r,e)=>({category:"Adv",setCategory:t=>r(n=>{n.category=t}),advAni:{category:"home",setCategory:t=>r(n=>{n.advAni.category=t}),home:{gender:"Male",setGender:t=>r(n=>{n.advAni.home.gender=t})},weapon:{type:"Sword",setType:t=>r(n=>{n.advAni.weapon.type=t}),gunMode:"Long",setGunMode:t=>r(n=>{n.advAni.weapon.gunMode=t})},genericSkill:{type:"Sword",setType:t=>r(n=>{n.advAni.genericSkill.type=t})},groupByWeapon:{setGroupWeaponType:(t,n)=>r(i=>{i.advAni.groupByWeapon[t]=n})},uniqueOther:{type:"Sword",setType:t=>r(n=>{n.advAni.uniqueOther.type=t}),selected:"",setSelected:t=>r(n=>{n.advAni.uniqueOther.selected=t})}},extraAni:{category:"Dance",setCategory:t=>r(n=>{n.extraAni.category=t})},personalAni:{source:"",setSource:t=>r(n=>{n.personalAni.source=t}),sourceName:"",setSourceName:t=>r(n=>{n.personalAni.sourceName=t})},getCurrentState:()=>{const t=e();return JSON.parse(JSON.stringify(t))},loadState:(t={})=>{r(n=>sg(n,t))}});/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Tl="147",Xi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},$i={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ag=0,cu=1,og=2,yy=3,xy=0,vh=1,lg=2,Kr=3,cr=0,jt=1,Rn=2,ni=0,nr=1,cl=2,uu=3,hu=4,cg=5,Yi=100,ug=101,hg=102,fu=103,du=104,fg=200,dg=201,pg=202,mg=203,yh=204,xh=205,gg=206,_g=207,vg=208,yg=209,xg=210,bg=0,Mg=1,bh=2,ul=3,wg=4,Sg=5,Ag=6,Tg=7,ur=0,Eg=1,hl=2,Cn=0,Mh=1,wh=2,Sh=3,Ah=4,Cg=5,El=300,Mi=301,wi=302,os=303,na=304,vs=306,hr=1e3,Lt=1001,ia=1002,pt=1003,fl=1004,by=1004,dl=1005,My=1005,ot=1006,Th=1007,wy=1007,vr=1008,Sy=1008,Si=1009,Pg=1010,Lg=1011,Eh=1012,Rg=1013,vi=1014,Zn=1015,ls=1016,Ig=1017,Dg=1018,ir=1020,Og=1021,Fg=1022,$t=1023,Ch=1024,Ng=1025,xi=1026,fr=1027,kg=1028,zg=1029,Bg=1030,Ug=1031,Vg=1033,Ho=33776,Wo=33777,Xo=33778,$o=33779,pu=35840,mu=35841,gu=35842,_u=35843,Gg=36196,vu=37492,yu=37496,xu=37808,bu=37809,Mu=37810,wu=37811,Su=37812,Au=37813,Tu=37814,Eu=37815,Cu=37816,Pu=37817,Lu=37818,Ru=37819,Iu=37820,Du=37821,Ou=36492,Hg=2200,Ph=2201,Wg=2202,ra=2300,sa=2301,qo=2302,Ji=2400,Ki=2401,aa=2402,Cl=2500,Lh=2501,Ay=0,Ty=1,Ey=2,Ai=3e3,Ve=3001,Xg=3200,$g=3201,ai=0,qg=1,Cy="",Sn="srgb",cs="srgb-linear",Py=0,jo=7680,Ly=7681,Ry=7682,Iy=7683,Dy=34055,Oy=34056,Fy=5386,Ny=512,ky=513,zy=514,By=515,Uy=516,Vy=517,Gy=518,jg=519,oa=35044,Hy=35048,Wy=35040,Xy=35045,$y=35049,qy=35041,jy=35046,Yy=35050,Zy=35042,Jy="100",Fu="300 es",pl=1035;class zn{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,a=i.length;s<a;s++)i[s].call(this,e);e.target=null}}}const Dt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let cd=1234567;const rr=Math.PI/180,la=180/Math.PI;function an(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Dt[r&255]+Dt[r>>8&255]+Dt[r>>16&255]+Dt[r>>24&255]+"-"+Dt[e&255]+Dt[e>>8&255]+"-"+Dt[e>>16&15|64]+Dt[e>>24&255]+"-"+Dt[t&63|128]+Dt[t>>8&255]+"-"+Dt[t>>16&255]+Dt[t>>24&255]+Dt[n&255]+Dt[n>>8&255]+Dt[n>>16&255]+Dt[n>>24&255]).toLowerCase()}function mt(r,e,t){return Math.max(e,Math.min(t,r))}function Rh(r,e){return(r%e+e)%e}function Ky(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Qy(r,e,t){return r!==e?(t-r)/(e-r):0}function $s(r,e,t){return(1-t)*r+t*e}function ex(r,e,t,n){return $s(r,e,1-Math.exp(-t*n))}function tx(r,e=1){return e-Math.abs(Rh(r,e*2)-e)}function nx(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function ix(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function rx(r,e){return r+Math.floor(Math.random()*(e-r+1))}function sx(r,e){return r+Math.random()*(e-r)}function ax(r){return r*(.5-Math.random())}function ox(r){r!==void 0&&(cd=r);let e=cd+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function lx(r){return r*rr}function cx(r){return r*la}function Nu(r){return(r&r-1)===0&&r!==0}function Yg(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function ml(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function ux(r,e,t,n,i){const s=Math.cos,a=Math.sin,o=s(t/2),l=a(t/2),c=s((e+n)/2),u=a((e+n)/2),h=s((e-n)/2),f=a((e-n)/2),d=s((n-e)/2),p=a((n-e)/2);switch(i){case"XYX":r.set(o*u,l*h,l*f,o*c);break;case"YZY":r.set(l*f,o*u,l*h,o*c);break;case"ZXZ":r.set(l*h,l*f,o*u,o*c);break;case"XZX":r.set(o*u,l*p,l*d,o*c);break;case"YXY":r.set(l*d,o*u,l*p,o*c);break;case"ZYZ":r.set(l*p,l*d,o*u,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Jn(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function it(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var Tn=Object.freeze({__proto__:null,DEG2RAD:rr,RAD2DEG:la,generateUUID:an,clamp:mt,euclideanModulo:Rh,mapLinear:Ky,inverseLerp:Qy,lerp:$s,damp:ex,pingpong:tx,smoothstep:nx,smootherstep:ix,randInt:rx,randFloat:sx,randFloatSpread:ax,seededRandom:ox,degToRad:lx,radToDeg:cx,isPowerOfTwo:Nu,ceilPowerOfTwo:Yg,floorPowerOfTwo:ml,setQuaternionFromProperEuler:ux,normalize:it,denormalize:Jn});class q{constructor(e=0,t=0){q.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*i+e.x,this.y=s*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Nt{constructor(){Nt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,s,a,o,l,c){const u=this.elements;return u[0]=e,u[1]=i,u[2]=o,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=a,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],o=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],m=i[0],g=i[3],v=i[6],x=i[1],_=i[4],y=i[7],M=i[2],w=i[5],C=i[8];return s[0]=a*m+o*x+l*M,s[3]=a*g+o*_+l*w,s[6]=a*v+o*y+l*C,s[1]=c*m+u*x+h*M,s[4]=c*g+u*_+h*w,s[7]=c*v+u*y+h*C,s[2]=f*m+d*x+p*M,s[5]=f*g+d*_+p*w,s[8]=f*v+d*y+p*C,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8];return t*a*u-t*o*c-n*s*u+n*o*l+i*s*c-i*a*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=u*a-o*c,f=o*l-u*s,d=c*s-a*l,p=t*h+n*f+i*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=h*m,e[1]=(i*c-u*n)*m,e[2]=(o*n-i*a)*m,e[3]=f*m,e[4]=(u*t-i*l)*m,e[5]=(i*s-o*t)*m,e[6]=d*m,e[7]=(n*l-c*t)*m,e[8]=(a*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,a,o){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*a+c*o)+a+e,-i*c,i*l,-i*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(uc.makeScale(e,t)),this}rotate(e){return this.premultiply(uc.makeRotation(-e)),this}translate(e,t){return this.premultiply(uc.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const uc=new Nt;function Zg(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const hx={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Qr(r,e){return new hx[r](e)}function ca(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function sr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Yo(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const hc={[Sn]:{[cs]:sr},[cs]:{[Sn]:Yo}},Ot={legacyMode:!0,get workingColorSpace(){return cs},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(hc[e]&&hc[e][t]!==void 0){const n=hc[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},Jg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Mt={r:0,g:0,b:0},xn={h:0,s:0,l:0},ja={h:0,s:0,l:0};function fc(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function Ya(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class ce{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Sn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ot.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Ot.workingColorSpace){return this.r=e,this.g=t,this.b=n,Ot.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Ot.workingColorSpace){if(e=Rh(e,1),t=mt(t,0,1),n=mt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,a=2*n-s;this.r=fc(a,s,e+1/3),this.g=fc(a,s,e),this.b=fc(a,s,e-1/3)}return Ot.toWorkingColorSpace(this,i),this}setStyle(e,t=Sn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,Ot.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,Ot.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const l=parseFloat(s[1])/360,c=parseFloat(s[2])/100,u=parseFloat(s[3])/100;return n(s[4]),this.setHSL(l,c,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],a=s.length;if(a===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,Ot.toWorkingColorSpace(this,t),this;if(a===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,Ot.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Sn){const n=Jg[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=sr(e.r),this.g=sr(e.g),this.b=sr(e.b),this}copyLinearToSRGB(e){return this.r=Yo(e.r),this.g=Yo(e.g),this.b=Yo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Sn){return Ot.fromWorkingColorSpace(Ya(this,Mt),e),mt(Mt.r*255,0,255)<<16^mt(Mt.g*255,0,255)<<8^mt(Mt.b*255,0,255)<<0}getHexString(e=Sn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ot.workingColorSpace){Ot.fromWorkingColorSpace(Ya(this,Mt),t);const n=Mt.r,i=Mt.g,s=Mt.b,a=Math.max(n,i,s),o=Math.min(n,i,s);let l,c;const u=(o+a)/2;if(o===a)l=0,c=0;else{const h=a-o;switch(c=u<=.5?h/(a+o):h/(2-a-o),a){case n:l=(i-s)/h+(i<s?6:0);break;case i:l=(s-n)/h+2;break;case s:l=(n-i)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=Ot.workingColorSpace){return Ot.fromWorkingColorSpace(Ya(this,Mt),t),e.r=Mt.r,e.g=Mt.g,e.b=Mt.b,e}getStyle(e=Sn){return Ot.fromWorkingColorSpace(Ya(this,Mt),e),e!==Sn?`color(${e} ${Mt.r} ${Mt.g} ${Mt.b})`:`rgb(${Mt.r*255|0},${Mt.g*255|0},${Mt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(xn),xn.h+=e,xn.s+=t,xn.l+=n,this.setHSL(xn.h,xn.s,xn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(xn),e.getHSL(ja);const n=$s(xn.h,ja.h,t),i=$s(xn.s,ja.s,t),s=$s(xn.l,ja.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}ce.NAMES=Jg;let Cr;class Ih{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Cr===void 0&&(Cr=ca("canvas")),Cr.width=e.width,Cr.height=e.height;const n=Cr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Cr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ca("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let a=0;a<s.length;a++)s[a]=sr(s[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(sr(t[n]/255)*255):t[n]=sr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Qi{constructor(e=null){this.isSource=!0,this.uuid=an(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?s.push(dc(i[a].image)):s.push(dc(i[a]))}else s=dc(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function dc(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Ih.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let fx=0;class ct extends zn{constructor(e=ct.DEFAULT_IMAGE,t=ct.DEFAULT_MAPPING,n=Lt,i=Lt,s=ot,a=vr,o=$t,l=Si,c=ct.DEFAULT_ANISOTROPY,u=Ai){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:fx++}),this.uuid=an(),this.name="",this.source=new Qi(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new q(0,0),this.repeat=new q(1,1),this.center=new q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Nt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==El)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case hr:e.x=e.x-Math.floor(e.x);break;case Lt:e.x=e.x<0?0:1;break;case ia:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case hr:e.y=e.y-Math.floor(e.y);break;case Lt:e.y=e.y<0?0:1;break;case ia:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}ct.DEFAULT_IMAGE=null;ct.DEFAULT_MAPPING=El;ct.DEFAULT_ANISOTROPY=1;class Ye{constructor(e=0,t=0,n=0,i=1){Ye.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],m=l[2],g=l[6],v=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-m)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+m)<.1&&Math.abs(p+g)<.1&&Math.abs(c+d+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,y=(d+1)/2,M=(v+1)/2,w=(u+f)/4,C=(h+m)/4,b=(p+g)/4;return _>y&&_>M?_<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(_),i=w/n,s=C/n):y>M?y<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(y),n=w/i,s=b/i):M<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(M),n=C/s,i=b/s),this.set(n,i,s,t),this}let x=Math.sqrt((g-p)*(g-p)+(h-m)*(h-m)+(f-u)*(f-u));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(h-m)/x,this.z=(f-u)/x,this.w=Math.acos((c+d+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Zt extends zn{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ye(0,0,e,t),this.scissorTest=!1,this.viewport=new Ye(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new ct(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:ot,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Qi(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Sa extends ct{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=pt,this.minFilter=pt,this.wrapR=Lt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class dx extends Zt{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Sa(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Pl extends ct{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=pt,this.minFilter=pt,this.wrapR=Lt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class px extends Zt{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Pl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class mx extends Zt{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=s.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class bt{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,a,o){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const f=s[a+0],d=s[a+1],p=s[a+2],m=s[a+3];if(o===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(o===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=m;return}if(h!==m||l!==f||c!==d||u!==p){let g=1-o;const v=l*f+c*d+u*p+h*m,x=v>=0?1:-1,_=1-v*v;if(_>Number.EPSILON){const M=Math.sqrt(_),w=Math.atan2(M,v*x);g=Math.sin(g*w)/M,o=Math.sin(o*w)/M}const y=o*x;if(l=l*g+f*y,c=c*g+d*y,u=u*g+p*y,h=h*g+m*y,g===1-o){const M=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=M,c*=M,u*=M,h*=M}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,a){const o=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=s[a],f=s[a+1],d=s[a+2],p=s[a+3];return e[t]=o*p+u*h+l*d-c*f,e[t+1]=l*p+u*f+c*h-o*d,e[t+2]=c*p+u*d+o*f-l*h,e[t+3]=u*p-o*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(n/2),u=o(i/2),h=o(s/2),f=l(n/2),d=l(i/2),p=l(s/2);switch(a){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],a=t[1],o=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=n+o+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(a-i)*d}else if(n>o&&n>h){const d=2*Math.sqrt(1+n-o-h);this._w=(u-l)/d,this._x=.25*d,this._y=(i+a)/d,this._z=(s+c)/d}else if(o>h){const d=2*Math.sqrt(1+o-n-h);this._w=(s-c)/d,this._x=(i+a)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-o);this._w=(a-i)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(mt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,a=e._w,o=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+a*o+i*c-s*l,this._y=i*u+a*l+s*o-n*c,this._z=s*u+a*c+n*l-i*o,this._w=a*u-n*o-i*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+s*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=s,this;const l=1-o*o;if(l<=Number.EPSILON){const d=1-t;return this._w=d*a+t*this._w,this._x=d*n+t*this._x,this._y=d*i+t*this._y,this._z=d*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,o),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=a*h+this._w*f,this._x=n*h+this._x*f,this._y=i*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class T{constructor(e=0,t=0,n=0){T.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(ud.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ud.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,a=e.y,o=e.z,l=e.w,c=l*t+a*i-o*n,u=l*n+o*t-s*i,h=l*i+s*n-a*t,f=-s*t-a*n-o*i;return this.x=c*l+f*-s+u*-o-h*-a,this.y=u*l+f*-a+h*-s-c*-o,this.z=h*l+f*-o+c*-a-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,a=t.x,o=t.y,l=t.z;return this.x=i*l-s*o,this.y=s*a-n*l,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return pc.copy(this).projectOnVector(e),this.sub(pc)}reflect(e){return this.sub(pc.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(mt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const pc=new T,ud=new bt;class yr{constructor(e=new T(1/0,1/0,1/0),t=new T(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],f=e[l+2];u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>s&&(s=u),h>a&&(a=h),f>o&&(o=f)}return this.min.set(t,n,i),this.max.set(s,a,o),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),f=e.getZ(l);u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>s&&(s=u),h>a&&(a=h),f>o&&(o=f)}return this.min.set(t,n,i),this.max.set(s,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ni.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let a=0,o=s.count;a<o;a++)Ni.fromBufferAttribute(s,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Ni)}else n.boundingBox===null&&n.computeBoundingBox(),mc.copy(n.boundingBox),mc.applyMatrix4(e.matrixWorld),this.union(mc);const i=e.children;for(let s=0,a=i.length;s<a;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ni),Ni.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Ds),Za.subVectors(this.max,Ds),Pr.subVectors(e.a,Ds),Lr.subVectors(e.b,Ds),Rr.subVectors(e.c,Ds),li.subVectors(Lr,Pr),ci.subVectors(Rr,Lr),ki.subVectors(Pr,Rr);let t=[0,-li.z,li.y,0,-ci.z,ci.y,0,-ki.z,ki.y,li.z,0,-li.x,ci.z,0,-ci.x,ki.z,0,-ki.x,-li.y,li.x,0,-ci.y,ci.x,0,-ki.y,ki.x,0];return!gc(t,Pr,Lr,Rr,Za)||(t=[1,0,0,0,1,0,0,0,1],!gc(t,Pr,Lr,Rr,Za))?!1:(Ja.crossVectors(li,ci),t=[Ja.x,Ja.y,Ja.z],gc(t,Pr,Lr,Rr,Za))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ni.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ni).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Gn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Gn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Gn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Gn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Gn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Gn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Gn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Gn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Gn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Gn=[new T,new T,new T,new T,new T,new T,new T,new T],Ni=new T,mc=new yr,Pr=new T,Lr=new T,Rr=new T,li=new T,ci=new T,ki=new T,Ds=new T,Za=new T,Ja=new T,zi=new T;function gc(r,e,t,n,i){for(let s=0,a=r.length-3;s<=a;s+=3){zi.fromArray(r,s);const o=i.x*Math.abs(zi.x)+i.y*Math.abs(zi.y)+i.z*Math.abs(zi.z),l=e.dot(zi),c=t.dot(zi),u=n.dot(zi);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>o)return!1}return!0}const gx=new yr,Os=new T,_c=new T;class xr{constructor(e=new T,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):gx.setFromPoints(e).getCenter(n);let i=0;for(let s=0,a=e.length;s<a;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Os.subVectors(e,this.center);const t=Os.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Os,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(_c.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Os.copy(e.center).add(_c)),this.expandByPoint(Os.copy(e.center).sub(_c))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Hn=new T,vc=new T,Ka=new T,ui=new T,yc=new T,Qa=new T,xc=new T;class Aa{constructor(e=new T,t=new T(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Hn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Hn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Hn.copy(this.direction).multiplyScalar(t).add(this.origin),Hn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){vc.copy(e).add(t).multiplyScalar(.5),Ka.copy(t).sub(e).normalize(),ui.copy(this.origin).sub(vc);const s=e.distanceTo(t)*.5,a=-this.direction.dot(Ka),o=ui.dot(this.direction),l=-ui.dot(Ka),c=ui.lengthSq(),u=Math.abs(1-a*a);let h,f,d,p;if(u>0)if(h=a*l-o,f=a*o-l,p=s*u,h>=0)if(f>=-p)if(f<=p){const m=1/u;h*=m,f*=m,d=h*(h+a*f+2*o)+f*(a*h+f+2*l)+c}else f=s,h=Math.max(0,-(a*f+o)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(a*f+o)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-a*s+o)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(a*s+o)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=a>0?-s:s,h=Math.max(0,-(a*f+o)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Ka).multiplyScalar(f).add(vc),d}intersectSphere(e,t){Hn.subVectors(e.center,this.origin);const n=Hn.dot(this.direction),i=Hn.dot(Hn)-n*n,s=e.radius*e.radius;if(i>s)return null;const a=Math.sqrt(s-i),o=n-a,l=n+a;return o<0&&l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,a,o,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,i=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,i=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,a=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,a=(e.min.y-f.y)*u),n>a||s>i||((s>n||isNaN(n))&&(n=s),(a<i||isNaN(i))&&(i=a),h>=0?(o=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(o=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),n>l||o>i)||((o>n||n!==n)&&(n=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Hn)!==null}intersectTriangle(e,t,n,i,s){yc.subVectors(t,e),Qa.subVectors(n,e),xc.crossVectors(yc,Qa);let a=this.direction.dot(xc),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;ui.subVectors(this.origin,e);const l=o*this.direction.dot(Qa.crossVectors(ui,Qa));if(l<0)return null;const c=o*this.direction.dot(yc.cross(ui));if(c<0||l+c>a)return null;const u=-o*ui.dot(xc);return u<0?null:this.at(u/a,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class be{constructor(){be.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,s,a,o,l,c,u,h,f,d,p,m,g){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=a,v[9]=o,v[13]=l,v[2]=c,v[6]=u,v[10]=h,v[14]=f,v[3]=d,v[7]=p,v[11]=m,v[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new be().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ir.setFromMatrixColumn(e,0).length(),s=1/Ir.setFromMatrixColumn(e,1).length(),a=1/Ir.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=a*u,d=a*h,p=o*u,m=o*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+p*c,t[5]=f-m*c,t[9]=-o*l,t[2]=m-f*c,t[6]=p+d*c,t[10]=a*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,m=c*h;t[0]=f+m*o,t[4]=p*o-d,t[8]=a*c,t[1]=a*h,t[5]=a*u,t[9]=-o,t[2]=d*o-p,t[6]=m+f*o,t[10]=a*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,m=c*h;t[0]=f-m*o,t[4]=-a*h,t[8]=p+d*o,t[1]=d+p*o,t[5]=a*u,t[9]=m-f*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const f=a*u,d=a*h,p=o*u,m=o*h;t[0]=l*u,t[4]=p*c-d,t[8]=f*c+m,t[1]=l*h,t[5]=m*c+f,t[9]=d*c-p,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const f=a*l,d=a*c,p=o*l,m=o*c;t[0]=l*u,t[4]=m-f*h,t[8]=p*h+d,t[1]=h,t[5]=a*u,t[9]=-o*u,t[2]=-c*u,t[6]=d*h+p,t[10]=f-m*h}else if(e.order==="XZY"){const f=a*l,d=a*c,p=o*l,m=o*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+m,t[5]=a*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=o*u,t[10]=m*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(_x,e,vx)}lookAt(e,t,n){const i=this.elements;return tn.subVectors(e,t),tn.lengthSq()===0&&(tn.z=1),tn.normalize(),hi.crossVectors(n,tn),hi.lengthSq()===0&&(Math.abs(n.z)===1?tn.x+=1e-4:tn.z+=1e-4,tn.normalize(),hi.crossVectors(n,tn)),hi.normalize(),eo.crossVectors(tn,hi),i[0]=hi.x,i[4]=eo.x,i[8]=tn.x,i[1]=hi.y,i[5]=eo.y,i[9]=tn.y,i[2]=hi.z,i[6]=eo.z,i[10]=tn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,a=n[0],o=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],m=n[6],g=n[10],v=n[14],x=n[3],_=n[7],y=n[11],M=n[15],w=i[0],C=i[4],b=i[8],A=i[12],L=i[1],k=i[5],W=i[9],O=i[13],I=i[2],B=i[6],G=i[10],K=i[14],X=i[3],te=i[7],Z=i[11],U=i[15];return s[0]=a*w+o*L+l*I+c*X,s[4]=a*C+o*k+l*B+c*te,s[8]=a*b+o*W+l*G+c*Z,s[12]=a*A+o*O+l*K+c*U,s[1]=u*w+h*L+f*I+d*X,s[5]=u*C+h*k+f*B+d*te,s[9]=u*b+h*W+f*G+d*Z,s[13]=u*A+h*O+f*K+d*U,s[2]=p*w+m*L+g*I+v*X,s[6]=p*C+m*k+g*B+v*te,s[10]=p*b+m*W+g*G+v*Z,s[14]=p*A+m*O+g*K+v*U,s[3]=x*w+_*L+y*I+M*X,s[7]=x*C+_*k+y*B+M*te,s[11]=x*b+_*W+y*G+M*Z,s[15]=x*A+_*O+y*K+M*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],a=e[1],o=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],m=e[7],g=e[11],v=e[15];return p*(+s*l*h-i*c*h-s*o*f+n*c*f+i*o*d-n*l*d)+m*(+t*l*d-t*c*f+s*a*f-i*a*d+i*c*u-s*l*u)+g*(+t*c*h-t*o*d-s*a*h+n*a*d+s*o*u-n*c*u)+v*(-i*o*u-t*l*h+t*o*f+i*a*h-n*a*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],a=e[4],o=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],m=e[13],g=e[14],v=e[15],x=h*g*c-m*f*c+m*l*d-o*g*d-h*l*v+o*f*v,_=p*f*c-u*g*c-p*l*d+a*g*d+u*l*v-a*f*v,y=u*m*c-p*h*c+p*o*d-a*m*d-u*o*v+a*h*v,M=p*h*l-u*m*l-p*o*f+a*m*f+u*o*g-a*h*g,w=t*x+n*_+i*y+s*M;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/w;return e[0]=x*C,e[1]=(m*f*s-h*g*s-m*i*d+n*g*d+h*i*v-n*f*v)*C,e[2]=(o*g*s-m*l*s+m*i*c-n*g*c-o*i*v+n*l*v)*C,e[3]=(h*l*s-o*f*s-h*i*c+n*f*c+o*i*d-n*l*d)*C,e[4]=_*C,e[5]=(u*g*s-p*f*s+p*i*d-t*g*d-u*i*v+t*f*v)*C,e[6]=(p*l*s-a*g*s-p*i*c+t*g*c+a*i*v-t*l*v)*C,e[7]=(a*f*s-u*l*s+u*i*c-t*f*c-a*i*d+t*l*d)*C,e[8]=y*C,e[9]=(p*h*s-u*m*s-p*n*d+t*m*d+u*n*v-t*h*v)*C,e[10]=(a*m*s-p*o*s+p*n*c-t*m*c-a*n*v+t*o*v)*C,e[11]=(u*o*s-a*h*s-u*n*c+t*h*c+a*n*d-t*o*d)*C,e[12]=M*C,e[13]=(u*m*i-p*h*i+p*n*f-t*m*f-u*n*g+t*h*g)*C,e[14]=(p*o*i-a*m*i-p*n*l+t*m*l+a*n*g-t*o*g)*C,e[15]=(a*h*i-u*o*i+u*n*l-t*h*l-a*n*f+t*o*f)*C,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,a=e.x,o=e.y,l=e.z,c=s*a,u=s*o;return this.set(c*a+n,c*o-i*l,c*l+i*o,0,c*o+i*l,u*o+n,u*l-i*a,0,c*l-i*o,u*l+i*a,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,a){return this.set(1,n,s,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,a=t._y,o=t._z,l=t._w,c=s+s,u=a+a,h=o+o,f=s*c,d=s*u,p=s*h,m=a*u,g=a*h,v=o*h,x=l*c,_=l*u,y=l*h,M=n.x,w=n.y,C=n.z;return i[0]=(1-(m+v))*M,i[1]=(d+y)*M,i[2]=(p-_)*M,i[3]=0,i[4]=(d-y)*w,i[5]=(1-(f+v))*w,i[6]=(g+x)*w,i[7]=0,i[8]=(p+_)*C,i[9]=(g-x)*C,i[10]=(1-(f+m))*C,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ir.set(i[0],i[1],i[2]).length();const a=Ir.set(i[4],i[5],i[6]).length(),o=Ir.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],bn.copy(this);const c=1/s,u=1/a,h=1/o;return bn.elements[0]*=c,bn.elements[1]*=c,bn.elements[2]*=c,bn.elements[4]*=u,bn.elements[5]*=u,bn.elements[6]*=u,bn.elements[8]*=h,bn.elements[9]*=h,bn.elements[10]*=h,t.setFromRotationMatrix(bn),n.x=s,n.y=a,n.z=o,this}makePerspective(e,t,n,i,s,a){const o=this.elements,l=2*s/(t-e),c=2*s/(n-i),u=(t+e)/(t-e),h=(n+i)/(n-i),f=-(a+s)/(a-s),d=-2*a*s/(a-s);return o[0]=l,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,s,a){const o=this.elements,l=1/(t-e),c=1/(n-i),u=1/(a-s),h=(t+e)*l,f=(n+i)*c,d=(a+s)*u;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ir=new T,bn=new be,_x=new T(0,0,0),vx=new T(1,1,1),hi=new T,eo=new T,tn=new T,hd=new be,fd=new bt;class qt{constructor(e=0,t=0,n=0,i=qt.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],a=i[4],o=i[8],l=i[1],c=i[5],u=i[9],h=i[2],f=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(mt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-mt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(mt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-mt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(mt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-mt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return hd.makeRotationFromQuaternion(e),this.setFromRotationMatrix(hd,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return fd.setFromEuler(this),this.setFromQuaternion(fd,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}qt.DefaultOrder="XYZ";qt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Ll{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let yx=0;const dd=new T,Dr=new bt,Wn=new be,to=new T,Fs=new T,xx=new T,bx=new bt,pd=new T(1,0,0),md=new T(0,1,0),gd=new T(0,0,1),Mx={type:"added"},_d={type:"removed"};class We extends zn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:yx++}),this.uuid=an(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=We.DefaultUp.clone();const e=new T,t=new qt,n=new bt,i=new T(1,1,1);function s(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new be},normalMatrix:{value:new Nt}}),this.matrix=new be,this.matrixWorld=new be,this.matrixAutoUpdate=We.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=We.DefaultMatrixWorldAutoUpdate,this.layers=new Ll,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Dr.setFromAxisAngle(e,t),this.quaternion.multiply(Dr),this}rotateOnWorldAxis(e,t){return Dr.setFromAxisAngle(e,t),this.quaternion.premultiply(Dr),this}rotateX(e){return this.rotateOnAxis(pd,e)}rotateY(e){return this.rotateOnAxis(md,e)}rotateZ(e){return this.rotateOnAxis(gd,e)}translateOnAxis(e,t){return dd.copy(e).applyQuaternion(this.quaternion),this.position.add(dd.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(pd,e)}translateY(e){return this.translateOnAxis(md,e)}translateZ(e){return this.translateOnAxis(gd,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Wn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?to.copy(e):to.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Fs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Wn.lookAt(Fs,to,this.up):Wn.lookAt(to,Fs,this.up),this.quaternion.setFromRotationMatrix(Wn),i&&(Wn.extractRotation(i.matrixWorld),Dr.setFromRotationMatrix(Wn),this.quaternion.premultiply(Dr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Mx)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_d)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(_d)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Wn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Wn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Wn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Fs,e,xx),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Fs,bx,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,a=i.length;s<a;s++){const o=i[s];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(s(e.materials,this.material[l]));i.material=o}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];i.animations.push(s(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),u=a(e.images),h=a(e.shapes),f=a(e.skeletons),d=a(e.animations),p=a(e.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),p.length>0&&(n.nodes=p)}return n.object=i,n;function a(o){const l=[];for(const c in o){const u=o[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}We.DefaultUp=new T(0,1,0);We.DefaultMatrixAutoUpdate=!0;We.DefaultMatrixWorldAutoUpdate=!0;const Mn=new T,Xn=new T,bc=new T,$n=new T,Or=new T,Fr=new T,vd=new T,Mc=new T,wc=new T,Sc=new T;class pn{constructor(e=new T,t=new T,n=new T){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Mn.subVectors(e,t),i.cross(Mn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Mn.subVectors(i,t),Xn.subVectors(n,t),bc.subVectors(e,t);const a=Mn.dot(Mn),o=Mn.dot(Xn),l=Mn.dot(bc),c=Xn.dot(Xn),u=Xn.dot(bc),h=a*c-o*o;if(h===0)return s.set(-2,-1,-1);const f=1/h,d=(c*l-o*u)*f,p=(a*u-o*l)*f;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,$n),$n.x>=0&&$n.y>=0&&$n.x+$n.y<=1}static getUV(e,t,n,i,s,a,o,l){return this.getBarycoord(e,t,n,i,$n),l.set(0,0),l.addScaledVector(s,$n.x),l.addScaledVector(a,$n.y),l.addScaledVector(o,$n.z),l}static isFrontFacing(e,t,n,i){return Mn.subVectors(n,t),Xn.subVectors(e,t),Mn.cross(Xn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Mn.subVectors(this.c,this.b),Xn.subVectors(this.a,this.b),Mn.cross(Xn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return pn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return pn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return pn.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return pn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return pn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let a,o;Or.subVectors(i,n),Fr.subVectors(s,n),Mc.subVectors(e,n);const l=Or.dot(Mc),c=Fr.dot(Mc);if(l<=0&&c<=0)return t.copy(n);wc.subVectors(e,i);const u=Or.dot(wc),h=Fr.dot(wc);if(u>=0&&h<=u)return t.copy(i);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return a=l/(l-u),t.copy(n).addScaledVector(Or,a);Sc.subVectors(e,s);const d=Or.dot(Sc),p=Fr.dot(Sc);if(p>=0&&d<=p)return t.copy(s);const m=d*c-l*p;if(m<=0&&c>=0&&p<=0)return o=c/(c-p),t.copy(n).addScaledVector(Fr,o);const g=u*p-d*h;if(g<=0&&h-u>=0&&d-p>=0)return vd.subVectors(s,i),o=(h-u)/(h-u+(d-p)),t.copy(i).addScaledVector(vd,o);const v=1/(g+m+f);return a=m*v,o=f*v,t.copy(n).addScaledVector(Or,a).addScaledVector(Fr,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let wx=0;class kt extends zn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:wx++}),this.uuid=an(),this.name="",this.type="Material",this.blending=nr,this.side=cr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=yh,this.blendDst=xh,this.blendEquation=Yi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=ul,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=jg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=jo,this.stencilZFail=jo,this.stencilZPass=jo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==nr&&(n.blending=this.blending),this.side!==cr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const a=[];for(const o in s){const l=s[o];delete l.metadata,a.push(l)}return a}if(t){const s=i(e.textures),a=i(e.images);s.length>0&&(n.textures=s),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ci extends kt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ur,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const xt=new T,no=new q;class nt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=oa,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)no.fromBufferAttribute(this,t),no.applyMatrix3(e),this.setXY(t,no.x,no.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)xt.fromBufferAttribute(this,t),xt.applyMatrix3(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)xt.fromBufferAttribute(this,t),xt.applyMatrix4(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)xt.fromBufferAttribute(this,t),xt.applyNormalMatrix(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)xt.fromBufferAttribute(this,t),xt.transformDirection(e),this.setXYZ(t,xt.x,xt.y,xt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Jn(t,this.array)),t}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Jn(t,this.array)),t}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Jn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Jn(t,this.array)),t}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),n=it(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),n=it(n,this.array),i=it(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),n=it(n,this.array),i=it(i,this.array),s=it(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==oa&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Sx extends nt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Ax extends nt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Tx extends nt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Ex extends nt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Rl extends nt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Cx extends nt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Dh extends nt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Px extends nt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}}class ge extends nt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Lx extends nt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Rx=0;const un=new be,Ac=new We,Nr=new T,nn=new yr,Ns=new yr,Pt=new T;class De extends zn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Rx++}),this.uuid=an(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Zg(e)?Dh:Rl)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Nt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return un.makeRotationFromQuaternion(e),this.applyMatrix4(un),this}rotateX(e){return un.makeRotationX(e),this.applyMatrix4(un),this}rotateY(e){return un.makeRotationY(e),this.applyMatrix4(un),this}rotateZ(e){return un.makeRotationZ(e),this.applyMatrix4(un),this}translate(e,t,n){return un.makeTranslation(e,t,n),this.applyMatrix4(un),this}scale(e,t,n){return un.makeScale(e,t,n),this.applyMatrix4(un),this}lookAt(e){return Ac.lookAt(e),Ac.updateMatrix(),this.applyMatrix4(Ac.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Nr).negate(),this.translate(Nr.x,Nr.y,Nr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ge(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new yr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new T(-1/0,-1/0,-1/0),new T(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];nn.setFromBufferAttribute(s),this.morphTargetsRelative?(Pt.addVectors(this.boundingBox.min,nn.min),this.boundingBox.expandByPoint(Pt),Pt.addVectors(this.boundingBox.max,nn.max),this.boundingBox.expandByPoint(Pt)):(this.boundingBox.expandByPoint(nn.min),this.boundingBox.expandByPoint(nn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new xr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new T,1/0);return}if(e){const n=this.boundingSphere.center;if(nn.setFromBufferAttribute(e),t)for(let s=0,a=t.length;s<a;s++){const o=t[s];Ns.setFromBufferAttribute(o),this.morphTargetsRelative?(Pt.addVectors(nn.min,Ns.min),nn.expandByPoint(Pt),Pt.addVectors(nn.max,Ns.max),nn.expandByPoint(Pt)):(nn.expandByPoint(Ns.min),nn.expandByPoint(Ns.max))}nn.getCenter(n);let i=0;for(let s=0,a=e.count;s<a;s++)Pt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Pt));if(t)for(let s=0,a=t.length;s<a;s++){const o=t[s],l=this.morphTargetsRelative;for(let c=0,u=o.count;c<u;c++)Pt.fromBufferAttribute(o,c),l&&(Nr.fromBufferAttribute(e,c),Pt.add(Nr)),i=Math.max(i,n.distanceToSquared(Pt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,a=t.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new nt(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let L=0;L<o;L++)c[L]=new T,u[L]=new T;const h=new T,f=new T,d=new T,p=new q,m=new q,g=new q,v=new T,x=new T;function _(L,k,W){h.fromArray(i,L*3),f.fromArray(i,k*3),d.fromArray(i,W*3),p.fromArray(a,L*2),m.fromArray(a,k*2),g.fromArray(a,W*2),f.sub(h),d.sub(h),m.sub(p),g.sub(p);const O=1/(m.x*g.y-g.x*m.y);!isFinite(O)||(v.copy(f).multiplyScalar(g.y).addScaledVector(d,-m.y).multiplyScalar(O),x.copy(d).multiplyScalar(m.x).addScaledVector(f,-g.x).multiplyScalar(O),c[L].add(v),c[k].add(v),c[W].add(v),u[L].add(x),u[k].add(x),u[W].add(x))}let y=this.groups;y.length===0&&(y=[{start:0,count:n.length}]);for(let L=0,k=y.length;L<k;++L){const W=y[L],O=W.start,I=W.count;for(let B=O,G=O+I;B<G;B+=3)_(n[B+0],n[B+1],n[B+2])}const M=new T,w=new T,C=new T,b=new T;function A(L){C.fromArray(s,L*3),b.copy(C);const k=c[L];M.copy(k),M.sub(C.multiplyScalar(C.dot(k))).normalize(),w.crossVectors(b,k);const O=w.dot(u[L])<0?-1:1;l[L*4]=M.x,l[L*4+1]=M.y,l[L*4+2]=M.z,l[L*4+3]=O}for(let L=0,k=y.length;L<k;++L){const W=y[L],O=W.start,I=W.count;for(let B=O,G=O+I;B<G;B+=3)A(n[B+0]),A(n[B+1]),A(n[B+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new nt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const i=new T,s=new T,a=new T,o=new T,l=new T,c=new T,u=new T,h=new T;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),m=e.getX(f+1),g=e.getX(f+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),a.fromBufferAttribute(t,g),u.subVectors(a,s),h.subVectors(i,s),u.cross(h),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),c.fromBufferAttribute(n,g),o.add(u),l.add(u),c.add(u),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(g,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)i.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),a.fromBufferAttribute(t,f+2),u.subVectors(a,s),h.subVectors(i,s),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Pt.fromBufferAttribute(e,t),Pt.normalize(),e.setXYZ(t,Pt.x,Pt.y,Pt.z)}toNonIndexed(){function e(o,l){const c=o.array,u=o.itemSize,h=o.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let m=0,g=l.length;m<g;m++){o.isInterleavedBufferAttribute?d=l[m]*o.data.stride+o.offset:d=l[m]*u;for(let v=0;v<u;v++)f[p++]=c[d++]}return new nt(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new De,n=this.index.array,i=this.attributes;for(const o in i){const l=i[o],c=e(l,n);t.setAttribute(o,c)}const s=this.morphAttributes;for(const o in s){const l=[],c=s[o];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,n);l.push(d)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(i[l]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const yd=new be,kr=new Aa,Tc=new xr,fi=new T,di=new T,pi=new T,Ec=new T,Cc=new T,Pc=new T,io=new T,ro=new T,so=new T,ao=new q,oo=new q,lo=new q,Lc=new T,co=new T;class St extends We{constructor(e=new De,t=new Ci){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Tc.copy(n.boundingSphere),Tc.applyMatrix4(s),e.ray.intersectsSphere(Tc)===!1)||(yd.copy(s).invert(),kr.copy(e.ray).applyMatrix4(yd),n.boundingBox!==null&&kr.intersectsBox(n.boundingBox)===!1))return;let a;const o=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,f=n.attributes.uv2,d=n.groups,p=n.drawRange;if(o!==null)if(Array.isArray(i))for(let m=0,g=d.length;m<g;m++){const v=d[m],x=i[v.materialIndex],_=Math.max(v.start,p.start),y=Math.min(o.count,Math.min(v.start+v.count,p.start+p.count));for(let M=_,w=y;M<w;M+=3){const C=o.getX(M),b=o.getX(M+1),A=o.getX(M+2);a=uo(this,x,e,kr,l,c,u,h,f,C,b,A),a&&(a.faceIndex=Math.floor(M/3),a.face.materialIndex=v.materialIndex,t.push(a))}}else{const m=Math.max(0,p.start),g=Math.min(o.count,p.start+p.count);for(let v=m,x=g;v<x;v+=3){const _=o.getX(v),y=o.getX(v+1),M=o.getX(v+2);a=uo(this,i,e,kr,l,c,u,h,f,_,y,M),a&&(a.faceIndex=Math.floor(v/3),t.push(a))}}else if(l!==void 0)if(Array.isArray(i))for(let m=0,g=d.length;m<g;m++){const v=d[m],x=i[v.materialIndex],_=Math.max(v.start,p.start),y=Math.min(l.count,Math.min(v.start+v.count,p.start+p.count));for(let M=_,w=y;M<w;M+=3){const C=M,b=M+1,A=M+2;a=uo(this,x,e,kr,l,c,u,h,f,C,b,A),a&&(a.faceIndex=Math.floor(M/3),a.face.materialIndex=v.materialIndex,t.push(a))}}else{const m=Math.max(0,p.start),g=Math.min(l.count,p.start+p.count);for(let v=m,x=g;v<x;v+=3){const _=v,y=v+1,M=v+2;a=uo(this,i,e,kr,l,c,u,h,f,_,y,M),a&&(a.faceIndex=Math.floor(v/3),t.push(a))}}}}function Ix(r,e,t,n,i,s,a,o){let l;if(e.side===jt?l=n.intersectTriangle(a,s,i,!0,o):l=n.intersectTriangle(i,s,a,e.side!==Rn,o),l===null)return null;co.copy(o),co.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(co);return c<t.near||c>t.far?null:{distance:c,point:co.clone(),object:r}}function uo(r,e,t,n,i,s,a,o,l,c,u,h){fi.fromBufferAttribute(i,c),di.fromBufferAttribute(i,u),pi.fromBufferAttribute(i,h);const f=r.morphTargetInfluences;if(s&&f){io.set(0,0,0),ro.set(0,0,0),so.set(0,0,0);for(let p=0,m=s.length;p<m;p++){const g=f[p],v=s[p];g!==0&&(Ec.fromBufferAttribute(v,c),Cc.fromBufferAttribute(v,u),Pc.fromBufferAttribute(v,h),a?(io.addScaledVector(Ec,g),ro.addScaledVector(Cc,g),so.addScaledVector(Pc,g)):(io.addScaledVector(Ec.sub(fi),g),ro.addScaledVector(Cc.sub(di),g),so.addScaledVector(Pc.sub(pi),g)))}fi.add(io),di.add(ro),pi.add(so)}r.isSkinnedMesh&&(r.boneTransform(c,fi),r.boneTransform(u,di),r.boneTransform(h,pi));const d=Ix(r,e,t,n,fi,di,pi,Lc);if(d){o&&(ao.fromBufferAttribute(o,c),oo.fromBufferAttribute(o,u),lo.fromBufferAttribute(o,h),d.uv=pn.getUV(Lc,fi,di,pi,ao,oo,lo,new q)),l&&(ao.fromBufferAttribute(l,c),oo.fromBufferAttribute(l,u),lo.fromBufferAttribute(l,h),d.uv2=pn.getUV(Lc,fi,di,pi,ao,oo,lo,new q));const p={a:c,b:u,c:h,normal:new T,materialIndex:0};pn.getNormal(fi,di,pi,p.normal),d.face=p}return d}class Pi extends De{constructor(e=1,t=1,n=1,i=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:a};const o=this;i=Math.floor(i),s=Math.floor(s),a=Math.floor(a);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,a,s,0),p("z","y","x",1,-1,n,t,-e,a,s,1),p("x","z","y",1,1,e,n,t,i,a,2),p("x","z","y",1,-1,e,n,-t,i,a,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new ge(c,3)),this.setAttribute("normal",new ge(u,3)),this.setAttribute("uv",new ge(h,2));function p(m,g,v,x,_,y,M,w,C,b,A){const L=y/C,k=M/b,W=y/2,O=M/2,I=w/2,B=C+1,G=b+1;let K=0,X=0;const te=new T;for(let Z=0;Z<G;Z++){const U=Z*k-O;for(let V=0;V<B;V++){const se=V*L-W;te[m]=se*x,te[g]=U*_,te[v]=I,c.push(te.x,te.y,te.z),te[m]=0,te[g]=0,te[v]=w>0?1:-1,u.push(te.x,te.y,te.z),h.push(V/C),h.push(1-Z/b),K+=1}}for(let Z=0;Z<b;Z++)for(let U=0;U<C;U++){const V=f+U+B*Z,se=f+U+B*(Z+1),ne=f+(U+1)+B*(Z+1),ie=f+(U+1)+B*Z;l.push(V,se,ie),l.push(se,ne,ie),X+=6}o.addGroup(d,X,A),d+=X,f+=K}}static fromJSON(e){return new Pi(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function us(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Vt(r){const e={};for(let t=0;t<r.length;t++){const n=us(r[t]);for(const i in n)e[i]=n[i]}return e}function Dx(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function Kg(r){return r.getRenderTarget()===null&&r.outputEncoding===Ve?Sn:cs}const Ta={clone:us,merge:Vt};var Ox=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Fx=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ht extends kt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Ox,this.fragmentShader=Fx,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=us(e.uniforms),this.uniformsGroups=Dx(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Il extends We{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new be,this.projectionMatrix=new be,this.projectionMatrixInverse=new be}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class wt extends Il{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=la*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(rr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return la*2*Math.atan(Math.tan(rr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(rr*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;s+=a.offsetX*i/l,t-=a.offsetY*n/c,i*=a.width/l,n*=a.height/c}const o=this.filmOffset;o!==0&&(s+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const zr=-90,Br=1;class Qg extends We{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new wt(zr,Br,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const s=new wt(zr,Br,e,t);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(-1,0,0),this.add(s);const a=new wt(zr,Br,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(0,1,0),this.add(a);const o=new wt(zr,Br,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(0,-1,0),this.add(o);const l=new wt(zr,Br,e,t);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const c=new wt(zr,Br,e,t);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,-1),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,a,o,l,c]=this.children,u=e.getRenderTarget(),h=e.toneMapping,f=e.xr.enabled;e.toneMapping=Cn,e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=h,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class Ea extends ct{constructor(e,t,n,i,s,a,o,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:Mi,super(e,t,n,i,s,a,o,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class e0 extends Zt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Ea(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ot}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Pi(5,5,5),s=new Ht({name:"CubemapFromEquirect",uniforms:us(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:jt,blending:ni});s.uniforms.tEquirect.value=t;const a=new St(i,s),o=t.minFilter;return t.minFilter===vr&&(t.minFilter=ot),new Qg(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(s)}}const Rc=new T,Nx=new T,kx=new Nt;class _i{constructor(e=new T(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Rc.subVectors(n,t).cross(Nx.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Rc),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||kx.getNormalMatrix(e),i=this.coplanarPoint(Rc).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ur=new xr,ho=new T;class Dl{constructor(e=new _i,t=new _i,n=new _i,i=new _i,s=new _i,a=new _i){this.planes=[e,t,n,i,s,a]}set(e,t,n,i,s,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(s),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],a=n[2],o=n[3],l=n[4],c=n[5],u=n[6],h=n[7],f=n[8],d=n[9],p=n[10],m=n[11],g=n[12],v=n[13],x=n[14],_=n[15];return t[0].setComponents(o-i,h-l,m-f,_-g).normalize(),t[1].setComponents(o+i,h+l,m+f,_+g).normalize(),t[2].setComponents(o+s,h+c,m+d,_+v).normalize(),t[3].setComponents(o-s,h-c,m-d,_-v).normalize(),t[4].setComponents(o-a,h-u,m-p,_-x).normalize(),t[5].setComponents(o+a,h+u,m+p,_+x).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Ur.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Ur)}intersectsSprite(e){return Ur.center.set(0,0,0),Ur.radius=.7071067811865476,Ur.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ur)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(ho.x=i.normal.x>0?e.max.x:e.min.x,ho.y=i.normal.y>0?e.max.y:e.min.y,ho.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(ho)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function t0(){let r=null,e=!1,t=null,n=null;function i(s,a){t(s,a),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function zx(r,e){const t=e.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,f=c.usage,d=r.createBuffer();r.bindBuffer(u,d),r.bufferData(u,h,f),c.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,h){const f=u.array,d=u.updateRange;r.bindBuffer(h,c),d.count===-1?r.bufferSubData(h,0,f):(t?r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1),u.onUploadCallback()}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(r.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(s(h.buffer,c,u),h.version=c.version)}return{get:a,remove:o,update:l}}class ys extends De{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,a=t/2,o=Math.floor(n),l=Math.floor(i),c=o+1,u=l+1,h=e/o,f=t/l,d=[],p=[],m=[],g=[];for(let v=0;v<u;v++){const x=v*f-a;for(let _=0;_<c;_++){const y=_*h-s;p.push(y,-x,0),m.push(0,0,1),g.push(_/o),g.push(1-v/l)}}for(let v=0;v<l;v++)for(let x=0;x<o;x++){const _=x+c*v,y=x+c*(v+1),M=x+1+c*(v+1),w=x+1+c*v;d.push(_,y,w),d.push(y,M,w)}this.setIndex(d),this.setAttribute("position",new ge(p,3)),this.setAttribute("normal",new ge(m,3)),this.setAttribute("uv",new ge(g,2))}static fromJSON(e){return new ys(e.width,e.height,e.widthSegments,e.heightSegments)}}var Bx=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Ux=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Vx=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Gx=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Hx=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Wx=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Xx="vec3 transformed = vec3( position );",$x=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,qx=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,jx=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Yx=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Zx=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Jx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Kx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Qx=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,eb=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,tb=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,nb=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,ib=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,rb=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,sb=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ab=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ob=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,lb=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,cb=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,ub=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,hb="gl_FragColor = linearToOutputTexel( gl_FragColor );",fb=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,db=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,pb=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,mb=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,gb=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,_b=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,vb=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,yb=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,xb=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,bb=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Mb=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,wb=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Sb=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Ab=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Tb=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Eb=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Cb=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Pb=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Lb=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Rb=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Ib=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Db=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Ob=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Fb=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Nb=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,kb=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,zb=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Bb=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Ub=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Vb=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Gb=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Hb=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Wb=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Xb=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,$b=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,qb=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,jb=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Yb=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Zb=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Jb=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Kb=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Qb=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,eM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,tM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,nM=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,iM=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,rM=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,sM=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,aM=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,oM=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,lM=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,cM=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,uM=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,hM=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,fM=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,dM=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,pM=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,mM=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,gM=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,_M=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,vM=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,yM=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,xM=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,bM=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,MM=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,wM=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,SM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,AM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,TM=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,EM=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,CM=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,PM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,LM=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,RM=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,IM=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,DM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,OM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,FM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,NM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const kM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,zM=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,BM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,UM=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,VM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,GM=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,HM=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,WM=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,XM=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,$M=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,qM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,jM=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,YM=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ZM=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,JM=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,KM=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,QM=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ew=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,nw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,iw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,rw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,sw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,aw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ow=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,lw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,uw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,fw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,dw=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,mw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,gw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ne={alphamap_fragment:Bx,alphamap_pars_fragment:Ux,alphatest_fragment:Vx,alphatest_pars_fragment:Gx,aomap_fragment:Hx,aomap_pars_fragment:Wx,begin_vertex:Xx,beginnormal_vertex:$x,bsdfs:qx,iridescence_fragment:jx,bumpmap_pars_fragment:Yx,clipping_planes_fragment:Zx,clipping_planes_pars_fragment:Jx,clipping_planes_pars_vertex:Kx,clipping_planes_vertex:Qx,color_fragment:eb,color_pars_fragment:tb,color_pars_vertex:nb,color_vertex:ib,common:rb,cube_uv_reflection_fragment:sb,defaultnormal_vertex:ab,displacementmap_pars_vertex:ob,displacementmap_vertex:lb,emissivemap_fragment:cb,emissivemap_pars_fragment:ub,encodings_fragment:hb,encodings_pars_fragment:fb,envmap_fragment:db,envmap_common_pars_fragment:pb,envmap_pars_fragment:mb,envmap_pars_vertex:gb,envmap_physical_pars_fragment:Cb,envmap_vertex:_b,fog_vertex:vb,fog_pars_vertex:yb,fog_fragment:xb,fog_pars_fragment:bb,gradientmap_pars_fragment:Mb,lightmap_fragment:wb,lightmap_pars_fragment:Sb,lights_lambert_fragment:Ab,lights_lambert_pars_fragment:Tb,lights_pars_begin:Eb,lights_toon_fragment:Pb,lights_toon_pars_fragment:Lb,lights_phong_fragment:Rb,lights_phong_pars_fragment:Ib,lights_physical_fragment:Db,lights_physical_pars_fragment:Ob,lights_fragment_begin:Fb,lights_fragment_maps:Nb,lights_fragment_end:kb,logdepthbuf_fragment:zb,logdepthbuf_pars_fragment:Bb,logdepthbuf_pars_vertex:Ub,logdepthbuf_vertex:Vb,map_fragment:Gb,map_pars_fragment:Hb,map_particle_fragment:Wb,map_particle_pars_fragment:Xb,metalnessmap_fragment:$b,metalnessmap_pars_fragment:qb,morphcolor_vertex:jb,morphnormal_vertex:Yb,morphtarget_pars_vertex:Zb,morphtarget_vertex:Jb,normal_fragment_begin:Kb,normal_fragment_maps:Qb,normal_pars_fragment:eM,normal_pars_vertex:tM,normal_vertex:nM,normalmap_pars_fragment:iM,clearcoat_normal_fragment_begin:rM,clearcoat_normal_fragment_maps:sM,clearcoat_pars_fragment:aM,iridescence_pars_fragment:oM,output_fragment:lM,packing:cM,premultiplied_alpha_fragment:uM,project_vertex:hM,dithering_fragment:fM,dithering_pars_fragment:dM,roughnessmap_fragment:pM,roughnessmap_pars_fragment:mM,shadowmap_pars_fragment:gM,shadowmap_pars_vertex:_M,shadowmap_vertex:vM,shadowmask_pars_fragment:yM,skinbase_vertex:xM,skinning_pars_vertex:bM,skinning_vertex:MM,skinnormal_vertex:wM,specularmap_fragment:SM,specularmap_pars_fragment:AM,tonemapping_fragment:TM,tonemapping_pars_fragment:EM,transmission_fragment:CM,transmission_pars_fragment:PM,uv_pars_fragment:LM,uv_pars_vertex:RM,uv_vertex:IM,uv2_pars_fragment:DM,uv2_pars_vertex:OM,uv2_vertex:FM,worldpos_vertex:NM,background_vert:kM,background_frag:zM,backgroundCube_vert:BM,backgroundCube_frag:UM,cube_vert:VM,cube_frag:GM,depth_vert:HM,depth_frag:WM,distanceRGBA_vert:XM,distanceRGBA_frag:$M,equirect_vert:qM,equirect_frag:jM,linedashed_vert:YM,linedashed_frag:ZM,meshbasic_vert:JM,meshbasic_frag:KM,meshlambert_vert:QM,meshlambert_frag:ew,meshmatcap_vert:tw,meshmatcap_frag:nw,meshnormal_vert:iw,meshnormal_frag:rw,meshphong_vert:sw,meshphong_frag:aw,meshphysical_vert:ow,meshphysical_frag:lw,meshtoon_vert:cw,meshtoon_frag:uw,points_vert:hw,points_frag:fw,shadow_vert:dw,shadow_frag:pw,sprite_vert:mw,sprite_frag:gw},ue={common:{diffuse:{value:new ce(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Nt},uv2Transform:{value:new Nt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new q(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ce(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ce(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Nt}},sprite:{diffuse:{value:new ce(16777215)},opacity:{value:1},center:{value:new q(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Nt}}},Ft={basic:{uniforms:Vt([ue.common,ue.specularmap,ue.envmap,ue.aomap,ue.lightmap,ue.fog]),vertexShader:Ne.meshbasic_vert,fragmentShader:Ne.meshbasic_frag},lambert:{uniforms:Vt([ue.common,ue.specularmap,ue.envmap,ue.aomap,ue.lightmap,ue.emissivemap,ue.bumpmap,ue.normalmap,ue.displacementmap,ue.fog,ue.lights,{emissive:{value:new ce(0)}}]),vertexShader:Ne.meshlambert_vert,fragmentShader:Ne.meshlambert_frag},phong:{uniforms:Vt([ue.common,ue.specularmap,ue.envmap,ue.aomap,ue.lightmap,ue.emissivemap,ue.bumpmap,ue.normalmap,ue.displacementmap,ue.fog,ue.lights,{emissive:{value:new ce(0)},specular:{value:new ce(1118481)},shininess:{value:30}}]),vertexShader:Ne.meshphong_vert,fragmentShader:Ne.meshphong_frag},standard:{uniforms:Vt([ue.common,ue.envmap,ue.aomap,ue.lightmap,ue.emissivemap,ue.bumpmap,ue.normalmap,ue.displacementmap,ue.roughnessmap,ue.metalnessmap,ue.fog,ue.lights,{emissive:{value:new ce(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag},toon:{uniforms:Vt([ue.common,ue.aomap,ue.lightmap,ue.emissivemap,ue.bumpmap,ue.normalmap,ue.displacementmap,ue.gradientmap,ue.fog,ue.lights,{emissive:{value:new ce(0)}}]),vertexShader:Ne.meshtoon_vert,fragmentShader:Ne.meshtoon_frag},matcap:{uniforms:Vt([ue.common,ue.bumpmap,ue.normalmap,ue.displacementmap,ue.fog,{matcap:{value:null}}]),vertexShader:Ne.meshmatcap_vert,fragmentShader:Ne.meshmatcap_frag},points:{uniforms:Vt([ue.points,ue.fog]),vertexShader:Ne.points_vert,fragmentShader:Ne.points_frag},dashed:{uniforms:Vt([ue.common,ue.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ne.linedashed_vert,fragmentShader:Ne.linedashed_frag},depth:{uniforms:Vt([ue.common,ue.displacementmap]),vertexShader:Ne.depth_vert,fragmentShader:Ne.depth_frag},normal:{uniforms:Vt([ue.common,ue.bumpmap,ue.normalmap,ue.displacementmap,{opacity:{value:1}}]),vertexShader:Ne.meshnormal_vert,fragmentShader:Ne.meshnormal_frag},sprite:{uniforms:Vt([ue.sprite,ue.fog]),vertexShader:Ne.sprite_vert,fragmentShader:Ne.sprite_frag},background:{uniforms:{uvTransform:{value:new Nt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ne.background_vert,fragmentShader:Ne.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Ne.backgroundCube_vert,fragmentShader:Ne.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ne.cube_vert,fragmentShader:Ne.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ne.equirect_vert,fragmentShader:Ne.equirect_frag},distanceRGBA:{uniforms:Vt([ue.common,ue.displacementmap,{referencePosition:{value:new T},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ne.distanceRGBA_vert,fragmentShader:Ne.distanceRGBA_frag},shadow:{uniforms:Vt([ue.lights,ue.fog,{color:{value:new ce(0)},opacity:{value:1}}]),vertexShader:Ne.shadow_vert,fragmentShader:Ne.shadow_frag}};Ft.physical={uniforms:Vt([Ft.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new q(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new ce(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new q},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ce(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ce(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag};const fo={r:0,b:0,g:0};function _w(r,e,t,n,i,s,a){const o=new ce(0);let l=s===!0?0:1,c,u,h=null,f=0,d=null;function p(g,v){let x=!1,_=v.isScene===!0?v.background:null;_&&_.isTexture&&(_=(v.backgroundBlurriness>0?t:e).get(_));const y=r.xr,M=y.getSession&&y.getSession();M&&M.environmentBlendMode==="additive"&&(_=null),_===null?m(o,l):_&&_.isColor&&(m(_,1),x=!0),(r.autoClear||x)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),_&&(_.isCubeTexture||_.mapping===vs)?(u===void 0&&(u=new St(new Pi(1,1,1),new Ht({name:"BackgroundCubeMaterial",uniforms:us(Ft.backgroundCube.uniforms),vertexShader:Ft.backgroundCube.vertexShader,fragmentShader:Ft.backgroundCube.fragmentShader,side:jt,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(w,C,b){this.matrixWorld.copyPosition(b.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=_,u.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,(h!==_||f!==_.version||d!==r.toneMapping)&&(u.material.needsUpdate=!0,h=_,f=_.version,d=r.toneMapping),u.layers.enableAll(),g.unshift(u,u.geometry,u.material,0,0,null)):_&&_.isTexture&&(c===void 0&&(c=new St(new ys(2,2),new Ht({name:"BackgroundMaterial",uniforms:us(Ft.background.uniforms),vertexShader:Ft.background.vertexShader,fragmentShader:Ft.background.fragmentShader,side:cr,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=_,c.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,_.matrixAutoUpdate===!0&&_.updateMatrix(),c.material.uniforms.uvTransform.value.copy(_.matrix),(h!==_||f!==_.version||d!==r.toneMapping)&&(c.material.needsUpdate=!0,h=_,f=_.version,d=r.toneMapping),c.layers.enableAll(),g.unshift(c,c.geometry,c.material,0,0,null))}function m(g,v){g.getRGB(fo,Kg(r)),n.buffers.color.setClear(fo.r,fo.g,fo.b,v,a)}return{getClearColor:function(){return o},setClearColor:function(g,v=1){o.set(g),l=v,m(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(g){l=g,m(o,l)},render:p}}function vw(r,e,t,n){const i=r.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||s!==null,o={},l=g(null);let c=l,u=!1;function h(I,B,G,K,X){let te=!1;if(a){const Z=m(K,G,B);c!==Z&&(c=Z,d(c.object)),te=v(I,K,G,X),te&&x(I,K,G,X)}else{const Z=B.wireframe===!0;(c.geometry!==K.id||c.program!==G.id||c.wireframe!==Z)&&(c.geometry=K.id,c.program=G.id,c.wireframe=Z,te=!0)}X!==null&&t.update(X,34963),(te||u)&&(u=!1,b(I,B,G,K),X!==null&&r.bindBuffer(34963,t.get(X).buffer))}function f(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function d(I){return n.isWebGL2?r.bindVertexArray(I):s.bindVertexArrayOES(I)}function p(I){return n.isWebGL2?r.deleteVertexArray(I):s.deleteVertexArrayOES(I)}function m(I,B,G){const K=G.wireframe===!0;let X=o[I.id];X===void 0&&(X={},o[I.id]=X);let te=X[B.id];te===void 0&&(te={},X[B.id]=te);let Z=te[K];return Z===void 0&&(Z=g(f()),te[K]=Z),Z}function g(I){const B=[],G=[],K=[];for(let X=0;X<i;X++)B[X]=0,G[X]=0,K[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:G,attributeDivisors:K,object:I,attributes:{},index:null}}function v(I,B,G,K){const X=c.attributes,te=B.attributes;let Z=0;const U=G.getAttributes();for(const V in U)if(U[V].location>=0){const ne=X[V];let ie=te[V];if(ie===void 0&&(V==="instanceMatrix"&&I.instanceMatrix&&(ie=I.instanceMatrix),V==="instanceColor"&&I.instanceColor&&(ie=I.instanceColor)),ne===void 0||ne.attribute!==ie||ie&&ne.data!==ie.data)return!0;Z++}return c.attributesNum!==Z||c.index!==K}function x(I,B,G,K){const X={},te=B.attributes;let Z=0;const U=G.getAttributes();for(const V in U)if(U[V].location>=0){let ne=te[V];ne===void 0&&(V==="instanceMatrix"&&I.instanceMatrix&&(ne=I.instanceMatrix),V==="instanceColor"&&I.instanceColor&&(ne=I.instanceColor));const ie={};ie.attribute=ne,ne&&ne.data&&(ie.data=ne.data),X[V]=ie,Z++}c.attributes=X,c.attributesNum=Z,c.index=K}function _(){const I=c.newAttributes;for(let B=0,G=I.length;B<G;B++)I[B]=0}function y(I){M(I,0)}function M(I,B){const G=c.newAttributes,K=c.enabledAttributes,X=c.attributeDivisors;G[I]=1,K[I]===0&&(r.enableVertexAttribArray(I),K[I]=1),X[I]!==B&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](I,B),X[I]=B)}function w(){const I=c.newAttributes,B=c.enabledAttributes;for(let G=0,K=B.length;G<K;G++)B[G]!==I[G]&&(r.disableVertexAttribArray(G),B[G]=0)}function C(I,B,G,K,X,te){n.isWebGL2===!0&&(G===5124||G===5125)?r.vertexAttribIPointer(I,B,G,X,te):r.vertexAttribPointer(I,B,G,K,X,te)}function b(I,B,G,K){if(n.isWebGL2===!1&&(I.isInstancedMesh||K.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;_();const X=K.attributes,te=G.getAttributes(),Z=B.defaultAttributeValues;for(const U in te){const V=te[U];if(V.location>=0){let se=X[U];if(se===void 0&&(U==="instanceMatrix"&&I.instanceMatrix&&(se=I.instanceMatrix),U==="instanceColor"&&I.instanceColor&&(se=I.instanceColor)),se!==void 0){const ne=se.normalized,ie=se.itemSize,$=t.get(se);if($===void 0)continue;const Ee=$.buffer,pe=$.type,Ce=$.bytesPerElement;if(se.isInterleavedBufferAttribute){const fe=se.data,Oe=fe.stride,Q=se.offset;if(fe.isInstancedInterleavedBuffer){for(let ee=0;ee<V.locationSize;ee++)M(V.location+ee,fe.meshPerAttribute);I.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=fe.meshPerAttribute*fe.count)}else for(let ee=0;ee<V.locationSize;ee++)y(V.location+ee);r.bindBuffer(34962,Ee);for(let ee=0;ee<V.locationSize;ee++)C(V.location+ee,ie/V.locationSize,pe,ne,Oe*Ce,(Q+ie/V.locationSize*ee)*Ce)}else{if(se.isInstancedBufferAttribute){for(let fe=0;fe<V.locationSize;fe++)M(V.location+fe,se.meshPerAttribute);I.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=se.meshPerAttribute*se.count)}else for(let fe=0;fe<V.locationSize;fe++)y(V.location+fe);r.bindBuffer(34962,Ee);for(let fe=0;fe<V.locationSize;fe++)C(V.location+fe,ie/V.locationSize,pe,ne,ie*Ce,ie/V.locationSize*fe*Ce)}}else if(Z!==void 0){const ne=Z[U];if(ne!==void 0)switch(ne.length){case 2:r.vertexAttrib2fv(V.location,ne);break;case 3:r.vertexAttrib3fv(V.location,ne);break;case 4:r.vertexAttrib4fv(V.location,ne);break;default:r.vertexAttrib1fv(V.location,ne)}}}}w()}function A(){W();for(const I in o){const B=o[I];for(const G in B){const K=B[G];for(const X in K)p(K[X].object),delete K[X];delete B[G]}delete o[I]}}function L(I){if(o[I.id]===void 0)return;const B=o[I.id];for(const G in B){const K=B[G];for(const X in K)p(K[X].object),delete K[X];delete B[G]}delete o[I.id]}function k(I){for(const B in o){const G=o[B];if(G[I.id]===void 0)continue;const K=G[I.id];for(const X in K)p(K[X].object),delete K[X];delete G[I.id]}}function W(){O(),u=!0,c!==l&&(c=l,d(c.object))}function O(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:W,resetDefaultState:O,dispose:A,releaseStatesOfGeometry:L,releaseStatesOfProgram:k,initAttributes:_,enableAttribute:y,disableUnusedAttributes:w}}function yw(r,e,t,n){const i=n.isWebGL2;let s;function a(c){s=c}function o(c,u){r.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,h){if(h===0)return;let f,d;if(i)f=r,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,c,u,h),t.update(u,s,h)}this.setMode=a,this.render=o,this.renderInstances=l}function xw(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const C=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(C){if(C==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";C="mediump"}return C==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&r instanceof WebGL2ComputeRenderingContext;let o=t.precision!==void 0?t.precision:"highp";const l=s(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=r.getParameter(34930),f=r.getParameter(35660),d=r.getParameter(3379),p=r.getParameter(34076),m=r.getParameter(34921),g=r.getParameter(36347),v=r.getParameter(36348),x=r.getParameter(36349),_=f>0,y=a||e.has("OES_texture_float"),M=_&&y,w=a?r.getParameter(36183):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:s,precision:o,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:g,maxVaryings:v,maxFragmentUniforms:x,vertexTextures:_,floatFragmentTextures:y,floatVertexTextures:M,maxSamples:w}}function bw(r){const e=this;let t=null,n=0,i=!1,s=!1;const a=new _i,o=new Nt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,d){const p=h.length!==0||f||n!==0||i;return i=f,t=u(h,d,0),n=h.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(h,f,d){const p=h.clippingPlanes,m=h.clipIntersection,g=h.clipShadows,v=r.get(h);if(!i||p===null||p.length===0||s&&!g)s?u(null):c();else{const x=s?0:n,_=x*4;let y=v.clippingState||null;l.value=y,y=u(p,f,_,d);for(let M=0;M!==_;++M)y[M]=t[M];v.clippingState=y,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,f,d,p){const m=h!==null?h.length:0;let g=null;if(m!==0){if(g=l.value,p!==!0||g===null){const v=d+m*4,x=f.matrixWorldInverse;o.getNormalMatrix(x),(g===null||g.length<v)&&(g=new Float32Array(v));for(let _=0,y=d;_!==m;++_,y+=4)a.copy(h[_]).applyMatrix4(x,o),a.normal.toArray(g,y),g[y+3]=a.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,g}}function Mw(r){let e=new WeakMap;function t(a,o){return o===os?a.mapping=Mi:o===na&&(a.mapping=wi),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===os||o===na)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new e0(l.height/2);return c.fromEquirectangularTexture(r,a),e.set(a,c),a.addEventListener("dispose",i),t(c.texture,a.mapping)}else return null}}return a}function i(a){const o=a.target;o.removeEventListener("dispose",i);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class br extends Il{constructor(e=-1,t=1,n=1,i=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,a=n+e,o=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,a=s+c*this.view.width,o-=u*this.view.offsetY,l=o-u*this.view.height}this.projectionMatrix.makeOrthographic(s,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const es=4,xd=[.125,.215,.35,.446,.526,.582],Zi=20,Ic=new br,bd=new ce;let Dc=null;const qi=(1+Math.sqrt(5))/2,Vr=1/qi,Md=[new T(1,1,1),new T(-1,1,1),new T(1,1,-1),new T(-1,1,-1),new T(0,qi,Vr),new T(0,qi,-Vr),new T(Vr,0,qi),new T(-Vr,0,qi),new T(qi,Vr,0),new T(-qi,Vr,0)];class ku{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Dc=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Ad(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Sd(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Dc),e.scissorTest=!1,po(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Mi||e.mapping===wi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Dc=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:ot,minFilter:ot,generateMipmaps:!1,type:ls,format:$t,encoding:Ai,depthBuffer:!1},i=wd(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=wd(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=ww(s)),this._blurMaterial=Sw(s,e,t)}return i}_compileMaterial(e){const t=new St(this._lodPlanes[0],e);this._renderer.compile(t,Ic)}_sceneToCubeUV(e,t,n,i){const o=new wt(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(bd),u.toneMapping=Cn,u.autoClear=!1;const d=new Ci({name:"PMREM.Background",side:jt,depthWrite:!1,depthTest:!1}),p=new St(new Pi,d);let m=!1;const g=e.background;g?g.isColor&&(d.color.copy(g),e.background=null,m=!0):(d.color.copy(bd),m=!0);for(let v=0;v<6;v++){const x=v%3;x===0?(o.up.set(0,l[v],0),o.lookAt(c[v],0,0)):x===1?(o.up.set(0,0,l[v]),o.lookAt(0,c[v],0)):(o.up.set(0,l[v],0),o.lookAt(0,0,c[v]));const _=this._cubeSize;po(i,x*_,v>2?_:0,_,_),u.setRenderTarget(i),m&&u.render(p,o),u.render(e,o)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=f,u.autoClear=h,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Mi||e.mapping===wi;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Ad()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Sd());const s=i?this._cubemapMaterial:this._equirectMaterial,a=new St(this._lodPlanes[0],s),o=s.uniforms;o.envMap.value=e;const l=this._cubeSize;po(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(a,Ic)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=Md[(i-1)%Md.length];this._blur(e,i-1,i,s,a)}t.autoClear=n}_blur(e,t,n,i,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",s),this._halfBlur(a,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new St(this._lodPlanes[i],c),f=c.uniforms,d=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*Zi-1),m=s/p,g=isFinite(s)?1+Math.floor(u*m):Zi;g>Zi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Zi}`);const v=[];let x=0;for(let C=0;C<Zi;++C){const b=C/m,A=Math.exp(-b*b/2);v.push(A),C===0?x+=A:C<g&&(x+=2*A)}for(let C=0;C<v.length;C++)v[C]=v[C]/x;f.envMap.value=e.texture,f.samples.value=g,f.weights.value=v,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:_}=this;f.dTheta.value=p,f.mipInt.value=_-n;const y=this._sizeLods[i],M=3*y*(i>_-es?i-_+es:0),w=4*(this._cubeSize-y);po(t,M,w,3*y,2*y),l.setRenderTarget(t),l.render(h,Ic)}}function ww(r){const e=[],t=[],n=[];let i=r;const s=r-es+1+xd.length;for(let a=0;a<s;a++){const o=Math.pow(2,i);t.push(o);let l=1/o;a>r-es?l=xd[a-r+es-1]:a===0&&(l=0),n.push(l);const c=1/(o-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,p=6,m=3,g=2,v=1,x=new Float32Array(m*p*d),_=new Float32Array(g*p*d),y=new Float32Array(v*p*d);for(let w=0;w<d;w++){const C=w%3*2/3-1,b=w>2?0:-1,A=[C,b,0,C+2/3,b,0,C+2/3,b+1,0,C,b,0,C+2/3,b+1,0,C,b+1,0];x.set(A,m*p*w),_.set(f,g*p*w);const L=[w,w,w,w,w,w];y.set(L,v*p*w)}const M=new De;M.setAttribute("position",new nt(x,m)),M.setAttribute("uv",new nt(_,g)),M.setAttribute("faceIndex",new nt(y,v)),e.push(M),i>es&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function wd(r,e,t){const n=new Zt(r,e,t);return n.texture.mapping=vs,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function po(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Sw(r,e,t){const n=new Float32Array(Zi),i=new T(0,1,0);return new Ht({name:"SphericalGaussianBlur",defines:{n:Zi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Oh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ni,depthTest:!1,depthWrite:!1})}function Sd(){return new Ht({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Oh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ni,depthTest:!1,depthWrite:!1})}function Ad(){return new Ht({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Oh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ni,depthTest:!1,depthWrite:!1})}function Oh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Aw(r){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const l=o.mapping,c=l===os||l===na,u=l===Mi||l===wi;if(c||u)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let h=e.get(o);return t===null&&(t=new ku(r)),h=c?t.fromEquirectangular(o,h):t.fromCubemap(o,h),e.set(o,h),h.texture}else{if(e.has(o))return e.get(o).texture;{const h=o.image;if(c&&h&&h.height>0||u&&h&&i(h)){t===null&&(t=new ku(r));const f=c?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",s),f.texture}else return null}}}return o}function i(o){let l=0;const c=6;for(let u=0;u<c;u++)o[u]!==void 0&&l++;return l===c}function s(o){const l=o.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function Tw(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Ew(r,e,t,n){const i={},s=new WeakMap;function a(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",a),delete i[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function o(h,f){return i[f.id]===!0||(f.addEventListener("dispose",a),i[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const p in f)e.update(f[p],34962);const d=h.morphAttributes;for(const p in d){const m=d[p];for(let g=0,v=m.length;g<v;g++)e.update(m[g],34962)}}function c(h){const f=[],d=h.index,p=h.attributes.position;let m=0;if(d!==null){const x=d.array;m=d.version;for(let _=0,y=x.length;_<y;_+=3){const M=x[_+0],w=x[_+1],C=x[_+2];f.push(M,w,w,C,C,M)}}else{const x=p.array;m=p.version;for(let _=0,y=x.length/3-1;_<y;_+=3){const M=_+0,w=_+1,C=_+2;f.push(M,w,w,C,C,M)}}const g=new(Zg(f)?Dh:Rl)(f,1);g.version=m;const v=s.get(h);v&&e.remove(v),s.set(h,g)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:o,update:l,getWireframeAttribute:u}}function Cw(r,e,t,n){const i=n.isWebGL2;let s;function a(f){s=f}let o,l;function c(f){o=f.type,l=f.bytesPerElement}function u(f,d){r.drawElements(s,d,o,f*l),t.update(d,s,1)}function h(f,d,p){if(p===0)return;let m,g;if(i)m=r,g="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](s,d,o,f*l,p),t.update(d,s,p)}this.setMode=a,this.setIndex=c,this.render=u,this.renderInstances=h}function Pw(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,a,o){switch(t.calls++,a){case 4:t.triangles+=o*(s/3);break;case 1:t.lines+=o*(s/2);break;case 3:t.lines+=o*(s-1);break;case 2:t.lines+=o*s;break;case 0:t.points+=o*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Lw(r,e){return r[0]-e[0]}function Rw(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Iw(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,a=new Ye,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,u,h,f){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=p!==void 0?p.length:0;let g=s.get(u);if(g===void 0||g.count!==m){let B=function(){O.dispose(),s.delete(u),u.removeEventListener("dispose",B)};g!==void 0&&g.texture.dispose();const _=u.morphAttributes.position!==void 0,y=u.morphAttributes.normal!==void 0,M=u.morphAttributes.color!==void 0,w=u.morphAttributes.position||[],C=u.morphAttributes.normal||[],b=u.morphAttributes.color||[];let A=0;_===!0&&(A=1),y===!0&&(A=2),M===!0&&(A=3);let L=u.attributes.position.count*A,k=1;L>e.maxTextureSize&&(k=Math.ceil(L/e.maxTextureSize),L=e.maxTextureSize);const W=new Float32Array(L*k*4*m),O=new Sa(W,L,k,m);O.type=Zn,O.needsUpdate=!0;const I=A*4;for(let G=0;G<m;G++){const K=w[G],X=C[G],te=b[G],Z=L*k*4*G;for(let U=0;U<K.count;U++){const V=U*I;_===!0&&(a.fromBufferAttribute(K,U),W[Z+V+0]=a.x,W[Z+V+1]=a.y,W[Z+V+2]=a.z,W[Z+V+3]=0),y===!0&&(a.fromBufferAttribute(X,U),W[Z+V+4]=a.x,W[Z+V+5]=a.y,W[Z+V+6]=a.z,W[Z+V+7]=0),M===!0&&(a.fromBufferAttribute(te,U),W[Z+V+8]=a.x,W[Z+V+9]=a.y,W[Z+V+10]=a.z,W[Z+V+11]=te.itemSize===4?a.w:1)}}g={count:m,texture:O,size:new q(L,k)},s.set(u,g),u.addEventListener("dispose",B)}let v=0;for(let _=0;_<d.length;_++)v+=d[_];const x=u.morphTargetsRelative?1:1-v;f.getUniforms().setValue(r,"morphTargetBaseInfluence",x),f.getUniforms().setValue(r,"morphTargetInfluences",d),f.getUniforms().setValue(r,"morphTargetsTexture",g.texture,t),f.getUniforms().setValue(r,"morphTargetsTextureSize",g.size)}else{const p=d===void 0?0:d.length;let m=n[u.id];if(m===void 0||m.length!==p){m=[];for(let y=0;y<p;y++)m[y]=[y,0];n[u.id]=m}for(let y=0;y<p;y++){const M=m[y];M[0]=y,M[1]=d[y]}m.sort(Rw);for(let y=0;y<8;y++)y<p&&m[y][1]?(o[y][0]=m[y][0],o[y][1]=m[y][1]):(o[y][0]=Number.MAX_SAFE_INTEGER,o[y][1]=0);o.sort(Lw);const g=u.morphAttributes.position,v=u.morphAttributes.normal;let x=0;for(let y=0;y<8;y++){const M=o[y],w=M[0],C=M[1];w!==Number.MAX_SAFE_INTEGER&&C?(g&&u.getAttribute("morphTarget"+y)!==g[w]&&u.setAttribute("morphTarget"+y,g[w]),v&&u.getAttribute("morphNormal"+y)!==v[w]&&u.setAttribute("morphNormal"+y,v[w]),i[y]=C,x+=C):(g&&u.hasAttribute("morphTarget"+y)===!0&&u.deleteAttribute("morphTarget"+y),v&&u.hasAttribute("morphNormal"+y)===!0&&u.deleteAttribute("morphNormal"+y),i[y]=0)}const _=u.morphTargetsRelative?1:1-x;f.getUniforms().setValue(r,"morphTargetBaseInfluence",_),f.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function Dw(r,e,t,n){let i=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=e.get(l,u);return i.get(h)!==c&&(e.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),h}function a(){i=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:a}}const n0=new ct,i0=new Sa,r0=new Pl,s0=new Ea,Td=[],Ed=[],Cd=new Float32Array(16),Pd=new Float32Array(9),Ld=new Float32Array(4);function xs(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Td[i];if(s===void 0&&(s=new Float32Array(i),Td[i]=s),e!==0){n.toArray(s,0);for(let a=1,o=0;a!==e;++a)o+=t,r[a].toArray(s,o)}return s}function At(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Tt(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Ol(r,e){let t=Ed[e];t===void 0&&(t=new Int32Array(e),Ed[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Ow(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function Fw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(At(t,e))return;r.uniform2fv(this.addr,e),Tt(t,e)}}function Nw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(At(t,e))return;r.uniform3fv(this.addr,e),Tt(t,e)}}function kw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(At(t,e))return;r.uniform4fv(this.addr,e),Tt(t,e)}}function zw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(At(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Tt(t,e)}else{if(At(t,n))return;Ld.set(n),r.uniformMatrix2fv(this.addr,!1,Ld),Tt(t,n)}}function Bw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(At(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Tt(t,e)}else{if(At(t,n))return;Pd.set(n),r.uniformMatrix3fv(this.addr,!1,Pd),Tt(t,n)}}function Uw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(At(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Tt(t,e)}else{if(At(t,n))return;Cd.set(n),r.uniformMatrix4fv(this.addr,!1,Cd),Tt(t,n)}}function Vw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function Gw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(At(t,e))return;r.uniform2iv(this.addr,e),Tt(t,e)}}function Hw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(At(t,e))return;r.uniform3iv(this.addr,e),Tt(t,e)}}function Ww(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(At(t,e))return;r.uniform4iv(this.addr,e),Tt(t,e)}}function Xw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function $w(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(At(t,e))return;r.uniform2uiv(this.addr,e),Tt(t,e)}}function qw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(At(t,e))return;r.uniform3uiv(this.addr,e),Tt(t,e)}}function jw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(At(t,e))return;r.uniform4uiv(this.addr,e),Tt(t,e)}}function Yw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||n0,i)}function Zw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||r0,i)}function Jw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||s0,i)}function Kw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||i0,i)}function Qw(r){switch(r){case 5126:return Ow;case 35664:return Fw;case 35665:return Nw;case 35666:return kw;case 35674:return zw;case 35675:return Bw;case 35676:return Uw;case 5124:case 35670:return Vw;case 35667:case 35671:return Gw;case 35668:case 35672:return Hw;case 35669:case 35673:return Ww;case 5125:return Xw;case 36294:return $w;case 36295:return qw;case 36296:return jw;case 35678:case 36198:case 36298:case 36306:case 35682:return Yw;case 35679:case 36299:case 36307:return Zw;case 35680:case 36300:case 36308:case 36293:return Jw;case 36289:case 36303:case 36311:case 36292:return Kw}}function e1(r,e){r.uniform1fv(this.addr,e)}function t1(r,e){const t=xs(e,this.size,2);r.uniform2fv(this.addr,t)}function n1(r,e){const t=xs(e,this.size,3);r.uniform3fv(this.addr,t)}function i1(r,e){const t=xs(e,this.size,4);r.uniform4fv(this.addr,t)}function r1(r,e){const t=xs(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function s1(r,e){const t=xs(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function a1(r,e){const t=xs(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function o1(r,e){r.uniform1iv(this.addr,e)}function l1(r,e){r.uniform2iv(this.addr,e)}function c1(r,e){r.uniform3iv(this.addr,e)}function u1(r,e){r.uniform4iv(this.addr,e)}function h1(r,e){r.uniform1uiv(this.addr,e)}function f1(r,e){r.uniform2uiv(this.addr,e)}function d1(r,e){r.uniform3uiv(this.addr,e)}function p1(r,e){r.uniform4uiv(this.addr,e)}function m1(r,e,t){const n=this.cache,i=e.length,s=Ol(t,i);At(n,s)||(r.uniform1iv(this.addr,s),Tt(n,s));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||n0,s[a])}function g1(r,e,t){const n=this.cache,i=e.length,s=Ol(t,i);At(n,s)||(r.uniform1iv(this.addr,s),Tt(n,s));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||r0,s[a])}function _1(r,e,t){const n=this.cache,i=e.length,s=Ol(t,i);At(n,s)||(r.uniform1iv(this.addr,s),Tt(n,s));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||s0,s[a])}function v1(r,e,t){const n=this.cache,i=e.length,s=Ol(t,i);At(n,s)||(r.uniform1iv(this.addr,s),Tt(n,s));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||i0,s[a])}function y1(r){switch(r){case 5126:return e1;case 35664:return t1;case 35665:return n1;case 35666:return i1;case 35674:return r1;case 35675:return s1;case 35676:return a1;case 5124:case 35670:return o1;case 35667:case 35671:return l1;case 35668:case 35672:return c1;case 35669:case 35673:return u1;case 5125:return h1;case 36294:return f1;case 36295:return d1;case 36296:return p1;case 35678:case 36198:case 36298:case 36306:case 35682:return m1;case 35679:case 36299:case 36307:return g1;case 35680:case 36300:case 36308:case 36293:return _1;case 36289:case 36303:case 36311:case 36292:return v1}}class x1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=Qw(t.type)}}class b1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=y1(t.type)}}class M1{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,a=i.length;s!==a;++s){const o=i[s];o.setValue(e,t[o.id],n)}}}const Oc=/(\w+)(\])?(\[|\.)?/g;function Rd(r,e){r.seq.push(e),r.map[e.id]=e}function w1(r,e,t){const n=r.name,i=n.length;for(Oc.lastIndex=0;;){const s=Oc.exec(n),a=Oc.lastIndex;let o=s[1];const l=s[2]==="]",c=s[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===i){Rd(t,c===void 0?new x1(o,r,e):new b1(o,r,e));break}else{let h=t.map[o];h===void 0&&(h=new M1(o),Rd(t,h)),t=h}}}class Zo{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),a=e.getUniformLocation(t,s.name);w1(s,a,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,a=t.length;s!==a;++s){const o=t[s],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Id(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let S1=0;function A1(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let a=i;a<s;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}function T1(r){switch(r){case Ai:return["Linear","( value )"];case Ve:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Dd(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const a=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+A1(r.getShaderSource(e),a)}else return i}function E1(r,e){const t=T1(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function C1(r,e){let t;switch(e){case Mh:t="Linear";break;case wh:t="Reinhard";break;case Sh:t="OptimizedCineon";break;case Ah:t="ACESFilmic";break;case Cg:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function P1(r){return[r.extensionDerivatives||!!r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Hs).join(`
`)}function L1(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function R1(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),a=s.name;let o=1;s.type===35674&&(o=2),s.type===35675&&(o=3),s.type===35676&&(o=4),t[a]={type:s.type,location:r.getAttribLocation(e,a),locationSize:o}}return t}function Hs(r){return r!==""}function Od(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Fd(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const I1=/^[ \t]*#include +<([\w\d./]+)>/gm;function zu(r){return r.replace(I1,D1)}function D1(r,e){const t=Ne[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return zu(t)}const O1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Nd(r){return r.replace(O1,F1)}function F1(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function kd(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function N1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===vh?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===lg?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Kr&&(e="SHADOWMAP_TYPE_VSM"),e}function k1(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Mi:case wi:e="ENVMAP_TYPE_CUBE";break;case vs:e="ENVMAP_TYPE_CUBE_UV";break}return e}function z1(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case wi:e="ENVMAP_MODE_REFRACTION";break}return e}function B1(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case ur:e="ENVMAP_BLENDING_MULTIPLY";break;case Eg:e="ENVMAP_BLENDING_MIX";break;case hl:e="ENVMAP_BLENDING_ADD";break}return e}function U1(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function V1(r,e,t,n){const i=r.getContext(),s=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=N1(t),c=k1(t),u=z1(t),h=B1(t),f=U1(t),d=t.isWebGL2?"":P1(t),p=L1(s),m=i.createProgram();let g,v,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=[p].filter(Hs).join(`
`),g.length>0&&(g+=`
`),v=[d,p].filter(Hs).join(`
`),v.length>0&&(v+=`
`)):(g=[kd(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Hs).join(`
`),v=[d,kd(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Cn?"#define TONE_MAPPING":"",t.toneMapping!==Cn?Ne.tonemapping_pars_fragment:"",t.toneMapping!==Cn?C1("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ne.encodings_pars_fragment,E1("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Hs).join(`
`)),a=zu(a),a=Od(a,t),a=Fd(a,t),o=zu(o),o=Od(o,t),o=Fd(o,t),a=Nd(a),o=Nd(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,v=["#define varying in",t.glslVersion===Fu?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Fu?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const _=x+g+a,y=x+v+o,M=Id(i,35633,_),w=Id(i,35632,y);if(i.attachShader(m,M),i.attachShader(m,w),t.index0AttributeName!==void 0?i.bindAttribLocation(m,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),r.debug.checkShaderErrors){const A=i.getProgramInfoLog(m).trim(),L=i.getShaderInfoLog(M).trim(),k=i.getShaderInfoLog(w).trim();let W=!0,O=!0;if(i.getProgramParameter(m,35714)===!1){W=!1;const I=Dd(i,M,"vertex"),B=Dd(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,35715)+`

Program Info Log: `+A+`
`+I+`
`+B)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(L===""||k==="")&&(O=!1);O&&(this.diagnostics={runnable:W,programLog:A,vertexShader:{log:L,prefix:g},fragmentShader:{log:k,prefix:v}})}i.deleteShader(M),i.deleteShader(w);let C;this.getUniforms=function(){return C===void 0&&(C=new Zo(i,m)),C};let b;return this.getAttributes=function(){return b===void 0&&(b=R1(i,m)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=t.shaderName,this.id=S1++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=M,this.fragmentShader=w,this}let G1=0;class H1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(s)===!1&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new W1(e),t.set(e,n)),n}}class W1{constructor(e){this.id=G1++,this.code=e,this.usedTimes=0}}function X1(r,e,t,n,i,s,a){const o=new Ll,l=new H1,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,f=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(b,A,L,k,W){const O=k.fog,I=W.geometry,B=b.isMeshStandardMaterial?k.environment:null,G=(b.isMeshStandardMaterial?t:e).get(b.envMap||B),K=!!G&&G.mapping===vs?G.image.height:null,X=p[b.type];b.precision!==null&&(d=i.getMaxPrecision(b.precision),d!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",d,"instead."));const te=I.morphAttributes.position||I.morphAttributes.normal||I.morphAttributes.color,Z=te!==void 0?te.length:0;let U=0;I.morphAttributes.position!==void 0&&(U=1),I.morphAttributes.normal!==void 0&&(U=2),I.morphAttributes.color!==void 0&&(U=3);let V,se,ne,ie;if(X){const Oe=Ft[X];V=Oe.vertexShader,se=Oe.fragmentShader}else V=b.vertexShader,se=b.fragmentShader,l.update(b),ne=l.getVertexShaderID(b),ie=l.getFragmentShaderID(b);const $=r.getRenderTarget(),Ee=b.alphaTest>0,pe=b.clearcoat>0,Ce=b.iridescence>0;return{isWebGL2:u,shaderID:X,shaderName:b.type,vertexShader:V,fragmentShader:se,defines:b.defines,customVertexShaderID:ne,customFragmentShaderID:ie,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:d,instancing:W.isInstancedMesh===!0,instancingColor:W.isInstancedMesh===!0&&W.instanceColor!==null,supportsVertexTextures:f,outputEncoding:$===null?r.outputEncoding:$.isXRRenderTarget===!0?$.texture.encoding:Ai,map:!!b.map,matcap:!!b.matcap,envMap:!!G,envMapMode:G&&G.mapping,envMapCubeUVHeight:K,lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===qg,tangentSpaceNormalMap:b.normalMapType===ai,decodeVideoTexture:!!b.map&&b.map.isVideoTexture===!0&&b.map.encoding===Ve,clearcoat:pe,clearcoatMap:pe&&!!b.clearcoatMap,clearcoatRoughnessMap:pe&&!!b.clearcoatRoughnessMap,clearcoatNormalMap:pe&&!!b.clearcoatNormalMap,iridescence:Ce,iridescenceMap:Ce&&!!b.iridescenceMap,iridescenceThicknessMap:Ce&&!!b.iridescenceThicknessMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,specularIntensityMap:!!b.specularIntensityMap,specularColorMap:!!b.specularColorMap,opaque:b.transparent===!1&&b.blending===nr,alphaMap:!!b.alphaMap,alphaTest:Ee,gradientMap:!!b.gradientMap,sheen:b.sheen>0,sheenColorMap:!!b.sheenColorMap,sheenRoughnessMap:!!b.sheenRoughnessMap,transmission:b.transmission>0,transmissionMap:!!b.transmissionMap,thicknessMap:!!b.thicknessMap,combine:b.combine,vertexTangents:!!b.normalMap&&!!I.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!I.attributes.color&&I.attributes.color.itemSize===4,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||!!b.displacementMap||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||!!b.sheenColorMap||!!b.sheenRoughnessMap,uvsVertexOnly:!(!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||b.transmission>0||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||b.sheen>0||!!b.sheenColorMap||!!b.sheenRoughnessMap)&&!!b.displacementMap,fog:!!O,useFog:b.fog===!0,fogExp2:O&&O.isFogExp2,flatShading:!!b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:h,skinning:W.isSkinnedMesh===!0,morphTargets:I.morphAttributes.position!==void 0,morphNormals:I.morphAttributes.normal!==void 0,morphColors:I.morphAttributes.color!==void 0,morphTargetsCount:Z,morphTextureStride:U,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&L.length>0,shadowMapType:r.shadowMap.type,toneMapping:b.toneMapped?r.toneMapping:Cn,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Rn,flipSided:b.side===jt,useDepthPacking:!!b.depthPacking,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function g(b){const A=[];if(b.shaderID?A.push(b.shaderID):(A.push(b.customVertexShaderID),A.push(b.customFragmentShaderID)),b.defines!==void 0)for(const L in b.defines)A.push(L),A.push(b.defines[L]);return b.isRawShaderMaterial===!1&&(v(A,b),x(A,b),A.push(r.outputEncoding)),A.push(b.customProgramCacheKey),A.join()}function v(b,A){b.push(A.precision),b.push(A.outputEncoding),b.push(A.envMapMode),b.push(A.envMapCubeUVHeight),b.push(A.combine),b.push(A.vertexUvs),b.push(A.fogExp2),b.push(A.sizeAttenuation),b.push(A.morphTargetsCount),b.push(A.morphAttributeCount),b.push(A.numDirLights),b.push(A.numPointLights),b.push(A.numSpotLights),b.push(A.numSpotLightMaps),b.push(A.numHemiLights),b.push(A.numRectAreaLights),b.push(A.numDirLightShadows),b.push(A.numPointLightShadows),b.push(A.numSpotLightShadows),b.push(A.numSpotLightShadowsWithMaps),b.push(A.shadowMapType),b.push(A.toneMapping),b.push(A.numClippingPlanes),b.push(A.numClipIntersection),b.push(A.depthPacking)}function x(b,A){o.disableAll(),A.isWebGL2&&o.enable(0),A.supportsVertexTextures&&o.enable(1),A.instancing&&o.enable(2),A.instancingColor&&o.enable(3),A.map&&o.enable(4),A.matcap&&o.enable(5),A.envMap&&o.enable(6),A.lightMap&&o.enable(7),A.aoMap&&o.enable(8),A.emissiveMap&&o.enable(9),A.bumpMap&&o.enable(10),A.normalMap&&o.enable(11),A.objectSpaceNormalMap&&o.enable(12),A.tangentSpaceNormalMap&&o.enable(13),A.clearcoat&&o.enable(14),A.clearcoatMap&&o.enable(15),A.clearcoatRoughnessMap&&o.enable(16),A.clearcoatNormalMap&&o.enable(17),A.iridescence&&o.enable(18),A.iridescenceMap&&o.enable(19),A.iridescenceThicknessMap&&o.enable(20),A.displacementMap&&o.enable(21),A.specularMap&&o.enable(22),A.roughnessMap&&o.enable(23),A.metalnessMap&&o.enable(24),A.gradientMap&&o.enable(25),A.alphaMap&&o.enable(26),A.alphaTest&&o.enable(27),A.vertexColors&&o.enable(28),A.vertexAlphas&&o.enable(29),A.vertexUvs&&o.enable(30),A.vertexTangents&&o.enable(31),A.uvsVertexOnly&&o.enable(32),b.push(o.mask),o.disableAll(),A.fog&&o.enable(0),A.useFog&&o.enable(1),A.flatShading&&o.enable(2),A.logarithmicDepthBuffer&&o.enable(3),A.skinning&&o.enable(4),A.morphTargets&&o.enable(5),A.morphNormals&&o.enable(6),A.morphColors&&o.enable(7),A.premultipliedAlpha&&o.enable(8),A.shadowMapEnabled&&o.enable(9),A.physicallyCorrectLights&&o.enable(10),A.doubleSided&&o.enable(11),A.flipSided&&o.enable(12),A.useDepthPacking&&o.enable(13),A.dithering&&o.enable(14),A.specularIntensityMap&&o.enable(15),A.specularColorMap&&o.enable(16),A.transmission&&o.enable(17),A.transmissionMap&&o.enable(18),A.thicknessMap&&o.enable(19),A.sheen&&o.enable(20),A.sheenColorMap&&o.enable(21),A.sheenRoughnessMap&&o.enable(22),A.decodeVideoTexture&&o.enable(23),A.opaque&&o.enable(24),b.push(o.mask)}function _(b){const A=p[b.type];let L;if(A){const k=Ft[A];L=Ta.clone(k.uniforms)}else L=b.uniforms;return L}function y(b,A){let L;for(let k=0,W=c.length;k<W;k++){const O=c[k];if(O.cacheKey===A){L=O,++L.usedTimes;break}}return L===void 0&&(L=new V1(r,A,b,s),c.push(L)),L}function M(b){if(--b.usedTimes===0){const A=c.indexOf(b);c[A]=c[c.length-1],c.pop(),b.destroy()}}function w(b){l.remove(b)}function C(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:_,acquireProgram:y,releaseProgram:M,releaseShaderCache:w,programs:c,dispose:C}}function $1(){let r=new WeakMap;function e(s){let a=r.get(s);return a===void 0&&(a={},r.set(s,a)),a}function t(s){r.delete(s)}function n(s,a,o){r.get(s)[a]=o}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function q1(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function zd(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Bd(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function a(h,f,d,p,m,g){let v=r[e];return v===void 0?(v={id:h.id,object:h,geometry:f,material:d,groupOrder:p,renderOrder:h.renderOrder,z:m,group:g},r[e]=v):(v.id=h.id,v.object=h,v.geometry=f,v.material=d,v.groupOrder=p,v.renderOrder=h.renderOrder,v.z=m,v.group=g),e++,v}function o(h,f,d,p,m,g){const v=a(h,f,d,p,m,g);d.transmission>0?n.push(v):d.transparent===!0?i.push(v):t.push(v)}function l(h,f,d,p,m,g){const v=a(h,f,d,p,m,g);d.transmission>0?n.unshift(v):d.transparent===!0?i.unshift(v):t.unshift(v)}function c(h,f){t.length>1&&t.sort(h||q1),n.length>1&&n.sort(f||zd),i.length>1&&i.sort(f||zd)}function u(){for(let h=e,f=r.length;h<f;h++){const d=r[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:o,unshift:l,finish:u,sort:c}}function j1(){let r=new WeakMap;function e(n,i){const s=r.get(n);let a;return s===void 0?(a=new Bd,r.set(n,[a])):i>=s.length?(a=new Bd,s.push(a)):a=s[i],a}function t(){r=new WeakMap}return{get:e,dispose:t}}function Y1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new T,color:new ce};break;case"SpotLight":t={position:new T,direction:new T,color:new ce,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new T,color:new ce,distance:0,decay:0};break;case"HemisphereLight":t={direction:new T,skyColor:new ce,groundColor:new ce};break;case"RectAreaLight":t={color:new ce,position:new T,halfWidth:new T,halfHeight:new T};break}return r[e.id]=t,t}}}function Z1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let J1=0;function K1(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function Q1(r,e){const t=new Y1,n=Z1(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new T);const s=new T,a=new be,o=new be;function l(u,h){let f=0,d=0,p=0;for(let k=0;k<9;k++)i.probe[k].set(0,0,0);let m=0,g=0,v=0,x=0,_=0,y=0,M=0,w=0,C=0,b=0;u.sort(K1);const A=h!==!0?Math.PI:1;for(let k=0,W=u.length;k<W;k++){const O=u[k],I=O.color,B=O.intensity,G=O.distance,K=O.shadow&&O.shadow.map?O.shadow.map.texture:null;if(O.isAmbientLight)f+=I.r*B*A,d+=I.g*B*A,p+=I.b*B*A;else if(O.isLightProbe)for(let X=0;X<9;X++)i.probe[X].addScaledVector(O.sh.coefficients[X],B);else if(O.isDirectionalLight){const X=t.get(O);if(X.color.copy(O.color).multiplyScalar(O.intensity*A),O.castShadow){const te=O.shadow,Z=n.get(O);Z.shadowBias=te.bias,Z.shadowNormalBias=te.normalBias,Z.shadowRadius=te.radius,Z.shadowMapSize=te.mapSize,i.directionalShadow[m]=Z,i.directionalShadowMap[m]=K,i.directionalShadowMatrix[m]=O.shadow.matrix,y++}i.directional[m]=X,m++}else if(O.isSpotLight){const X=t.get(O);X.position.setFromMatrixPosition(O.matrixWorld),X.color.copy(I).multiplyScalar(B*A),X.distance=G,X.coneCos=Math.cos(O.angle),X.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),X.decay=O.decay,i.spot[v]=X;const te=O.shadow;if(O.map&&(i.spotLightMap[C]=O.map,C++,te.updateMatrices(O),O.castShadow&&b++),i.spotLightMatrix[v]=te.matrix,O.castShadow){const Z=n.get(O);Z.shadowBias=te.bias,Z.shadowNormalBias=te.normalBias,Z.shadowRadius=te.radius,Z.shadowMapSize=te.mapSize,i.spotShadow[v]=Z,i.spotShadowMap[v]=K,w++}v++}else if(O.isRectAreaLight){const X=t.get(O);X.color.copy(I).multiplyScalar(B),X.halfWidth.set(O.width*.5,0,0),X.halfHeight.set(0,O.height*.5,0),i.rectArea[x]=X,x++}else if(O.isPointLight){const X=t.get(O);if(X.color.copy(O.color).multiplyScalar(O.intensity*A),X.distance=O.distance,X.decay=O.decay,O.castShadow){const te=O.shadow,Z=n.get(O);Z.shadowBias=te.bias,Z.shadowNormalBias=te.normalBias,Z.shadowRadius=te.radius,Z.shadowMapSize=te.mapSize,Z.shadowCameraNear=te.camera.near,Z.shadowCameraFar=te.camera.far,i.pointShadow[g]=Z,i.pointShadowMap[g]=K,i.pointShadowMatrix[g]=O.shadow.matrix,M++}i.point[g]=X,g++}else if(O.isHemisphereLight){const X=t.get(O);X.skyColor.copy(O.color).multiplyScalar(B*A),X.groundColor.copy(O.groundColor).multiplyScalar(B*A),i.hemi[_]=X,_++}}x>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ue.LTC_FLOAT_1,i.rectAreaLTC2=ue.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=ue.LTC_HALF_1,i.rectAreaLTC2=ue.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=d,i.ambient[2]=p;const L=i.hash;(L.directionalLength!==m||L.pointLength!==g||L.spotLength!==v||L.rectAreaLength!==x||L.hemiLength!==_||L.numDirectionalShadows!==y||L.numPointShadows!==M||L.numSpotShadows!==w||L.numSpotMaps!==C)&&(i.directional.length=m,i.spot.length=v,i.rectArea.length=x,i.point.length=g,i.hemi.length=_,i.directionalShadow.length=y,i.directionalShadowMap.length=y,i.pointShadow.length=M,i.pointShadowMap.length=M,i.spotShadow.length=w,i.spotShadowMap.length=w,i.directionalShadowMatrix.length=y,i.pointShadowMatrix.length=M,i.spotLightMatrix.length=w+C-b,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=b,L.directionalLength=m,L.pointLength=g,L.spotLength=v,L.rectAreaLength=x,L.hemiLength=_,L.numDirectionalShadows=y,L.numPointShadows=M,L.numSpotShadows=w,L.numSpotMaps=C,i.version=J1++)}function c(u,h){let f=0,d=0,p=0,m=0,g=0;const v=h.matrixWorldInverse;for(let x=0,_=u.length;x<_;x++){const y=u[x];if(y.isDirectionalLight){const M=i.directional[f];M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),f++}else if(y.isSpotLight){const M=i.spot[p];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),M.direction.setFromMatrixPosition(y.matrixWorld),s.setFromMatrixPosition(y.target.matrixWorld),M.direction.sub(s),M.direction.transformDirection(v),p++}else if(y.isRectAreaLight){const M=i.rectArea[m];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),o.identity(),a.copy(y.matrixWorld),a.premultiply(v),o.extractRotation(a),M.halfWidth.set(y.width*.5,0,0),M.halfHeight.set(0,y.height*.5,0),M.halfWidth.applyMatrix4(o),M.halfHeight.applyMatrix4(o),m++}else if(y.isPointLight){const M=i.point[d];M.position.setFromMatrixPosition(y.matrixWorld),M.position.applyMatrix4(v),d++}else if(y.isHemisphereLight){const M=i.hemi[g];M.direction.setFromMatrixPosition(y.matrixWorld),M.direction.transformDirection(v),g++}}}return{setup:l,setupView:c,state:i}}function Ud(r,e){const t=new Q1(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function a(h){n.push(h)}function o(h){i.push(h)}function l(h){t.setup(n,h)}function c(h){t.setupView(n,h)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}function eS(r,e){let t=new WeakMap;function n(s,a=0){const o=t.get(s);let l;return o===void 0?(l=new Ud(r,e),t.set(s,[l])):a>=o.length?(l=new Ud(r,e),o.push(l)):l=o[a],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class Fh extends kt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Xg,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Nh extends kt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new T,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const tS=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,nS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function iS(r,e,t){let n=new Dl;const i=new q,s=new q,a=new Ye,o=new Fh({depthPacking:$g}),l=new Nh,c={},u=t.maxTextureSize,h={0:jt,1:cr,2:Rn},f=new Ht({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new q},radius:{value:4}},vertexShader:tS,fragmentShader:nS}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new De;p.setAttribute("position",new nt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new St(p,f),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=vh,this.render=function(y,M,w){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||y.length===0)return;const C=r.getRenderTarget(),b=r.getActiveCubeFace(),A=r.getActiveMipmapLevel(),L=r.state;L.setBlending(ni),L.buffers.color.setClear(1,1,1,1),L.buffers.depth.setTest(!0),L.setScissorTest(!1);for(let k=0,W=y.length;k<W;k++){const O=y[k],I=O.shadow;if(I===void 0){console.warn("THREE.WebGLShadowMap:",O,"has no shadow.");continue}if(I.autoUpdate===!1&&I.needsUpdate===!1)continue;i.copy(I.mapSize);const B=I.getFrameExtents();if(i.multiply(B),s.copy(I.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/B.x),i.x=s.x*B.x,I.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/B.y),i.y=s.y*B.y,I.mapSize.y=s.y)),I.map===null){const K=this.type!==Kr?{minFilter:pt,magFilter:pt}:{};I.map=new Zt(i.x,i.y,K),I.map.texture.name=O.name+".shadowMap",I.camera.updateProjectionMatrix()}r.setRenderTarget(I.map),r.clear();const G=I.getViewportCount();for(let K=0;K<G;K++){const X=I.getViewport(K);a.set(s.x*X.x,s.y*X.y,s.x*X.z,s.y*X.w),L.viewport(a),I.updateMatrices(O,K),n=I.getFrustum(),_(M,w,I.camera,O,this.type)}I.isPointLightShadow!==!0&&this.type===Kr&&v(I,w),I.needsUpdate=!1}g.needsUpdate=!1,r.setRenderTarget(C,b,A)};function v(y,M){const w=e.update(m);f.defines.VSM_SAMPLES!==y.blurSamples&&(f.defines.VSM_SAMPLES=y.blurSamples,d.defines.VSM_SAMPLES=y.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),y.mapPass===null&&(y.mapPass=new Zt(i.x,i.y)),f.uniforms.shadow_pass.value=y.map.texture,f.uniforms.resolution.value=y.mapSize,f.uniforms.radius.value=y.radius,r.setRenderTarget(y.mapPass),r.clear(),r.renderBufferDirect(M,null,w,f,m,null),d.uniforms.shadow_pass.value=y.mapPass.texture,d.uniforms.resolution.value=y.mapSize,d.uniforms.radius.value=y.radius,r.setRenderTarget(y.map),r.clear(),r.renderBufferDirect(M,null,w,d,m,null)}function x(y,M,w,C,b,A){let L=null;const k=w.isPointLight===!0?y.customDistanceMaterial:y.customDepthMaterial;if(k!==void 0?L=k:L=w.isPointLight===!0?l:o,r.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const W=L.uuid,O=M.uuid;let I=c[W];I===void 0&&(I={},c[W]=I);let B=I[O];B===void 0&&(B=L.clone(),I[O]=B),L=B}return L.visible=M.visible,L.wireframe=M.wireframe,A===Kr?L.side=M.shadowSide!==null?M.shadowSide:M.side:L.side=M.shadowSide!==null?M.shadowSide:h[M.side],L.alphaMap=M.alphaMap,L.alphaTest=M.alphaTest,L.map=M.map,L.clipShadows=M.clipShadows,L.clippingPlanes=M.clippingPlanes,L.clipIntersection=M.clipIntersection,L.displacementMap=M.displacementMap,L.displacementScale=M.displacementScale,L.displacementBias=M.displacementBias,L.wireframeLinewidth=M.wireframeLinewidth,L.linewidth=M.linewidth,w.isPointLight===!0&&L.isMeshDistanceMaterial===!0&&(L.referencePosition.setFromMatrixPosition(w.matrixWorld),L.nearDistance=C,L.farDistance=b),L}function _(y,M,w,C,b){if(y.visible===!1)return;if(y.layers.test(M.layers)&&(y.isMesh||y.isLine||y.isPoints)&&(y.castShadow||y.receiveShadow&&b===Kr)&&(!y.frustumCulled||n.intersectsObject(y))){y.modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,y.matrixWorld);const k=e.update(y),W=y.material;if(Array.isArray(W)){const O=k.groups;for(let I=0,B=O.length;I<B;I++){const G=O[I],K=W[G.materialIndex];if(K&&K.visible){const X=x(y,K,C,w.near,w.far,b);r.renderBufferDirect(w,null,k,X,y,G)}}}else if(W.visible){const O=x(y,W,C,w.near,w.far,b);r.renderBufferDirect(w,null,k,O,y,null)}}const L=y.children;for(let k=0,W=L.length;k<W;k++)_(L[k],M,w,C,b)}}function rS(r,e,t){const n=t.isWebGL2;function i(){let D=!1;const Y=new Ye;let ae=null;const ve=new Ye(0,0,0,0);return{setMask:function(Ae){ae!==Ae&&!D&&(r.colorMask(Ae,Ae,Ae,Ae),ae=Ae)},setLocked:function(Ae){D=Ae},setClear:function(Ae,Ke,Et,It,Ii){Ii===!0&&(Ae*=It,Ke*=It,Et*=It),Y.set(Ae,Ke,Et,It),ve.equals(Y)===!1&&(r.clearColor(Ae,Ke,Et,It),ve.copy(Y))},reset:function(){D=!1,ae=null,ve.set(-1,0,0,0)}}}function s(){let D=!1,Y=null,ae=null,ve=null;return{setTest:function(Ae){Ae?Ee(2929):pe(2929)},setMask:function(Ae){Y!==Ae&&!D&&(r.depthMask(Ae),Y=Ae)},setFunc:function(Ae){if(ae!==Ae){switch(Ae){case bg:r.depthFunc(512);break;case Mg:r.depthFunc(519);break;case bh:r.depthFunc(513);break;case ul:r.depthFunc(515);break;case wg:r.depthFunc(514);break;case Sg:r.depthFunc(518);break;case Ag:r.depthFunc(516);break;case Tg:r.depthFunc(517);break;default:r.depthFunc(515)}ae=Ae}},setLocked:function(Ae){D=Ae},setClear:function(Ae){ve!==Ae&&(r.clearDepth(Ae),ve=Ae)},reset:function(){D=!1,Y=null,ae=null,ve=null}}}function a(){let D=!1,Y=null,ae=null,ve=null,Ae=null,Ke=null,Et=null,It=null,Ii=null;return{setTest:function(at){D||(at?Ee(2960):pe(2960))},setMask:function(at){Y!==at&&!D&&(r.stencilMask(at),Y=at)},setFunc:function(at,Un,cn){(ae!==at||ve!==Un||Ae!==cn)&&(r.stencilFunc(at,Un,cn),ae=at,ve=Un,Ae=cn)},setOp:function(at,Un,cn){(Ke!==at||Et!==Un||It!==cn)&&(r.stencilOp(at,Un,cn),Ke=at,Et=Un,It=cn)},setLocked:function(at){D=at},setClear:function(at){Ii!==at&&(r.clearStencil(at),Ii=at)},reset:function(){D=!1,Y=null,ae=null,ve=null,Ae=null,Ke=null,Et=null,It=null,Ii=null}}}const o=new i,l=new s,c=new a,u=new WeakMap,h=new WeakMap;let f={},d={},p=new WeakMap,m=[],g=null,v=!1,x=null,_=null,y=null,M=null,w=null,C=null,b=null,A=!1,L=null,k=null,W=null,O=null,I=null;const B=r.getParameter(35661);let G=!1,K=0;const X=r.getParameter(7938);X.indexOf("WebGL")!==-1?(K=parseFloat(/^WebGL (\d)/.exec(X)[1]),G=K>=1):X.indexOf("OpenGL ES")!==-1&&(K=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),G=K>=2);let te=null,Z={};const U=r.getParameter(3088),V=r.getParameter(2978),se=new Ye().fromArray(U),ne=new Ye().fromArray(V);function ie(D,Y,ae){const ve=new Uint8Array(4),Ae=r.createTexture();r.bindTexture(D,Ae),r.texParameteri(D,10241,9728),r.texParameteri(D,10240,9728);for(let Ke=0;Ke<ae;Ke++)r.texImage2D(Y+Ke,0,6408,1,1,0,6408,5121,ve);return Ae}const $={};$[3553]=ie(3553,3553,1),$[34067]=ie(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Ee(2929),l.setFunc(ul),he(!1),Ie(cu),Ee(2884),oe(ni);function Ee(D){f[D]!==!0&&(r.enable(D),f[D]=!0)}function pe(D){f[D]!==!1&&(r.disable(D),f[D]=!1)}function Ce(D,Y){return d[D]!==Y?(r.bindFramebuffer(D,Y),d[D]=Y,n&&(D===36009&&(d[36160]=Y),D===36160&&(d[36009]=Y)),!0):!1}function fe(D,Y){let ae=m,ve=!1;if(D)if(ae=p.get(Y),ae===void 0&&(ae=[],p.set(Y,ae)),D.isWebGLMultipleRenderTargets){const Ae=D.texture;if(ae.length!==Ae.length||ae[0]!==36064){for(let Ke=0,Et=Ae.length;Ke<Et;Ke++)ae[Ke]=36064+Ke;ae.length=Ae.length,ve=!0}}else ae[0]!==36064&&(ae[0]=36064,ve=!0);else ae[0]!==1029&&(ae[0]=1029,ve=!0);ve&&(t.isWebGL2?r.drawBuffers(ae):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ae))}function Oe(D){return g!==D?(r.useProgram(D),g=D,!0):!1}const Q={[Yi]:32774,[ug]:32778,[hg]:32779};if(n)Q[fu]=32775,Q[du]=32776;else{const D=e.get("EXT_blend_minmax");D!==null&&(Q[fu]=D.MIN_EXT,Q[du]=D.MAX_EXT)}const ee={[fg]:0,[dg]:1,[pg]:768,[yh]:770,[xg]:776,[vg]:774,[gg]:772,[mg]:769,[xh]:771,[yg]:775,[_g]:773};function oe(D,Y,ae,ve,Ae,Ke,Et,It){if(D===ni){v===!0&&(pe(3042),v=!1);return}if(v===!1&&(Ee(3042),v=!0),D!==cg){if(D!==x||It!==A){if((_!==Yi||w!==Yi)&&(r.blendEquation(32774),_=Yi,w=Yi),It)switch(D){case nr:r.blendFuncSeparate(1,771,1,771);break;case cl:r.blendFunc(1,1);break;case uu:r.blendFuncSeparate(0,769,0,1);break;case hu:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}else switch(D){case nr:r.blendFuncSeparate(770,771,1,771);break;case cl:r.blendFunc(770,1);break;case uu:r.blendFuncSeparate(0,769,0,1);break;case hu:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}y=null,M=null,C=null,b=null,x=D,A=It}return}Ae=Ae||Y,Ke=Ke||ae,Et=Et||ve,(Y!==_||Ae!==w)&&(r.blendEquationSeparate(Q[Y],Q[Ae]),_=Y,w=Ae),(ae!==y||ve!==M||Ke!==C||Et!==b)&&(r.blendFuncSeparate(ee[ae],ee[ve],ee[Ke],ee[Et]),y=ae,M=ve,C=Ke,b=Et),x=D,A=!1}function xe(D,Y){D.side===Rn?pe(2884):Ee(2884);let ae=D.side===jt;Y&&(ae=!ae),he(ae),D.blending===nr&&D.transparent===!1?oe(ni):oe(D.blending,D.blendEquation,D.blendSrc,D.blendDst,D.blendEquationAlpha,D.blendSrcAlpha,D.blendDstAlpha,D.premultipliedAlpha),l.setFunc(D.depthFunc),l.setTest(D.depthTest),l.setMask(D.depthWrite),o.setMask(D.colorWrite);const ve=D.stencilWrite;c.setTest(ve),ve&&(c.setMask(D.stencilWriteMask),c.setFunc(D.stencilFunc,D.stencilRef,D.stencilFuncMask),c.setOp(D.stencilFail,D.stencilZFail,D.stencilZPass)),Te(D.polygonOffset,D.polygonOffsetFactor,D.polygonOffsetUnits),D.alphaToCoverage===!0?Ee(32926):pe(32926)}function he(D){L!==D&&(D?r.frontFace(2304):r.frontFace(2305),L=D)}function Ie(D){D!==ag?(Ee(2884),D!==k&&(D===cu?r.cullFace(1029):D===og?r.cullFace(1028):r.cullFace(1032))):pe(2884),k=D}function Pe(D){D!==W&&(G&&r.lineWidth(D),W=D)}function Te(D,Y,ae){D?(Ee(32823),(O!==Y||I!==ae)&&(r.polygonOffset(Y,ae),O=Y,I=ae)):pe(32823)}function et(D){D?Ee(3089):pe(3089)}function Ze(D){D===void 0&&(D=33984+B-1),te!==D&&(r.activeTexture(D),te=D)}function P(D,Y,ae){ae===void 0&&(te===null?ae=33984+B-1:ae=te);let ve=Z[ae];ve===void 0&&(ve={type:void 0,texture:void 0},Z[ae]=ve),(ve.type!==D||ve.texture!==Y)&&(te!==ae&&(r.activeTexture(ae),te=ae),r.bindTexture(D,Y||$[D]),ve.type=D,ve.texture=Y)}function S(){const D=Z[te];D!==void 0&&D.type!==void 0&&(r.bindTexture(D.type,null),D.type=void 0,D.texture=void 0)}function H(){try{r.compressedTexImage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function re(){try{r.compressedTexImage3D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function le(){try{r.texSubImage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function de(){try{r.texSubImage3D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function Re(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function R(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function F(){try{r.texStorage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function me(){try{r.texStorage3D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function ye(){try{r.texImage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function _e(){try{r.texImage3D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function Se(D){se.equals(D)===!1&&(r.scissor(D.x,D.y,D.z,D.w),se.copy(D))}function Me(D){ne.equals(D)===!1&&(r.viewport(D.x,D.y,D.z,D.w),ne.copy(D))}function He(D,Y){let ae=h.get(Y);ae===void 0&&(ae=new WeakMap,h.set(Y,ae));let ve=ae.get(D);ve===void 0&&(ve=r.getUniformBlockIndex(Y,D.name),ae.set(D,ve))}function Xe(D,Y){const ve=h.get(Y).get(D);u.get(D)!==ve&&(r.uniformBlockBinding(Y,ve,D.__bindingPointIndex),u.set(D,ve))}function tt(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),f={},te=null,Z={},d={},p=new WeakMap,m=[],g=null,v=!1,x=null,_=null,y=null,M=null,w=null,C=null,b=null,A=!1,L=null,k=null,W=null,O=null,I=null,se.set(0,0,r.canvas.width,r.canvas.height),ne.set(0,0,r.canvas.width,r.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:Ee,disable:pe,bindFramebuffer:Ce,drawBuffers:fe,useProgram:Oe,setBlending:oe,setMaterial:xe,setFlipSided:he,setCullFace:Ie,setLineWidth:Pe,setPolygonOffset:Te,setScissorTest:et,activeTexture:Ze,bindTexture:P,unbindTexture:S,compressedTexImage2D:H,compressedTexImage3D:re,texImage2D:ye,texImage3D:_e,updateUBOMapping:He,uniformBlockBinding:Xe,texStorage2D:F,texStorage3D:me,texSubImage2D:le,texSubImage3D:de,compressedTexSubImage2D:Re,compressedTexSubImage3D:R,scissor:Se,viewport:Me,reset:tt}}function sS(r,e,t,n,i,s,a){const o=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(P,S){return v?new OffscreenCanvas(P,S):ca("canvas")}function _(P,S,H,re){let le=1;if((P.width>re||P.height>re)&&(le=re/Math.max(P.width,P.height)),le<1||S===!0)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap){const de=S?ml:Math.floor,Re=de(le*P.width),R=de(le*P.height);m===void 0&&(m=x(Re,R));const F=H?x(Re,R):m;return F.width=Re,F.height=R,F.getContext("2d").drawImage(P,0,0,Re,R),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+P.width+"x"+P.height+") to ("+Re+"x"+R+")."),F}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+P.width+"x"+P.height+")."),P;return P}function y(P){return Nu(P.width)&&Nu(P.height)}function M(P){return o?!1:P.wrapS!==Lt||P.wrapT!==Lt||P.minFilter!==pt&&P.minFilter!==ot}function w(P,S){return P.generateMipmaps&&S&&P.minFilter!==pt&&P.minFilter!==ot}function C(P){r.generateMipmap(P)}function b(P,S,H,re,le=!1){if(o===!1)return S;if(P!==null){if(r[P]!==void 0)return r[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let de=S;return S===6403&&(H===5126&&(de=33326),H===5131&&(de=33325),H===5121&&(de=33321)),S===33319&&(H===5126&&(de=33328),H===5131&&(de=33327),H===5121&&(de=33323)),S===6408&&(H===5126&&(de=34836),H===5131&&(de=34842),H===5121&&(de=re===Ve&&le===!1?35907:32856),H===32819&&(de=32854),H===32820&&(de=32855)),(de===33325||de===33326||de===33327||de===33328||de===34842||de===34836)&&e.get("EXT_color_buffer_float"),de}function A(P,S,H){return w(P,H)===!0||P.isFramebufferTexture&&P.minFilter!==pt&&P.minFilter!==ot?Math.log2(Math.max(S.width,S.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?S.mipmaps.length:1}function L(P){return P===pt||P===fl||P===dl?9728:9729}function k(P){const S=P.target;S.removeEventListener("dispose",k),O(S),S.isVideoTexture&&p.delete(S)}function W(P){const S=P.target;S.removeEventListener("dispose",W),B(S)}function O(P){const S=n.get(P);if(S.__webglInit===void 0)return;const H=P.source,re=g.get(H);if(re){const le=re[S.__cacheKey];le.usedTimes--,le.usedTimes===0&&I(P),Object.keys(re).length===0&&g.delete(H)}n.remove(P)}function I(P){const S=n.get(P);r.deleteTexture(S.__webglTexture);const H=P.source,re=g.get(H);delete re[S.__cacheKey],a.memory.textures--}function B(P){const S=P.texture,H=n.get(P),re=n.get(S);if(re.__webglTexture!==void 0&&(r.deleteTexture(re.__webglTexture),a.memory.textures--),P.depthTexture&&P.depthTexture.dispose(),P.isWebGLCubeRenderTarget)for(let le=0;le<6;le++)r.deleteFramebuffer(H.__webglFramebuffer[le]),H.__webglDepthbuffer&&r.deleteRenderbuffer(H.__webglDepthbuffer[le]);else{if(r.deleteFramebuffer(H.__webglFramebuffer),H.__webglDepthbuffer&&r.deleteRenderbuffer(H.__webglDepthbuffer),H.__webglMultisampledFramebuffer&&r.deleteFramebuffer(H.__webglMultisampledFramebuffer),H.__webglColorRenderbuffer)for(let le=0;le<H.__webglColorRenderbuffer.length;le++)H.__webglColorRenderbuffer[le]&&r.deleteRenderbuffer(H.__webglColorRenderbuffer[le]);H.__webglDepthRenderbuffer&&r.deleteRenderbuffer(H.__webglDepthRenderbuffer)}if(P.isWebGLMultipleRenderTargets)for(let le=0,de=S.length;le<de;le++){const Re=n.get(S[le]);Re.__webglTexture&&(r.deleteTexture(Re.__webglTexture),a.memory.textures--),n.remove(S[le])}n.remove(S),n.remove(P)}let G=0;function K(){G=0}function X(){const P=G;return P>=l&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+l),G+=1,P}function te(P){const S=[];return S.push(P.wrapS),S.push(P.wrapT),S.push(P.wrapR||0),S.push(P.magFilter),S.push(P.minFilter),S.push(P.anisotropy),S.push(P.internalFormat),S.push(P.format),S.push(P.type),S.push(P.generateMipmaps),S.push(P.premultiplyAlpha),S.push(P.flipY),S.push(P.unpackAlignment),S.push(P.encoding),S.join()}function Z(P,S){const H=n.get(P);if(P.isVideoTexture&&et(P),P.isRenderTargetTexture===!1&&P.version>0&&H.__version!==P.version){const re=P.image;if(re===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(re.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{pe(H,P,S);return}}t.bindTexture(3553,H.__webglTexture,33984+S)}function U(P,S){const H=n.get(P);if(P.version>0&&H.__version!==P.version){pe(H,P,S);return}t.bindTexture(35866,H.__webglTexture,33984+S)}function V(P,S){const H=n.get(P);if(P.version>0&&H.__version!==P.version){pe(H,P,S);return}t.bindTexture(32879,H.__webglTexture,33984+S)}function se(P,S){const H=n.get(P);if(P.version>0&&H.__version!==P.version){Ce(H,P,S);return}t.bindTexture(34067,H.__webglTexture,33984+S)}const ne={[hr]:10497,[Lt]:33071,[ia]:33648},ie={[pt]:9728,[fl]:9984,[dl]:9986,[ot]:9729,[Th]:9985,[vr]:9987};function $(P,S,H){if(H?(r.texParameteri(P,10242,ne[S.wrapS]),r.texParameteri(P,10243,ne[S.wrapT]),(P===32879||P===35866)&&r.texParameteri(P,32882,ne[S.wrapR]),r.texParameteri(P,10240,ie[S.magFilter]),r.texParameteri(P,10241,ie[S.minFilter])):(r.texParameteri(P,10242,33071),r.texParameteri(P,10243,33071),(P===32879||P===35866)&&r.texParameteri(P,32882,33071),(S.wrapS!==Lt||S.wrapT!==Lt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(P,10240,L(S.magFilter)),r.texParameteri(P,10241,L(S.minFilter)),S.minFilter!==pt&&S.minFilter!==ot&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const re=e.get("EXT_texture_filter_anisotropic");if(S.type===Zn&&e.has("OES_texture_float_linear")===!1||o===!1&&S.type===ls&&e.has("OES_texture_half_float_linear")===!1)return;(S.anisotropy>1||n.get(S).__currentAnisotropy)&&(r.texParameterf(P,re.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,i.getMaxAnisotropy())),n.get(S).__currentAnisotropy=S.anisotropy)}}function Ee(P,S){let H=!1;P.__webglInit===void 0&&(P.__webglInit=!0,S.addEventListener("dispose",k));const re=S.source;let le=g.get(re);le===void 0&&(le={},g.set(re,le));const de=te(S);if(de!==P.__cacheKey){le[de]===void 0&&(le[de]={texture:r.createTexture(),usedTimes:0},a.memory.textures++,H=!0),le[de].usedTimes++;const Re=le[P.__cacheKey];Re!==void 0&&(le[P.__cacheKey].usedTimes--,Re.usedTimes===0&&I(S)),P.__cacheKey=de,P.__webglTexture=le[de].texture}return H}function pe(P,S,H){let re=3553;(S.isDataArrayTexture||S.isCompressedArrayTexture)&&(re=35866),S.isData3DTexture&&(re=32879);const le=Ee(P,S),de=S.source;t.bindTexture(re,P.__webglTexture,33984+H);const Re=n.get(de);if(de.version!==Re.__version||le===!0){t.activeTexture(33984+H),r.pixelStorei(37440,S.flipY),r.pixelStorei(37441,S.premultiplyAlpha),r.pixelStorei(3317,S.unpackAlignment),r.pixelStorei(37443,0);const R=M(S)&&y(S.image)===!1;let F=_(S.image,R,!1,u);F=Ze(S,F);const me=y(F)||o,ye=s.convert(S.format,S.encoding);let _e=s.convert(S.type),Se=b(S.internalFormat,ye,_e,S.encoding,S.isVideoTexture);$(re,S,me);let Me;const He=S.mipmaps,Xe=o&&S.isVideoTexture!==!0,tt=Re.__version===void 0||le===!0,D=A(S,F,me);if(S.isDepthTexture)Se=6402,o?S.type===Zn?Se=36012:S.type===vi?Se=33190:S.type===ir?Se=35056:Se=33189:S.type===Zn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),S.format===xi&&Se===6402&&S.type!==Eh&&S.type!==vi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),S.type=vi,_e=s.convert(S.type)),S.format===fr&&Se===6402&&(Se=34041,S.type!==ir&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),S.type=ir,_e=s.convert(S.type))),tt&&(Xe?t.texStorage2D(3553,1,Se,F.width,F.height):t.texImage2D(3553,0,Se,F.width,F.height,0,ye,_e,null));else if(S.isDataTexture)if(He.length>0&&me){Xe&&tt&&t.texStorage2D(3553,D,Se,He[0].width,He[0].height);for(let Y=0,ae=He.length;Y<ae;Y++)Me=He[Y],Xe?t.texSubImage2D(3553,Y,0,0,Me.width,Me.height,ye,_e,Me.data):t.texImage2D(3553,Y,Se,Me.width,Me.height,0,ye,_e,Me.data);S.generateMipmaps=!1}else Xe?(tt&&t.texStorage2D(3553,D,Se,F.width,F.height),t.texSubImage2D(3553,0,0,0,F.width,F.height,ye,_e,F.data)):t.texImage2D(3553,0,Se,F.width,F.height,0,ye,_e,F.data);else if(S.isCompressedTexture)if(S.isCompressedArrayTexture){Xe&&tt&&t.texStorage3D(35866,D,Se,He[0].width,He[0].height,F.depth);for(let Y=0,ae=He.length;Y<ae;Y++)Me=He[Y],S.format!==$t?ye!==null?Xe?t.compressedTexSubImage3D(35866,Y,0,0,0,Me.width,Me.height,F.depth,ye,Me.data,0,0):t.compressedTexImage3D(35866,Y,Se,Me.width,Me.height,F.depth,0,Me.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Xe?t.texSubImage3D(35866,Y,0,0,0,Me.width,Me.height,F.depth,ye,_e,Me.data):t.texImage3D(35866,Y,Se,Me.width,Me.height,F.depth,0,ye,_e,Me.data)}else{Xe&&tt&&t.texStorage2D(3553,D,Se,He[0].width,He[0].height);for(let Y=0,ae=He.length;Y<ae;Y++)Me=He[Y],S.format!==$t?ye!==null?Xe?t.compressedTexSubImage2D(3553,Y,0,0,Me.width,Me.height,ye,Me.data):t.compressedTexImage2D(3553,Y,Se,Me.width,Me.height,0,Me.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Xe?t.texSubImage2D(3553,Y,0,0,Me.width,Me.height,ye,_e,Me.data):t.texImage2D(3553,Y,Se,Me.width,Me.height,0,ye,_e,Me.data)}else if(S.isDataArrayTexture)Xe?(tt&&t.texStorage3D(35866,D,Se,F.width,F.height,F.depth),t.texSubImage3D(35866,0,0,0,0,F.width,F.height,F.depth,ye,_e,F.data)):t.texImage3D(35866,0,Se,F.width,F.height,F.depth,0,ye,_e,F.data);else if(S.isData3DTexture)Xe?(tt&&t.texStorage3D(32879,D,Se,F.width,F.height,F.depth),t.texSubImage3D(32879,0,0,0,0,F.width,F.height,F.depth,ye,_e,F.data)):t.texImage3D(32879,0,Se,F.width,F.height,F.depth,0,ye,_e,F.data);else if(S.isFramebufferTexture){if(tt)if(Xe)t.texStorage2D(3553,D,Se,F.width,F.height);else{let Y=F.width,ae=F.height;for(let ve=0;ve<D;ve++)t.texImage2D(3553,ve,Se,Y,ae,0,ye,_e,null),Y>>=1,ae>>=1}}else if(He.length>0&&me){Xe&&tt&&t.texStorage2D(3553,D,Se,He[0].width,He[0].height);for(let Y=0,ae=He.length;Y<ae;Y++)Me=He[Y],Xe?t.texSubImage2D(3553,Y,0,0,ye,_e,Me):t.texImage2D(3553,Y,Se,ye,_e,Me);S.generateMipmaps=!1}else Xe?(tt&&t.texStorage2D(3553,D,Se,F.width,F.height),t.texSubImage2D(3553,0,0,0,ye,_e,F)):t.texImage2D(3553,0,Se,ye,_e,F);w(S,me)&&C(re),Re.__version=de.version,S.onUpdate&&S.onUpdate(S)}P.__version=S.version}function Ce(P,S,H){if(S.image.length!==6)return;const re=Ee(P,S),le=S.source;t.bindTexture(34067,P.__webglTexture,33984+H);const de=n.get(le);if(le.version!==de.__version||re===!0){t.activeTexture(33984+H),r.pixelStorei(37440,S.flipY),r.pixelStorei(37441,S.premultiplyAlpha),r.pixelStorei(3317,S.unpackAlignment),r.pixelStorei(37443,0);const Re=S.isCompressedTexture||S.image[0].isCompressedTexture,R=S.image[0]&&S.image[0].isDataTexture,F=[];for(let Y=0;Y<6;Y++)!Re&&!R?F[Y]=_(S.image[Y],!1,!0,c):F[Y]=R?S.image[Y].image:S.image[Y],F[Y]=Ze(S,F[Y]);const me=F[0],ye=y(me)||o,_e=s.convert(S.format,S.encoding),Se=s.convert(S.type),Me=b(S.internalFormat,_e,Se,S.encoding),He=o&&S.isVideoTexture!==!0,Xe=de.__version===void 0||re===!0;let tt=A(S,me,ye);$(34067,S,ye);let D;if(Re){He&&Xe&&t.texStorage2D(34067,tt,Me,me.width,me.height);for(let Y=0;Y<6;Y++){D=F[Y].mipmaps;for(let ae=0;ae<D.length;ae++){const ve=D[ae];S.format!==$t?_e!==null?He?t.compressedTexSubImage2D(34069+Y,ae,0,0,ve.width,ve.height,_e,ve.data):t.compressedTexImage2D(34069+Y,ae,Me,ve.width,ve.height,0,ve.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):He?t.texSubImage2D(34069+Y,ae,0,0,ve.width,ve.height,_e,Se,ve.data):t.texImage2D(34069+Y,ae,Me,ve.width,ve.height,0,_e,Se,ve.data)}}}else{D=S.mipmaps,He&&Xe&&(D.length>0&&tt++,t.texStorage2D(34067,tt,Me,F[0].width,F[0].height));for(let Y=0;Y<6;Y++)if(R){He?t.texSubImage2D(34069+Y,0,0,0,F[Y].width,F[Y].height,_e,Se,F[Y].data):t.texImage2D(34069+Y,0,Me,F[Y].width,F[Y].height,0,_e,Se,F[Y].data);for(let ae=0;ae<D.length;ae++){const Ae=D[ae].image[Y].image;He?t.texSubImage2D(34069+Y,ae+1,0,0,Ae.width,Ae.height,_e,Se,Ae.data):t.texImage2D(34069+Y,ae+1,Me,Ae.width,Ae.height,0,_e,Se,Ae.data)}}else{He?t.texSubImage2D(34069+Y,0,0,0,_e,Se,F[Y]):t.texImage2D(34069+Y,0,Me,_e,Se,F[Y]);for(let ae=0;ae<D.length;ae++){const ve=D[ae];He?t.texSubImage2D(34069+Y,ae+1,0,0,_e,Se,ve.image[Y]):t.texImage2D(34069+Y,ae+1,Me,_e,Se,ve.image[Y])}}}w(S,ye)&&C(34067),de.__version=le.version,S.onUpdate&&S.onUpdate(S)}P.__version=S.version}function fe(P,S,H,re,le){const de=s.convert(H.format,H.encoding),Re=s.convert(H.type),R=b(H.internalFormat,de,Re,H.encoding);n.get(S).__hasExternalTextures||(le===32879||le===35866?t.texImage3D(le,0,R,S.width,S.height,S.depth,0,de,Re,null):t.texImage2D(le,0,R,S.width,S.height,0,de,Re,null)),t.bindFramebuffer(36160,P),Te(S)?f.framebufferTexture2DMultisampleEXT(36160,re,le,n.get(H).__webglTexture,0,Pe(S)):(le===3553||le>=34069&&le<=34074)&&r.framebufferTexture2D(36160,re,le,n.get(H).__webglTexture,0),t.bindFramebuffer(36160,null)}function Oe(P,S,H){if(r.bindRenderbuffer(36161,P),S.depthBuffer&&!S.stencilBuffer){let re=33189;if(H||Te(S)){const le=S.depthTexture;le&&le.isDepthTexture&&(le.type===Zn?re=36012:le.type===vi&&(re=33190));const de=Pe(S);Te(S)?f.renderbufferStorageMultisampleEXT(36161,de,re,S.width,S.height):r.renderbufferStorageMultisample(36161,de,re,S.width,S.height)}else r.renderbufferStorage(36161,re,S.width,S.height);r.framebufferRenderbuffer(36160,36096,36161,P)}else if(S.depthBuffer&&S.stencilBuffer){const re=Pe(S);H&&Te(S)===!1?r.renderbufferStorageMultisample(36161,re,35056,S.width,S.height):Te(S)?f.renderbufferStorageMultisampleEXT(36161,re,35056,S.width,S.height):r.renderbufferStorage(36161,34041,S.width,S.height),r.framebufferRenderbuffer(36160,33306,36161,P)}else{const re=S.isWebGLMultipleRenderTargets===!0?S.texture:[S.texture];for(let le=0;le<re.length;le++){const de=re[le],Re=s.convert(de.format,de.encoding),R=s.convert(de.type),F=b(de.internalFormat,Re,R,de.encoding),me=Pe(S);H&&Te(S)===!1?r.renderbufferStorageMultisample(36161,me,F,S.width,S.height):Te(S)?f.renderbufferStorageMultisampleEXT(36161,me,F,S.width,S.height):r.renderbufferStorage(36161,F,S.width,S.height)}}r.bindRenderbuffer(36161,null)}function Q(P,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,P),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(S.depthTexture).__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),Z(S.depthTexture,0);const re=n.get(S.depthTexture).__webglTexture,le=Pe(S);if(S.depthTexture.format===xi)Te(S)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,re,0,le):r.framebufferTexture2D(36160,36096,3553,re,0);else if(S.depthTexture.format===fr)Te(S)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,re,0,le):r.framebufferTexture2D(36160,33306,3553,re,0);else throw new Error("Unknown depthTexture format")}function ee(P){const S=n.get(P),H=P.isWebGLCubeRenderTarget===!0;if(P.depthTexture&&!S.__autoAllocateDepthBuffer){if(H)throw new Error("target.depthTexture not supported in Cube render targets");Q(S.__webglFramebuffer,P)}else if(H){S.__webglDepthbuffer=[];for(let re=0;re<6;re++)t.bindFramebuffer(36160,S.__webglFramebuffer[re]),S.__webglDepthbuffer[re]=r.createRenderbuffer(),Oe(S.__webglDepthbuffer[re],P,!1)}else t.bindFramebuffer(36160,S.__webglFramebuffer),S.__webglDepthbuffer=r.createRenderbuffer(),Oe(S.__webglDepthbuffer,P,!1);t.bindFramebuffer(36160,null)}function oe(P,S,H){const re=n.get(P);S!==void 0&&fe(re.__webglFramebuffer,P,P.texture,36064,3553),H!==void 0&&ee(P)}function xe(P){const S=P.texture,H=n.get(P),re=n.get(S);P.addEventListener("dispose",W),P.isWebGLMultipleRenderTargets!==!0&&(re.__webglTexture===void 0&&(re.__webglTexture=r.createTexture()),re.__version=S.version,a.memory.textures++);const le=P.isWebGLCubeRenderTarget===!0,de=P.isWebGLMultipleRenderTargets===!0,Re=y(P)||o;if(le){H.__webglFramebuffer=[];for(let R=0;R<6;R++)H.__webglFramebuffer[R]=r.createFramebuffer()}else{if(H.__webglFramebuffer=r.createFramebuffer(),de)if(i.drawBuffers){const R=P.texture;for(let F=0,me=R.length;F<me;F++){const ye=n.get(R[F]);ye.__webglTexture===void 0&&(ye.__webglTexture=r.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&P.samples>0&&Te(P)===!1){const R=de?S:[S];H.__webglMultisampledFramebuffer=r.createFramebuffer(),H.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,H.__webglMultisampledFramebuffer);for(let F=0;F<R.length;F++){const me=R[F];H.__webglColorRenderbuffer[F]=r.createRenderbuffer(),r.bindRenderbuffer(36161,H.__webglColorRenderbuffer[F]);const ye=s.convert(me.format,me.encoding),_e=s.convert(me.type),Se=b(me.internalFormat,ye,_e,me.encoding,P.isXRRenderTarget===!0),Me=Pe(P);r.renderbufferStorageMultisample(36161,Me,Se,P.width,P.height),r.framebufferRenderbuffer(36160,36064+F,36161,H.__webglColorRenderbuffer[F])}r.bindRenderbuffer(36161,null),P.depthBuffer&&(H.__webglDepthRenderbuffer=r.createRenderbuffer(),Oe(H.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(36160,null)}}if(le){t.bindTexture(34067,re.__webglTexture),$(34067,S,Re);for(let R=0;R<6;R++)fe(H.__webglFramebuffer[R],P,S,36064,34069+R);w(S,Re)&&C(34067),t.unbindTexture()}else if(de){const R=P.texture;for(let F=0,me=R.length;F<me;F++){const ye=R[F],_e=n.get(ye);t.bindTexture(3553,_e.__webglTexture),$(3553,ye,Re),fe(H.__webglFramebuffer,P,ye,36064+F,3553),w(ye,Re)&&C(3553)}t.unbindTexture()}else{let R=3553;(P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(o?R=P.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(R,re.__webglTexture),$(R,S,Re),fe(H.__webglFramebuffer,P,S,36064,R),w(S,Re)&&C(R),t.unbindTexture()}P.depthBuffer&&ee(P)}function he(P){const S=y(P)||o,H=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let re=0,le=H.length;re<le;re++){const de=H[re];if(w(de,S)){const Re=P.isWebGLCubeRenderTarget?34067:3553,R=n.get(de).__webglTexture;t.bindTexture(Re,R),C(Re),t.unbindTexture()}}}function Ie(P){if(o&&P.samples>0&&Te(P)===!1){const S=P.isWebGLMultipleRenderTargets?P.texture:[P.texture],H=P.width,re=P.height;let le=16384;const de=[],Re=P.stencilBuffer?33306:36096,R=n.get(P),F=P.isWebGLMultipleRenderTargets===!0;if(F)for(let me=0;me<S.length;me++)t.bindFramebuffer(36160,R.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+me,36161,null),t.bindFramebuffer(36160,R.__webglFramebuffer),r.framebufferTexture2D(36009,36064+me,3553,null,0);t.bindFramebuffer(36008,R.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,R.__webglFramebuffer);for(let me=0;me<S.length;me++){de.push(36064+me),P.depthBuffer&&de.push(Re);const ye=R.__ignoreDepthValues!==void 0?R.__ignoreDepthValues:!1;if(ye===!1&&(P.depthBuffer&&(le|=256),P.stencilBuffer&&(le|=1024)),F&&r.framebufferRenderbuffer(36008,36064,36161,R.__webglColorRenderbuffer[me]),ye===!0&&(r.invalidateFramebuffer(36008,[Re]),r.invalidateFramebuffer(36009,[Re])),F){const _e=n.get(S[me]).__webglTexture;r.framebufferTexture2D(36009,36064,3553,_e,0)}r.blitFramebuffer(0,0,H,re,0,0,H,re,le,9728),d&&r.invalidateFramebuffer(36008,de)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),F)for(let me=0;me<S.length;me++){t.bindFramebuffer(36160,R.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+me,36161,R.__webglColorRenderbuffer[me]);const ye=n.get(S[me]).__webglTexture;t.bindFramebuffer(36160,R.__webglFramebuffer),r.framebufferTexture2D(36009,36064+me,3553,ye,0)}t.bindFramebuffer(36009,R.__webglMultisampledFramebuffer)}}function Pe(P){return Math.min(h,P.samples)}function Te(P){const S=n.get(P);return o&&P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&S.__useRenderToTexture!==!1}function et(P){const S=a.render.frame;p.get(P)!==S&&(p.set(P,S),P.update())}function Ze(P,S){const H=P.encoding,re=P.format,le=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||P.format===pl||H!==Ai&&(H===Ve?o===!1?e.has("EXT_sRGB")===!0&&re===$t?(P.format=pl,P.minFilter=ot,P.generateMipmaps=!1):S=Ih.sRGBToLinear(S):(re!==$t||le!==Si)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",H)),S}this.allocateTextureUnit=X,this.resetTextureUnits=K,this.setTexture2D=Z,this.setTexture2DArray=U,this.setTexture3D=V,this.setTextureCube=se,this.rebindTextures=oe,this.setupRenderTarget=xe,this.updateRenderTargetMipmap=he,this.updateMultisampleRenderTarget=Ie,this.setupDepthRenderbuffer=ee,this.setupFrameBufferTexture=fe,this.useMultisampledRTT=Te}function a0(r,e,t){const n=t.isWebGL2;function i(s,a=null){let o;if(s===Si)return 5121;if(s===Ig)return 32819;if(s===Dg)return 32820;if(s===Pg)return 5120;if(s===Lg)return 5122;if(s===Eh)return 5123;if(s===Rg)return 5124;if(s===vi)return 5125;if(s===Zn)return 5126;if(s===ls)return n?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===Og)return 6406;if(s===$t)return 6408;if(s===Ch)return 6409;if(s===Ng)return 6410;if(s===xi)return 6402;if(s===fr)return 34041;if(s===Fg)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===pl)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(s===kg)return 6403;if(s===zg)return 36244;if(s===Bg)return 33319;if(s===Ug)return 33320;if(s===Vg)return 36249;if(s===Ho||s===Wo||s===Xo||s===$o)if(a===Ve)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(s===Ho)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Wo)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Xo)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===$o)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Ho)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Wo)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Xo)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===$o)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===pu||s===mu||s===gu||s===_u)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===pu)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===mu)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===gu)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===_u)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Gg)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===vu||s===yu)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(s===vu)return a===Ve?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(s===yu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===xu||s===bu||s===Mu||s===wu||s===Su||s===Au||s===Tu||s===Eu||s===Cu||s===Pu||s===Lu||s===Ru||s===Iu||s===Du)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(s===xu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===bu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Mu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===wu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Su)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Au)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Tu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Eu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Cu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Pu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Lu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Ru)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Iu)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Du)return a===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Ou)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(s===Ou)return a===Ve?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===ir?n?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class o0 extends wt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class yi extends We{constructor(){super(),this.isGroup=!0,this.type="Group"}}const aS={type:"move"};class Fc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new yi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new yi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new T,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new T),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new yi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new T,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new T),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const m of e.hand.values()){const g=t.getJointPose(m,n),v=this._getHandJoint(c,m);g!==null&&(v.matrix.fromArray(g.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=g.radius),v.visible=g!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(aS)))}return o!==null&&(o.visible=i!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new yi;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class l0 extends ct{constructor(e,t,n,i,s,a,o,l,c,u){if(u=u!==void 0?u:xi,u!==xi&&u!==fr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===xi&&(n=vi),n===void 0&&u===fr&&(n=ir),super(null,i,s,a,o,l,u,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:pt,this.minFilter=l!==void 0?l:pt,this.flipY=!1,this.generateMipmaps=!1}}class oS extends zn{constructor(e,t){super();const n=this;let i=null,s=1,a=null,o="local-floor",l=null,c=null,u=null,h=null,f=null,d=null;const p=t.getContextAttributes();let m=null,g=null;const v=[],x=[],_=new Set,y=new Map,M=new wt;M.layers.enable(1),M.viewport=new Ye;const w=new wt;w.layers.enable(2),w.viewport=new Ye;const C=[M,w],b=new o0;b.layers.enable(1),b.layers.enable(2);let A=null,L=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(U){let V=v[U];return V===void 0&&(V=new Fc,v[U]=V),V.getTargetRaySpace()},this.getControllerGrip=function(U){let V=v[U];return V===void 0&&(V=new Fc,v[U]=V),V.getGripSpace()},this.getHand=function(U){let V=v[U];return V===void 0&&(V=new Fc,v[U]=V),V.getHandSpace()};function k(U){const V=x.indexOf(U.inputSource);if(V===-1)return;const se=v[V];se!==void 0&&se.dispatchEvent({type:U.type,data:U.inputSource})}function W(){i.removeEventListener("select",k),i.removeEventListener("selectstart",k),i.removeEventListener("selectend",k),i.removeEventListener("squeeze",k),i.removeEventListener("squeezestart",k),i.removeEventListener("squeezeend",k),i.removeEventListener("end",W),i.removeEventListener("inputsourceschange",O);for(let U=0;U<v.length;U++){const V=x[U];V!==null&&(x[U]=null,v[U].disconnect(V))}A=null,L=null,e.setRenderTarget(m),f=null,h=null,u=null,i=null,g=null,Z.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(U){s=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(U){o=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(U){l=U},this.getBaseLayer=function(){return h!==null?h:f},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(U){if(i=U,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",k),i.addEventListener("selectstart",k),i.addEventListener("selectend",k),i.addEventListener("squeeze",k),i.addEventListener("squeezestart",k),i.addEventListener("squeezeend",k),i.addEventListener("end",W),i.addEventListener("inputsourceschange",O),p.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const V={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,V),i.updateRenderState({baseLayer:f}),g=new Zt(f.framebufferWidth,f.framebufferHeight,{format:$t,type:Si,encoding:e.outputEncoding,stencilBuffer:p.stencil})}else{let V=null,se=null,ne=null;p.depth&&(ne=p.stencil?35056:33190,V=p.stencil?fr:xi,se=p.stencil?ir:vi);const ie={colorFormat:32856,depthFormat:ne,scaleFactor:s};u=new XRWebGLBinding(i,t),h=u.createProjectionLayer(ie),i.updateRenderState({layers:[h]}),g=new Zt(h.textureWidth,h.textureHeight,{format:$t,type:Si,depthTexture:new l0(h.textureWidth,h.textureHeight,se,void 0,void 0,void 0,void 0,void 0,void 0,V),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const $=e.properties.get(g);$.__ignoreDepthValues=h.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(1),l=null,a=await i.requestReferenceSpace(o),Z.setContext(i),Z.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function O(U){for(let V=0;V<U.removed.length;V++){const se=U.removed[V],ne=x.indexOf(se);ne>=0&&(x[ne]=null,v[ne].disconnect(se))}for(let V=0;V<U.added.length;V++){const se=U.added[V];let ne=x.indexOf(se);if(ne===-1){for(let $=0;$<v.length;$++)if($>=x.length){x.push(se),ne=$;break}else if(x[$]===null){x[$]=se,ne=$;break}if(ne===-1)break}const ie=v[ne];ie&&ie.connect(se)}}const I=new T,B=new T;function G(U,V,se){I.setFromMatrixPosition(V.matrixWorld),B.setFromMatrixPosition(se.matrixWorld);const ne=I.distanceTo(B),ie=V.projectionMatrix.elements,$=se.projectionMatrix.elements,Ee=ie[14]/(ie[10]-1),pe=ie[14]/(ie[10]+1),Ce=(ie[9]+1)/ie[5],fe=(ie[9]-1)/ie[5],Oe=(ie[8]-1)/ie[0],Q=($[8]+1)/$[0],ee=Ee*Oe,oe=Ee*Q,xe=ne/(-Oe+Q),he=xe*-Oe;V.matrixWorld.decompose(U.position,U.quaternion,U.scale),U.translateX(he),U.translateZ(xe),U.matrixWorld.compose(U.position,U.quaternion,U.scale),U.matrixWorldInverse.copy(U.matrixWorld).invert();const Ie=Ee+xe,Pe=pe+xe,Te=ee-he,et=oe+(ne-he),Ze=Ce*pe/Pe*Ie,P=fe*pe/Pe*Ie;U.projectionMatrix.makePerspective(Te,et,Ze,P,Ie,Pe)}function K(U,V){V===null?U.matrixWorld.copy(U.matrix):U.matrixWorld.multiplyMatrices(V.matrixWorld,U.matrix),U.matrixWorldInverse.copy(U.matrixWorld).invert()}this.updateCamera=function(U){if(i===null)return;b.near=w.near=M.near=U.near,b.far=w.far=M.far=U.far,(A!==b.near||L!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),A=b.near,L=b.far);const V=U.parent,se=b.cameras;K(b,V);for(let ie=0;ie<se.length;ie++)K(se[ie],V);b.matrixWorld.decompose(b.position,b.quaternion,b.scale),U.matrix.copy(b.matrix),U.matrix.decompose(U.position,U.quaternion,U.scale);const ne=U.children;for(let ie=0,$=ne.length;ie<$;ie++)ne[ie].updateMatrixWorld(!0);se.length===2?G(b,M,w):b.projectionMatrix.copy(M.projectionMatrix)},this.getCamera=function(){return b},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(U){h!==null&&(h.fixedFoveation=U),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=U)},this.getPlanes=function(){return _};let X=null;function te(U,V){if(c=V.getViewerPose(l||a),d=V,c!==null){const se=c.views;f!==null&&(e.setRenderTargetFramebuffer(g,f.framebuffer),e.setRenderTarget(g));let ne=!1;se.length!==b.cameras.length&&(b.cameras.length=0,ne=!0);for(let ie=0;ie<se.length;ie++){const $=se[ie];let Ee=null;if(f!==null)Ee=f.getViewport($);else{const Ce=u.getViewSubImage(h,$);Ee=Ce.viewport,ie===0&&(e.setRenderTargetTextures(g,Ce.colorTexture,h.ignoreDepthValues?void 0:Ce.depthStencilTexture),e.setRenderTarget(g))}let pe=C[ie];pe===void 0&&(pe=new wt,pe.layers.enable(ie),pe.viewport=new Ye,C[ie]=pe),pe.matrix.fromArray($.transform.matrix),pe.projectionMatrix.fromArray($.projectionMatrix),pe.viewport.set(Ee.x,Ee.y,Ee.width,Ee.height),ie===0&&b.matrix.copy(pe.matrix),ne===!0&&b.cameras.push(pe)}}for(let se=0;se<v.length;se++){const ne=x[se],ie=v[se];ne!==null&&ie!==void 0&&ie.update(ne,V,l||a)}if(X&&X(U,V),V.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:V.detectedPlanes});let se=null;for(const ne of _)V.detectedPlanes.has(ne)||(se===null&&(se=[]),se.push(ne));if(se!==null)for(const ne of se)_.delete(ne),y.delete(ne),n.dispatchEvent({type:"planeremoved",data:ne});for(const ne of V.detectedPlanes)if(!_.has(ne))_.add(ne),y.set(ne,V.lastChangedTime),n.dispatchEvent({type:"planeadded",data:ne});else{const ie=y.get(ne);ne.lastChangedTime>ie&&(y.set(ne,ne.lastChangedTime),n.dispatchEvent({type:"planechanged",data:ne}))}}d=null}const Z=new t0;Z.setAnimationLoop(te),this.setAnimationLoop=function(U){X=U},this.dispose=function(){}}}function lS(r,e){function t(m,g){g.color.getRGB(m.fogColor.value,Kg(r)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function n(m,g,v,x,_){g.isMeshBasicMaterial||g.isMeshLambertMaterial?i(m,g):g.isMeshToonMaterial?(i(m,g),u(m,g)):g.isMeshPhongMaterial?(i(m,g),c(m,g)):g.isMeshStandardMaterial?(i(m,g),h(m,g),g.isMeshPhysicalMaterial&&f(m,g,_)):g.isMeshMatcapMaterial?(i(m,g),d(m,g)):g.isMeshDepthMaterial?i(m,g):g.isMeshDistanceMaterial?(i(m,g),p(m,g)):g.isMeshNormalMaterial?i(m,g):g.isLineBasicMaterial?(s(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?o(m,g,v,x):g.isSpriteMaterial?l(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===jt&&(m.bumpScale.value*=-1)),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===jt&&m.normalScale.value.negate()),g.specularMap&&(m.specularMap.value=g.specularMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const v=e.get(g).envMap;if(v&&(m.envMap.value=v,m.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap){m.lightMap.value=g.lightMap;const y=r.physicallyCorrectLights!==!0?Math.PI:1;m.lightMapIntensity.value=g.lightMapIntensity*y}g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity);let x;g.map?x=g.map:g.specularMap?x=g.specularMap:g.displacementMap?x=g.displacementMap:g.normalMap?x=g.normalMap:g.bumpMap?x=g.bumpMap:g.roughnessMap?x=g.roughnessMap:g.metalnessMap?x=g.metalnessMap:g.alphaMap?x=g.alphaMap:g.emissiveMap?x=g.emissiveMap:g.clearcoatMap?x=g.clearcoatMap:g.clearcoatNormalMap?x=g.clearcoatNormalMap:g.clearcoatRoughnessMap?x=g.clearcoatRoughnessMap:g.iridescenceMap?x=g.iridescenceMap:g.iridescenceThicknessMap?x=g.iridescenceThicknessMap:g.specularIntensityMap?x=g.specularIntensityMap:g.specularColorMap?x=g.specularColorMap:g.transmissionMap?x=g.transmissionMap:g.thicknessMap?x=g.thicknessMap:g.sheenColorMap?x=g.sheenColorMap:g.sheenRoughnessMap&&(x=g.sheenRoughnessMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),m.uvTransform.value.copy(x.matrix));let _;g.aoMap?_=g.aoMap:g.lightMap&&(_=g.lightMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),m.uv2Transform.value.copy(_.matrix))}function s(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function o(m,g,v,x){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*v,m.scale.value=x*.5,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let _;g.map?_=g.map:g.alphaMap&&(_=g.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),m.uvTransform.value.copy(_.matrix))}function l(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let v;g.map?v=g.map:g.alphaMap&&(v=g.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),m.uvTransform.value.copy(v.matrix))}function c(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function h(m,g){m.roughness.value=g.roughness,m.metalness.value=g.metalness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap),e.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,v){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),m.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===jt&&m.clearcoatNormalScale.value.negate())),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap)),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=v.texture,m.transmissionSamplerSize.value.set(v.width,v.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap)}function d(m,g){g.matcap&&(m.matcap.value=g.matcap)}function p(m,g){m.referencePosition.value.copy(g.referencePosition),m.nearDistance.value=g.nearDistance,m.farDistance.value=g.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function cS(r,e,t,n){let i={},s={},a=[];const o=t.isWebGL2?r.getParameter(35375):0;function l(x,_){const y=_.program;n.uniformBlockBinding(x,y)}function c(x,_){let y=i[x.id];y===void 0&&(p(x),y=u(x),i[x.id]=y,x.addEventListener("dispose",g));const M=_.program;n.updateUBOMapping(x,M);const w=e.render.frame;s[x.id]!==w&&(f(x),s[x.id]=w)}function u(x){const _=h();x.__bindingPointIndex=_;const y=r.createBuffer(),M=x.__size,w=x.usage;return r.bindBuffer(35345,y),r.bufferData(35345,M,w),r.bindBuffer(35345,null),r.bindBufferBase(35345,_,y),y}function h(){for(let x=0;x<o;x++)if(a.indexOf(x)===-1)return a.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(x){const _=i[x.id],y=x.uniforms,M=x.__cache;r.bindBuffer(35345,_);for(let w=0,C=y.length;w<C;w++){const b=y[w];if(d(b,w,M)===!0){const A=b.value,L=b.__offset;typeof A=="number"?(b.__data[0]=A,r.bufferSubData(35345,L,b.__data)):(b.value.isMatrix3?(b.__data[0]=b.value.elements[0],b.__data[1]=b.value.elements[1],b.__data[2]=b.value.elements[2],b.__data[3]=b.value.elements[0],b.__data[4]=b.value.elements[3],b.__data[5]=b.value.elements[4],b.__data[6]=b.value.elements[5],b.__data[7]=b.value.elements[0],b.__data[8]=b.value.elements[6],b.__data[9]=b.value.elements[7],b.__data[10]=b.value.elements[8],b.__data[11]=b.value.elements[0]):A.toArray(b.__data),r.bufferSubData(35345,L,b.__data))}}r.bindBuffer(35345,null)}function d(x,_,y){const M=x.value;if(y[_]===void 0)return typeof M=="number"?y[_]=M:y[_]=M.clone(),!0;if(typeof M=="number"){if(y[_]!==M)return y[_]=M,!0}else{const w=y[_];if(w.equals(M)===!1)return w.copy(M),!0}return!1}function p(x){const _=x.uniforms;let y=0;const M=16;let w=0;for(let C=0,b=_.length;C<b;C++){const A=_[C],L=m(A);if(A.__data=new Float32Array(L.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=y,C>0){w=y%M;const k=M-w;w!==0&&k-L.boundary<0&&(y+=M-w,A.__offset=y)}y+=L.storage}return w=y%M,w>0&&(y+=M-w),x.__size=y,x.__cache={},this}function m(x){const _=x.value,y={boundary:0,storage:0};return typeof _=="number"?(y.boundary=4,y.storage=4):_.isVector2?(y.boundary=8,y.storage=8):_.isVector3||_.isColor?(y.boundary=16,y.storage=12):_.isVector4?(y.boundary=16,y.storage=16):_.isMatrix3?(y.boundary=48,y.storage=48):_.isMatrix4?(y.boundary=64,y.storage=64):_.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",_),y}function g(x){const _=x.target;_.removeEventListener("dispose",g);const y=a.indexOf(_.__bindingPointIndex);a.splice(y,1),r.deleteBuffer(i[_.id]),delete i[_.id],delete s[_.id]}function v(){for(const x in i)r.deleteBuffer(i[x]);a=[],i={},s={}}return{bind:l,update:c,dispose:v}}function uS(){const r=ca("canvas");return r.style.display="block",r}function kh(r={}){this.isWebGLRenderer=!0;const e=r.canvas!==void 0?r.canvas:uS(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,a=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,o=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,l=r.powerPreference!==void 0?r.powerPreference:"default",c=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let h=null,f=null;const d=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Ai,this.physicallyCorrectLights=!1,this.toneMapping=Cn,this.toneMappingExposure=1;const m=this;let g=!1,v=0,x=0,_=null,y=-1,M=null;const w=new Ye,C=new Ye;let b=null,A=e.width,L=e.height,k=1,W=null,O=null;const I=new Ye(0,0,A,L),B=new Ye(0,0,A,L);let G=!1;const K=new Dl;let X=!1,te=!1,Z=null;const U=new be,V=new q,se=new T,ne={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ie(){return _===null?k:1}let $=t;function Ee(E,z){for(let j=0;j<E.length;j++){const N=E[j],J=e.getContext(N,z);if(J!==null)return J}return null}try{const E={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Tl}`),e.addEventListener("webglcontextlost",Se,!1),e.addEventListener("webglcontextrestored",Me,!1),e.addEventListener("webglcontextcreationerror",He,!1),$===null){const z=["webgl2","webgl","experimental-webgl"];if(m.isWebGL1Renderer===!0&&z.shift(),$=Ee(z,E),$===null)throw Ee(z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}$.getShaderPrecisionFormat===void 0&&($.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(E){throw console.error("THREE.WebGLRenderer: "+E.message),E}let pe,Ce,fe,Oe,Q,ee,oe,xe,he,Ie,Pe,Te,et,Ze,P,S,H,re,le,de,Re,R,F,me;function ye(){pe=new Tw($),Ce=new xw($,pe,r),pe.init(Ce),R=new a0($,pe,Ce),fe=new rS($,pe,Ce),Oe=new Pw,Q=new $1,ee=new sS($,pe,fe,Q,Ce,R,Oe),oe=new Mw(m),xe=new Aw(m),he=new zx($,Ce),F=new vw($,pe,he,Ce),Ie=new Ew($,he,Oe,F),Pe=new Dw($,Ie,he,Oe),le=new Iw($,Ce,ee),S=new bw(Q),Te=new X1(m,oe,xe,pe,Ce,F,S),et=new lS(m,Q),Ze=new j1,P=new eS(pe,Ce),re=new _w(m,oe,xe,fe,Pe,u,a),H=new iS(m,Pe,Ce),me=new cS($,Oe,Ce,fe),de=new yw($,pe,Oe,Ce),Re=new Cw($,pe,Oe,Ce),Oe.programs=Te.programs,m.capabilities=Ce,m.extensions=pe,m.properties=Q,m.renderLists=Ze,m.shadowMap=H,m.state=fe,m.info=Oe}ye();const _e=new oS(m,$);this.xr=_e,this.getContext=function(){return $},this.getContextAttributes=function(){return $.getContextAttributes()},this.forceContextLoss=function(){const E=pe.get("WEBGL_lose_context");E&&E.loseContext()},this.forceContextRestore=function(){const E=pe.get("WEBGL_lose_context");E&&E.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(E){E!==void 0&&(k=E,this.setSize(A,L,!1))},this.getSize=function(E){return E.set(A,L)},this.setSize=function(E,z,j){if(_e.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=E,L=z,e.width=Math.floor(E*k),e.height=Math.floor(z*k),j!==!1&&(e.style.width=E+"px",e.style.height=z+"px"),this.setViewport(0,0,E,z)},this.getDrawingBufferSize=function(E){return E.set(A*k,L*k).floor()},this.setDrawingBufferSize=function(E,z,j){A=E,L=z,k=j,e.width=Math.floor(E*j),e.height=Math.floor(z*j),this.setViewport(0,0,E,z)},this.getCurrentViewport=function(E){return E.copy(w)},this.getViewport=function(E){return E.copy(I)},this.setViewport=function(E,z,j,N){E.isVector4?I.set(E.x,E.y,E.z,E.w):I.set(E,z,j,N),fe.viewport(w.copy(I).multiplyScalar(k).floor())},this.getScissor=function(E){return E.copy(B)},this.setScissor=function(E,z,j,N){E.isVector4?B.set(E.x,E.y,E.z,E.w):B.set(E,z,j,N),fe.scissor(C.copy(B).multiplyScalar(k).floor())},this.getScissorTest=function(){return G},this.setScissorTest=function(E){fe.setScissorTest(G=E)},this.setOpaqueSort=function(E){W=E},this.setTransparentSort=function(E){O=E},this.getClearColor=function(E){return E.copy(re.getClearColor())},this.setClearColor=function(){re.setClearColor.apply(re,arguments)},this.getClearAlpha=function(){return re.getClearAlpha()},this.setClearAlpha=function(){re.setClearAlpha.apply(re,arguments)},this.clear=function(E=!0,z=!0,j=!0){let N=0;E&&(N|=16384),z&&(N|=256),j&&(N|=1024),$.clear(N)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Se,!1),e.removeEventListener("webglcontextrestored",Me,!1),e.removeEventListener("webglcontextcreationerror",He,!1),Ze.dispose(),P.dispose(),Q.dispose(),oe.dispose(),xe.dispose(),Pe.dispose(),F.dispose(),me.dispose(),Te.dispose(),_e.dispose(),_e.removeEventListener("sessionstart",ve),_e.removeEventListener("sessionend",Ae),Z&&(Z.dispose(),Z=null),Ke.stop()};function Se(E){E.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function Me(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const E=Oe.autoReset,z=H.enabled,j=H.autoUpdate,N=H.needsUpdate,J=H.type;ye(),Oe.autoReset=E,H.enabled=z,H.autoUpdate=j,H.needsUpdate=N,H.type=J}function He(E){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",E.statusMessage)}function Xe(E){const z=E.target;z.removeEventListener("dispose",Xe),tt(z)}function tt(E){D(E),Q.remove(E)}function D(E){const z=Q.get(E).programs;z!==void 0&&(z.forEach(function(j){Te.releaseProgram(j)}),E.isShaderMaterial&&Te.releaseShaderCache(E))}this.renderBufferDirect=function(E,z,j,N,J,Le){z===null&&(z=ne);const Fe=J.isMesh&&J.matrixWorld.determinant()<0,ke=av(E,z,j,N,J);fe.setMaterial(N,Fe);let ze=j.index,Je=1;N.wireframe===!0&&(ze=Ie.getWireframeAttribute(j),Je=2);const $e=j.drawRange,qe=j.attributes.position;let vt=$e.start*Je,Qt=($e.start+$e.count)*Je;Le!==null&&(vt=Math.max(vt,Le.start*Je),Qt=Math.min(Qt,(Le.start+Le.count)*Je)),ze!==null?(vt=Math.max(vt,0),Qt=Math.min(Qt,ze.count)):qe!=null&&(vt=Math.max(vt,0),Qt=Math.min(Qt,qe.count));const Vn=Qt-vt;if(Vn<0||Vn===1/0)return;F.setup(J,N,ke,j,ze);let Di,yt=de;if(ze!==null&&(Di=he.get(ze),yt=Re,yt.setIndex(Di)),J.isMesh)N.wireframe===!0?(fe.setLineWidth(N.wireframeLinewidth*ie()),yt.setMode(1)):yt.setMode(4);else if(J.isLine){let je=N.linewidth;je===void 0&&(je=1),fe.setLineWidth(je*ie()),J.isLineSegments?yt.setMode(1):J.isLineLoop?yt.setMode(2):yt.setMode(3)}else J.isPoints?yt.setMode(0):J.isSprite&&yt.setMode(4);if(J.isInstancedMesh)yt.renderInstances(vt,Vn,J.count);else if(j.isInstancedBufferGeometry){const je=j._maxInstanceCount!==void 0?j._maxInstanceCount:1/0,Ql=Math.min(j.instanceCount,je);yt.renderInstances(vt,Vn,Ql)}else yt.render(vt,Vn)},this.compile=function(E,z){function j(N,J,Le){N.transparent===!0&&N.side===Rn?(N.side=jt,N.needsUpdate=!0,cn(N,J,Le),N.side=cr,N.needsUpdate=!0,cn(N,J,Le),N.side=Rn):cn(N,J,Le)}f=P.get(E),f.init(),p.push(f),E.traverseVisible(function(N){N.isLight&&N.layers.test(z.layers)&&(f.pushLight(N),N.castShadow&&f.pushShadow(N))}),f.setupLights(m.physicallyCorrectLights),E.traverse(function(N){const J=N.material;if(J)if(Array.isArray(J))for(let Le=0;Le<J.length;Le++){const Fe=J[Le];j(Fe,E,N)}else j(J,E,N)}),p.pop(),f=null};let Y=null;function ae(E){Y&&Y(E)}function ve(){Ke.stop()}function Ae(){Ke.start()}const Ke=new t0;Ke.setAnimationLoop(ae),typeof self<"u"&&Ke.setContext(self),this.setAnimationLoop=function(E){Y=E,_e.setAnimationLoop(E),E===null?Ke.stop():Ke.start()},_e.addEventListener("sessionstart",ve),_e.addEventListener("sessionend",Ae),this.render=function(E,z){if(z!==void 0&&z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(g===!0)return;E.matrixWorldAutoUpdate===!0&&E.updateMatrixWorld(),z.parent===null&&z.matrixWorldAutoUpdate===!0&&z.updateMatrixWorld(),_e.enabled===!0&&_e.isPresenting===!0&&(_e.cameraAutoUpdate===!0&&_e.updateCamera(z),z=_e.getCamera()),E.isScene===!0&&E.onBeforeRender(m,E,z,_),f=P.get(E,p.length),f.init(),p.push(f),U.multiplyMatrices(z.projectionMatrix,z.matrixWorldInverse),K.setFromProjectionMatrix(U),te=this.localClippingEnabled,X=S.init(this.clippingPlanes,te,z),h=Ze.get(E,d.length),h.init(),d.push(h),Et(E,z,0,m.sortObjects),h.finish(),m.sortObjects===!0&&h.sort(W,O),X===!0&&S.beginShadows();const j=f.state.shadowsArray;if(H.render(j,E,z),X===!0&&S.endShadows(),this.info.autoReset===!0&&this.info.reset(),re.render(h,E),f.setupLights(m.physicallyCorrectLights),z.isArrayCamera){const N=z.cameras;for(let J=0,Le=N.length;J<Le;J++){const Fe=N[J];It(h,E,Fe,Fe.viewport)}}else It(h,E,z);_!==null&&(ee.updateMultisampleRenderTarget(_),ee.updateRenderTargetMipmap(_)),E.isScene===!0&&E.onAfterRender(m,E,z),F.resetDefaultState(),y=-1,M=null,p.pop(),p.length>0?f=p[p.length-1]:f=null,d.pop(),d.length>0?h=d[d.length-1]:h=null};function Et(E,z,j,N){if(E.visible===!1)return;if(E.layers.test(z.layers)){if(E.isGroup)j=E.renderOrder;else if(E.isLOD)E.autoUpdate===!0&&E.update(z);else if(E.isLight)f.pushLight(E),E.castShadow&&f.pushShadow(E);else if(E.isSprite){if(!E.frustumCulled||K.intersectsSprite(E)){N&&se.setFromMatrixPosition(E.matrixWorld).applyMatrix4(U);const Fe=Pe.update(E),ke=E.material;ke.visible&&h.push(E,Fe,ke,j,se.z,null)}}else if((E.isMesh||E.isLine||E.isPoints)&&(E.isSkinnedMesh&&E.skeleton.frame!==Oe.render.frame&&(E.skeleton.update(),E.skeleton.frame=Oe.render.frame),!E.frustumCulled||K.intersectsObject(E))){N&&se.setFromMatrixPosition(E.matrixWorld).applyMatrix4(U);const Fe=Pe.update(E),ke=E.material;if(Array.isArray(ke)){const ze=Fe.groups;for(let Je=0,$e=ze.length;Je<$e;Je++){const qe=ze[Je],vt=ke[qe.materialIndex];vt&&vt.visible&&h.push(E,Fe,vt,j,se.z,qe)}}else ke.visible&&h.push(E,Fe,ke,j,se.z,null)}}const Le=E.children;for(let Fe=0,ke=Le.length;Fe<ke;Fe++)Et(Le[Fe],z,j,N)}function It(E,z,j,N){const J=E.opaque,Le=E.transmissive,Fe=E.transparent;f.setupLightsView(j),Le.length>0&&Ii(J,z,j),N&&fe.viewport(w.copy(N)),J.length>0&&at(J,z,j),Le.length>0&&at(Le,z,j),Fe.length>0&&at(Fe,z,j),fe.buffers.depth.setTest(!0),fe.buffers.depth.setMask(!0),fe.buffers.color.setMask(!0),fe.setPolygonOffset(!1)}function Ii(E,z,j){const N=Ce.isWebGL2;Z===null&&(Z=new Zt(1,1,{generateMipmaps:!0,type:pe.has("EXT_color_buffer_half_float")?ls:Si,minFilter:vr,samples:N&&s===!0?4:0})),m.getDrawingBufferSize(V),N?Z.setSize(V.x,V.y):Z.setSize(ml(V.x),ml(V.y));const J=m.getRenderTarget();m.setRenderTarget(Z),m.clear();const Le=m.toneMapping;m.toneMapping=Cn,at(E,z,j),m.toneMapping=Le,ee.updateMultisampleRenderTarget(Z),ee.updateRenderTargetMipmap(Z),m.setRenderTarget(J)}function at(E,z,j){const N=z.isScene===!0?z.overrideMaterial:null;for(let J=0,Le=E.length;J<Le;J++){const Fe=E[J],ke=Fe.object,ze=Fe.geometry,Je=N===null?Fe.material:N,$e=Fe.group;ke.layers.test(j.layers)&&Un(ke,z,j,ze,Je,$e)}}function Un(E,z,j,N,J,Le){E.onBeforeRender(m,z,j,N,J,Le),E.modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,E.matrixWorld),E.normalMatrix.getNormalMatrix(E.modelViewMatrix),J.onBeforeRender(m,z,j,N,E,Le),J.transparent===!0&&J.side===Rn?(J.side=jt,J.needsUpdate=!0,m.renderBufferDirect(j,z,N,J,E,Le),J.side=cr,J.needsUpdate=!0,m.renderBufferDirect(j,z,N,J,E,Le),J.side=Rn):m.renderBufferDirect(j,z,N,J,E,Le),E.onAfterRender(m,z,j,N,J,Le)}function cn(E,z,j){z.isScene!==!0&&(z=ne);const N=Q.get(E),J=f.state.lights,Le=f.state.shadowsArray,Fe=J.state.version,ke=Te.getParameters(E,J.state,Le,z,j),ze=Te.getProgramCacheKey(ke);let Je=N.programs;N.environment=E.isMeshStandardMaterial?z.environment:null,N.fog=z.fog,N.envMap=(E.isMeshStandardMaterial?xe:oe).get(E.envMap||N.environment),Je===void 0&&(E.addEventListener("dispose",Xe),Je=new Map,N.programs=Je);let $e=Je.get(ze);if($e!==void 0){if(N.currentProgram===$e&&N.lightsStateVersion===Fe)return Pf(E,ke),$e}else ke.uniforms=Te.getUniforms(E),E.onBuild(j,ke,m),E.onBeforeCompile(ke,m),$e=Te.acquireProgram(ke,ze),Je.set(ze,$e),N.uniforms=ke.uniforms;const qe=N.uniforms;(!E.isShaderMaterial&&!E.isRawShaderMaterial||E.clipping===!0)&&(qe.clippingPlanes=S.uniform),Pf(E,ke),N.needsLights=lv(E),N.lightsStateVersion=Fe,N.needsLights&&(qe.ambientLightColor.value=J.state.ambient,qe.lightProbe.value=J.state.probe,qe.directionalLights.value=J.state.directional,qe.directionalLightShadows.value=J.state.directionalShadow,qe.spotLights.value=J.state.spot,qe.spotLightShadows.value=J.state.spotShadow,qe.rectAreaLights.value=J.state.rectArea,qe.ltc_1.value=J.state.rectAreaLTC1,qe.ltc_2.value=J.state.rectAreaLTC2,qe.pointLights.value=J.state.point,qe.pointLightShadows.value=J.state.pointShadow,qe.hemisphereLights.value=J.state.hemi,qe.directionalShadowMap.value=J.state.directionalShadowMap,qe.directionalShadowMatrix.value=J.state.directionalShadowMatrix,qe.spotShadowMap.value=J.state.spotShadowMap,qe.spotLightMatrix.value=J.state.spotLightMatrix,qe.spotLightMap.value=J.state.spotLightMap,qe.pointShadowMap.value=J.state.pointShadowMap,qe.pointShadowMatrix.value=J.state.pointShadowMatrix);const vt=$e.getUniforms(),Qt=Zo.seqWithValue(vt.seq,qe);return N.currentProgram=$e,N.uniformsList=Qt,$e}function Pf(E,z){const j=Q.get(E);j.outputEncoding=z.outputEncoding,j.instancing=z.instancing,j.skinning=z.skinning,j.morphTargets=z.morphTargets,j.morphNormals=z.morphNormals,j.morphColors=z.morphColors,j.morphTargetsCount=z.morphTargetsCount,j.numClippingPlanes=z.numClippingPlanes,j.numIntersection=z.numClipIntersection,j.vertexAlphas=z.vertexAlphas,j.vertexTangents=z.vertexTangents,j.toneMapping=z.toneMapping}function av(E,z,j,N,J){z.isScene!==!0&&(z=ne),ee.resetTextureUnits();const Le=z.fog,Fe=N.isMeshStandardMaterial?z.environment:null,ke=_===null?m.outputEncoding:_.isXRRenderTarget===!0?_.texture.encoding:Ai,ze=(N.isMeshStandardMaterial?xe:oe).get(N.envMap||Fe),Je=N.vertexColors===!0&&!!j.attributes.color&&j.attributes.color.itemSize===4,$e=!!N.normalMap&&!!j.attributes.tangent,qe=!!j.morphAttributes.position,vt=!!j.morphAttributes.normal,Qt=!!j.morphAttributes.color,Vn=N.toneMapped?m.toneMapping:Cn,Di=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,yt=Di!==void 0?Di.length:0,je=Q.get(N),Ql=f.state.lights;if(X===!0&&(te===!0||E!==M)){const en=E===M&&N.id===y;S.setState(N,E,en)}let Ct=!1;N.version===je.__version?(je.needsLights&&je.lightsStateVersion!==Ql.state.version||je.outputEncoding!==ke||J.isInstancedMesh&&je.instancing===!1||!J.isInstancedMesh&&je.instancing===!0||J.isSkinnedMesh&&je.skinning===!1||!J.isSkinnedMesh&&je.skinning===!0||je.envMap!==ze||N.fog===!0&&je.fog!==Le||je.numClippingPlanes!==void 0&&(je.numClippingPlanes!==S.numPlanes||je.numIntersection!==S.numIntersection)||je.vertexAlphas!==Je||je.vertexTangents!==$e||je.morphTargets!==qe||je.morphNormals!==vt||je.morphColors!==Qt||je.toneMapping!==Vn||Ce.isWebGL2===!0&&je.morphTargetsCount!==yt)&&(Ct=!0):(Ct=!0,je.__version=N.version);let Oi=je.currentProgram;Ct===!0&&(Oi=cn(N,z,J));let Lf=!1,Is=!1,ec=!1;const Bt=Oi.getUniforms(),Fi=je.uniforms;if(fe.useProgram(Oi.program)&&(Lf=!0,Is=!0,ec=!0),N.id!==y&&(y=N.id,Is=!0),Lf||M!==E){if(Bt.setValue($,"projectionMatrix",E.projectionMatrix),Ce.logarithmicDepthBuffer&&Bt.setValue($,"logDepthBufFC",2/(Math.log(E.far+1)/Math.LN2)),M!==E&&(M=E,Is=!0,ec=!0),N.isShaderMaterial||N.isMeshPhongMaterial||N.isMeshToonMaterial||N.isMeshStandardMaterial||N.envMap){const en=Bt.map.cameraPosition;en!==void 0&&en.setValue($,se.setFromMatrixPosition(E.matrixWorld))}(N.isMeshPhongMaterial||N.isMeshToonMaterial||N.isMeshLambertMaterial||N.isMeshBasicMaterial||N.isMeshStandardMaterial||N.isShaderMaterial)&&Bt.setValue($,"isOrthographic",E.isOrthographicCamera===!0),(N.isMeshPhongMaterial||N.isMeshToonMaterial||N.isMeshLambertMaterial||N.isMeshBasicMaterial||N.isMeshStandardMaterial||N.isShaderMaterial||N.isShadowMaterial||J.isSkinnedMesh)&&Bt.setValue($,"viewMatrix",E.matrixWorldInverse)}if(J.isSkinnedMesh){Bt.setOptional($,J,"bindMatrix"),Bt.setOptional($,J,"bindMatrixInverse");const en=J.skeleton;en&&(Ce.floatVertexTextures?(en.boneTexture===null&&en.computeBoneTexture(),Bt.setValue($,"boneTexture",en.boneTexture,ee),Bt.setValue($,"boneTextureSize",en.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const tc=j.morphAttributes;if((tc.position!==void 0||tc.normal!==void 0||tc.color!==void 0&&Ce.isWebGL2===!0)&&le.update(J,j,N,Oi),(Is||je.receiveShadow!==J.receiveShadow)&&(je.receiveShadow=J.receiveShadow,Bt.setValue($,"receiveShadow",J.receiveShadow)),N.isMeshGouraudMaterial&&N.envMap!==null&&(Fi.envMap.value=ze,Fi.flipEnvMap.value=ze.isCubeTexture&&ze.isRenderTargetTexture===!1?-1:1),Is&&(Bt.setValue($,"toneMappingExposure",m.toneMappingExposure),je.needsLights&&ov(Fi,ec),Le&&N.fog===!0&&et.refreshFogUniforms(Fi,Le),et.refreshMaterialUniforms(Fi,N,k,L,Z),Zo.upload($,je.uniformsList,Fi,ee)),N.isShaderMaterial&&N.uniformsNeedUpdate===!0&&(Zo.upload($,je.uniformsList,Fi,ee),N.uniformsNeedUpdate=!1),N.isSpriteMaterial&&Bt.setValue($,"center",J.center),Bt.setValue($,"modelViewMatrix",J.modelViewMatrix),Bt.setValue($,"normalMatrix",J.normalMatrix),Bt.setValue($,"modelMatrix",J.matrixWorld),N.isShaderMaterial||N.isRawShaderMaterial){const en=N.uniformsGroups;for(let nc=0,cv=en.length;nc<cv;nc++)if(Ce.isWebGL2){const Rf=en[nc];me.update(Rf,Oi),me.bind(Rf,Oi)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Oi}function ov(E,z){E.ambientLightColor.needsUpdate=z,E.lightProbe.needsUpdate=z,E.directionalLights.needsUpdate=z,E.directionalLightShadows.needsUpdate=z,E.pointLights.needsUpdate=z,E.pointLightShadows.needsUpdate=z,E.spotLights.needsUpdate=z,E.spotLightShadows.needsUpdate=z,E.rectAreaLights.needsUpdate=z,E.hemisphereLights.needsUpdate=z}function lv(E){return E.isMeshLambertMaterial||E.isMeshToonMaterial||E.isMeshPhongMaterial||E.isMeshStandardMaterial||E.isShadowMaterial||E.isShaderMaterial&&E.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return _},this.setRenderTargetTextures=function(E,z,j){Q.get(E.texture).__webglTexture=z,Q.get(E.depthTexture).__webglTexture=j;const N=Q.get(E);N.__hasExternalTextures=!0,N.__hasExternalTextures&&(N.__autoAllocateDepthBuffer=j===void 0,N.__autoAllocateDepthBuffer||pe.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),N.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(E,z){const j=Q.get(E);j.__webglFramebuffer=z,j.__useDefaultFramebuffer=z===void 0},this.setRenderTarget=function(E,z=0,j=0){_=E,v=z,x=j;let N=!0,J=null,Le=!1,Fe=!1;if(E){const ze=Q.get(E);ze.__useDefaultFramebuffer!==void 0?(fe.bindFramebuffer(36160,null),N=!1):ze.__webglFramebuffer===void 0?ee.setupRenderTarget(E):ze.__hasExternalTextures&&ee.rebindTextures(E,Q.get(E.texture).__webglTexture,Q.get(E.depthTexture).__webglTexture);const Je=E.texture;(Je.isData3DTexture||Je.isDataArrayTexture||Je.isCompressedArrayTexture)&&(Fe=!0);const $e=Q.get(E).__webglFramebuffer;E.isWebGLCubeRenderTarget?(J=$e[z],Le=!0):Ce.isWebGL2&&E.samples>0&&ee.useMultisampledRTT(E)===!1?J=Q.get(E).__webglMultisampledFramebuffer:J=$e,w.copy(E.viewport),C.copy(E.scissor),b=E.scissorTest}else w.copy(I).multiplyScalar(k).floor(),C.copy(B).multiplyScalar(k).floor(),b=G;if(fe.bindFramebuffer(36160,J)&&Ce.drawBuffers&&N&&fe.drawBuffers(E,J),fe.viewport(w),fe.scissor(C),fe.setScissorTest(b),Le){const ze=Q.get(E.texture);$.framebufferTexture2D(36160,36064,34069+z,ze.__webglTexture,j)}else if(Fe){const ze=Q.get(E.texture),Je=z||0;$.framebufferTextureLayer(36160,36064,ze.__webglTexture,j||0,Je)}y=-1},this.readRenderTargetPixels=function(E,z,j,N,J,Le,Fe){if(!(E&&E.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ke=Q.get(E).__webglFramebuffer;if(E.isWebGLCubeRenderTarget&&Fe!==void 0&&(ke=ke[Fe]),ke){fe.bindFramebuffer(36160,ke);try{const ze=E.texture,Je=ze.format,$e=ze.type;if(Je!==$t&&R.convert(Je)!==$.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const qe=$e===ls&&(pe.has("EXT_color_buffer_half_float")||Ce.isWebGL2&&pe.has("EXT_color_buffer_float"));if($e!==Si&&R.convert($e)!==$.getParameter(35738)&&!($e===Zn&&(Ce.isWebGL2||pe.has("OES_texture_float")||pe.has("WEBGL_color_buffer_float")))&&!qe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}z>=0&&z<=E.width-N&&j>=0&&j<=E.height-J&&$.readPixels(z,j,N,J,R.convert(Je),R.convert($e),Le)}finally{const ze=_!==null?Q.get(_).__webglFramebuffer:null;fe.bindFramebuffer(36160,ze)}}},this.copyFramebufferToTexture=function(E,z,j=0){const N=Math.pow(2,-j),J=Math.floor(z.image.width*N),Le=Math.floor(z.image.height*N);ee.setTexture2D(z,0),$.copyTexSubImage2D(3553,j,0,0,E.x,E.y,J,Le),fe.unbindTexture()},this.copyTextureToTexture=function(E,z,j,N=0){const J=z.image.width,Le=z.image.height,Fe=R.convert(j.format),ke=R.convert(j.type);ee.setTexture2D(j,0),$.pixelStorei(37440,j.flipY),$.pixelStorei(37441,j.premultiplyAlpha),$.pixelStorei(3317,j.unpackAlignment),z.isDataTexture?$.texSubImage2D(3553,N,E.x,E.y,J,Le,Fe,ke,z.image.data):z.isCompressedTexture?$.compressedTexSubImage2D(3553,N,E.x,E.y,z.mipmaps[0].width,z.mipmaps[0].height,Fe,z.mipmaps[0].data):$.texSubImage2D(3553,N,E.x,E.y,Fe,ke,z.image),N===0&&j.generateMipmaps&&$.generateMipmap(3553),fe.unbindTexture()},this.copyTextureToTexture3D=function(E,z,j,N,J=0){if(m.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Le=E.max.x-E.min.x+1,Fe=E.max.y-E.min.y+1,ke=E.max.z-E.min.z+1,ze=R.convert(N.format),Je=R.convert(N.type);let $e;if(N.isData3DTexture)ee.setTexture3D(N,0),$e=32879;else if(N.isDataArrayTexture)ee.setTexture2DArray(N,0),$e=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}$.pixelStorei(37440,N.flipY),$.pixelStorei(37441,N.premultiplyAlpha),$.pixelStorei(3317,N.unpackAlignment);const qe=$.getParameter(3314),vt=$.getParameter(32878),Qt=$.getParameter(3316),Vn=$.getParameter(3315),Di=$.getParameter(32877),yt=j.isCompressedTexture?j.mipmaps[0]:j.image;$.pixelStorei(3314,yt.width),$.pixelStorei(32878,yt.height),$.pixelStorei(3316,E.min.x),$.pixelStorei(3315,E.min.y),$.pixelStorei(32877,E.min.z),j.isDataTexture||j.isData3DTexture?$.texSubImage3D($e,J,z.x,z.y,z.z,Le,Fe,ke,ze,Je,yt.data):j.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),$.compressedTexSubImage3D($e,J,z.x,z.y,z.z,Le,Fe,ke,ze,yt.data)):$.texSubImage3D($e,J,z.x,z.y,z.z,Le,Fe,ke,ze,Je,yt),$.pixelStorei(3314,qe),$.pixelStorei(32878,vt),$.pixelStorei(3316,Qt),$.pixelStorei(3315,Vn),$.pixelStorei(32877,Di),J===0&&N.generateMipmaps&&$.generateMipmap($e),fe.unbindTexture()},this.initTexture=function(E){E.isCubeTexture?ee.setTextureCube(E,0):E.isData3DTexture?ee.setTexture3D(E,0):E.isDataArrayTexture||E.isCompressedArrayTexture?ee.setTexture2DArray(E,0):ee.setTexture2D(E,0),fe.unbindTexture()},this.resetState=function(){v=0,x=0,_=null,fe.reset(),F.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class c0 extends kh{}c0.prototype.isWebGL1Renderer=!0;class Fl{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new ce(e),this.density=t}clone(){return new Fl(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Nl{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new ce(e),this.near=t,this.far=n}clone(){return new Nl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class zh extends We{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class kl{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=oa,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=an()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=an()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=an()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ut=new T;class dr{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.applyMatrix4(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.applyNormalMatrix(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ut.fromBufferAttribute(this,t),Ut.transformDirection(e),this.setXYZ(t,Ut.x,Ut.y,Ut.z);return this}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Jn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Jn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Jn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Jn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),n=it(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),n=it(n,this.array),i=it(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),n=it(n,this.array),i=it(i,this.array),s=it(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new nt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new dr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Bh extends kt{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ce(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Gr;const ks=new T,Hr=new T,Wr=new T,Xr=new q,zs=new q,u0=new be,mo=new T,Bs=new T,go=new T,Vd=new q,Nc=new q,Gd=new q;class h0 extends We{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Gr===void 0){Gr=new De;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new kl(t,5);Gr.setIndex([0,1,2,0,2,3]),Gr.setAttribute("position",new dr(n,3,0,!1)),Gr.setAttribute("uv",new dr(n,2,3,!1))}this.geometry=Gr,this.material=e!==void 0?e:new Bh,this.center=new q(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Hr.setFromMatrixScale(this.matrixWorld),u0.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Wr.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Hr.multiplyScalar(-Wr.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const a=this.center;_o(mo.set(-.5,-.5,0),Wr,a,Hr,i,s),_o(Bs.set(.5,-.5,0),Wr,a,Hr,i,s),_o(go.set(.5,.5,0),Wr,a,Hr,i,s),Vd.set(0,0),Nc.set(1,0),Gd.set(1,1);let o=e.ray.intersectTriangle(mo,Bs,go,!1,ks);if(o===null&&(_o(Bs.set(-.5,.5,0),Wr,a,Hr,i,s),Nc.set(0,1),o=e.ray.intersectTriangle(mo,go,Bs,!1,ks),o===null))return;const l=e.ray.origin.distanceTo(ks);l<e.near||l>e.far||t.push({distance:l,point:ks.clone(),uv:pn.getUV(ks,mo,Bs,go,Vd,Nc,Gd,new q),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function _o(r,e,t,n,i,s){Xr.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(zs.x=s*Xr.x-i*Xr.y,zs.y=i*Xr.x+s*Xr.y):zs.copy(Xr),r.copy(e),r.x+=zs.x,r.y+=zs.y,r.applyMatrix4(u0)}const vo=new T,Hd=new T;class f0 extends We{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){vo.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(vo);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){vo.setFromMatrixPosition(e.matrixWorld),Hd.setFromMatrixPosition(this.matrixWorld);const n=vo.distanceTo(Hd)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let a=t[i].distance;if(t[i].object.visible&&(a-=a*t[i].hysteresis),n>=a)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance,hysteresis:a.hysteresis})}return t}}const Wd=new T,Xd=new Ye,$d=new Ye,hS=new T,qd=new be;class Uh extends St{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new be,this.bindMatrixInverse=new be}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ye,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Xd.fromBufferAttribute(i.attributes.skinIndex,e),$d.fromBufferAttribute(i.attributes.skinWeight,e),Wd.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const a=$d.getComponent(s);if(a!==0){const o=Xd.getComponent(s);qd.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(hS.copy(Wd).applyMatrix4(qd),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class ua extends We{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ar extends ct{constructor(e=null,t=1,n=1,i,s,a,o,l,c=pt,u=pt,h,f){super(null,a,o,l,c,u,i,s,h,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const jd=new be,fS=new be;class Ca{constructor(e=[],t=[]){this.uuid=an(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new be)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new be;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,a=e.length;s<a;s++){const o=e[s]?e[s].matrixWorld:fS;jd.multiplyMatrices(o,t[s]),jd.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Ca(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Yg(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ar(t,e,e,$t,Zn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let a=t[s];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),a=new ua),this.bones.push(a),this.boneInverses.push(new be().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const a=t[i];e.bones.push(a.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}}class hs extends nt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Yd=new be,Zd=new be,yo=[],dS=new be,Us=new St;class d0 extends St{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new hs(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1;for(let i=0;i<n;i++)this.setMatrixAt(i,dS)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Us.geometry=this.geometry,Us.material=this.material,Us.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,Yd),Zd.multiplyMatrices(n,Yd),Us.matrixWorld=Zd,Us.raycast(e,yo);for(let a=0,o=yo.length;a<o;a++){const l=yo[a];l.instanceId=s,l.object=this,t.push(l)}yo.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new hs(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class zt extends kt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ce(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Jd=new T,Kd=new T,Qd=new be,kc=new Aa,xo=new xr;class ii extends We{constructor(e=new De,t=new zt){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Jd.fromBufferAttribute(t,i-1),Kd.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Jd.distanceTo(Kd);e.setAttribute("lineDistance",new ge(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),xo.copy(n.boundingSphere),xo.applyMatrix4(i),xo.radius+=s,e.ray.intersectsSphere(xo)===!1)return;Qd.copy(i).invert(),kc.copy(e.ray).applyMatrix4(Qd);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new T,u=new T,h=new T,f=new T,d=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,a.start),x=Math.min(p.count,a.start+a.count);for(let _=v,y=x-1;_<y;_+=d){const M=p.getX(_),w=p.getX(_+1);if(c.fromBufferAttribute(g,M),u.fromBufferAttribute(g,w),kc.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const b=e.ray.origin.distanceTo(f);b<e.near||b>e.far||t.push({distance:b,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,a.start),x=Math.min(g.count,a.start+a.count);for(let _=v,y=x-1;_<y;_+=d){if(c.fromBufferAttribute(g,_),u.fromBufferAttribute(g,_+1),kc.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const w=e.ray.origin.distanceTo(f);w<e.near||w>e.far||t.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}const ep=new T,tp=new T;class Bn extends ii{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)ep.fromBufferAttribute(t,i),tp.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+ep.distanceTo(tp);e.setAttribute("lineDistance",new ge(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class p0 extends ii{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Vh extends kt{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ce(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const np=new be,Bu=new Aa,bo=new xr,Mo=new T;class Gh extends We{constructor(e=new De,t=new Vh){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),bo.copy(n.boundingSphere),bo.applyMatrix4(i),bo.radius+=s,e.ray.intersectsSphere(bo)===!1)return;np.copy(i).invert(),Bu.copy(e.ray).applyMatrix4(np);const o=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=n.index,h=n.attributes.position;if(c!==null){const f=Math.max(0,a.start),d=Math.min(c.count,a.start+a.count);for(let p=f,m=d;p<m;p++){const g=c.getX(p);Mo.fromBufferAttribute(h,g),ip(Mo,g,l,i,e,t,this)}}else{const f=Math.max(0,a.start),d=Math.min(h.count,a.start+a.count);for(let p=f,m=d;p<m;p++)Mo.fromBufferAttribute(h,p),ip(Mo,p,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,a=i.length;s<a;s++){const o=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=s}}}}}function ip(r,e,t,n,i,s,a){const o=Bu.distanceSqToPoint(r);if(o<t){const l=new T;Bu.closestPointToPoint(r,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}class pS extends ct{constructor(e,t,n,i,s,a,o,l,c){super(e,t,n,i,s,a,o,l,c),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:ot,this.magFilter=s!==void 0?s:ot,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class mS extends ct{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=pt,this.minFilter=pt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Hh extends ct{constructor(e,t,n,i,s,a,o,l,c,u,h,f){super(null,a,o,l,c,u,i,s,h,f),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class gS extends Hh{constructor(e,t,n,i,s,a){super(e,t,n,s,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Lt}}class _S extends ct{constructor(e,t,n,i,s,a,o,l,c){super(e,t,n,i,s,a,o,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class vn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let a;t?a=t:a=e*n[s-1];let o=0,l=s-1,c;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),c=n[i]-a,c<0)o=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===a)return i/(s-1);const u=n[i],f=n[i+1]-u,d=(a-u)/f;return(i+d)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const a=this.getPoint(i),o=this.getPoint(s),l=t||(a.isVector2?new q:new T);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new T,i=[],s=[],a=[],o=new T,l=new be;for(let d=0;d<=e;d++){const p=d/e;i[d]=this.getTangentAt(p,new T)}s[0]=new T,a[0]=new T;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],o),a[0].crossVectors(i[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),a[d]=a[d-1].clone(),o.crossVectors(i[d-1],i[d]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(mt(i[d-1].dot(i[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(o,p))}a[d].crossVectors(i[d],s[d])}if(t===!0){let d=Math.acos(mt(s[0].dot(s[e]),-1,1));d/=e,i[0].dot(o.crossVectors(s[0],s[e]))>0&&(d=-d);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(i[p],d*p)),a[p].crossVectors(i[p],s[p])}return{tangents:i,normals:s,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class zl extends vn{constructor(e=0,t=0,n=1,i=1,s=0,a=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t){const n=t||new q,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const a=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(a?s=0:s=i),this.aClockwise===!0&&!a&&(s===i?s=-i:s=s-i);const o=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class m0 extends zl{constructor(e,t,n,i,s,a){super(e,t,n,n,i,s,a),this.isArcCurve=!0,this.type="ArcCurve"}}function Wh(){let r=0,e=0,t=0,n=0;function i(s,a,o,l){r=s,e=o,t=-3*s+3*a-2*o-l,n=2*s-2*a+o+l}return{initCatmullRom:function(s,a,o,l,c){i(a,o,c*(o-s),c*(l-a))},initNonuniformCatmullRom:function(s,a,o,l,c,u,h){let f=(a-s)/c-(o-s)/(c+u)+(o-a)/u,d=(o-a)/u-(l-a)/(u+h)+(l-o)/h;f*=u,d*=u,i(a,o,f,d)},calc:function(s){const a=s*s,o=a*s;return r+e*s+t*a+n*o}}}const wo=new T,zc=new Wh,Bc=new Wh,Uc=new Wh;class g0 extends vn{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new T){const n=t,i=this.points,s=i.length,a=(s-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:l===0&&o===s-1&&(o=s-2,l=1);let c,u;this.closed||o>0?c=i[(o-1)%s]:(wo.subVectors(i[0],i[1]).add(i[0]),c=wo);const h=i[o%s],f=i[(o+1)%s];if(this.closed||o+2<s?u=i[(o+2)%s]:(wo.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=wo),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),m=Math.pow(h.distanceToSquared(f),d),g=Math.pow(f.distanceToSquared(u),d);m<1e-4&&(m=1),p<1e-4&&(p=m),g<1e-4&&(g=m),zc.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,m,g),Bc.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,m,g),Uc.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,m,g)}else this.curveType==="catmullrom"&&(zc.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),Bc.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),Uc.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(zc.calc(l),Bc.calc(l),Uc.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new T().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function rp(r,e,t,n,i){const s=(n-e)*.5,a=(i-t)*.5,o=r*r,l=r*o;return(2*t-2*n+s+a)*l+(-3*t+3*n-2*s-a)*o+s*r+t}function vS(r,e){const t=1-r;return t*t*e}function yS(r,e){return 2*(1-r)*r*e}function xS(r,e){return r*r*e}function qs(r,e,t,n){return vS(r,e)+yS(r,t)+xS(r,n)}function bS(r,e){const t=1-r;return t*t*t*e}function MS(r,e){const t=1-r;return 3*t*t*r*e}function wS(r,e){return 3*(1-r)*r*r*e}function SS(r,e){return r*r*r*e}function js(r,e,t,n,i){return bS(r,e)+MS(r,t)+wS(r,n)+SS(r,i)}class Xh extends vn{constructor(e=new q,t=new q,n=new q,i=new q){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new q){const n=t,i=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(js(e,i.x,s.x,a.x,o.x),js(e,i.y,s.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class _0 extends vn{constructor(e=new T,t=new T,n=new T,i=new T){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new T){const n=t,i=this.v0,s=this.v1,a=this.v2,o=this.v3;return n.set(js(e,i.x,s.x,a.x,o.x),js(e,i.y,s.y,a.y,o.y),js(e,i.z,s.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Bl extends vn{constructor(e=new q,t=new q){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new q){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new q;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class v0 extends vn{constructor(e=new T,t=new T){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new T){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $h extends vn{constructor(e=new q,t=new q,n=new q){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new q){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(qs(e,i.x,s.x,a.x),qs(e,i.y,s.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class qh extends vn{constructor(e=new T,t=new T,n=new T){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new T){const n=t,i=this.v0,s=this.v1,a=this.v2;return n.set(qs(e,i.x,s.x,a.x),qs(e,i.y,s.y,a.y),qs(e,i.z,s.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class jh extends vn{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new q){const n=t,i=this.points,s=(i.length-1)*e,a=Math.floor(s),o=s-a,l=i[a===0?a:a-1],c=i[a],u=i[a>i.length-2?i.length-1:a+1],h=i[a>i.length-3?i.length-1:a+2];return n.set(rp(o,l.x,c.x,u.x,h.x),rp(o,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new q().fromArray(i))}return this}}var Yh=Object.freeze({__proto__:null,ArcCurve:m0,CatmullRomCurve3:g0,CubicBezierCurve:Xh,CubicBezierCurve3:_0,EllipseCurve:zl,LineCurve:Bl,LineCurve3:v0,QuadraticBezierCurve:$h,QuadraticBezierCurve3:qh,SplineCurve:jh});class y0 extends vn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Bl(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const a=i[s]-n,o=this.curves[s],l=o.getLength(),c=l===0?0:1-a/l;return o.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const a=s[i],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Yh[i.type]().fromJSON(i))}return this}}class ha extends y0{constructor(e){super(),this.type="Path",this.currentPoint=new q,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Bl(this.currentPoint.clone(),new q(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new $h(this.currentPoint.clone(),new q(e,t),new q(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,a){const o=new Xh(this.currentPoint.clone(),new q(e,t),new q(n,i),new q(s,a));return this.curves.push(o),this.currentPoint.set(s,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new jh(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,n,i,s,a),this}absarc(e,t,n,i,s,a){return this.absellipse(e,t,n,n,i,s,a),this}ellipse(e,t,n,i,s,a,o,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,n,i,s,a,o,l),this}absellipse(e,t,n,i,s,a,o,l){const c=new zl(e,t,n,i,s,a,o,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class bs extends De{constructor(e=[new q(0,-.5),new q(.5,0),new q(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=mt(i,0,Math.PI*2);const s=[],a=[],o=[],l=[],c=[],u=1/t,h=new T,f=new q,d=new T,p=new T,m=new T;let g=0,v=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:g=e[x+1].x-e[x].x,v=e[x+1].y-e[x].y,d.x=v*1,d.y=-g,d.z=v*0,m.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(m.x,m.y,m.z);break;default:g=e[x+1].x-e[x].x,v=e[x+1].y-e[x].y,d.x=v*1,d.y=-g,d.z=v*0,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),l.push(d.x,d.y,d.z),m.copy(p)}for(let x=0;x<=t;x++){const _=n+x*u*i,y=Math.sin(_),M=Math.cos(_);for(let w=0;w<=e.length-1;w++){h.x=e[w].x*y,h.y=e[w].y,h.z=e[w].x*M,a.push(h.x,h.y,h.z),f.x=x/t,f.y=w/(e.length-1),o.push(f.x,f.y);const C=l[3*w+0]*y,b=l[3*w+1],A=l[3*w+0]*M;c.push(C,b,A)}}for(let x=0;x<t;x++)for(let _=0;_<e.length-1;_++){const y=_+x*e.length,M=y,w=y+e.length,C=y+e.length+1,b=y+1;s.push(M,w,b),s.push(C,b,w)}this.setIndex(s),this.setAttribute("position",new ge(a,3)),this.setAttribute("uv",new ge(o,2)),this.setAttribute("normal",new ge(c,3))}static fromJSON(e){return new bs(e.points,e.segments,e.phiStart,e.phiLength)}}class Pa extends bs{constructor(e=1,t=1,n=4,i=8){const s=new ha;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Pa(e.radius,e.length,e.capSegments,e.radialSegments)}}class La extends De{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],a=[],o=[],l=[],c=new T,u=new q;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=n+h/t*i;c.x=e*Math.cos(d),c.y=e*Math.sin(d),a.push(c.x,c.y,c.z),o.push(0,0,1),u.x=(a[f]/e+1)/2,u.y=(a[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=t;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new ge(a,3)),this.setAttribute("normal",new ge(o,3)),this.setAttribute("uv",new ge(l,2))}static fromJSON(e){return new La(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Mr extends De{constructor(e=1,t=1,n=1,i=8,s=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:a,thetaStart:o,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const u=[],h=[],f=[],d=[];let p=0;const m=[],g=n/2;let v=0;x(),a===!1&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(u),this.setAttribute("position",new ge(h,3)),this.setAttribute("normal",new ge(f,3)),this.setAttribute("uv",new ge(d,2));function x(){const y=new T,M=new T;let w=0;const C=(t-e)/n;for(let b=0;b<=s;b++){const A=[],L=b/s,k=L*(t-e)+e;for(let W=0;W<=i;W++){const O=W/i,I=O*l+o,B=Math.sin(I),G=Math.cos(I);M.x=k*B,M.y=-L*n+g,M.z=k*G,h.push(M.x,M.y,M.z),y.set(B,C,G).normalize(),f.push(y.x,y.y,y.z),d.push(O,1-L),A.push(p++)}m.push(A)}for(let b=0;b<i;b++)for(let A=0;A<s;A++){const L=m[A][b],k=m[A+1][b],W=m[A+1][b+1],O=m[A][b+1];u.push(L,k,O),u.push(k,W,O),w+=6}c.addGroup(v,w,0),v+=w}function _(y){const M=p,w=new q,C=new T;let b=0;const A=y===!0?e:t,L=y===!0?1:-1;for(let W=1;W<=i;W++)h.push(0,g*L,0),f.push(0,L,0),d.push(.5,.5),p++;const k=p;for(let W=0;W<=i;W++){const I=W/i*l+o,B=Math.cos(I),G=Math.sin(I);C.x=A*G,C.y=g*L,C.z=A*B,h.push(C.x,C.y,C.z),f.push(0,L,0),w.x=B*.5+.5,w.y=G*.5*L+.5,d.push(w.x,w.y),p++}for(let W=0;W<i;W++){const O=M+W,I=k+W;y===!0?u.push(I,I+1,O):u.push(I+1,I,O),b+=3}c.addGroup(v,b,y===!0?1:2),v+=b}}static fromJSON(e){return new Mr(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ra extends Mr{constructor(e=1,t=1,n=8,i=1,s=!1,a=0,o=Math.PI*2){super(0,e,t,n,i,s,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:a,thetaLength:o}}static fromJSON(e){return new Ra(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class oi extends De{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],a=[];o(i),c(n),u(),this.setAttribute("position",new ge(s,3)),this.setAttribute("normal",new ge(s.slice(),3)),this.setAttribute("uv",new ge(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(x){const _=new T,y=new T,M=new T;for(let w=0;w<t.length;w+=3)d(t[w+0],_),d(t[w+1],y),d(t[w+2],M),l(_,y,M,x)}function l(x,_,y,M){const w=M+1,C=[];for(let b=0;b<=w;b++){C[b]=[];const A=x.clone().lerp(y,b/w),L=_.clone().lerp(y,b/w),k=w-b;for(let W=0;W<=k;W++)W===0&&b===w?C[b][W]=A:C[b][W]=A.clone().lerp(L,W/k)}for(let b=0;b<w;b++)for(let A=0;A<2*(w-b)-1;A++){const L=Math.floor(A/2);A%2===0?(f(C[b][L+1]),f(C[b+1][L]),f(C[b][L])):(f(C[b][L+1]),f(C[b+1][L+1]),f(C[b+1][L]))}}function c(x){const _=new T;for(let y=0;y<s.length;y+=3)_.x=s[y+0],_.y=s[y+1],_.z=s[y+2],_.normalize().multiplyScalar(x),s[y+0]=_.x,s[y+1]=_.y,s[y+2]=_.z}function u(){const x=new T;for(let _=0;_<s.length;_+=3){x.x=s[_+0],x.y=s[_+1],x.z=s[_+2];const y=g(x)/2/Math.PI+.5,M=v(x)/Math.PI+.5;a.push(y,1-M)}p(),h()}function h(){for(let x=0;x<a.length;x+=6){const _=a[x+0],y=a[x+2],M=a[x+4],w=Math.max(_,y,M),C=Math.min(_,y,M);w>.9&&C<.1&&(_<.2&&(a[x+0]+=1),y<.2&&(a[x+2]+=1),M<.2&&(a[x+4]+=1))}}function f(x){s.push(x.x,x.y,x.z)}function d(x,_){const y=x*3;_.x=e[y+0],_.y=e[y+1],_.z=e[y+2]}function p(){const x=new T,_=new T,y=new T,M=new T,w=new q,C=new q,b=new q;for(let A=0,L=0;A<s.length;A+=9,L+=6){x.set(s[A+0],s[A+1],s[A+2]),_.set(s[A+3],s[A+4],s[A+5]),y.set(s[A+6],s[A+7],s[A+8]),w.set(a[L+0],a[L+1]),C.set(a[L+2],a[L+3]),b.set(a[L+4],a[L+5]),M.copy(x).add(_).add(y).divideScalar(3);const k=g(M);m(w,L+0,x,k),m(C,L+2,_,k),m(b,L+4,y,k)}}function m(x,_,y,M){M<0&&x.x===1&&(a[_]=x.x-1),y.x===0&&y.z===0&&(a[_]=M/2/Math.PI+.5)}function g(x){return Math.atan2(x.z,-x.x)}function v(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}static fromJSON(e){return new oi(e.vertices,e.indices,e.radius,e.details)}}class Ia extends oi{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ia(e.radius,e.detail)}}const So=new T,Ao=new T,Vc=new T,To=new pn;class x0 extends De{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(rr*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){a?(c[0]=a.getX(p),c[1]=a.getX(p+1),c[2]=a.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:m,b:g,c:v}=To;if(m.fromBufferAttribute(o,c[0]),g.fromBufferAttribute(o,c[1]),v.fromBufferAttribute(o,c[2]),To.getNormal(Vc),h[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,h[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,h[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let x=0;x<3;x++){const _=(x+1)%3,y=h[x],M=h[_],w=To[u[x]],C=To[u[_]],b=`${y}_${M}`,A=`${M}_${y}`;A in f&&f[A]?(Vc.dot(f[A].normal)<=s&&(d.push(w.x,w.y,w.z),d.push(C.x,C.y,C.z)),f[A]=null):b in f||(f[b]={index0:c[x],index1:c[_],normal:Vc.clone()})}}for(const p in f)if(f[p]){const{index0:m,index1:g}=f[p];So.fromBufferAttribute(o,m),Ao.fromBufferAttribute(o,g),d.push(So.x,So.y,So.z),d.push(Ao.x,Ao.y,Ao.z)}this.setAttribute("position",new ge(d,3))}}}class or extends ha{constructor(e){super(e),this.uuid=an(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new ha().fromJSON(i))}return this}}const AS={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=b0(r,0,i,t,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,u,h,f,d;if(n&&(s=LS(r,e,s,t)),r.length>80*t){o=c=r[0],l=u=r[1];for(let p=t;p<i;p+=t)h=r[p],f=r[p+1],h<o&&(o=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-o,u-l),d=d!==0?32767/d:0}return fa(s,a,t,o,l,d,0),a}};function b0(r,e,t,n,i){let s,a;if(i===VS(r,e,t,n)>0)for(s=e;s<t;s+=n)a=sp(s,r[s],r[s+1],a);else for(s=t-n;s>=e;s-=n)a=sp(s,r[s],r[s+1],a);return a&&Ul(a,a.next)&&(pa(a),a=a.next),a}function pr(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Ul(t,t.next)||lt(t.prev,t,t.next)===0)){if(pa(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function fa(r,e,t,n,i,s,a){if(!r)return;!a&&s&&FS(r,n,i,s);let o=r,l,c;for(;r.prev!==r.next;){if(l=r.prev,c=r.next,s?ES(r,n,i,s):TS(r)){e.push(l.i/t|0),e.push(r.i/t|0),e.push(c.i/t|0),pa(r),r=c.next,o=c.next;continue}if(r=c,r===o){a?a===1?(r=CS(pr(r),e,t),fa(r,e,t,n,i,s,2)):a===2&&PS(r,e,t,n,i,s):fa(pr(r),e,t,n,i,s,1);break}}}function TS(r){const e=r.prev,t=r,n=r.next;if(lt(e,t,n)>=0)return!1;const i=e.x,s=t.x,a=n.x,o=e.y,l=t.y,c=n.y,u=i<s?i<a?i:a:s<a?s:a,h=o<l?o<c?o:c:l<c?l:c,f=i>s?i>a?i:a:s>a?s:a,d=o>l?o>c?o:c:l>c?l:c;let p=n.next;for(;p!==e;){if(p.x>=u&&p.x<=f&&p.y>=h&&p.y<=d&&ts(i,o,s,l,a,c,p.x,p.y)&&lt(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function ES(r,e,t,n){const i=r.prev,s=r,a=r.next;if(lt(i,s,a)>=0)return!1;const o=i.x,l=s.x,c=a.x,u=i.y,h=s.y,f=a.y,d=o<l?o<c?o:c:l<c?l:c,p=u<h?u<f?u:f:h<f?h:f,m=o>l?o>c?o:c:l>c?l:c,g=u>h?u>f?u:f:h>f?h:f,v=Uu(d,p,e,t,n),x=Uu(m,g,e,t,n);let _=r.prevZ,y=r.nextZ;for(;_&&_.z>=v&&y&&y.z<=x;){if(_.x>=d&&_.x<=m&&_.y>=p&&_.y<=g&&_!==i&&_!==a&&ts(o,u,l,h,c,f,_.x,_.y)&&lt(_.prev,_,_.next)>=0||(_=_.prevZ,y.x>=d&&y.x<=m&&y.y>=p&&y.y<=g&&y!==i&&y!==a&&ts(o,u,l,h,c,f,y.x,y.y)&&lt(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;_&&_.z>=v;){if(_.x>=d&&_.x<=m&&_.y>=p&&_.y<=g&&_!==i&&_!==a&&ts(o,u,l,h,c,f,_.x,_.y)&&lt(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;y&&y.z<=x;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=g&&y!==i&&y!==a&&ts(o,u,l,h,c,f,y.x,y.y)&&lt(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function CS(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Ul(i,s)&&M0(i,n,n.next,s)&&da(i,s)&&da(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),pa(n),pa(n.next),n=r=s),n=n.next}while(n!==r);return pr(n)}function PS(r,e,t,n,i,s){let a=r;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&zS(a,o)){let l=w0(a,o);a=pr(a,a.next),l=pr(l,l.next),fa(a,e,t,n,i,s,0),fa(l,e,t,n,i,s,0);return}o=o.next}a=a.next}while(a!==r)}function LS(r,e,t,n){const i=[];let s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*n,l=s<a-1?e[s+1]*n:r.length,c=b0(r,o,l,n,!1),c===c.next&&(c.steiner=!0),i.push(kS(c));for(i.sort(RS),s=0;s<i.length;s++)t=IS(i[s],t);return t}function RS(r,e){return r.x-e.x}function IS(r,e){const t=DS(r,e);if(!t)return e;const n=w0(t,r);return pr(n,n.next),pr(t,t.next)}function DS(r,e){let t=e,n=-1/0,i;const s=r.x,a=r.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const f=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=s&&f>n&&(n=f,i=t.x<t.next.x?t:t.next,f===s))return i}t=t.next}while(t!==e);if(!i)return null;const o=i,l=i.x,c=i.y;let u=1/0,h;t=i;do s>=t.x&&t.x>=l&&s!==t.x&&ts(a<c?s:n,a,l,c,a<c?n:s,a,t.x,t.y)&&(h=Math.abs(a-t.y)/(s-t.x),da(t,r)&&(h<u||h===u&&(t.x>i.x||t.x===i.x&&OS(i,t)))&&(i=t,u=h)),t=t.next;while(t!==o);return i}function OS(r,e){return lt(r.prev,r,e.prev)<0&&lt(e.next,r,r.next)<0}function FS(r,e,t,n){let i=r;do i.z===0&&(i.z=Uu(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,NS(i)}function NS(r){let e,t,n,i,s,a,o,l,c=1;do{for(t=r,r=null,s=null,a=0;t;){for(a++,n=t,o=0,e=0;e<c&&(o++,n=n.nextZ,!!n);e++);for(l=c;o>0||l>0&&n;)o!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,c*=2}while(a>1);return r}function Uu(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function kS(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ts(r,e,t,n,i,s,a,o){return(i-a)*(e-o)>=(r-a)*(s-o)&&(r-a)*(n-o)>=(t-a)*(e-o)&&(t-a)*(s-o)>=(i-a)*(n-o)}function zS(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!BS(r,e)&&(da(r,e)&&da(e,r)&&US(r,e)&&(lt(r.prev,r,e.prev)||lt(r,e.prev,e))||Ul(r,e)&&lt(r.prev,r,r.next)>0&&lt(e.prev,e,e.next)>0)}function lt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Ul(r,e){return r.x===e.x&&r.y===e.y}function M0(r,e,t,n){const i=Co(lt(r,e,t)),s=Co(lt(r,e,n)),a=Co(lt(t,n,r)),o=Co(lt(t,n,e));return!!(i!==s&&a!==o||i===0&&Eo(r,t,e)||s===0&&Eo(r,n,e)||a===0&&Eo(t,r,n)||o===0&&Eo(t,e,n))}function Eo(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Co(r){return r>0?1:r<0?-1:0}function BS(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&M0(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function da(r,e){return lt(r.prev,r,r.next)<0?lt(r,e,r.next)>=0&&lt(r,r.prev,e)>=0:lt(r,e,r.prev)<0||lt(r,r.next,e)<0}function US(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function w0(r,e){const t=new Vu(r.i,r.x,r.y),n=new Vu(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function sp(r,e,t,n){const i=new Vu(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function pa(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Vu(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function VS(r,e,t,n){let i=0;for(let s=e,a=t-n;s<t;s+=n)i+=(r[a]-r[s])*(r[s+1]+r[a+1]),a=s;return i}class Dn{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Dn.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];ap(e),op(n,e);let a=e.length;t.forEach(ap);for(let l=0;l<t.length;l++)i.push(a),a+=t[l].length,op(n,t[l]);const o=AS.triangulate(n,i);for(let l=0;l<o.length;l+=3)s.push(o.slice(l,l+3));return s}}function ap(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function op(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Da extends De{constructor(e=new or([new q(.5,.5),new q(-.5,.5),new q(-.5,-.5),new q(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];a(c)}this.setAttribute("position",new ge(i,3)),this.setAttribute("uv",new ge(s,2)),this.computeVertexNormals();function a(o){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:GS;let _,y=!1,M,w,C,b;v&&(_=v.getSpacedPoints(u),y=!0,f=!1,M=v.computeFrenetFrames(u,!1),w=new T,C=new T,b=new T),f||(g=0,d=0,p=0,m=0);const A=o.extractPoints(c);let L=A.shape;const k=A.holes;if(!Dn.isClockWise(L)){L=L.reverse();for(let Q=0,ee=k.length;Q<ee;Q++){const oe=k[Q];Dn.isClockWise(oe)&&(k[Q]=oe.reverse())}}const O=Dn.triangulateShape(L,k),I=L;for(let Q=0,ee=k.length;Q<ee;Q++){const oe=k[Q];L=L.concat(oe)}function B(Q,ee,oe){return ee||console.error("THREE.ExtrudeGeometry: vec does not exist"),ee.clone().multiplyScalar(oe).add(Q)}const G=L.length,K=O.length;function X(Q,ee,oe){let xe,he,Ie;const Pe=Q.x-ee.x,Te=Q.y-ee.y,et=oe.x-Q.x,Ze=oe.y-Q.y,P=Pe*Pe+Te*Te,S=Pe*Ze-Te*et;if(Math.abs(S)>Number.EPSILON){const H=Math.sqrt(P),re=Math.sqrt(et*et+Ze*Ze),le=ee.x-Te/H,de=ee.y+Pe/H,Re=oe.x-Ze/re,R=oe.y+et/re,F=((Re-le)*Ze-(R-de)*et)/(Pe*Ze-Te*et);xe=le+Pe*F-Q.x,he=de+Te*F-Q.y;const me=xe*xe+he*he;if(me<=2)return new q(xe,he);Ie=Math.sqrt(me/2)}else{let H=!1;Pe>Number.EPSILON?et>Number.EPSILON&&(H=!0):Pe<-Number.EPSILON?et<-Number.EPSILON&&(H=!0):Math.sign(Te)===Math.sign(Ze)&&(H=!0),H?(xe=-Te,he=Pe,Ie=Math.sqrt(P)):(xe=Pe,he=Te,Ie=Math.sqrt(P/2))}return new q(xe/Ie,he/Ie)}const te=[];for(let Q=0,ee=I.length,oe=ee-1,xe=Q+1;Q<ee;Q++,oe++,xe++)oe===ee&&(oe=0),xe===ee&&(xe=0),te[Q]=X(I[Q],I[oe],I[xe]);const Z=[];let U,V=te.concat();for(let Q=0,ee=k.length;Q<ee;Q++){const oe=k[Q];U=[];for(let xe=0,he=oe.length,Ie=he-1,Pe=xe+1;xe<he;xe++,Ie++,Pe++)Ie===he&&(Ie=0),Pe===he&&(Pe=0),U[xe]=X(oe[xe],oe[Ie],oe[Pe]);Z.push(U),V=V.concat(U)}for(let Q=0;Q<g;Q++){const ee=Q/g,oe=d*Math.cos(ee*Math.PI/2),xe=p*Math.sin(ee*Math.PI/2)+m;for(let he=0,Ie=I.length;he<Ie;he++){const Pe=B(I[he],te[he],xe);Ee(Pe.x,Pe.y,-oe)}for(let he=0,Ie=k.length;he<Ie;he++){const Pe=k[he];U=Z[he];for(let Te=0,et=Pe.length;Te<et;Te++){const Ze=B(Pe[Te],U[Te],xe);Ee(Ze.x,Ze.y,-oe)}}}const se=p+m;for(let Q=0;Q<G;Q++){const ee=f?B(L[Q],V[Q],se):L[Q];y?(C.copy(M.normals[0]).multiplyScalar(ee.x),w.copy(M.binormals[0]).multiplyScalar(ee.y),b.copy(_[0]).add(C).add(w),Ee(b.x,b.y,b.z)):Ee(ee.x,ee.y,0)}for(let Q=1;Q<=u;Q++)for(let ee=0;ee<G;ee++){const oe=f?B(L[ee],V[ee],se):L[ee];y?(C.copy(M.normals[Q]).multiplyScalar(oe.x),w.copy(M.binormals[Q]).multiplyScalar(oe.y),b.copy(_[Q]).add(C).add(w),Ee(b.x,b.y,b.z)):Ee(oe.x,oe.y,h/u*Q)}for(let Q=g-1;Q>=0;Q--){const ee=Q/g,oe=d*Math.cos(ee*Math.PI/2),xe=p*Math.sin(ee*Math.PI/2)+m;for(let he=0,Ie=I.length;he<Ie;he++){const Pe=B(I[he],te[he],xe);Ee(Pe.x,Pe.y,h+oe)}for(let he=0,Ie=k.length;he<Ie;he++){const Pe=k[he];U=Z[he];for(let Te=0,et=Pe.length;Te<et;Te++){const Ze=B(Pe[Te],U[Te],xe);y?Ee(Ze.x,Ze.y+_[u-1].y,_[u-1].x+oe):Ee(Ze.x,Ze.y,h+oe)}}}ne(),ie();function ne(){const Q=i.length/3;if(f){let ee=0,oe=G*ee;for(let xe=0;xe<K;xe++){const he=O[xe];pe(he[2]+oe,he[1]+oe,he[0]+oe)}ee=u+g*2,oe=G*ee;for(let xe=0;xe<K;xe++){const he=O[xe];pe(he[0]+oe,he[1]+oe,he[2]+oe)}}else{for(let ee=0;ee<K;ee++){const oe=O[ee];pe(oe[2],oe[1],oe[0])}for(let ee=0;ee<K;ee++){const oe=O[ee];pe(oe[0]+G*u,oe[1]+G*u,oe[2]+G*u)}}n.addGroup(Q,i.length/3-Q,0)}function ie(){const Q=i.length/3;let ee=0;$(I,ee),ee+=I.length;for(let oe=0,xe=k.length;oe<xe;oe++){const he=k[oe];$(he,ee),ee+=he.length}n.addGroup(Q,i.length/3-Q,1)}function $(Q,ee){let oe=Q.length;for(;--oe>=0;){const xe=oe;let he=oe-1;he<0&&(he=Q.length-1);for(let Ie=0,Pe=u+g*2;Ie<Pe;Ie++){const Te=G*Ie,et=G*(Ie+1),Ze=ee+xe+Te,P=ee+he+Te,S=ee+he+et,H=ee+xe+et;Ce(Ze,P,S,H)}}}function Ee(Q,ee,oe){l.push(Q),l.push(ee),l.push(oe)}function pe(Q,ee,oe){fe(Q),fe(ee),fe(oe);const xe=i.length/3,he=x.generateTopUV(n,i,xe-3,xe-2,xe-1);Oe(he[0]),Oe(he[1]),Oe(he[2])}function Ce(Q,ee,oe,xe){fe(Q),fe(ee),fe(xe),fe(ee),fe(oe),fe(xe);const he=i.length/3,Ie=x.generateSideWallUV(n,i,he-6,he-3,he-2,he-1);Oe(Ie[0]),Oe(Ie[1]),Oe(Ie[3]),Oe(Ie[1]),Oe(Ie[2]),Oe(Ie[3])}function fe(Q){i.push(l[Q*3+0]),i.push(l[Q*3+1]),i.push(l[Q*3+2])}function Oe(Q){s.push(Q.x),s.push(Q.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return HS(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,a=e.shapes.length;s<a;s++){const o=t[e.shapes[s]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Yh[i.type]().fromJSON(i)),new Da(n,e.options)}}const GS={generateTopUV:function(r,e,t,n,i){const s=e[t*3],a=e[t*3+1],o=e[n*3],l=e[n*3+1],c=e[i*3],u=e[i*3+1];return[new q(s,a),new q(o,l),new q(c,u)]},generateSideWallUV:function(r,e,t,n,i,s){const a=e[t*3],o=e[t*3+1],l=e[t*3+2],c=e[n*3],u=e[n*3+1],h=e[n*3+2],f=e[i*3],d=e[i*3+1],p=e[i*3+2],m=e[s*3],g=e[s*3+1],v=e[s*3+2];return Math.abs(o-u)<Math.abs(a-c)?[new q(a,1-l),new q(c,1-h),new q(f,1-p),new q(m,1-v)]:[new q(o,1-l),new q(u,1-h),new q(d,1-p),new q(g,1-v)]}};function HS(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Oa extends oi{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Oa(e.radius,e.detail)}}class Ms extends oi{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ms(e.radius,e.detail)}}class Fa extends De{constructor(e=.5,t=1,n=8,i=1,s=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const o=[],l=[],c=[],u=[];let h=e;const f=(t-e)/i,d=new T,p=new q;for(let m=0;m<=i;m++){for(let g=0;g<=n;g++){const v=s+g/n*a;d.x=h*Math.cos(v),d.y=h*Math.sin(v),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let m=0;m<i;m++){const g=m*(n+1);for(let v=0;v<n;v++){const x=v+g,_=x,y=x+n+1,M=x+n+2,w=x+1;o.push(_,y,w),o.push(y,M,w)}}this.setIndex(o),this.setAttribute("position",new ge(l,3)),this.setAttribute("normal",new ge(c,3)),this.setAttribute("uv",new ge(u,2))}static fromJSON(e){return new Fa(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Na extends De{constructor(e=new or([new q(0,.5),new q(-.5,-.5),new q(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(o,l,u),o+=l,l=0;this.setIndex(n),this.setAttribute("position",new ge(i,3)),this.setAttribute("normal",new ge(s,3)),this.setAttribute("uv",new ge(a,2));function c(u){const h=i.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;Dn.isClockWise(d)===!1&&(d=d.reverse());for(let g=0,v=p.length;g<v;g++){const x=p[g];Dn.isClockWise(x)===!0&&(p[g]=x.reverse())}const m=Dn.triangulateShape(d,p);for(let g=0,v=p.length;g<v;g++){const x=p[g];d=d.concat(x)}for(let g=0,v=d.length;g<v;g++){const x=d[g];i.push(x.x,x.y,0),s.push(0,0,1),a.push(x.x,x.y)}for(let g=0,v=m.length;g<v;g++){const x=m[g],_=x[0]+h,y=x[1]+h,M=x[2]+h;n.push(_,y,M),l+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return WS(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const a=t[e.shapes[i]];n.push(a)}return new Na(n,e.curveSegments)}}function WS(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class ws extends De{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(a+o,Math.PI);let c=0;const u=[],h=new T,f=new T,d=[],p=[],m=[],g=[];for(let v=0;v<=n;v++){const x=[],_=v/n;let y=0;v==0&&a==0?y=.5/t:v==n&&l==Math.PI&&(y=-.5/t);for(let M=0;M<=t;M++){const w=M/t;h.x=-e*Math.cos(i+w*s)*Math.sin(a+_*o),h.y=e*Math.cos(a+_*o),h.z=e*Math.sin(i+w*s)*Math.sin(a+_*o),p.push(h.x,h.y,h.z),f.copy(h).normalize(),m.push(f.x,f.y,f.z),g.push(w+y,1-_),x.push(c++)}u.push(x)}for(let v=0;v<n;v++)for(let x=0;x<t;x++){const _=u[v][x+1],y=u[v][x],M=u[v+1][x],w=u[v+1][x+1];(v!==0||a>0)&&d.push(_,y,w),(v!==n-1||l<Math.PI)&&d.push(y,M,w)}this.setIndex(d),this.setAttribute("position",new ge(p,3)),this.setAttribute("normal",new ge(m,3)),this.setAttribute("uv",new ge(g,2))}static fromJSON(e){return new ws(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class ka extends oi{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ka(e.radius,e.detail)}}class za extends De{constructor(e=1,t=.4,n=8,i=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],u=new T,h=new T,f=new T;for(let d=0;d<=n;d++)for(let p=0;p<=i;p++){const m=p/i*s,g=d/n*Math.PI*2;h.x=(e+t*Math.cos(g))*Math.cos(m),h.y=(e+t*Math.cos(g))*Math.sin(m),h.z=t*Math.sin(g),o.push(h.x,h.y,h.z),u.x=e*Math.cos(m),u.y=e*Math.sin(m),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/i),c.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=i;p++){const m=(i+1)*d+p-1,g=(i+1)*(d-1)+p-1,v=(i+1)*(d-1)+p,x=(i+1)*d+p;a.push(m,g,x),a.push(g,v,x)}this.setIndex(a),this.setAttribute("position",new ge(o,3)),this.setAttribute("normal",new ge(l,3)),this.setAttribute("uv",new ge(c,2))}static fromJSON(e){return new za(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Ba extends De{constructor(e=1,t=.4,n=64,i=8,s=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:a},n=Math.floor(n),i=Math.floor(i);const o=[],l=[],c=[],u=[],h=new T,f=new T,d=new T,p=new T,m=new T,g=new T,v=new T;for(let _=0;_<=n;++_){const y=_/n*s*Math.PI*2;x(y,s,a,e,d),x(y+.01,s,a,e,p),g.subVectors(p,d),v.addVectors(p,d),m.crossVectors(g,v),v.crossVectors(m,g),m.normalize(),v.normalize();for(let M=0;M<=i;++M){const w=M/i*Math.PI*2,C=-t*Math.cos(w),b=t*Math.sin(w);h.x=d.x+(C*v.x+b*m.x),h.y=d.y+(C*v.y+b*m.y),h.z=d.z+(C*v.z+b*m.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(_/n),u.push(M/i)}}for(let _=1;_<=n;_++)for(let y=1;y<=i;y++){const M=(i+1)*(_-1)+(y-1),w=(i+1)*_+(y-1),C=(i+1)*_+y,b=(i+1)*(_-1)+y;o.push(M,w,b),o.push(w,C,b)}this.setIndex(o),this.setAttribute("position",new ge(l,3)),this.setAttribute("normal",new ge(c,3)),this.setAttribute("uv",new ge(u,2));function x(_,y,M,w,C){const b=Math.cos(_),A=Math.sin(_),L=M/y*_,k=Math.cos(L);C.x=w*(2+k)*.5*b,C.y=w*(2+k)*A*.5,C.z=w*Math.sin(L)*.5}}static fromJSON(e){return new Ba(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Ua extends De{constructor(e=new qh(new T(-1,-1,0),new T(-1,1,0),new T(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const a=e.computeFrenetFrames(t,s);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new T,l=new T,c=new q;let u=new T;const h=[],f=[],d=[],p=[];m(),this.setIndex(p),this.setAttribute("position",new ge(h,3)),this.setAttribute("normal",new ge(f,3)),this.setAttribute("uv",new ge(d,2));function m(){for(let _=0;_<t;_++)g(_);g(s===!1?t:0),x(),v()}function g(_){u=e.getPointAt(_/t,u);const y=a.normals[_],M=a.binormals[_];for(let w=0;w<=i;w++){const C=w/i*Math.PI*2,b=Math.sin(C),A=-Math.cos(C);l.x=A*y.x+b*M.x,l.y=A*y.y+b*M.y,l.z=A*y.z+b*M.z,l.normalize(),f.push(l.x,l.y,l.z),o.x=u.x+n*l.x,o.y=u.y+n*l.y,o.z=u.z+n*l.z,h.push(o.x,o.y,o.z)}}function v(){for(let _=1;_<=t;_++)for(let y=1;y<=i;y++){const M=(i+1)*(_-1)+(y-1),w=(i+1)*_+(y-1),C=(i+1)*_+y,b=(i+1)*(_-1)+y;p.push(M,w,b),p.push(w,C,b)}}function x(){for(let _=0;_<=t;_++)for(let y=0;y<=i;y++)c.x=_/t,c.y=y/i,d.push(c.x,c.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Ua(new Yh[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class S0 extends De{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new T,s=new T;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,m=f+d;p<m;p+=3)for(let g=0;g<3;g++){const v=o.getX(p+g),x=o.getX(p+(g+1)%3);i.fromBufferAttribute(a,v),s.fromBufferAttribute(a,x),lp(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let c=0;c<3;c++){const u=3*o+c,h=3*o+(c+1)%3;i.fromBufferAttribute(a,u),s.fromBufferAttribute(a,h),lp(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ge(t,3))}}}function lp(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var cp=Object.freeze({__proto__:null,BoxGeometry:Pi,CapsuleGeometry:Pa,CircleGeometry:La,ConeGeometry:Ra,CylinderGeometry:Mr,DodecahedronGeometry:Ia,EdgesGeometry:x0,ExtrudeGeometry:Da,IcosahedronGeometry:Oa,LatheGeometry:bs,OctahedronGeometry:Ms,PlaneGeometry:ys,PolyhedronGeometry:oi,RingGeometry:Fa,ShapeGeometry:Na,SphereGeometry:ws,TetrahedronGeometry:ka,TorusGeometry:za,TorusKnotGeometry:Ba,TubeGeometry:Ua,WireframeGeometry:S0});class A0 extends kt{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ce(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class T0 extends Ht{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Zh extends kt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ce(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class E0 extends Zh{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new q(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return mt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ce(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new ce(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ce(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Ys extends kt{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ce(16777215),this.specular=new ce(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ur,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class C0 extends kt{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ce(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class P0 extends kt{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Jh extends kt{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ur,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class L0 extends kt{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ce(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class R0 extends zt{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function dn(r,e,t){return Kh(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)}function er(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Kh(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function I0(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Gu(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,a=0;a!==n;++s){const o=t[s]*e;for(let l=0;l!==e;++l)i[a++]=r[o+l]}return i}function Qh(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let a=s[n];if(a!==void 0)if(Array.isArray(a))do a=s[n],a!==void 0&&(e.push(s.time),t.push.apply(t,a)),s=r[i++];while(s!==void 0);else if(a.toArray!==void 0)do a=s[n],a!==void 0&&(e.push(s.time),a.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do a=s[n],a!==void 0&&(e.push(s.time),t.push(a)),s=r[i++];while(s!==void 0)}function XS(r,e,t,n,i=30){const s=r.clone();s.name=e;const a=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*i;if(!(p<t||p>=n)){h.push(c.times[d]);for(let m=0;m<u;++m)f.push(c.values[d*u+m])}}h.length!==0&&(c.times=er(h,c.times.constructor),c.values=er(f,c.values.constructor),a.push(c))}s.tracks=a;let o=1/0;for(let l=0;l<s.tracks.length;++l)o>s.tracks[l].times[0]&&(o=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*o);return s.resetDuration(),s}function $S(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=r.tracks.find(function(v){return v.name===o.name&&v.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=o.times.length-1;let m;if(s<=o.times[0]){const v=u,x=h-u;m=dn(o.values,v,x)}else if(s>=o.times[p]){const v=p*h+u,x=v+h-u;m=dn(o.values,v,x)}else{const v=o.createInterpolant(),x=u,_=h-u;v.evaluate(s),m=dn(v.resultBuffer,x,_)}l==="quaternion"&&new bt().fromArray(m).normalize().conjugate().toArray(m);const g=c.times.length;for(let v=0;v<g;++v){const x=v*d+f;if(l==="quaternion")bt.multiplyQuaternionsFlat(c.values,x,m,0,c.values,x);else{const _=d-f*2;for(let y=0;y<_;++y)c.values[x+y]-=m[y]}}}return r.blendMode=Lh,r}var D0=Object.freeze({__proto__:null,arraySlice:dn,convertArray:er,isTypedArray:Kh,getKeyframeOrder:I0,sortedArray:Gu,flattenJSON:Qh,subclip:XS,makeClipAdditive:$S});class Va{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(s=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=s)){const o=t[1];e<o&&(n=2,s=o);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let a=0;a!==i;++a)t[a]=n[s+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class O0 extends Va{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ji,endingEnd:Ji}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,a=e+1,o=i[s],l=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case Ki:s=e,o=2*t-n;break;case aa:s=i.length-2,o=t+i[s]-i[s+1];break;default:s=e,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Ki:a=e,l=2*n-t;break;case aa:a=1,l=n+i[1]-i[0];break;default:a=e-1,l=t}const c=(n-t)*.5,u=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=a*u}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),m=p*p,g=m*p,v=-f*g+2*f*m-f*p,x=(1+f)*g+(-1.5-2*f)*m+(-.5+f)*p+1,_=(-1-d)*g+(1.5+d)*m+.5*p,y=d*g-d*m;for(let M=0;M!==o;++M)s[M]=v*a[u+M]+x*a[c+M]+_*a[l+M]+y*a[h+M];return s}}class ef extends Va{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,u=(n-t)/(i-t),h=1-u;for(let f=0;f!==o;++f)s[f]=a[c+f]*h+a[l+f]*u;return s}}class F0 extends Va{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Pn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=er(t,this.TimeBufferType),this.values=er(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:er(e.times,Array),values:er(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new F0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new ef(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new O0(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ra:t=this.InterpolantFactoryMethodDiscrete;break;case sa:t=this.InterpolantFactoryMethodLinear;break;case qo:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ra;case this.InterpolantFactoryMethodLinear:return sa;case this.InterpolantFactoryMethodSmooth:return qo}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,a=i-1;for(;s!==i&&n[s]<e;)++s;for(;a!==-1&&n[a]>t;)--a;if(++a,s!==0||a!==i){s>=a&&(a=Math.max(a,1),s=a-1);const o=this.getValueSize();this.times=dn(n,s,a),this.values=dn(this.values,s*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==s;o++){const l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(i!==void 0&&Kh(i))for(let o=0,l=i.length;o!==l;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=dn(this.times),t=dn(this.values),n=this.getValueSize(),i=this.getInterpolation()===qo,s=e.length-1;let a=1;for(let o=1;o<s;++o){let l=!1;const c=e[o],u=e[o+1];if(c!==u&&(o!==1||c!==e[0]))if(i)l=!0;else{const h=o*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const m=t[h+p];if(m!==t[f+p]||m!==t[d+p]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const h=o*n,f=a*n;for(let d=0;d!==n;++d)t[f+d]=t[h+d]}++a}}if(s>0){e[a]=e[s];for(let o=s*n,l=a*n,c=0;c!==n;++c)t[l+c]=t[o+c];++a}return a!==e.length?(this.times=dn(e,0,a),this.values=dn(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=dn(this.times,0),t=dn(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Pn.prototype.TimeBufferType=Float32Array;Pn.prototype.ValueBufferType=Float32Array;Pn.prototype.DefaultInterpolation=sa;class wr extends Pn{}wr.prototype.ValueTypeName="bool";wr.prototype.ValueBufferType=Array;wr.prototype.DefaultInterpolation=ra;wr.prototype.InterpolantFactoryMethodLinear=void 0;wr.prototype.InterpolantFactoryMethodSmooth=void 0;class tf extends Pn{}tf.prototype.ValueTypeName="color";class fs extends Pn{}fs.prototype.ValueTypeName="number";class N0 extends Va{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-t)/(i-t);let c=e*o;for(let u=c+o;c!==u;c+=4)bt.slerpFlat(s,0,a,c-o,a,c,l);return s}}class Sr extends Pn{InterpolantFactoryMethodLinear(e){return new N0(this.times,this.values,this.getValueSize(),e)}}Sr.prototype.ValueTypeName="quaternion";Sr.prototype.DefaultInterpolation=sa;Sr.prototype.InterpolantFactoryMethodSmooth=void 0;class Ar extends Pn{}Ar.prototype.ValueTypeName="string";Ar.prototype.ValueBufferType=Array;Ar.prototype.DefaultInterpolation=ra;Ar.prototype.InterpolantFactoryMethodLinear=void 0;Ar.prototype.InterpolantFactoryMethodSmooth=void 0;class ds extends Pn{}ds.prototype.ValueTypeName="vector";class mr{constructor(e,t=-1,n,i=Cl){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=an(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(jS(n[a]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,a=n.length;s!==a;++s)t.push(Pn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,a=[];for(let o=0;o<s;o++){let l=[],c=[];l.push((o+s-1)%s,o,(o+1)%s),c.push(0,1,0);const u=I0(l);l=Gu(l,1,u),c=Gu(c,1,u),!i&&l[0]===0&&(l.push(s),c.push(c[0])),a.push(new fs(".morphTargetInfluences["+t[o].name+"]",l,c).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let f=i[h];f||(i[h]=f=[]),f.push(c)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,m){if(d.length!==0){const g=[],v=[];Qh(d,g,v,p),g.length!==0&&m.push(new h(f,g,v))}},i=[],s=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let m=0;m<f[p].morphTargets.length;m++)d[f[p].morphTargets[m]]=-1;for(const m in d){const g=[],v=[];for(let x=0;x!==f[p].morphTargets.length;++x){const _=f[p];g.push(_.time),v.push(_.morphTarget===m?1:0)}i.push(new fs(".morphTargetInfluence["+m+"]",g,v))}l=d.length*a}else{const d=".bones["+t[h].name+"]";n(ds,d+".position",f,"pos",i),n(Sr,d+".quaternion",f,"rot",i),n(ds,d+".scale",f,"scl",i)}}return i.length===0?null:new this(s,l,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function qS(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return fs;case"vector":case"vector2":case"vector3":case"vector4":return ds;case"color":return tf;case"quaternion":return Sr;case"bool":case"boolean":return wr;case"string":return Ar}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function jS(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=qS(r.type);if(r.times===void 0){const t=[],n=[];Qh(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const gr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class nf{constructor(e,t,n){const i=this;let s=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){o++,s===!1&&i.onStart!==void 0&&i.onStart(u,a,o),s=!0},this.itemEnd=function(u){a++,i.onProgress!==void 0&&i.onProgress(u,a,o),a===o&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const k0=new nf;class Kt{constructor(e){this.manager=e!==void 0?e:k0,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const qn={};class YS extends Error{constructor(e,t){super(e),this.response=t}}class Nn extends Kt{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=gr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(qn[e]!==void 0){qn[e].push({onLoad:t,onProgress:n,onError:i});return}qn[e]=[],qn[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=qn[e],h=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,p=d!==0;let m=0;const g=new ReadableStream({start(v){x();function x(){h.read().then(({done:_,value:y})=>{if(_)v.close();else{m+=y.byteLength;const M=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:d});for(let w=0,C=u.length;w<C;w++){const b=u[w];b.onProgress&&b.onProgress(M)}v.enqueue(y),x()}})}}});return new Response(g)}else throw new YS(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,o));case"json":return c.json();default:if(o===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(o),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{gr.add(e,c);const u=qn[e];delete qn[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=qn[e];if(u===void 0)throw this.manager.itemError(e),c;delete qn[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ZS extends Kt{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Nn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(s.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=mr.parse(e[n]);t.push(i)}return t}}class JS extends Kt{constructor(e){super(e)}load(e,t,n,i){const s=this,a=[],o=new Hh,l=new Nn(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function u(h){l.load(e[h],function(f){const d=s.parse(f,!0);a[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(o.minFilter=ot),o.image=a,o.format=d.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else l.load(e,function(h){const f=s.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){a[p]={mipmaps:[]};for(let m=0;m<f.mipmapCount;m++)a[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+m]),a[p].format=f.format,a[p].width=f.width,a[p].height=f.height}o.image=a}else o.image.width=f.width,o.image.height=f.height,o.mipmaps=f.mipmaps;f.mipmapCount===1&&(o.minFilter=ot),o.format=f.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}}class ma extends Kt{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=gr.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o=ca("img");function l(){u(),gr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(h){u(),i&&i(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),s.manager.itemStart(e),o.src=e,o}}class z0 extends Kt{constructor(e){super(e)}load(e,t,n,i){const s=new Ea,a=new ma(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(c){a.load(e[c],function(u){s.images[c]=u,o++,o===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return s}}class KS extends Kt{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new ar,o=new Nn(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(s.withCredentials),o.load(e,function(l){const c=s.parse(l);!c||(c.image!==void 0?a.image=c.image:c.data!==void 0&&(a.image.width=c.width,a.image.height=c.height,a.image.data=c.data),a.wrapS=c.wrapS!==void 0?c.wrapS:Lt,a.wrapT=c.wrapT!==void 0?c.wrapT:Lt,a.magFilter=c.magFilter!==void 0?c.magFilter:ot,a.minFilter=c.minFilter!==void 0?c.minFilter:ot,a.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.encoding!==void 0&&(a.encoding=c.encoding),c.flipY!==void 0&&(a.flipY=c.flipY),c.format!==void 0&&(a.format=c.format),c.type!==void 0&&(a.type=c.type),c.mipmaps!==void 0&&(a.mipmaps=c.mipmaps,a.minFilter=vr),c.mipmapCount===1&&(a.minFilter=ot),c.generateMipmaps!==void 0&&(a.generateMipmaps=c.generateMipmaps),a.needsUpdate=!0,t&&t(a,c))},n,i),a}}class Tr extends Kt{constructor(e){super(e)}load(e,t,n,i){const s=new ct,a=new ma(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){s.image=o,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Li extends We{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new ce(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class B0 extends Li{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(We.DefaultUp),this.updateMatrix(),this.groundColor=new ce(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Gc=new be,up=new T,hp=new T;class rf{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new q(512,512),this.map=null,this.mapPass=null,this.matrix=new be,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Dl,this._frameExtents=new q(1,1),this._viewportCount=1,this._viewports=[new Ye(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;up.setFromMatrixPosition(e.matrixWorld),t.position.copy(up),hp.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(hp),t.updateMatrixWorld(),Gc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Gc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Gc)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class QS extends rf{constructor(){super(new wt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=la*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class sf extends Li{constructor(e,t,n=0,i=Math.PI/3,s=0,a=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(We.DefaultUp),this.updateMatrix(),this.target=new We,this.distance=n,this.angle=i,this.penumbra=s,this.decay=a,this.map=null,this.shadow=new QS}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const fp=new be,Vs=new T,Hc=new T;class eA extends rf{constructor(){super(new wt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new q(4,2),this._viewportCount=6,this._viewports=[new Ye(2,1,1,1),new Ye(0,1,1,1),new Ye(3,1,1,1),new Ye(1,1,1,1),new Ye(3,0,1,1),new Ye(1,0,1,1)],this._cubeDirections=[new T(1,0,0),new T(-1,0,0),new T(0,0,1),new T(0,0,-1),new T(0,1,0),new T(0,-1,0)],this._cubeUps=[new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,0,1),new T(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Vs.setFromMatrixPosition(e.matrixWorld),n.position.copy(Vs),Hc.copy(n.position),Hc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Hc),n.updateMatrixWorld(),i.makeTranslation(-Vs.x,-Vs.y,-Vs.z),fp.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fp)}}class ga extends Li{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new eA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class tA extends rf{constructor(){super(new br(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Vl extends Li{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(We.DefaultUp),this.updateMatrix(),this.target=new We,this.shadow=new tA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Gl extends Li{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class U0 extends Li{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class V0{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new T)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*s),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*s)),t.addScaledVector(a[6],.315392*(3*s*s-1)),t.addScaledVector(a[7],1.092548*(n*s)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*s),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*s),t.addScaledVector(a[6],.743125*s*s-.247708),t.addScaledVector(a[7],2*.429043*n*s),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Hl extends Li{constructor(e=new V0,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Wl extends Kt{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,a=new Nn(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{t(s.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Wl.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new ce().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const a=e.uniforms[s];switch(i.uniforms[s]={},a.type){case"t":i.uniforms[s].value=n(a.value);break;case"c":i.uniforms[s].value=new ce().setHex(a.value);break;case"v2":i.uniforms[s].value=new q().fromArray(a.value);break;case"v3":i.uniforms[s].value=new T().fromArray(a.value);break;case"v4":i.uniforms[s].value=new Ye().fromArray(a.value);break;case"m3":i.uniforms[s].value=new Nt().fromArray(a.value);break;case"m4":i.uniforms[s].value=new be().fromArray(a.value);break;default:i.uniforms[s].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new q().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new q().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:A0,SpriteMaterial:Bh,RawShaderMaterial:T0,ShaderMaterial:Ht,PointsMaterial:Vh,MeshPhysicalMaterial:E0,MeshStandardMaterial:Zh,MeshPhongMaterial:Ys,MeshToonMaterial:C0,MeshNormalMaterial:P0,MeshLambertMaterial:Jh,MeshDepthMaterial:Fh,MeshDistanceMaterial:Nh,MeshBasicMaterial:Ci,MeshMatcapMaterial:L0,LineDashedMaterial:R0,LineBasicMaterial:zt,Material:kt};return new t[e]}}class ps{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class G0 extends De{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class H0 extends Kt{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Nn(s.manager);a.setPath(s.path),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(o){try{t(s.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(d,p){if(t[p]!==void 0)return t[p];const g=d.interleavedBuffers[p],v=s(d,g.buffer),x=Qr(g.type,v),_=new kl(x,g.stride);return _.uuid=g.uuid,t[p]=_,_}function s(d,p){if(n[p]!==void 0)return n[p];const g=d.arrayBuffers[p],v=new Uint32Array(g).buffer;return n[p]=v,v}const a=e.isInstancedBufferGeometry?new G0:new De,o=e.data.index;if(o!==void 0){const d=Qr(o.type,o.array);a.setIndex(new nt(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let m;if(p.isInterleavedBufferAttribute){const g=i(e.data,p.data);m=new dr(g,p.itemSize,p.offset,p.normalized)}else{const g=Qr(p.type,p.array),v=p.isInstancedBufferAttribute?hs:nt;m=new v(g,p.itemSize,p.normalized)}p.name!==void 0&&(m.name=p.name),p.usage!==void 0&&m.setUsage(p.usage),p.updateRange!==void 0&&(m.updateRange.offset=p.updateRange.offset,m.updateRange.count=p.updateRange.count),a.setAttribute(d,m)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],m=[];for(let g=0,v=p.length;g<v;g++){const x=p[g];let _;if(x.isInterleavedBufferAttribute){const y=i(e.data,x.data);_=new dr(y,x.itemSize,x.offset,x.normalized)}else{const y=Qr(x.type,x.array);_=new nt(y,x.itemSize,x.normalized)}x.name!==void 0&&(_.name=x.name),m.push(_)}a.morphAttributes[d]=m}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const m=h[d];a.addGroup(m.start,m.count,m.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new T;f.center!==void 0&&d.fromArray(f.center),a.boundingSphere=new xr(d,f.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class nA extends Kt{constructor(e){super(e)}load(e,t,n,i){const s=this,a=this.path===""?ps.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new Nn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?ps.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Nn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const a=await s.loadAsync(e,t),o=JSON.parse(a),l=o.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(o)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(c)}),o=this.parseTextures(e.textures,a),l=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,s,l,o,n),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),t!==void 0){let h=!1;for(const f in a)if(a[f].data instanceof HTMLImageElement){h=!0;break}h===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,s),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,i,o,a,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new or().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,a=e.length;s<a;s++){const o=new Ca().fromJSON(e[s],i);n[o.uuid]=o}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new H0;for(let s=0,a=e.length;s<a;s++){let o;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(l);break;default:l.type in cp?o=cp[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),o.isBufferGeometry===!0&&l.userData!==void 0&&(o.userData=l.userData),n[l.uuid]=o}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Wl;s.setTextures(t);for(let a=0,o=e.length;a<o;a++){const l=e[a];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=mr.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function a(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function o(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return a(u)}else return l.data?{data:Qr(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new nf(t);s=new ma(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=o(g);v!==null&&(v instanceof HTMLImageElement?d.push(v):d.push(new ar(v.data,v.width,v.height)))}i[h.uuid]=new Qi(d)}else{const d=o(h.url);i[h.uuid]=new Qi(d)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(a){if(typeof a=="string"){const o=a,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return await i.loadAsync(l)}else return a.data?{data:Qr(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new ma(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const l=e[a],c=l.url;if(Array.isArray(c)){const u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h],p=await s(d);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new ar(p.data,p.width,p.height)))}n[l.uuid]=new Qi(u)}else{const u=await s(l.url);n[l.uuid]=new Qi(u)}}}return n}parseTextures(e,t){function n(s,a){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),a[s])}const i={};if(e!==void 0)for(let s=0,a=e.length;s<a;s++){const o=e[s];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const l=t[o.image],c=l.data;let u;Array.isArray(c)?(u=new Ea,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new ar:u=new ct,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=o.uuid,o.name!==void 0&&(u.name=o.name),o.mapping!==void 0&&(u.mapping=n(o.mapping,iA)),o.offset!==void 0&&u.offset.fromArray(o.offset),o.repeat!==void 0&&u.repeat.fromArray(o.repeat),o.center!==void 0&&u.center.fromArray(o.center),o.rotation!==void 0&&(u.rotation=o.rotation),o.wrap!==void 0&&(u.wrapS=n(o.wrap[0],dp),u.wrapT=n(o.wrap[1],dp)),o.format!==void 0&&(u.format=o.format),o.type!==void 0&&(u.type=o.type),o.encoding!==void 0&&(u.encoding=o.encoding),o.minFilter!==void 0&&(u.minFilter=n(o.minFilter,pp)),o.magFilter!==void 0&&(u.magFilter=n(o.magFilter,pp)),o.anisotropy!==void 0&&(u.anisotropy=o.anisotropy),o.flipY!==void 0&&(u.flipY=o.flipY),o.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(u.unpackAlignment=o.unpackAlignment),o.userData!==void 0&&(u.userData=o.userData),i[o.uuid]=u}return i}parseObject(e,t,n,i,s){let a;function o(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const g=f[p];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),d.push(n[g])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function c(f){return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),i[f]}let u,h;switch(e.type){case"Scene":a=new zh,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new ce(e.background):a.background=c(e.background)),e.environment!==void 0&&(a.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new Nl(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new Fl(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness);break;case"PerspectiveCamera":a=new wt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new br(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Gl(e.color,e.intensity);break;case"DirectionalLight":a=new Vl(e.color,e.intensity);break;case"PointLight":a=new ga(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new U0(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new sf(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new B0(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new Hl().fromJSON(e);break;case"SkinnedMesh":u=o(e.geometry),h=l(e.material),a=new Uh(u,h),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":u=o(e.geometry),h=l(e.material),a=new St(u,h);break;case"InstancedMesh":u=o(e.geometry),h=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;a=new d0(u,h,f),a.instanceMatrix=new hs(new Float32Array(d.array),16),p!==void 0&&(a.instanceColor=new hs(new Float32Array(p.array),p.itemSize));break;case"LOD":a=new f0;break;case"Line":a=new ii(o(e.geometry),l(e.material));break;case"LineLoop":a=new p0(o(e.geometry),l(e.material));break;case"LineSegments":a=new Bn(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":a=new Gh(o(e.geometry),l(e.material));break;case"Sprite":a=new h0(l(e.material));break;case"Group":a=new yi;break;case"Bone":a=new ua;break;default:a=new We}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)a.add(this.parseObject(f[d],t,n,i,s))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];a.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],m=a.getObjectByProperty("uuid",p.object);m!==void 0&&a.addLevel(m,p.distance,p.hysteresis)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const iA={UVMapping:El,CubeReflectionMapping:Mi,CubeRefractionMapping:wi,EquirectangularReflectionMapping:os,EquirectangularRefractionMapping:na,CubeUVReflectionMapping:vs},dp={RepeatWrapping:hr,ClampToEdgeWrapping:Lt,MirroredRepeatWrapping:ia},pp={NearestFilter:pt,NearestMipmapNearestFilter:fl,NearestMipmapLinearFilter:dl,LinearFilter:ot,LinearMipmapNearestFilter:Th,LinearMipmapLinearFilter:vr};class rA extends Kt{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,a=gr.get(e);if(a!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(a),s.manager.itemEnd(e)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){gr.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Po;class af{static getContext(){return Po===void 0&&(Po=new(window.AudioContext||window.webkitAudioContext)),Po}static setContext(e){Po=e}}class sA extends Kt{constructor(e){super(e)}load(e,t,n,i){const s=this,a=new Nn(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{const l=o.slice(0);af.getContext().decodeAudioData(l,function(u){t(u)})}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}}class aA extends Hl{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new ce().set(e),s=new ce().set(t),a=new T(i.r,i.g,i.b),o=new T(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c)}}class oA extends Hl{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new ce().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const mp=new be,gp=new be,Bi=new be;class lA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new wt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new wt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Bi.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,a=t.near*Math.tan(rr*t.fov*.5)/t.zoom;let o,l;gp.elements[12]=-i,mp.elements[12]=i,o=-a*t.aspect+s,l=a*t.aspect+s,Bi.elements[0]=2*t.near/(l-o),Bi.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(Bi),o=-a*t.aspect-s,l=a*t.aspect-s,Bi.elements[0]=2*t.near/(l-o),Bi.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(Bi)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(gp),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(mp)}}class Xl{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=_p(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=_p();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function _p(){return(typeof performance>"u"?Date:performance).now()}const Ui=new T,vp=new bt,cA=new T,Vi=new T;class uA extends We{constructor(){super(),this.type="AudioListener",this.context=af.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Xl}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ui,vp,cA),Vi.set(0,0,-1).applyQuaternion(vp),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ui.x,i),t.positionY.linearRampToValueAtTime(Ui.y,i),t.positionZ.linearRampToValueAtTime(Ui.z,i),t.forwardX.linearRampToValueAtTime(Vi.x,i),t.forwardY.linearRampToValueAtTime(Vi.y,i),t.forwardZ.linearRampToValueAtTime(Vi.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Ui.x,Ui.y,Ui.z),t.setOrientation(Vi.x,Vi.y,Vi.z,n.x,n.y,n.z)}}class W0 extends We{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Gi=new T,yp=new bt,hA=new T,Hi=new T;class fA extends W0{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Gi,yp,hA),Hi.set(0,0,1).applyQuaternion(yp);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Gi.x,n),t.positionY.linearRampToValueAtTime(Gi.y,n),t.positionZ.linearRampToValueAtTime(Gi.z,n),t.orientationX.linearRampToValueAtTime(Hi.x,n),t.orientationY.linearRampToValueAtTime(Hi.y,n),t.orientationZ.linearRampToValueAtTime(Hi.z,n)}else t.setPosition(Gi.x,Gi.y,Gi.z),t.setOrientation(Hi.x,Hi.y,Hi.z)}}class dA{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class X0{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,a;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[s+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,s,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-s,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,a=i;s!==a;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let a=0;a!==s;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){bt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const a=this._workIndex*s;bt.multiplyQuaternionsFlat(e,a,e,t,e,n),bt.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,s){const a=1-i;for(let o=0;o!==s;++o){const l=t+o;e[l]=e[l]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,s){for(let a=0;a!==s;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}}const of="\\[\\]\\.:\\/",pA=new RegExp("["+of+"]","g"),lf="[^"+of+"]",mA="[^"+of.replace("\\.","")+"]",gA=/((?:WC+[\/:])*)/.source.replace("WC",lf),_A=/(WCOD+)?/.source.replace("WCOD",mA),vA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",lf),yA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",lf),xA=new RegExp("^"+gA+_A+vA+yA+"$"),bA=["material","materials","bones","map"];class MA{constructor(e,t,n){const i=n||Ue.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Ue{constructor(e,t,n){this.path=t,this.parsedPath=n||Ue.parseTrackName(t),this.node=Ue.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ue.Composite(e,t,n):new Ue(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(pA,"")}static parseTrackName(e){const t=xA.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);bA.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let a=0;a<s.length;a++){const o=s[a];if(o.name===t||o.uuid===t)return o;const l=n(o.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Ue.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const a=e[i];if(a===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ue.Composite=MA;Ue.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ue.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ue.prototype.GetterByBindingType=[Ue.prototype._getValue_direct,Ue.prototype._getValue_array,Ue.prototype._getValue_arrayElement,Ue.prototype._getValue_toArray];Ue.prototype.SetterByBindingTypeAndVersioning=[[Ue.prototype._setValue_direct,Ue.prototype._setValue_direct_setNeedsUpdate,Ue.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_array,Ue.prototype._setValue_array_setNeedsUpdate,Ue.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_arrayElement,Ue.prototype._setValue_arrayElement_setNeedsUpdate,Ue.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ue.prototype._setValue_fromArray,Ue.prototype._setValue_fromArray_setNeedsUpdate,Ue.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class wA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=an(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,a=s.length;let o,l=e.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let m=0,g=a;m!==g;++m)s[m].push(new Ue(f,n[m],i[m]))}else if(p<c){o=e[p];const m=--c,g=e[m];t[g.uuid]=p,e[p]=g,t[d]=m,e[m]=f;for(let v=0,x=a;v!==x;++v){const _=s[v],y=_[m];let M=_[p];_[p]=y,M===void 0&&(M=new Ue(f,n[v],i[v])),_[m]=M}}else e[p]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a],c=l.uuid,u=t[c];if(u!==void 0&&u>=s){const h=s++,f=e[h];t[f.uuid]=u,e[u]=f,t[c]=h,e[h]=l;for(let d=0,p=i;d!==p;++d){const m=n[d],g=m[h],v=m[u];m[u]=g,m[h]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,a=e.length;for(let o=0,l=arguments.length;o!==l;++o){const c=arguments[o],u=c.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<s){const f=--s,d=e[f],p=--a,m=e[p];t[d.uuid]=h,e[h]=d,t[m.uuid]=f,e[f]=m,e.pop();for(let g=0,v=i;g!==v;++g){const x=n[g],_=x[f],y=x[p];x[h]=_,x[f]=y,x.pop()}}else{const f=--a,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,m=i;p!==m;++p){const g=n[p];g[h]=g[f],g.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const a=this._paths,o=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);i=s.length,n[e]=i,a.push(e),o.push(t),s.push(h);for(let f=u,d=l.length;f!==d;++f){const p=l[f];h[f]=new Ue(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,a=this._bindings,o=a.length-1,l=a[o],c=e[o];t[c]=n,a[n]=l,a.pop(),s[n]=s[o],s.pop(),i[n]=i[o],i.pop()}}}class SA{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,a=s.length,o=new Array(a),l={endingStart:Ji,endingEnd:Ji};for(let c=0;c!==a;++c){const u=s[c].createInterpolant(null);o[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Ph,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=s/i,o=i/s;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=s,l[1]=s+n,c[0]=e/a,c[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Lh:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(a),c[u].accumulateAdditive(o);break;case Cl:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(a),c[u].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const a=n===Wg;if(e===0)return s===-1?i:a&&(s&1)===1?t-i:i;if(n===Hg){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,s+=Math.abs(o);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ki,i.endingEnd=Ki):(e?i.endingStart=this.zeroSlopeAtStart?Ki:Ji:i.endingStart=aa,t?i.endingEnd=this.zeroSlopeAtEnd?Ki:Ji:i.endingEnd=aa)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=s,l[0]=t,o[1]=s+e,l[1]=n,this}}const AA=new Float32Array(1);class $0 extends zn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,a=e._propertyBindings,o=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==s;++h){const f=i[h],d=f.name;let p=u[d];if(p!==void 0)++p.referenceCount,a[h]=p;else{if(p=a[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const m=t&&t._propertyBindings[h].binding.parsedPath;p=new X0(Ue.create(n,d,m),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),a[h]=p}o[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let a=s[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,a=this._actionsByClip,o=a[s],l=o.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=o.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],l.length===0&&delete a[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,a=this._bindingsByRootAndName,o=a[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete o[s],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new ef(new Float32Array(2),new Float32Array(2),1,AA),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let a=typeof e=="string"?mr.findByName(i,e):e;const o=a!==null?a.uuid:e,l=this._actionsByClip[o];let c=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Cl),l!==void 0){const h=l.actionByRoot[s];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],a===null&&(a=c._clip)}if(a===null)return null;const u=new SA(this,a,t,n);return this._bindAction(u,c),this._addInactiveAction(u,o,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?mr.findByName(n,e):e,a=s?s.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),a=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,s,a);const o=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)o[c].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const a=s.knownActions;for(let o=0,l=a.length;o!==l;++o){const c=a[o];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,l=o[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const a in s){const o=s[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class cf{constructor(e){this.value=e}clone(){return new cf(this.value.clone===void 0?this.value:this.value.clone())}}let TA=0;class EA extends zn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:TA++}),this.name="",this.usage=oa,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class CA extends kl{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class PA{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class LA{constructor(e,t,n=0,i=1/0){this.ray=new Aa(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Ll,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Hu(e,this,n,t),n.sort(xp),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Hu(e[i],this,n,t);return n.sort(xp),n}}function xp(r,e){return r.distance-e.distance}function Hu(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,a=i.length;s<a;s++)Hu(i[s],e,t,!0)}}class Wu{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(mt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class RA{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const bp=new q;class IA{constructor(e=new q(1/0,1/0),t=new q(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=bp.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return bp.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Mp=new T,Lo=new T;class DA{constructor(e=new T,t=new T){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Mp.subVectors(e,this.start),Lo.subVectors(this.end,this.start);const n=Lo.dot(Lo);let s=Lo.dot(Mp)/n;return t&&(s=mt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const wp=new T;class OA extends We{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new De,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const c=a/l*Math.PI*2,u=o/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new ge(i,3));const s=new zt({fog:!1,toneMapped:!1});this.cone=new Bn(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),wp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(wp),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const mi=new T,Ro=new be,Wc=new be;class FA extends Bn{constructor(e){const t=q0(e),n=new De,i=[],s=[],a=new ce(0,0,1),o=new ce(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(a.r,a.g,a.b),s.push(o.r,o.g,o.b))}n.setAttribute("position",new ge(i,3)),n.setAttribute("color",new ge(s,3));const l=new zt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Wc.copy(this.root.matrixWorld).invert();for(let s=0,a=0;s<t.length;s++){const o=t[s];o.parent&&o.parent.isBone&&(Ro.multiplyMatrices(Wc,o.matrixWorld),mi.setFromMatrixPosition(Ro),i.setXYZ(a,mi.x,mi.y,mi.z),Ro.multiplyMatrices(Wc,o.parent.matrixWorld),mi.setFromMatrixPosition(Ro),i.setXYZ(a+1,mi.x,mi.y,mi.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function q0(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,q0(r.children[t]));return e}class j0 extends St{constructor(e,t,n){const i=new ws(t,4,2),s=new Ci({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const NA=new T,Sp=new ce,Ap=new ce;class kA extends We{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Ms(t);i.rotateY(Math.PI*.5),this.material=new Ci({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),a=new Float32Array(s.count*3);i.setAttribute("color",new nt(a,3)),this.add(new St(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Sp.copy(this.light.color),Ap.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?Sp:Ap;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(NA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class zA extends Bn{constructor(e=10,t=10,n=4473924,i=8947848){n=new ce(n),i=new ce(i);const s=t/2,a=e/t,o=e/2,l=[],c=[];for(let f=0,d=0,p=-o;f<=t;f++,p+=a){l.push(-o,0,p,o,0,p),l.push(p,0,-o,p,0,o);const m=f===s?n:i;m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3}const u=new De;u.setAttribute("position",new ge(l,3)),u.setAttribute("color",new ge(c,3));const h=new zt({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class BA extends Bn{constructor(e=10,t=16,n=8,i=64,s=4473924,a=8947848){s=new ce(s),a=new ce(a);const o=[],l=[];if(t>1)for(let h=0;h<t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;o.push(0,0,0),o.push(d,0,p);const m=h&1?s:a;l.push(m.r,m.g,m.b),l.push(m.r,m.g,m.b)}for(let h=0;h<n;h++){const f=h&1?s:a,d=e-e/n*h;for(let p=0;p<i;p++){let m=p/i*(Math.PI*2),g=Math.sin(m)*d,v=Math.cos(m)*d;o.push(g,0,v),l.push(f.r,f.g,f.b),m=(p+1)/i*(Math.PI*2),g=Math.sin(m)*d,v=Math.cos(m)*d,o.push(g,0,v),l.push(f.r,f.g,f.b)}}const c=new De;c.setAttribute("position",new ge(o,3)),c.setAttribute("color",new ge(l,3));const u=new zt({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Tp=new T,Io=new T,Ep=new T;class Y0 extends We{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new De;i.setAttribute("position",new ge([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new zt({fog:!1,toneMapped:!1});this.lightPlane=new ii(i,s),this.add(this.lightPlane),i=new De,i.setAttribute("position",new ge([0,0,0,0,0,1],3)),this.targetLine=new ii(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Tp.setFromMatrixPosition(this.light.matrixWorld),Io.setFromMatrixPosition(this.light.target.matrixWorld),Ep.subVectors(Io,Tp),this.lightPlane.lookAt(Io),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Io),this.targetLine.scale.z=Ep.length()}}const Do=new T,ht=new Il;class UA extends Bn{constructor(e){const t=new De,n=new zt({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(p,m){l(p),l(m)}function l(p){i.push(0,0,0),s.push(0,0,0),a[p]===void 0&&(a[p]=[]),a[p].push(i.length/3-1)}t.setAttribute("position",new ge(i,3)),t.setAttribute("color",new ge(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const c=new ce(16755200),u=new ce(16711680),h=new ce(43775),f=new ce(16777215),d=new ce(3355443);this.setColors(c,u,h,f,d)}setColors(e,t,n,i,s){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,i.r,i.g,i.b),o.setXYZ(39,i.r,i.g,i.b),o.setXYZ(40,s.r,s.g,s.b),o.setXYZ(41,s.r,s.g,s.b),o.setXYZ(42,s.r,s.g,s.b),o.setXYZ(43,s.r,s.g,s.b),o.setXYZ(44,s.r,s.g,s.b),o.setXYZ(45,s.r,s.g,s.b),o.setXYZ(46,s.r,s.g,s.b),o.setXYZ(47,s.r,s.g,s.b),o.setXYZ(48,s.r,s.g,s.b),o.setXYZ(49,s.r,s.g,s.b),o.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;ht.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),ft("c",t,e,ht,0,0,-1),ft("t",t,e,ht,0,0,1),ft("n1",t,e,ht,-n,-i,-1),ft("n2",t,e,ht,n,-i,-1),ft("n3",t,e,ht,-n,i,-1),ft("n4",t,e,ht,n,i,-1),ft("f1",t,e,ht,-n,-i,1),ft("f2",t,e,ht,n,-i,1),ft("f3",t,e,ht,-n,i,1),ft("f4",t,e,ht,n,i,1),ft("u1",t,e,ht,n*.7,i*1.1,-1),ft("u2",t,e,ht,-n*.7,i*1.1,-1),ft("u3",t,e,ht,0,i*2,-1),ft("cf1",t,e,ht,-n,0,1),ft("cf2",t,e,ht,n,0,1),ft("cf3",t,e,ht,0,-i,1),ft("cf4",t,e,ht,0,i,1),ft("cn1",t,e,ht,-n,0,-1),ft("cn2",t,e,ht,n,0,-1),ft("cn3",t,e,ht,0,-i,-1),ft("cn4",t,e,ht,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function ft(r,e,t,n,i,s,a){Do.set(i,s,a).unproject(n);const o=e[r];if(o!==void 0){const l=t.getAttribute("position");for(let c=0,u=o.length;c<u;c++)l.setXYZ(o[c],Do.x,Do.y,Do.z)}}const Oo=new yr;class VA extends Bn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new De;s.setIndex(new nt(n,1)),s.setAttribute("position",new nt(i,3)),super(s,new zt({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Oo.setFromObject(this.object),Oo.isEmpty())return;const t=Oo.min,n=Oo.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class GA extends Bn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new De;s.setIndex(new nt(n,1)),s.setAttribute("position",new ge(i,3)),super(s,new zt({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class HA extends ii{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new De;a.setAttribute("position",new ge(s,3)),a.computeBoundingSphere(),super(a,new zt({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new De;l.setAttribute("position",new ge(o,3)),l.computeBoundingSphere(),this.add(new St(l,new Ci({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Cp=new T;let Fo,Xc;class WA extends We{constructor(e=new T(0,0,1),t=new T(0,0,0),n=1,i=16776960,s=n*.2,a=s*.2){super(),this.type="ArrowHelper",Fo===void 0&&(Fo=new De,Fo.setAttribute("position",new ge([0,0,0,0,1,0],3)),Xc=new Mr(0,.5,1,5,1),Xc.translate(0,-.5,0)),this.position.copy(t),this.line=new ii(Fo,new zt({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new St(Xc,new Ci({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Cp.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Cp,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class XA extends Bn{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new De;i.setAttribute("position",new ge(t,3)),i.setAttribute("color",new ge(n,3));const s=new zt({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new ce,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class $A{constructor(){this.type="ShapePath",this.color=new ce,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new ha,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,a){return this.currentPath.bezierCurveTo(e,t,n,i,s,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const x=[];for(let _=0,y=v.length;_<y;_++){const M=v[_],w=new or;w.curves=M.curves,x.push(w)}return x}function n(v,x){const _=x.length;let y=!1;for(let M=_-1,w=0;w<_;M=w++){let C=x[M],b=x[w],A=b.x-C.x,L=b.y-C.y;if(Math.abs(L)>Number.EPSILON){if(L<0&&(C=x[w],A=-A,b=x[M],L=-L),v.y<C.y||v.y>b.y)continue;if(v.y===C.y){if(v.x===C.x)return!0}else{const k=L*(v.x-C.x)-A*(v.y-C.y);if(k===0)return!0;if(k<0)continue;y=!y}}else{if(v.y!==C.y)continue;if(b.x<=v.x&&v.x<=C.x||C.x<=v.x&&v.x<=b.x)return!0}}return y}const i=Dn.isClockWise,s=this.subPaths;if(s.length===0)return[];let a,o,l;const c=[];if(s.length===1)return o=s[0],l=new or,l.curves=o.curves,c.push(l),c;let u=!i(s[0].getPoints());u=e?!u:u;const h=[],f=[];let d=[],p=0,m;f[p]=void 0,d[p]=[];for(let v=0,x=s.length;v<x;v++)o=s[v],m=o.getPoints(),a=i(m),a=e?!a:a,a?(!u&&f[p]&&p++,f[p]={s:new or,p:m},f[p].s.curves=o.curves,u&&p++,d[p]=[]):d[p].push({h:o,p:m[0]});if(!f[0])return t(s);if(f.length>1){let v=!1,x=0;for(let _=0,y=f.length;_<y;_++)h[_]=[];for(let _=0,y=f.length;_<y;_++){const M=d[_];for(let w=0;w<M.length;w++){const C=M[w];let b=!0;for(let A=0;A<f.length;A++)n(C.p,f[A].p)&&(_!==A&&x++,b?(b=!1,h[A].push(C)):v=!0);b&&h[_].push(C)}}x>0&&v===!1&&(d=h)}let g;for(let v=0,x=f.length;v<x;v++){l=f[v].s,c.push(l),g=d[v];for(let _=0,y=g.length;_<y;_++)l.holes.push(g[_].h)}return c}}const jn=qA();function qA(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;(c&8388608)===0;)c<<=1,u-=8388608;c&=-8388609,u+=947912704,s[l]=c|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:a,offsetTable:o}}function jA(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=mt(r,-65504,65504),jn.floatView[0]=r;const e=jn.uint32View[0],t=e>>23&511;return jn.baseTable[t]+((e&8388607)>>jn.shiftTable[t])}function YA(r){const e=r>>10;return jn.uint32View[0]=jn.mantissaTable[jn.offsetTable[e]+(r&1023)]+jn.exponentTable[e],jn.floatView[0]}var ZA=Object.freeze({__proto__:null,toHalfFloat:jA,fromHalfFloat:YA});function JA(){console.error("THREE.ImmediateRenderObject has been removed.")}class KA extends Zt{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class QA extends Sa{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class eT extends Pl{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}class tT extends Pi{constructor(e,t,n,i,s,a){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,s,a)}}class nT extends Pa{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class iT extends La{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class rT extends Ra{constructor(e,t,n,i,s,a,o){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,s,a,o)}}class sT extends Mr{constructor(e,t,n,i,s,a,o,l){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,s,a,o,l)}}class aT extends Ia{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class oT extends Da{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class lT extends Oa{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class cT extends bs{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class uT extends Ms{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class hT extends ys{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class fT extends oi{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class dT extends Fa{constructor(e,t,n,i,s,a){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,s,a)}}class pT extends Na{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class mT extends ws{constructor(e,t,n,i,s,a,o){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,s,a,o)}}class gT extends ka{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class _T extends za{constructor(e,t,n,i,s){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,s)}}class vT extends Ba{constructor(e,t,n,i,s,a){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,s,a)}}class yT extends Ua{constructor(e,t,n,i,s){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,s)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Tl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Tl);const Z0=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Ah,AddEquation:Yi,AddOperation:hl,AdditiveAnimationBlendMode:Lh,AdditiveBlending:cl,AlphaFormat:Og,AlwaysDepth:Mg,AlwaysStencilFunc:jg,AmbientLight:Gl,AmbientLightProbe:oA,AnimationClip:mr,AnimationLoader:ZS,AnimationMixer:$0,AnimationObjectGroup:wA,AnimationUtils:D0,ArcCurve:m0,ArrayCamera:o0,ArrowHelper:WA,Audio:W0,AudioAnalyser:dA,AudioContext:af,AudioListener:uA,AudioLoader:sA,AxesHelper:XA,BackSide:jt,BasicDepthPacking:Xg,BasicShadowMap:xy,Bone:ua,BooleanKeyframeTrack:wr,Box2:IA,Box3:yr,Box3Helper:GA,BoxBufferGeometry:tT,BoxGeometry:Pi,BoxHelper:VA,BufferAttribute:nt,BufferGeometry:De,BufferGeometryLoader:H0,ByteType:Pg,Cache:gr,Camera:Il,CameraHelper:UA,CanvasTexture:_S,CapsuleBufferGeometry:nT,CapsuleGeometry:Pa,CatmullRomCurve3:g0,CineonToneMapping:Sh,CircleBufferGeometry:iT,CircleGeometry:La,ClampToEdgeWrapping:Lt,Clock:Xl,Color:ce,ColorKeyframeTrack:tf,ColorManagement:Ot,CompressedArrayTexture:gS,CompressedTexture:Hh,CompressedTextureLoader:JS,ConeBufferGeometry:rT,ConeGeometry:Ra,CubeCamera:Qg,CubeReflectionMapping:Mi,CubeRefractionMapping:wi,CubeTexture:Ea,CubeTextureLoader:z0,CubeUVReflectionMapping:vs,CubicBezierCurve:Xh,CubicBezierCurve3:_0,CubicInterpolant:O0,CullFaceBack:cu,CullFaceFront:og,CullFaceFrontBack:yy,CullFaceNone:ag,Curve:vn,CurvePath:y0,CustomBlending:cg,CustomToneMapping:Cg,CylinderBufferGeometry:sT,CylinderGeometry:Mr,Cylindrical:RA,Data3DTexture:Pl,DataArrayTexture:Sa,DataTexture:ar,DataTexture2DArray:QA,DataTexture3D:eT,DataTextureLoader:KS,DataUtils:ZA,DecrementStencilOp:Iy,DecrementWrapStencilOp:Oy,DefaultLoadingManager:k0,DepthFormat:xi,DepthStencilFormat:fr,DepthTexture:l0,DirectionalLight:Vl,DirectionalLightHelper:Y0,DiscreteInterpolant:F0,DodecahedronBufferGeometry:aT,DodecahedronGeometry:Ia,DoubleSide:Rn,DstAlphaFactor:gg,DstColorFactor:vg,DynamicCopyUsage:Yy,DynamicDrawUsage:Hy,DynamicReadUsage:$y,EdgesGeometry:x0,EllipseCurve:zl,EqualDepth:wg,EqualStencilFunc:zy,EquirectangularReflectionMapping:os,EquirectangularRefractionMapping:na,Euler:qt,EventDispatcher:zn,ExtrudeBufferGeometry:oT,ExtrudeGeometry:Da,FileLoader:Nn,Float16BufferAttribute:Px,Float32BufferAttribute:ge,Float64BufferAttribute:Lx,FloatType:Zn,Fog:Nl,FogExp2:Fl,FramebufferTexture:mS,FrontSide:cr,Frustum:Dl,GLBufferAttribute:PA,GLSL1:Jy,GLSL3:Fu,GreaterDepth:Ag,GreaterEqualDepth:Sg,GreaterEqualStencilFunc:Gy,GreaterStencilFunc:Uy,GridHelper:zA,Group:yi,HalfFloatType:ls,HemisphereLight:B0,HemisphereLightHelper:kA,HemisphereLightProbe:aA,IcosahedronBufferGeometry:lT,IcosahedronGeometry:Oa,ImageBitmapLoader:rA,ImageLoader:ma,ImageUtils:Ih,ImmediateRenderObject:JA,IncrementStencilOp:Ry,IncrementWrapStencilOp:Dy,InstancedBufferAttribute:hs,InstancedBufferGeometry:G0,InstancedInterleavedBuffer:CA,InstancedMesh:d0,Int16BufferAttribute:Ex,Int32BufferAttribute:Cx,Int8BufferAttribute:Sx,IntType:Rg,InterleavedBuffer:kl,InterleavedBufferAttribute:dr,Interpolant:Va,InterpolateDiscrete:ra,InterpolateLinear:sa,InterpolateSmooth:qo,InvertStencilOp:Fy,KeepStencilOp:jo,KeyframeTrack:Pn,LOD:f0,LatheBufferGeometry:cT,LatheGeometry:bs,Layers:Ll,LessDepth:bh,LessEqualDepth:ul,LessEqualStencilFunc:By,LessStencilFunc:ky,Light:Li,LightProbe:Hl,Line:ii,Line3:DA,LineBasicMaterial:zt,LineCurve:Bl,LineCurve3:v0,LineDashedMaterial:R0,LineLoop:p0,LineSegments:Bn,LinearEncoding:Ai,LinearFilter:ot,LinearInterpolant:ef,LinearMipMapLinearFilter:Sy,LinearMipMapNearestFilter:wy,LinearMipmapLinearFilter:vr,LinearMipmapNearestFilter:Th,LinearSRGBColorSpace:cs,LinearToneMapping:Mh,Loader:Kt,LoaderUtils:ps,LoadingManager:nf,LoopOnce:Hg,LoopPingPong:Wg,LoopRepeat:Ph,LuminanceAlphaFormat:Ng,LuminanceFormat:Ch,MOUSE:Xi,Material:kt,MaterialLoader:Wl,MathUtils:Tn,Matrix3:Nt,Matrix4:be,MaxEquation:du,Mesh:St,MeshBasicMaterial:Ci,MeshDepthMaterial:Fh,MeshDistanceMaterial:Nh,MeshLambertMaterial:Jh,MeshMatcapMaterial:L0,MeshNormalMaterial:P0,MeshPhongMaterial:Ys,MeshPhysicalMaterial:E0,MeshStandardMaterial:Zh,MeshToonMaterial:C0,MinEquation:fu,MirroredRepeatWrapping:ia,MixOperation:Eg,MultiplyBlending:hu,MultiplyOperation:ur,NearestFilter:pt,NearestMipMapLinearFilter:My,NearestMipMapNearestFilter:by,NearestMipmapLinearFilter:dl,NearestMipmapNearestFilter:fl,NeverDepth:bg,NeverStencilFunc:Ny,NoBlending:ni,NoColorSpace:Cy,NoToneMapping:Cn,NormalAnimationBlendMode:Cl,NormalBlending:nr,NotEqualDepth:Tg,NotEqualStencilFunc:Vy,NumberKeyframeTrack:fs,Object3D:We,ObjectLoader:nA,ObjectSpaceNormalMap:qg,OctahedronBufferGeometry:uT,OctahedronGeometry:Ms,OneFactor:dg,OneMinusDstAlphaFactor:_g,OneMinusDstColorFactor:yg,OneMinusSrcAlphaFactor:xh,OneMinusSrcColorFactor:mg,OrthographicCamera:br,PCFShadowMap:vh,PCFSoftShadowMap:lg,PMREMGenerator:ku,Path:ha,PerspectiveCamera:wt,Plane:_i,PlaneBufferGeometry:hT,PlaneGeometry:ys,PlaneHelper:HA,PointLight:ga,PointLightHelper:j0,Points:Gh,PointsMaterial:Vh,PolarGridHelper:BA,PolyhedronBufferGeometry:fT,PolyhedronGeometry:oi,PositionalAudio:fA,PropertyBinding:Ue,PropertyMixer:X0,QuadraticBezierCurve:$h,QuadraticBezierCurve3:qh,Quaternion:bt,QuaternionKeyframeTrack:Sr,QuaternionLinearInterpolant:N0,REVISION:Tl,RGBADepthPacking:$g,RGBAFormat:$t,RGBAIntegerFormat:Vg,RGBA_ASTC_10x10_Format:Ru,RGBA_ASTC_10x5_Format:Cu,RGBA_ASTC_10x6_Format:Pu,RGBA_ASTC_10x8_Format:Lu,RGBA_ASTC_12x10_Format:Iu,RGBA_ASTC_12x12_Format:Du,RGBA_ASTC_4x4_Format:xu,RGBA_ASTC_5x4_Format:bu,RGBA_ASTC_5x5_Format:Mu,RGBA_ASTC_6x5_Format:wu,RGBA_ASTC_6x6_Format:Su,RGBA_ASTC_8x5_Format:Au,RGBA_ASTC_8x6_Format:Tu,RGBA_ASTC_8x8_Format:Eu,RGBA_BPTC_Format:Ou,RGBA_ETC2_EAC_Format:yu,RGBA_PVRTC_2BPPV1_Format:_u,RGBA_PVRTC_4BPPV1_Format:gu,RGBA_S3TC_DXT1_Format:Wo,RGBA_S3TC_DXT3_Format:Xo,RGBA_S3TC_DXT5_Format:$o,RGBFormat:Fg,RGB_ETC1_Format:Gg,RGB_ETC2_Format:vu,RGB_PVRTC_2BPPV1_Format:mu,RGB_PVRTC_4BPPV1_Format:pu,RGB_S3TC_DXT1_Format:Ho,RGFormat:Bg,RGIntegerFormat:Ug,RawShaderMaterial:T0,Ray:Aa,Raycaster:LA,RectAreaLight:U0,RedFormat:kg,RedIntegerFormat:zg,ReinhardToneMapping:wh,RepeatWrapping:hr,ReplaceStencilOp:Ly,ReverseSubtractEquation:hg,RingBufferGeometry:dT,RingGeometry:Fa,SRGBColorSpace:Sn,Scene:zh,ShaderChunk:Ne,ShaderLib:Ft,ShaderMaterial:Ht,ShadowMaterial:A0,Shape:or,ShapeBufferGeometry:pT,ShapeGeometry:Na,ShapePath:$A,ShapeUtils:Dn,ShortType:Lg,Skeleton:Ca,SkeletonHelper:FA,SkinnedMesh:Uh,Source:Qi,Sphere:xr,SphereBufferGeometry:mT,SphereGeometry:ws,Spherical:Wu,SphericalHarmonics3:V0,SplineCurve:jh,SpotLight:sf,SpotLightHelper:OA,Sprite:h0,SpriteMaterial:Bh,SrcAlphaFactor:yh,SrcAlphaSaturateFactor:xg,SrcColorFactor:pg,StaticCopyUsage:jy,StaticDrawUsage:oa,StaticReadUsage:Xy,StereoCamera:lA,StreamCopyUsage:Zy,StreamDrawUsage:Wy,StreamReadUsage:qy,StringKeyframeTrack:Ar,SubtractEquation:ug,SubtractiveBlending:uu,TOUCH:$i,TangentSpaceNormalMap:ai,TetrahedronBufferGeometry:gT,TetrahedronGeometry:ka,Texture:ct,TextureLoader:Tr,TorusBufferGeometry:_T,TorusGeometry:za,TorusKnotBufferGeometry:vT,TorusKnotGeometry:Ba,Triangle:pn,TriangleFanDrawMode:Ey,TriangleStripDrawMode:Ty,TrianglesDrawMode:Ay,TubeBufferGeometry:yT,TubeGeometry:Ua,UVMapping:El,Uint16BufferAttribute:Rl,Uint32BufferAttribute:Dh,Uint8BufferAttribute:Ax,Uint8ClampedBufferAttribute:Tx,Uniform:cf,UniformsGroup:EA,UniformsLib:ue,UniformsUtils:Ta,UnsignedByteType:Si,UnsignedInt248Type:ir,UnsignedIntType:vi,UnsignedShort4444Type:Ig,UnsignedShort5551Type:Dg,UnsignedShortType:Eh,VSMShadowMap:Kr,Vector2:q,Vector3:T,Vector4:Ye,VectorKeyframeTrack:ds,VideoTexture:pS,WebGL1Renderer:c0,WebGL3DRenderTarget:px,WebGLArrayRenderTarget:dx,WebGLCubeRenderTarget:e0,WebGLMultipleRenderTargets:mx,WebGLMultisampleRenderTarget:KA,WebGLRenderTarget:Zt,WebGLRenderer:kh,WebGLUtils:a0,WireframeGeometry:S0,WrapAroundEnding:aa,ZeroCurvatureEnding:Ji,ZeroFactor:fg,ZeroSlopeEnding:Ki,ZeroStencilOp:Py,_SRGBAFormat:pl,sRGBEncoding:Ve},Symbol.toStringTag,{value:"Module"})),Pp={type:"change"},$c={type:"start"},Lp={type:"end"};class xT extends zn{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new T,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Xi.ROTATE,MIDDLE:Xi.DOLLY,RIGHT:Xi.PAN},this.touches={ONE:$i.ROTATE,TWO:$i.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(R){R.addEventListener("keydown",Ze),this._domElementKeyEvents=R},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Pp),n.update(),s=i.NONE},this.update=function(){const R=new T,F=new bt().setFromUnitVectors(e.up,new T(0,1,0)),me=F.clone().invert(),ye=new T,_e=new bt,Se=2*Math.PI;return function(){const He=n.object.position;R.copy(He).sub(n.target),R.applyQuaternion(F),o.setFromVector3(R),n.autoRotate&&s===i.NONE&&A(C()),n.enableDamping?(o.theta+=l.theta*n.dampingFactor,o.phi+=l.phi*n.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let Xe=n.minAzimuthAngle,tt=n.maxAzimuthAngle;return isFinite(Xe)&&isFinite(tt)&&(Xe<-Math.PI?Xe+=Se:Xe>Math.PI&&(Xe-=Se),tt<-Math.PI?tt+=Se:tt>Math.PI&&(tt-=Se),Xe<=tt?o.theta=Math.max(Xe,Math.min(tt,o.theta)):o.theta=o.theta>(Xe+tt)/2?Math.max(Xe,o.theta):Math.min(tt,o.theta)),o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),o.radius*=c,o.radius=Math.max(n.minDistance,Math.min(n.maxDistance,o.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),R.setFromSpherical(o),R.applyQuaternion(me),He.copy(n.target).add(R),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||ye.distanceToSquared(n.object.position)>a||8*(1-_e.dot(n.object.quaternion))>a?(n.dispatchEvent(Pp),ye.copy(n.object.position),_e.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",H),n.domElement.removeEventListener("pointerdown",oe),n.domElement.removeEventListener("pointercancel",Ie),n.domElement.removeEventListener("wheel",et),n.domElement.removeEventListener("pointermove",xe),n.domElement.removeEventListener("pointerup",he),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Ze)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=i.NONE;const a=1e-6,o=new Wu,l=new Wu;let c=1;const u=new T;let h=!1;const f=new q,d=new q,p=new q,m=new q,g=new q,v=new q,x=new q,_=new q,y=new q,M=[],w={};function C(){return 2*Math.PI/60/60*n.autoRotateSpeed}function b(){return Math.pow(.95,n.zoomSpeed)}function A(R){l.theta-=R}function L(R){l.phi-=R}const k=function(){const R=new T;return function(me,ye){R.setFromMatrixColumn(ye,0),R.multiplyScalar(-me),u.add(R)}}(),W=function(){const R=new T;return function(me,ye){n.screenSpacePanning===!0?R.setFromMatrixColumn(ye,1):(R.setFromMatrixColumn(ye,0),R.crossVectors(n.object.up,R)),R.multiplyScalar(me),u.add(R)}}(),O=function(){const R=new T;return function(me,ye){const _e=n.domElement;if(n.object.isPerspectiveCamera){const Se=n.object.position;R.copy(Se).sub(n.target);let Me=R.length();Me*=Math.tan(n.object.fov/2*Math.PI/180),k(2*me*Me/_e.clientHeight,n.object.matrix),W(2*ye*Me/_e.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(k(me*(n.object.right-n.object.left)/n.object.zoom/_e.clientWidth,n.object.matrix),W(ye*(n.object.top-n.object.bottom)/n.object.zoom/_e.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function I(R){n.object.isPerspectiveCamera?c/=R:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*R)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function B(R){n.object.isPerspectiveCamera?c*=R:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/R)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function G(R){f.set(R.clientX,R.clientY)}function K(R){x.set(R.clientX,R.clientY)}function X(R){m.set(R.clientX,R.clientY)}function te(R){d.set(R.clientX,R.clientY),p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const F=n.domElement;A(2*Math.PI*p.x/F.clientHeight),L(2*Math.PI*p.y/F.clientHeight),f.copy(d),n.update()}function Z(R){_.set(R.clientX,R.clientY),y.subVectors(_,x),y.y>0?I(b()):y.y<0&&B(b()),x.copy(_),n.update()}function U(R){g.set(R.clientX,R.clientY),v.subVectors(g,m).multiplyScalar(n.panSpeed),O(v.x,v.y),m.copy(g),n.update()}function V(R){R.deltaY<0?B(b()):R.deltaY>0&&I(b()),n.update()}function se(R){let F=!1;switch(R.code){case n.keys.UP:R.ctrlKey||R.metaKey||R.shiftKey?L(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):O(0,n.keyPanSpeed),F=!0;break;case n.keys.BOTTOM:R.ctrlKey||R.metaKey||R.shiftKey?L(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):O(0,-n.keyPanSpeed),F=!0;break;case n.keys.LEFT:R.ctrlKey||R.metaKey||R.shiftKey?A(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):O(n.keyPanSpeed,0),F=!0;break;case n.keys.RIGHT:R.ctrlKey||R.metaKey||R.shiftKey?A(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):O(-n.keyPanSpeed,0),F=!0;break}F&&(R.preventDefault(),n.update())}function ne(){if(M.length===1)f.set(M[0].pageX,M[0].pageY);else{const R=.5*(M[0].pageX+M[1].pageX),F=.5*(M[0].pageY+M[1].pageY);f.set(R,F)}}function ie(){if(M.length===1)m.set(M[0].pageX,M[0].pageY);else{const R=.5*(M[0].pageX+M[1].pageX),F=.5*(M[0].pageY+M[1].pageY);m.set(R,F)}}function $(){const R=M[0].pageX-M[1].pageX,F=M[0].pageY-M[1].pageY,me=Math.sqrt(R*R+F*F);x.set(0,me)}function Ee(){n.enableZoom&&$(),n.enablePan&&ie()}function pe(){n.enableZoom&&$(),n.enableRotate&&ne()}function Ce(R){if(M.length==1)d.set(R.pageX,R.pageY);else{const me=Re(R),ye=.5*(R.pageX+me.x),_e=.5*(R.pageY+me.y);d.set(ye,_e)}p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const F=n.domElement;A(2*Math.PI*p.x/F.clientHeight),L(2*Math.PI*p.y/F.clientHeight),f.copy(d)}function fe(R){if(M.length===1)g.set(R.pageX,R.pageY);else{const F=Re(R),me=.5*(R.pageX+F.x),ye=.5*(R.pageY+F.y);g.set(me,ye)}v.subVectors(g,m).multiplyScalar(n.panSpeed),O(v.x,v.y),m.copy(g)}function Oe(R){const F=Re(R),me=R.pageX-F.x,ye=R.pageY-F.y,_e=Math.sqrt(me*me+ye*ye);_.set(0,_e),y.set(0,Math.pow(_.y/x.y,n.zoomSpeed)),I(y.y),x.copy(_)}function Q(R){n.enableZoom&&Oe(R),n.enablePan&&fe(R)}function ee(R){n.enableZoom&&Oe(R),n.enableRotate&&Ce(R)}function oe(R){n.enabled!==!1&&(M.length===0&&(n.domElement.setPointerCapture(R.pointerId),n.domElement.addEventListener("pointermove",xe),n.domElement.addEventListener("pointerup",he)),re(R),R.pointerType==="touch"?P(R):Pe(R))}function xe(R){n.enabled!==!1&&(R.pointerType==="touch"?S(R):Te(R))}function he(R){le(R),M.length===0&&(n.domElement.releasePointerCapture(R.pointerId),n.domElement.removeEventListener("pointermove",xe),n.domElement.removeEventListener("pointerup",he)),n.dispatchEvent(Lp),s=i.NONE}function Ie(R){le(R)}function Pe(R){let F;switch(R.button){case 0:F=n.mouseButtons.LEFT;break;case 1:F=n.mouseButtons.MIDDLE;break;case 2:F=n.mouseButtons.RIGHT;break;default:F=-1}switch(F){case Xi.DOLLY:if(n.enableZoom===!1)return;K(R),s=i.DOLLY;break;case Xi.ROTATE:if(R.ctrlKey||R.metaKey||R.shiftKey){if(n.enablePan===!1)return;X(R),s=i.PAN}else{if(n.enableRotate===!1)return;G(R),s=i.ROTATE}break;case Xi.PAN:if(R.ctrlKey||R.metaKey||R.shiftKey){if(n.enableRotate===!1)return;G(R),s=i.ROTATE}else{if(n.enablePan===!1)return;X(R),s=i.PAN}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent($c)}function Te(R){switch(s){case i.ROTATE:if(n.enableRotate===!1)return;te(R);break;case i.DOLLY:if(n.enableZoom===!1)return;Z(R);break;case i.PAN:if(n.enablePan===!1)return;U(R);break}}function et(R){n.enabled===!1||n.enableZoom===!1||s!==i.NONE||(R.preventDefault(),n.dispatchEvent($c),V(R),n.dispatchEvent(Lp))}function Ze(R){n.enabled===!1||n.enablePan===!1||se(R)}function P(R){switch(de(R),M.length){case 1:switch(n.touches.ONE){case $i.ROTATE:if(n.enableRotate===!1)return;ne(),s=i.TOUCH_ROTATE;break;case $i.PAN:if(n.enablePan===!1)return;ie(),s=i.TOUCH_PAN;break;default:s=i.NONE}break;case 2:switch(n.touches.TWO){case $i.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ee(),s=i.TOUCH_DOLLY_PAN;break;case $i.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;pe(),s=i.TOUCH_DOLLY_ROTATE;break;default:s=i.NONE}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent($c)}function S(R){switch(de(R),s){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;Ce(R),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;fe(R),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Q(R),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ee(R),n.update();break;default:s=i.NONE}}function H(R){n.enabled!==!1&&R.preventDefault()}function re(R){M.push(R)}function le(R){delete w[R.pointerId];for(let F=0;F<M.length;F++)if(M[F].pointerId==R.pointerId){M.splice(F,1);return}}function de(R){let F=w[R.pointerId];F===void 0&&(F=new q,w[R.pointerId]=F),F.set(R.pageX,R.pageY)}function Re(R){const F=R.pointerId===M[0].pointerId?M[1]:M[0];return w[F.pointerId]}n.domElement.addEventListener("contextmenu",H),n.domElement.addEventListener("pointerdown",oe),n.domElement.addEventListener("pointercancel",Ie),n.domElement.addEventListener("wheel",et,{passive:!1}),this.update()}}const J0="fbx",K0="animations",bT="img/textures/matcap",$l="data";/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/var Rp={},Xu=function(r){return URL.createObjectURL(new Blob([r],{type:"text/javascript"}))},Q0=function(r){return new Worker(r)};try{URL.revokeObjectURL(Xu(""))}catch{Xu=function(e){return"data:application/javascript;charset=UTF-8,"+encodeURI(e)},Q0=function(e){return new Worker(e,{type:"module"})}}var MT=function(r,e,t,n,i){var s=Q0(Rp[e]||(Rp[e]=Xu(r)));return s.onerror=function(a){return i(a.error,null)},s.onmessage=function(a){return i(null,a.data)},s.postMessage(t,n),s},Ge=Uint8Array,Rt=Uint16Array,ri=Uint32Array,Ss=new Ge([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),As=new Ge([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),_a=new Ge([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),e_=function(r,e){for(var t=new Rt(31),n=0;n<31;++n)t[n]=e+=1<<r[n-1];for(var i=new ri(t[30]),n=1;n<30;++n)for(var s=t[n];s<t[n+1];++s)i[s]=s-t[n]<<5|n;return[t,i]},t_=e_(Ss,2),uf=t_[0],gl=t_[1];uf[28]=258,gl[258]=28;var n_=e_(As,0),i_=n_[0],$u=n_[1],va=new Rt(32768);for(var st=0;st<32768;++st){var gi=(st&43690)>>>1|(st&21845)<<1;gi=(gi&52428)>>>2|(gi&13107)<<2,gi=(gi&61680)>>>4|(gi&3855)<<4,va[st]=((gi&65280)>>>8|(gi&255)<<8)>>>1}var mn=function(r,e,t){for(var n=r.length,i=0,s=new Rt(e);i<n;++i)++s[r[i]-1];var a=new Rt(e);for(i=0;i<e;++i)a[i]=a[i-1]+s[i-1]<<1;var o;if(t){o=new Rt(1<<e);var l=15-e;for(i=0;i<n;++i)if(r[i])for(var c=i<<4|r[i],u=e-r[i],h=a[r[i]-1]++<<u,f=h|(1<<u)-1;h<=f;++h)o[va[h]>>>l]=c}else for(o=new Rt(n),i=0;i<n;++i)r[i]&&(o[i]=va[a[r[i]-1]++]>>>15-r[i]);return o},si=new Ge(288);for(var st=0;st<144;++st)si[st]=8;for(var st=144;st<256;++st)si[st]=9;for(var st=256;st<280;++st)si[st]=7;for(var st=280;st<288;++st)si[st]=8;var ms=new Ge(32);for(var st=0;st<32;++st)ms[st]=5;var r_=mn(si,9,0),s_=mn(si,9,1),a_=mn(ms,5,0),o_=mn(ms,5,1),Jo=function(r){for(var e=r[0],t=1;t<r.length;++t)r[t]>e&&(e=r[t]);return e},fn=function(r,e,t){var n=e/8|0;return(r[n]|r[n+1]<<8)>>(e&7)&t},Ko=function(r,e){var t=e/8|0;return(r[t]|r[t+1]<<8|r[t+2]<<16)>>(e&7)},Ga=function(r){return(r/8|0)+(r&7&&1)},gn=function(r,e,t){(e==null||e<0)&&(e=0),(t==null||t>r.length)&&(t=r.length);var n=new(r instanceof Rt?Rt:r instanceof ri?ri:Ge)(t-e);return n.set(r.subarray(e,t)),n},Ha=function(r,e,t){var n=r.length;if(!n||t&&!t.l&&n<5)return e||new Ge(0);var i=!e||t,s=!t||t.i;t||(t={}),e||(e=new Ge(n*3));var a=function($){var Ee=e.length;if($>Ee){var pe=new Ge(Math.max(Ee*2,$));pe.set(e),e=pe}},o=t.f||0,l=t.p||0,c=t.b||0,u=t.l,h=t.d,f=t.m,d=t.n,p=n*8;do{if(!u){t.f=o=fn(r,l,1);var m=fn(r,l+1,3);if(l+=3,m)if(m==1)u=s_,h=o_,f=9,d=5;else if(m==2){var _=fn(r,l,31)+257,y=fn(r,l+10,15)+4,M=_+fn(r,l+5,31)+1;l+=14;for(var w=new Ge(M),C=new Ge(19),b=0;b<y;++b)C[_a[b]]=fn(r,l+b*3,7);l+=y*3;for(var A=Jo(C),L=(1<<A)-1,k=mn(C,A,1),b=0;b<M;){var W=k[fn(r,l,L)];l+=W&15;var g=W>>>4;if(g<16)w[b++]=g;else{var O=0,I=0;for(g==16?(I=3+fn(r,l,3),l+=2,O=w[b-1]):g==17?(I=3+fn(r,l,7),l+=3):g==18&&(I=11+fn(r,l,127),l+=7);I--;)w[b++]=O}}var B=w.subarray(0,_),G=w.subarray(_);f=Jo(B),d=Jo(G),u=mn(B,f,1),h=mn(G,d,1)}else throw"invalid block type";else{var g=Ga(l)+4,v=r[g-4]|r[g-3]<<8,x=g+v;if(x>n){if(s)throw"unexpected EOF";break}i&&a(c+v),e.set(r.subarray(g,x),c),t.b=c+=v,t.p=l=x*8;continue}if(l>p){if(s)throw"unexpected EOF";break}}i&&a(c+131072);for(var K=(1<<f)-1,X=(1<<d)-1,te=l;;te=l){var O=u[Ko(r,l)&K],Z=O>>>4;if(l+=O&15,l>p){if(s)throw"unexpected EOF";break}if(!O)throw"invalid length/literal";if(Z<256)e[c++]=Z;else if(Z==256){te=l,u=null;break}else{var U=Z-254;if(Z>264){var b=Z-257,V=Ss[b];U=fn(r,l,(1<<V)-1)+uf[b],l+=V}var se=h[Ko(r,l)&X],ne=se>>>4;if(!se)throw"invalid distance";l+=se&15;var G=i_[ne];if(ne>3){var V=As[ne];G+=Ko(r,l)&(1<<V)-1,l+=V}if(l>p){if(s)throw"unexpected EOF";break}i&&a(c+131072);for(var ie=c+U;c<ie;c+=4)e[c]=e[c-G],e[c+1]=e[c+1-G],e[c+2]=e[c+2-G],e[c+3]=e[c+3-G];c=ie}}t.l=u,t.p=te,t.b=c,u&&(o=1,t.m=f,t.d=h,t.n=d)}while(!o);return c==e.length?e:gn(e,0,c)},Ln=function(r,e,t){t<<=e&7;var n=e/8|0;r[n]|=t,r[n+1]|=t>>>8},jr=function(r,e,t){t<<=e&7;var n=e/8|0;r[n]|=t,r[n+1]|=t>>>8,r[n+2]|=t>>>16},Qo=function(r,e){for(var t=[],n=0;n<r.length;++n)r[n]&&t.push({s:n,f:r[n]});var i=t.length,s=t.slice();if(!i)return[Kn,0];if(i==1){var a=new Ge(t[0].s+1);return a[t[0].s]=1,[a,1]}t.sort(function(M,w){return M.f-w.f}),t.push({s:-1,f:25001});var o=t[0],l=t[1],c=0,u=1,h=2;for(t[0]={s:-1,f:o.f+l.f,l:o,r:l};u!=i-1;)o=t[t[c].f<t[h].f?c++:h++],l=t[c!=u&&t[c].f<t[h].f?c++:h++],t[u++]={s:-1,f:o.f+l.f,l:o,r:l};for(var f=s[0].s,n=1;n<i;++n)s[n].s>f&&(f=s[n].s);var d=new Rt(f+1),p=_l(t[u-1],d,0);if(p>e){var n=0,m=0,g=p-e,v=1<<g;for(s.sort(function(w,C){return d[C.s]-d[w.s]||w.f-C.f});n<i;++n){var x=s[n].s;if(d[x]>e)m+=v-(1<<p-d[x]),d[x]=e;else break}for(m>>>=g;m>0;){var _=s[n].s;d[_]<e?m-=1<<e-d[_]++-1:++n}for(;n>=0&&m;--n){var y=s[n].s;d[y]==e&&(--d[y],++m)}p=e}return[new Ge(d),p]},_l=function(r,e,t){return r.s==-1?Math.max(_l(r.l,e,t+1),_l(r.r,e,t+1)):e[r.s]=t},qu=function(r){for(var e=r.length;e&&!r[--e];);for(var t=new Rt(++e),n=0,i=r[0],s=1,a=function(l){t[n++]=l},o=1;o<=e;++o)if(r[o]==i&&o!=e)++s;else{if(!i&&s>2){for(;s>138;s-=138)a(32754);s>2&&(a(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(a(i),--s;s>6;s-=6)a(8304);s>2&&(a(s-3<<5|8208),s=0)}for(;s--;)a(i);s=1,i=r[o]}return[t.subarray(0,n),e]},Yr=function(r,e){for(var t=0,n=0;n<e.length;++n)t+=r[n]*e[n];return t},Zs=function(r,e,t){var n=t.length,i=Ga(e+2);r[i]=n&255,r[i+1]=n>>>8,r[i+2]=r[i]^255,r[i+3]=r[i+1]^255;for(var s=0;s<n;++s)r[i+s+4]=t[s];return(i+4+n)*8},ju=function(r,e,t,n,i,s,a,o,l,c,u){Ln(e,u++,t),++i[256];for(var h=Qo(i,15),f=h[0],d=h[1],p=Qo(s,15),m=p[0],g=p[1],v=qu(f),x=v[0],_=v[1],y=qu(m),M=y[0],w=y[1],C=new Rt(19),b=0;b<x.length;++b)C[x[b]&31]++;for(var b=0;b<M.length;++b)C[M[b]&31]++;for(var A=Qo(C,7),L=A[0],k=A[1],W=19;W>4&&!L[_a[W-1]];--W);var O=c+5<<3,I=Yr(i,si)+Yr(s,ms)+a,B=Yr(i,f)+Yr(s,m)+a+14+3*W+Yr(C,L)+(2*C[16]+3*C[17]+7*C[18]);if(O<=I&&O<=B)return Zs(e,u,r.subarray(l,l+c));var G,K,X,te;if(Ln(e,u,1+(B<I)),u+=2,B<I){G=mn(f,d,0),K=f,X=mn(m,g,0),te=m;var Z=mn(L,k,0);Ln(e,u,_-257),Ln(e,u+5,w-1),Ln(e,u+10,W-4),u+=14;for(var b=0;b<W;++b)Ln(e,u+3*b,L[_a[b]]);u+=3*W;for(var U=[x,M],V=0;V<2;++V)for(var se=U[V],b=0;b<se.length;++b){var ne=se[b]&31;Ln(e,u,Z[ne]),u+=L[ne],ne>15&&(Ln(e,u,se[b]>>>5&127),u+=se[b]>>>12)}}else G=r_,K=si,X=a_,te=ms;for(var b=0;b<o;++b)if(n[b]>255){var ne=n[b]>>>18&31;jr(e,u,G[ne+257]),u+=K[ne+257],ne>7&&(Ln(e,u,n[b]>>>23&31),u+=Ss[ne]);var ie=n[b]&31;jr(e,u,X[ie]),u+=te[ie],ie>3&&(jr(e,u,n[b]>>>5&8191),u+=As[ie])}else jr(e,u,G[n[b]]),u+=K[n[b]];return jr(e,u,G[256]),u+K[256]},l_=new ri([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),Kn=new Ge(0),c_=function(r,e,t,n,i,s){var a=r.length,o=new Ge(n+a+5*(1+Math.ceil(a/7e3))+i),l=o.subarray(n,o.length-i),c=0;if(!e||a<8)for(var u=0;u<=a;u+=65535){var h=u+65535;h<a?c=Zs(l,c,r.subarray(u,h)):(l[u]=s,c=Zs(l,c,r.subarray(u,a)))}else{for(var f=l_[e-1],d=f>>>13,p=f&8191,m=(1<<t)-1,g=new Rt(32768),v=new Rt(m+1),x=Math.ceil(t/3),_=2*x,y=function(oe){return(r[oe]^r[oe+1]<<x^r[oe+2]<<_)&m},M=new ri(25e3),w=new Rt(288),C=new Rt(32),b=0,A=0,u=0,L=0,k=0,W=0;u<a;++u){var O=y(u),I=u&32767,B=v[O];if(g[I]=B,v[O]=I,k<=u){var G=a-u;if((b>7e3||L>24576)&&G>423){c=ju(r,l,0,M,w,C,A,L,W,u-W,c),L=b=A=0,W=u;for(var K=0;K<286;++K)w[K]=0;for(var K=0;K<30;++K)C[K]=0}var X=2,te=0,Z=p,U=I-B&32767;if(G>2&&O==y(u-U))for(var V=Math.min(d,G)-1,se=Math.min(32767,u),ne=Math.min(258,G);U<=se&&--Z&&I!=B;){if(r[u+X]==r[u+X-U]){for(var ie=0;ie<ne&&r[u+ie]==r[u+ie-U];++ie);if(ie>X){if(X=ie,te=U,ie>V)break;for(var $=Math.min(U,ie-2),Ee=0,K=0;K<$;++K){var pe=u-U+K+32768&32767,Ce=g[pe],fe=pe-Ce+32768&32767;fe>Ee&&(Ee=fe,B=pe)}}}I=B,B=g[I],U+=I-B+32768&32767}if(te){M[L++]=268435456|gl[X]<<18|$u[te];var Oe=gl[X]&31,Q=$u[te]&31;A+=Ss[Oe]+As[Q],++w[257+Oe],++C[Q],k=u+X,++b}else M[L++]=r[u],++w[r[u]]}}c=ju(r,l,s,M,w,C,A,L,W,u-W,c),!s&&c&7&&(c=Zs(l,c+1,Kn))}return gn(o,0,n+Ga(c)+i)},u_=function(){for(var r=new ri(256),e=0;e<256;++e){for(var t=e,n=9;--n;)t=(t&1&&3988292384)^t>>>1;r[e]=t}return r}(),Ts=function(){var r=-1;return{p:function(e){for(var t=r,n=0;n<e.length;++n)t=u_[t&255^e[n]]^t>>>8;r=t},d:function(){return~r}}},hf=function(){var r=1,e=0;return{p:function(t){for(var n=r,i=e,s=t.length,a=0;a!=s;){for(var o=Math.min(a+2655,s);a<o;++a)i+=n+=t[a];n=(n&65535)+15*(n>>16),i=(i&65535)+15*(i>>16)}r=n,e=i},d:function(){return r%=65521,e%=65521,(r&255)<<24|r>>>8<<16|(e&255)<<8|e>>>8}}},Er=function(r,e,t,n,i){return c_(r,e.level==null?6:e.level,e.mem==null?Math.ceil(Math.max(8,Math.min(13,Math.log(r.length)))*1.5):12+e.mem,t,n,!i)},Wa=function(r,e){var t={};for(var n in r)t[n]=r[n];for(var n in e)t[n]=e[n];return t},Ip=function(r,e,t){for(var n=r(),i=r.toString(),s=i.slice(i.indexOf("[")+1,i.lastIndexOf("]")).replace(/ /g,"").split(","),a=0;a<n.length;++a){var o=n[a],l=s[a];if(typeof o=="function"){e+=";"+l+"=";var c=o.toString();if(o.prototype)if(c.indexOf("[native code]")!=-1){var u=c.indexOf(" ",8)+1;e+=c.slice(u,c.indexOf("(",u))}else{e+=c;for(var h in o.prototype)e+=";"+l+".prototype."+h+"="+o.prototype[h].toString()}else e+=c}else t[l]=o}return[e,t]},No=[],wT=function(r){var e=[];for(var t in r)(r[t]instanceof Ge||r[t]instanceof Rt||r[t]instanceof ri)&&e.push((r[t]=new r[t].constructor(r[t])).buffer);return e},h_=function(r,e,t,n){var i;if(!No[t]){for(var s="",a={},o=r.length-1,l=0;l<o;++l)i=Ip(r[l],s,a),s=i[0],a=i[1];No[t]=Ip(r[o],s,a)}var c=Wa({},No[t][1]);return MT(No[t][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",t,c,wT(c),n)},Es=function(){return[Ge,Rt,ri,Ss,As,_a,uf,i_,s_,o_,va,mn,Jo,fn,Ko,Ga,gn,Ha,Rs,Ri,ff]},Cs=function(){return[Ge,Rt,ri,Ss,As,_a,gl,$u,r_,si,a_,ms,va,l_,Kn,mn,Ln,jr,Qo,_l,qu,Yr,Zs,ju,Ga,gn,c_,Er,Xa,Ri]},f_=function(){return[df,mf,Qe,Ts,u_]},d_=function(){return[pf,g_]},p_=function(){return[gf,Qe,hf]},m_=function(){return[__]},Ri=function(r){return postMessage(r,[r.buffer])},ff=function(r){return r&&r.size&&new Ge(r.size)},Ps=function(r,e,t,n,i,s){var a=h_(t,n,i,function(o,l){a.terminate(),s(o,l)});return a.postMessage([r,e],e.consume?[r.buffer]:[]),function(){a.terminate()}},_n=function(r){return r.ondata=function(e,t){return postMessage([e,t],[e.buffer])},function(e){return r.push(e.data[0],e.data[1])}},Ls=function(r,e,t,n,i){var s,a=h_(r,n,i,function(o,l){o?(a.terminate(),e.ondata.call(e,o)):(l[1]&&a.terminate(),e.ondata.call(e,o,l[0],l[1]))});a.postMessage(t),e.push=function(o,l){if(s)throw"stream finished";if(!e.ondata)throw"no stream handler";a.postMessage([o,s=l],[o.buffer])},e.terminate=function(){a.terminate()}},Gt=function(r,e){return r[e]|r[e+1]<<8},gt=function(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0},qc=function(r,e){return gt(r,e)+gt(r,e+4)*4294967296},Qe=function(r,e,t){for(;t;++e)r[e]=t,t>>>=8},df=function(r,e){var t=e.filename;if(r[0]=31,r[1]=139,r[2]=8,r[8]=e.level<2?4:e.level==9?2:0,r[9]=3,e.mtime!=0&&Qe(r,4,Math.floor(new Date(e.mtime||Date.now())/1e3)),t){r[3]=8;for(var n=0;n<=t.length;++n)r[n+10]=t.charCodeAt(n)}},pf=function(r){if(r[0]!=31||r[1]!=139||r[2]!=8)throw"invalid gzip data";var e=r[3],t=10;e&4&&(t+=r[10]|(r[11]<<8)+2);for(var n=(e>>3&1)+(e>>4&1);n>0;n-=!r[t++]);return t+(e&2)},g_=function(r){var e=r.length;return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0},mf=function(r){return 10+(r.filename&&r.filename.length+1||0)},gf=function(r,e){var t=e.level,n=t==0?0:t<6?1:t==9?3:2;r[0]=120,r[1]=n<<6|(n?32-2*n:1)},__=function(r){if((r[0]&15)!=8||r[0]>>>4>7||(r[0]<<8|r[1])%31)throw"invalid zlib data";if(r[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function _f(r,e){return!e&&typeof r=="function"&&(e=r,r={}),this.ondata=e,r}var kn=function(){function r(e,t){!t&&typeof e=="function"&&(t=e,e={}),this.ondata=t,this.o=e||{}}return r.prototype.p=function(e,t){this.ondata(Er(e,this.o,0,0,!t),t)},r.prototype.push=function(e,t){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=t,this.p(e,t||!1)},r}(),v_=function(){function r(e,t){Ls([Cs,function(){return[_n,kn]}],this,_f.call(this,e,t),function(n){var i=new kn(n.data);onmessage=_n(i)},6)}return r}();function y_(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ps(r,e,[Cs],function(n){return Ri(Xa(n.data[0],n.data[1]))},0,t)}function Xa(r,e){return Er(r,e||{},0,0)}var Yt=function(){function r(e){this.s={},this.p=new Ge(0),this.ondata=e}return r.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var t=this.p.length,n=new Ge(t+e.length);n.set(this.p),n.set(e,t),this.p=n},r.prototype.c=function(e){this.d=this.s.i=e||!1;var t=this.s.b,n=Ha(this.p,this.o,this.s);this.ondata(gn(n,t,this.s.b),this.d),this.o=gn(n,this.s.b-32768),this.s.b=this.o.length,this.p=gn(this.p,this.s.p/8|0),this.s.p&=7},r.prototype.push=function(e,t){this.e(e),this.c(t)},r}(),vf=function(){function r(e){this.ondata=e,Ls([Es,function(){return[_n,Yt]}],this,0,function(){var t=new Yt;onmessage=_n(t)},7)}return r}();function yf(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ps(r,e,[Es],function(n){return Ri(Rs(n.data[0],ff(n.data[1])))},1,t)}function Rs(r,e){return Ha(r,e)}var vl=function(){function r(e,t){this.c=Ts(),this.l=0,this.v=1,kn.call(this,e,t)}return r.prototype.push=function(e,t){kn.prototype.push.call(this,e,t)},r.prototype.p=function(e,t){this.c.p(e),this.l+=e.length;var n=Er(e,this.o,this.v&&mf(this.o),t&&8,!t);this.v&&(df(n,this.o),this.v=0),t&&(Qe(n,n.length-8,this.c.d()),Qe(n,n.length-4,this.l)),this.ondata(n,t)},r}(),Dp=function(){function r(e,t){Ls([Cs,f_,function(){return[_n,kn,vl]}],this,_f.call(this,e,t),function(n){var i=new vl(n.data);onmessage=_n(i)},8)}return r}();function Op(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ps(r,e,[Cs,f_,function(){return[yl]}],function(n){return Ri(yl(n.data[0],n.data[1]))},2,t)}function yl(r,e){e||(e={});var t=Ts(),n=r.length;t.p(r);var i=Er(r,e,mf(e),8),s=i.length;return df(i,e),Qe(i,s-8,t.d()),Qe(i,s-4,n),i}var xl=function(){function r(e){this.v=1,Yt.call(this,e)}return r.prototype.push=function(e,t){if(Yt.prototype.e.call(this,e),this.v){var n=this.p.length>3?pf(this.p):4;if(n>=this.p.length&&!t)return;this.p=this.p.subarray(n),this.v=0}if(t){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}Yt.prototype.c.call(this,t)},r}(),x_=function(){function r(e){this.ondata=e,Ls([Es,d_,function(){return[_n,Yt,xl]}],this,0,function(){var t=new xl;onmessage=_n(t)},9)}return r}();function b_(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ps(r,e,[Es,d_,function(){return[bl]}],function(n){return Ri(bl(n.data[0]))},3,t)}function bl(r,e){return Ha(r.subarray(pf(r),-8),e||new Ge(g_(r)))}var Yu=function(){function r(e,t){this.c=hf(),this.v=1,kn.call(this,e,t)}return r.prototype.push=function(e,t){kn.prototype.push.call(this,e,t)},r.prototype.p=function(e,t){this.c.p(e);var n=Er(e,this.o,this.v&&2,t&&4,!t);this.v&&(gf(n,this.o),this.v=0),t&&Qe(n,n.length-4,this.c.d()),this.ondata(n,t)},r}(),ST=function(){function r(e,t){Ls([Cs,p_,function(){return[_n,kn,Yu]}],this,_f.call(this,e,t),function(n){var i=new Yu(n.data);onmessage=_n(i)},10)}return r}();function AT(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ps(r,e,[Cs,p_,function(){return[Zu]}],function(n){return Ri(Zu(n.data[0],n.data[1]))},4,t)}function Zu(r,e){e||(e={});var t=hf();t.p(r);var n=Er(r,e,2,4);return gf(n,e),Qe(n,n.length-4,t.d()),n}var Ml=function(){function r(e){this.v=1,Yt.call(this,e)}return r.prototype.push=function(e,t){if(Yt.prototype.e.call(this,e),this.v){if(this.p.length<2&&!t)return;this.p=this.p.subarray(2),this.v=0}if(t){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}Yt.prototype.c.call(this,t)},r}(),M_=function(){function r(e){this.ondata=e,Ls([Es,m_,function(){return[_n,Yt,Ml]}],this,0,function(){var t=new Ml;onmessage=_n(t)},11)}return r}();function w_(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ps(r,e,[Es,m_,function(){return[ya]}],function(n){return Ri(ya(n.data[0],ff(n.data[1])))},5,t)}function ya(r,e){return Ha((__(r),r.subarray(2,-4)),e)}var S_=function(){function r(e){this.G=xl,this.I=Yt,this.Z=Ml,this.ondata=e}return r.prototype.push=function(e,t){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,t);else{if(this.p&&this.p.length){var n=new Ge(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var i=this,s=function(){i.ondata.apply(i,arguments)};this.s=this.p[0]==31&&this.p[1]==139&&this.p[2]==8?new this.G(s):(this.p[0]&15)!=8||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(s):new this.Z(s),this.s.push(this.p,t),this.p=null}}},r}(),TT=function(){function r(e){this.G=x_,this.I=vf,this.Z=M_,this.ondata=e}return r.prototype.push=function(e,t){S_.prototype.push.call(this,e,t)},r}();function ET(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return r[0]==31&&r[1]==139&&r[2]==8?b_(r,e,t):(r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31?yf(r,e,t):w_(r,e,t)}function CT(r,e){return r[0]==31&&r[1]==139&&r[2]==8?bl(r,e):(r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31?Rs(r,e):ya(r,e)}var xf=function(r,e,t,n){for(var i in r){var s=r[i],a=e+i;s instanceof Ge?t[a]=[s,n]:Array.isArray(s)?t[a]=[s[0],Wa(n,s[1])]:xf(s,a+"/",t,n)}},Fp=typeof TextEncoder<"u"&&new TextEncoder,Ju=typeof TextDecoder<"u"&&new TextDecoder,A_=0;try{Ju.decode(Kn,{stream:!0}),A_=1}catch{}var T_=function(r){for(var e="",t=0;;){var n=r[t++],i=(n>127)+(n>223)+(n>239);if(t+i>r.length)return[e,gn(r,t-1)];i?i==3?(n=((n&15)<<18|(r[t++]&63)<<12|(r[t++]&63)<<6|r[t++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):i&1?e+=String.fromCharCode((n&31)<<6|r[t++]&63):e+=String.fromCharCode((n&15)<<12|(r[t++]&63)<<6|r[t++]&63):e+=String.fromCharCode(n)}},PT=function(){function r(e){this.ondata=e,A_?this.t=new TextDecoder:this.p=Kn}return r.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(t=!!t,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),t),t){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}return}if(!this.p)throw"stream finished";var n=new Ge(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length);var i=T_(n),s=i[0],a=i[1];if(t){if(a.length)throw"invalid utf-8 data";this.p=null}else this.p=a;this.ondata(s,t)},r}(),LT=function(){function r(e){this.ondata=e}return r.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(Ti(e),this.d=t||!1)},r}();function Ti(r,e){if(e){for(var t=new Ge(r.length),n=0;n<r.length;++n)t[n]=r.charCodeAt(n);return t}if(Fp)return Fp.encode(r);for(var i=r.length,s=new Ge(r.length+(r.length>>1)),a=0,o=function(u){s[a++]=u},n=0;n<i;++n){if(a+5>s.length){var l=new Ge(a+8+(i-n<<1));l.set(s),s=l}var c=r.charCodeAt(n);c<128||e?o(c):c<2048?(o(192|c>>6),o(128|c&63)):c>55295&&c<57344?(c=65536+(c&1023<<10)|r.charCodeAt(++n)&1023,o(240|c>>18),o(128|c>>12&63),o(128|c>>6&63),o(128|c&63)):(o(224|c>>12),o(128|c>>6&63),o(128|c&63))}return gn(s,0,a)}function bf(r,e){if(e){for(var t="",n=0;n<r.length;n+=16384)t+=String.fromCharCode.apply(null,r.subarray(n,n+16384));return t}else{if(Ju)return Ju.decode(r);var i=T_(r),s=i[0],a=i[1];if(a.length)throw"invalid utf-8 data";return s}}var E_=function(r){return r==1?3:r<6?2:r==9?1:0},C_=function(r,e){return e+30+Gt(r,e+26)+Gt(r,e+28)},P_=function(r,e,t){var n=Gt(r,e+28),i=bf(r.subarray(e+46,e+46+n),!(Gt(r,e+8)&2048)),s=e+46+n,a=gt(r,e+20),o=t&&a==4294967295?L_(r,s):[a,gt(r,e+24),gt(r,e+42)],l=o[0],c=o[1],u=o[2];return[Gt(r,e+10),l,c,i,s+Gt(r,e+30)+Gt(r,e+32),u]},L_=function(r,e){for(;Gt(r,e)!=1;e+=4+Gt(r,e+2));return[qc(r,e+12),qc(r,e+4),qc(r,e+20)]},bi=function(r){var e=0;if(r)for(var t in r){var n=r[t].length;if(n>65535)throw"extra field too long";e+=n+4}return e},gs=function(r,e,t,n,i,s,a,o){var l=n.length,c=t.extra,u=o&&o.length,h=bi(c);Qe(r,e,a!=null?33639248:67324752),e+=4,a!=null&&(r[e++]=20,r[e++]=t.os),r[e]=20,e+=2,r[e++]=t.flag<<1|(s==null&&8),r[e++]=i&&8,r[e++]=t.compression&255,r[e++]=t.compression>>8;var f=new Date(t.mtime==null?Date.now():t.mtime),d=f.getFullYear()-1980;if(d<0||d>119)throw"date not in range 1980-2099";if(Qe(r,e,d<<25|f.getMonth()+1<<21|f.getDate()<<16|f.getHours()<<11|f.getMinutes()<<5|f.getSeconds()>>>1),e+=4,s!=null&&(Qe(r,e,t.crc),Qe(r,e+4,s),Qe(r,e+8,t.size)),Qe(r,e+12,l),Qe(r,e+14,h),e+=16,a!=null&&(Qe(r,e,u),Qe(r,e+6,t.attrs),Qe(r,e+10,a),e+=14),r.set(n,e),e+=l,h)for(var p in c){var m=c[p],g=m.length;Qe(r,e,+p),Qe(r,e+2,g),r.set(m,e+4),e+=4+g}return u&&(r.set(o,e),e+=u),e},Mf=function(r,e,t,n,i){Qe(r,e,101010256),Qe(r,e+8,t),Qe(r,e+10,t),Qe(r,e+12,n),Qe(r,e+16,i)},xa=function(){function r(e){this.filename=e,this.c=Ts(),this.size=0,this.compression=0}return r.prototype.process=function(e,t){this.ondata(null,e,t)},r.prototype.push=function(e,t){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,t&&(this.crc=this.c.d()),this.process(e,t||!1)},r}(),RT=function(){function r(e,t){var n=this;t||(t={}),xa.call(this,e),this.d=new kn(t,function(i,s){n.ondata(null,i,s)}),this.compression=8,this.flag=E_(t.level)}return r.prototype.process=function(e,t){try{this.d.push(e,t)}catch(n){this.ondata(n,null,t)}},r.prototype.push=function(e,t){xa.prototype.push.call(this,e,t)},r}(),IT=function(){function r(e,t){var n=this;t||(t={}),xa.call(this,e),this.d=new v_(t,function(i,s,a){n.ondata(i,s,a)}),this.compression=8,this.flag=E_(t.level),this.terminate=this.d.terminate}return r.prototype.process=function(e,t){this.d.push(e,t)},r.prototype.push=function(e,t){xa.prototype.push.call(this,e,t)},r}(),DT=function(){function r(e){this.ondata=e,this.u=[],this.d=1}return r.prototype.add=function(e){var t=this;if(this.d&2)throw"stream finished";var n=Ti(e.filename),i=n.length,s=e.comment,a=s&&Ti(s),o=i!=e.filename.length||a&&s.length!=a.length,l=i+bi(e.extra)+30;if(i>65535)throw"filename too long";var c=new Ge(l);gs(c,0,e,n,o);var u=[c],h=function(){for(var g=0,v=u;g<v.length;g++){var x=v[g];t.ondata(null,x,!1)}u=[]},f=this.d;this.d=0;var d=this.u.length,p=Wa(e,{f:n,u:o,o:a,t:function(){e.terminate&&e.terminate()},r:function(){if(h(),f){var g=t.u[d+1];g?g.r():t.d=1}f=1}}),m=0;e.ondata=function(g,v,x){if(g)t.ondata(g,v,x),t.terminate();else if(m+=v.length,u.push(v),x){var _=new Ge(16);Qe(_,0,134695760),Qe(_,4,e.crc),Qe(_,8,m),Qe(_,12,e.size),u.push(_),p.c=m,p.b=l+m+16,p.crc=e.crc,p.size=e.size,f&&p.r(),f=1}else f&&h()},this.u.push(p)},r.prototype.end=function(){var e=this;if(this.d&2)throw this.d&1?"stream finishing":"stream finished";this.d?this.e():this.u.push({r:function(){!(e.d&1)||(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},r.prototype.e=function(){for(var e=0,t=0,n=0,i=0,s=this.u;i<s.length;i++){var a=s[i];n+=46+a.f.length+bi(a.extra)+(a.o?a.o.length:0)}for(var o=new Ge(n+22),l=0,c=this.u;l<c.length;l++){var a=c[l];gs(o,e,a,a.f,a.u,a.c,t,a.o),e+=46+a.f.length+bi(a.extra)+(a.o?a.o.length:0),t+=a.b}Mf(o,e,this.u.length,n,t),this.ondata(null,o,!0),this.d=2},r.prototype.terminate=function(){for(var e=0,t=this.u;e<t.length;e++){var n=t[e];n.t()}this.d=2},r}();function OT(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";var n={};xf(r,"",n,e);var i=Object.keys(n),s=i.length,a=0,o=0,l=s,c=new Array(s),u=[],h=function(){for(var m=0;m<u.length;++m)u[m]()},f=function(){var m=new Ge(o+22),g=a,v=o-a;o=0;for(var x=0;x<l;++x){var _=c[x];try{var y=_.c.length;gs(m,o,_,_.f,_.u,y);var M=30+_.f.length+bi(_.extra),w=o+M;m.set(_.c,w),gs(m,a,_,_.f,_.u,y,o,_.m),a+=16+M+(_.m?_.m.length:0),o=w+y}catch(C){return t(C,null)}}Mf(m,a,c.length,v,g),t(null,m)};s||f();for(var d=function(m){var g=i[m],v=n[g],x=v[0],_=v[1],y=Ts(),M=x.length;y.p(x);var w=Ti(g),C=w.length,b=_.comment,A=b&&Ti(b),L=A&&A.length,k=bi(_.extra),W=_.level==0?0:8,O=function(I,B){if(I)h(),t(I,null);else{var G=B.length;c[m]=Wa(_,{size:M,crc:y.d(),c:B,f:w,m:A,u:C!=g.length||A&&b.length!=L,compression:W}),a+=30+C+k+G,o+=76+2*(C+k)+(L||0)+G,--s||f()}};if(C>65535&&O("filename too long",null),!W)O(null,x);else if(M<16e4)try{O(null,Xa(x,_))}catch(I){O(I,null)}else u.push(y_(x,_,O))},p=0;p<l;++p)d(p);return h}function FT(r,e){e||(e={});var t={},n=[];xf(r,"",t,e);var i=0,s=0;for(var a in t){var o=t[a],l=o[0],c=o[1],u=c.level==0?0:8,h=Ti(a),f=h.length,d=c.comment,p=d&&Ti(d),m=p&&p.length,g=bi(c.extra);if(f>65535)throw"filename too long";var v=u?Xa(l,c):l,x=v.length,_=Ts();_.p(l),n.push(Wa(c,{size:l.length,crc:_.d(),c:v,f:h,m:p,u:f!=a.length||p&&d.length!=m,o:i,compression:u})),i+=30+f+g+x,s+=76+2*(f+g)+(m||0)+x}for(var y=new Ge(s+22),M=i,w=s-i,C=0;C<n.length;++C){var h=n[C];gs(y,h.o,h,h.f,h.u,h.c.length);var b=30+h.f.length+bi(h.extra);y.set(h.c,h.o+b),gs(y,i,h,h.f,h.u,h.c.length,h.o,h.m),i+=16+b+(h.m?h.m.length:0)}return Mf(y,i,n.length,w,M),y}var R_=function(){function r(){}return r.prototype.push=function(e,t){this.ondata(null,e,t)},r.compression=0,r}(),NT=function(){function r(){var e=this;this.i=new Yt(function(t,n){e.ondata(null,t,n)})}return r.prototype.push=function(e,t){try{this.i.push(e,t)}catch(n){this.ondata(n,e,t)}},r.compression=8,r}(),kT=function(){function r(e,t){var n=this;t<32e4?this.i=new Yt(function(i,s){n.ondata(null,i,s)}):(this.i=new vf(function(i,s,a){n.ondata(i,s,a)}),this.terminate=this.i.terminate)}return r.prototype.push=function(e,t){this.i.terminate&&(e=gn(e,0)),this.i.push(e,t)},r.compression=8,r}(),zT=function(){function r(e){this.onfile=e,this.k=[],this.o={0:R_},this.p=Kn}return r.prototype.push=function(e,t){var n=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var i=Math.min(this.c,e.length),s=e.subarray(0,i);if(this.c-=i,this.d?this.d.push(s,!this.c):this.k[0].push(s),e=e.subarray(i),e.length)return this.push(e,t)}else{var a=0,o=0,l=void 0,c=void 0;this.p.length?e.length?(c=new Ge(this.p.length+e.length),c.set(this.p),c.set(e,this.p.length)):c=this.p:c=e;for(var u=c.length,h=this.c,f=h&&this.d,d=function(){var v,x=gt(c,o);if(x==67324752){a=1,l=o,p.d=null,p.c=0;var _=Gt(c,o+6),y=Gt(c,o+8),M=_&2048,w=_&8,C=Gt(c,o+26),b=Gt(c,o+28);if(u>o+30+C+b){var A=[];p.k.unshift(A),a=2;var L=gt(c,o+18),k=gt(c,o+22),W=bf(c.subarray(o+30,o+=30+C),!M);L==4294967295?(v=w?[-2]:L_(c,o),L=v[0],k=v[1]):w&&(L=-1),o+=b,p.c=L;var O,I={name:W,compression:y,start:function(){if(!I.ondata)throw"no callback";if(!L)I.ondata(null,Kn,!0);else{var B=n.o[y];if(!B)throw"unknown compression type "+y;O=L<0?new B(W):new B(W,L,k),O.ondata=function(te,Z,U){I.ondata(te,Z,U)};for(var G=0,K=A;G<K.length;G++){var X=K[G];O.push(X,!1)}n.k[0]==A&&n.c?n.d=O:O.push(Kn,!0)}},terminate:function(){O&&O.terminate&&O.terminate()}};L>=0&&(I.size=L,I.originalSize=k),p.onfile(I)}return"break"}else if(h){if(x==134695760)return l=o+=12+(h==-2&&8),a=3,p.c=0,"break";if(x==33639248)return l=o-=4,a=3,p.c=0,"break"}},p=this;o<u-4;++o){var m=d();if(m==="break")break}if(this.p=Kn,h<0){var g=a?c.subarray(0,l-12-(h==-2&&8)-(gt(c,l-16)==134695760&&4)):c.subarray(0,o);f?f.push(g,!!a):this.k[+(a==2)].push(g)}if(a&2)return this.push(c.subarray(o),t);this.p=c.subarray(o)}if(t){if(this.c)throw"invalid zip file";this.p=null}},r.prototype.register=function(e){this.o[e.compression]=e},r}();function BT(r,e){if(typeof e!="function")throw"no callback";for(var t=[],n=function(){for(var f=0;f<t.length;++f)t[f]()},i={},s=r.length-22;gt(r,s)!=101010256;--s)if(!s||r.length-s>65558){e("invalid zip file",null);return}var a=Gt(r,s+8);a||e(null,{});var o=a,l=gt(r,s+16),c=l==4294967295;if(c){if(s=gt(r,s-12),gt(r,s)!=101075792){e("invalid zip file",null);return}o=a=gt(r,s+32),l=gt(r,s+48)}for(var u=function(f){var d=P_(r,l,c),p=d[0],m=d[1],g=d[2],v=d[3],x=d[4],_=d[5],y=C_(r,_);l=x;var M=function(C,b){C?(n(),e(C,null)):(i[v]=b,--a||e(null,i))};if(!p)M(null,gn(r,y,y+m));else if(p==8){var w=r.subarray(y,y+m);if(m<32e4)try{M(null,Rs(w,new Ge(g)))}catch(C){M(C,null)}else t.push(yf(w,{size:g},M))}else M("unknown compression type "+p,null)},h=0;h<o;++h)u();return n}function UT(r){for(var e={},t=r.length-22;gt(r,t)!=101010256;--t)if(!t||r.length-t>65558)throw"invalid zip file";var n=Gt(r,t+8);if(!n)return{};var i=gt(r,t+16),s=i==4294967295;if(s){if(t=gt(r,t-12),gt(r,t)!=101075792)throw"invalid zip file";n=gt(r,t+32),i=gt(r,t+48)}for(var a=0;a<n;++a){var o=P_(r,i,s),l=o[0],c=o[1],u=o[2],h=o[3],f=o[4],d=o[5],p=C_(r,d);if(i=f,!l)e[h]=gn(r,p,p+c);else if(l==8)e[h]=Rs(r.subarray(p,p+c),new Ge(u));else throw"unknown compression type "+l}return e}const VT=Object.freeze(Object.defineProperty({__proto__:null,Deflate:kn,AsyncDeflate:v_,deflate:y_,deflateSync:Xa,Inflate:Yt,AsyncInflate:vf,inflate:yf,inflateSync:Rs,Gzip:vl,AsyncGzip:Dp,gzip:Op,gzipSync:yl,Gunzip:xl,AsyncGunzip:x_,gunzip:b_,gunzipSync:bl,Zlib:Yu,AsyncZlib:ST,zlib:AT,zlibSync:Zu,Unzlib:Ml,AsyncUnzlib:M_,unzlib:w_,unzlibSync:ya,compress:Op,AsyncCompress:Dp,compressSync:yl,Compress:vl,Decompress:S_,AsyncDecompress:TT,decompress:ET,decompressSync:CT,DecodeUTF8:PT,EncodeUTF8:LT,strToU8:Ti,strFromU8:bf,ZipPassThrough:xa,ZipDeflate:RT,AsyncZipDeflate:IT,Zip:DT,zip:OT,zipSync:FT,UnzipPassThrough:R_,UnzipInflate:NT,AsyncUnzipInflate:kT,Unzip:zT,unzip:BT,unzipSync:UT},Symbol.toStringTag,{value:"Module"}));function I_(r,e,t){const n=t.length-r-1;if(e>=t[n])return n-1;if(e<=t[r])return r;let i=r,s=n,a=Math.floor((i+s)/2);for(;e<t[a]||e>=t[a+1];)e<t[a]?s=a:i=a,a=Math.floor((i+s)/2);return a}function GT(r,e,t,n){const i=[],s=[],a=[];i[0]=1;for(let o=1;o<=t;++o){s[o]=e-n[r+1-o],a[o]=n[r+o]-e;let l=0;for(let c=0;c<o;++c){const u=a[c+1],h=s[o-c],f=i[c]/(u+h);i[c]=l+u*f,l=h*f}i[o]=l}return i}function HT(r,e,t,n){const i=I_(r,n,e),s=GT(i,n,r,e),a=new Ye(0,0,0,0);for(let o=0;o<=r;++o){const l=t[i-r+o],c=s[o],u=l.w*c;a.x+=l.x*u,a.y+=l.y*u,a.z+=l.z*u,a.w+=l.w*c}return a}function WT(r,e,t,n,i){const s=[];for(let h=0;h<=t;++h)s[h]=0;const a=[];for(let h=0;h<=n;++h)a[h]=s.slice(0);const o=[];for(let h=0;h<=t;++h)o[h]=s.slice(0);o[0][0]=1;const l=s.slice(0),c=s.slice(0);for(let h=1;h<=t;++h){l[h]=e-i[r+1-h],c[h]=i[r+h]-e;let f=0;for(let d=0;d<h;++d){const p=c[d+1],m=l[h-d];o[h][d]=p+m;const g=o[d][h-1]/o[h][d];o[d][h]=f+p*g,f=m*g}o[h][h]=f}for(let h=0;h<=t;++h)a[0][h]=o[h][t];for(let h=0;h<=t;++h){let f=0,d=1;const p=[];for(let m=0;m<=t;++m)p[m]=s.slice(0);p[0][0]=1;for(let m=1;m<=n;++m){let g=0;const v=h-m,x=t-m;h>=m&&(p[d][0]=p[f][0]/o[x+1][v],g=p[d][0]*o[v][x]);const _=v>=-1?1:-v,y=h-1<=x?m-1:t-h;for(let w=_;w<=y;++w)p[d][w]=(p[f][w]-p[f][w-1])/o[x+1][v+w],g+=p[d][w]*o[v+w][x];h<=x&&(p[d][m]=-p[f][m-1]/o[x+1][h],g+=p[d][m]*o[h][x]),a[m][h]=g;const M=f;f=d,d=M}}let u=t;for(let h=1;h<=n;++h){for(let f=0;f<=t;++f)a[h][f]*=u;u*=t-h}return a}function XT(r,e,t,n,i){const s=i<r?i:r,a=[],o=I_(r,n,e),l=WT(o,n,r,s,e),c=[];for(let u=0;u<t.length;++u){const h=t[u].clone(),f=h.w;h.x*=f,h.y*=f,h.z*=f,c[u]=h}for(let u=0;u<=s;++u){const h=c[o-r].clone().multiplyScalar(l[u][0]);for(let f=1;f<=r;++f)h.add(c[o-r+f].clone().multiplyScalar(l[u][f]));a[u]=h}for(let u=s+1;u<=i+1;++u)a[u]=new Ye(0,0,0);return a}function $T(r,e){let t=1;for(let i=2;i<=r;++i)t*=i;let n=1;for(let i=2;i<=e;++i)n*=i;for(let i=2;i<=r-e;++i)n*=i;return t/n}function qT(r){const e=r.length,t=[],n=[];for(let s=0;s<e;++s){const a=r[s];t[s]=new T(a.x,a.y,a.z),n[s]=a.w}const i=[];for(let s=0;s<e;++s){const a=t[s].clone();for(let o=1;o<=s;++o)a.sub(i[s-o].clone().multiplyScalar($T(s,o)*n[o]));i[s]=a.divideScalar(n[0])}return i}function jT(r,e,t,n,i){const s=XT(r,e,t,n,i);return qT(s)}class Np extends vn{constructor(e,t,n,i,s){super(),this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=i||0,this.endKnot=s||this.knots.length-1;for(let a=0;a<n.length;++a){const o=n[a];this.controlPoints[a]=new Ye(o.x,o.y,o.z,o.w)}}getPoint(e,t=new T){const n=t,i=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),s=HT(this.degree,this.knots,this.controlPoints,i);return s.w!==1&&s.divideScalar(s.w),n.set(s.x,s.y,s.z)}getTangent(e,t=new T){const n=t,i=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),s=jT(this.degree,this.knots,this.controlPoints,i,1);return n.copy(s[1]).normalize(),n}}let Be,dt,Wt;class YT extends Kt{constructor(e){super(e)}load(e,t,n,i){const s=this,a=s.path===""?ps.extractUrlBase(e):s.path,o=new Nn(this.manager);o.setPath(s.path),o.setResponseType("arraybuffer"),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(l){try{t(s.parse(l,a))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e,t){if(tE(e))Be=new eE().parse(e);else{const i=N_(e);if(!nE(i))throw new Error("THREE.FBXLoader: Unknown format.");if(zp(i)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+zp(i));Be=new QT().parse(i)}const n=new Tr(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new ZT(n,this.manager).parse(Be)}}class ZT{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){dt=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),n=this.parseMaterials(t),i=this.parseDeformers(),s=new JT().parse(i);return this.parseScene(i,s,n),Wt}parseConnections(){const e=new Map;return"Connections"in Be&&Be.Connections.connections.forEach(function(n){const i=n[0],s=n[1],a=n[2];e.has(i)||e.set(i,{parents:[],children:[]});const o={ID:s,relationship:a};e.get(i).parents.push(o),e.has(s)||e.set(s,{parents:[],children:[]});const l={ID:i,relationship:a};e.get(s).children.push(l)}),e}parseImages(){const e={},t={};if("Video"in Be.Objects){const n=Be.Objects.Video;for(const i in n){const s=n[i],a=parseInt(i);if(e[a]=s.RelativeFilename||s.Filename,"Content"in s){const o=s.Content instanceof ArrayBuffer&&s.Content.byteLength>0,l=typeof s.Content=="string"&&s.Content!=="";if(o||l){const c=this.parseImage(n[i]);t[s.RelativeFilename||s.Filename]=c}}}}for(const n in e){const i=e[n];t[i]!==void 0?e[n]=t[i]:e[n]=e[n].split("\\").pop()}return e}parseImage(e){const t=e.Content,n=e.RelativeFilename||e.Filename,i=n.slice(n.lastIndexOf(".")+1).toLowerCase();let s;switch(i){case"bmp":s="image/bmp";break;case"jpg":case"jpeg":s="image/jpeg";break;case"png":s="image/png";break;case"tif":s="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",n),s="image/tga";break;default:console.warn('FBXLoader: Image type "'+i+'" is not supported.');return}if(typeof t=="string")return"data:"+s+";base64,"+t;{const a=new Uint8Array(t);return window.URL.createObjectURL(new Blob([a],{type:s}))}}parseTextures(e){const t=new Map;if("Texture"in Be.Objects){const n=Be.Objects.Texture;for(const i in n){const s=this.parseTexture(n[i],e);t.set(parseInt(i),s)}}return t}parseTexture(e,t){const n=this.loadTexture(e,t);n.ID=e.id,n.name=e.attrName;const i=e.WrapModeU,s=e.WrapModeV,a=i!==void 0?i.value:0,o=s!==void 0?s.value:0;if(n.wrapS=a===0?hr:Lt,n.wrapT=o===0?hr:Lt,"Scaling"in e){const l=e.Scaling.value;n.repeat.x=l[0],n.repeat.y=l[1]}if("Translation"in e){const l=e.Translation.value;n.offset.x=l[0],n.offset.y=l[1]}return n}loadTexture(e,t){let n;const i=this.textureLoader.path,s=dt.get(e.id).children;s!==void 0&&s.length>0&&t[s[0].ID]!==void 0&&(n=t[s[0].ID],(n.indexOf("blob:")===0||n.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let a;const o=e.FileName.slice(-3).toLowerCase();if(o==="tga"){const l=this.manager.getHandler(".tga");l===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),a=new ct):(l.setPath(this.textureLoader.path),a=l.load(n))}else o==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),a=new ct):a=this.textureLoader.load(n);return this.textureLoader.setPath(i),a}parseMaterials(e){const t=new Map;if("Material"in Be.Objects){const n=Be.Objects.Material;for(const i in n){const s=this.parseMaterial(n[i],e);s!==null&&t.set(parseInt(i),s)}}return t}parseMaterial(e,t){const n=e.id,i=e.attrName;let s=e.ShadingModel;if(typeof s=="object"&&(s=s.value),!dt.has(n))return null;const a=this.parseParameters(e,t,n);let o;switch(s.toLowerCase()){case"phong":o=new Ys;break;case"lambert":o=new Jh;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',s),o=new Ys;break}return o.setValues(a),o.name=i,o}parseParameters(e,t,n){const i={};e.BumpFactor&&(i.bumpScale=e.BumpFactor.value),e.Diffuse?i.color=new ce().fromArray(e.Diffuse.value):e.DiffuseColor&&(e.DiffuseColor.type==="Color"||e.DiffuseColor.type==="ColorRGB")&&(i.color=new ce().fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(i.displacementScale=e.DisplacementFactor.value),e.Emissive?i.emissive=new ce().fromArray(e.Emissive.value):e.EmissiveColor&&(e.EmissiveColor.type==="Color"||e.EmissiveColor.type==="ColorRGB")&&(i.emissive=new ce().fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(i.opacity=parseFloat(e.Opacity.value)),i.opacity<1&&(i.transparent=!0),e.ReflectionFactor&&(i.reflectivity=e.ReflectionFactor.value),e.Shininess&&(i.shininess=e.Shininess.value),e.Specular?i.specular=new ce().fromArray(e.Specular.value):e.SpecularColor&&e.SpecularColor.type==="Color"&&(i.specular=new ce().fromArray(e.SpecularColor.value));const s=this;return dt.get(n).children.forEach(function(a){const o=a.relationship;switch(o){case"Bump":i.bumpMap=s.getTexture(t,a.ID);break;case"Maya|TEX_ao_map":i.aoMap=s.getTexture(t,a.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":i.map=s.getTexture(t,a.ID),i.map!==void 0&&(i.map.encoding=Ve);break;case"DisplacementColor":i.displacementMap=s.getTexture(t,a.ID);break;case"EmissiveColor":i.emissiveMap=s.getTexture(t,a.ID),i.emissiveMap!==void 0&&(i.emissiveMap.encoding=Ve);break;case"NormalMap":case"Maya|TEX_normal_map":i.normalMap=s.getTexture(t,a.ID);break;case"ReflectionColor":i.envMap=s.getTexture(t,a.ID),i.envMap!==void 0&&(i.envMap.mapping=os,i.envMap.encoding=Ve);break;case"SpecularColor":i.specularMap=s.getTexture(t,a.ID),i.specularMap!==void 0&&(i.specularMap.encoding=Ve);break;case"TransparentColor":case"TransparencyFactor":i.alphaMap=s.getTexture(t,a.ID),i.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",o);break}}),i}getTexture(e,t){return"LayeredTexture"in Be.Objects&&t in Be.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=dt.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in Be.Objects){const n=Be.Objects.Deformer;for(const i in n){const s=n[i],a=dt.get(parseInt(i));if(s.attrType==="Skin"){const o=this.parseSkeleton(a,n);o.ID=i,a.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),o.geometryID=a.parents[0].ID,e[i]=o}else if(s.attrType==="BlendShape"){const o={id:i};o.rawTargets=this.parseMorphTargets(a,n),o.id=i,a.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[i]=o}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const n=[];return e.children.forEach(function(i){const s=t[i.ID];if(s.attrType!=="Cluster")return;const a={ID:i.ID,indices:[],weights:[],transformLink:new be().fromArray(s.TransformLink.a)};"Indexes"in s&&(a.indices=s.Indexes.a,a.weights=s.Weights.a),n.push(a)}),{rawBones:n,bones:[]}}parseMorphTargets(e,t){const n=[];for(let i=0;i<e.children.length;i++){const s=e.children[i],a=t[s.ID],o={name:a.attrName,initialWeight:a.DeformPercent,id:a.id,fullWeights:a.FullWeights.a};if(a.attrType!=="BlendShapeChannel")return;o.geoID=dt.get(parseInt(s.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,n.push(o)}return n}parseScene(e,t,n){Wt=new yi;const i=this.parseModels(e.skeletons,t,n),s=Be.Objects.Model,a=this;i.forEach(function(l){const c=s[l.ID];a.setLookAtProperties(l,c),dt.get(l.ID).parents.forEach(function(h){const f=i.get(h.ID);f!==void 0&&f.add(l)}),l.parent===null&&Wt.add(l)}),this.bindSkeleton(e.skeletons,t,i),this.createAmbientLight(),Wt.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);const c=O_(l.userData.transformData);l.applyMatrix4(c),l.updateWorldMatrix()}});const o=new KT().parse();Wt.children.length===1&&Wt.children[0].isGroup&&(Wt.children[0].animations=o,Wt=Wt.children[0]),Wt.animations=o}parseModels(e,t,n){const i=new Map,s=Be.Objects.Model;for(const a in s){const o=parseInt(a),l=s[a],c=dt.get(o);let u=this.buildSkeleton(c,e,o,l.attrName);if(!u){switch(l.attrType){case"Camera":u=this.createCamera(c);break;case"Light":u=this.createLight(c);break;case"Mesh":u=this.createMesh(c,t,n);break;case"NurbsCurve":u=this.createCurve(c,t);break;case"LimbNode":case"Root":u=new ua;break;case"Null":default:u=new yi;break}u.name=l.attrName?Ue.sanitizeNodeName(l.attrName):"",u.ID=o}this.getTransformData(u,l),i.set(o,u)}return i}buildSkeleton(e,t,n,i){let s=null;return e.parents.forEach(function(a){for(const o in t){const l=t[o];l.rawBones.forEach(function(c,u){if(c.ID===a.ID){const h=s;s=new ua,s.matrixWorld.copy(c.transformLink),s.name=i?Ue.sanitizeNodeName(i):"",s.ID=n,l.bones[u]=s,h!==null&&s.add(h)}})}}),s}createCamera(e){let t,n;if(e.children.forEach(function(i){const s=Be.Objects.NodeAttribute[i.ID];s!==void 0&&(n=s)}),n===void 0)t=new We;else{let i=0;n.CameraProjectionType!==void 0&&n.CameraProjectionType.value===1&&(i=1);let s=1;n.NearPlane!==void 0&&(s=n.NearPlane.value/1e3);let a=1e3;n.FarPlane!==void 0&&(a=n.FarPlane.value/1e3);let o=window.innerWidth,l=window.innerHeight;n.AspectWidth!==void 0&&n.AspectHeight!==void 0&&(o=n.AspectWidth.value,l=n.AspectHeight.value);const c=o/l;let u=45;n.FieldOfView!==void 0&&(u=n.FieldOfView.value);const h=n.FocalLength?n.FocalLength.value:null;switch(i){case 0:t=new wt(u,c,s,a),h!==null&&t.setFocalLength(h);break;case 1:t=new br(-o/2,o/2,l/2,-l/2,s,a);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+i+"."),t=new We;break}}return t}createLight(e){let t,n;if(e.children.forEach(function(i){const s=Be.Objects.NodeAttribute[i.ID];s!==void 0&&(n=s)}),n===void 0)t=new We;else{let i;n.LightType===void 0?i=0:i=n.LightType.value;let s=16777215;n.Color!==void 0&&(s=new ce().fromArray(n.Color.value));let a=n.Intensity===void 0?1:n.Intensity.value/100;n.CastLightOnObject!==void 0&&n.CastLightOnObject.value===0&&(a=0);let o=0;n.FarAttenuationEnd!==void 0&&(n.EnableFarAttenuation!==void 0&&n.EnableFarAttenuation.value===0?o=0:o=n.FarAttenuationEnd.value);const l=1;switch(i){case 0:t=new ga(s,a,o,l);break;case 1:t=new Vl(s,a);break;case 2:let c=Math.PI/3;n.InnerAngle!==void 0&&(c=Tn.degToRad(n.InnerAngle.value));let u=0;n.OuterAngle!==void 0&&(u=Tn.degToRad(n.OuterAngle.value),u=Math.max(u,1)),t=new sf(s,a,o,c,u,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),t=new ga(s,a);break}n.CastShadows!==void 0&&n.CastShadows.value===1&&(t.castShadow=!0)}return t}createMesh(e,t,n){let i,s=null,a=null;const o=[];return e.children.forEach(function(l){t.has(l.ID)&&(s=t.get(l.ID)),n.has(l.ID)&&o.push(n.get(l.ID))}),o.length>1?a=o:o.length>0?a=o[0]:(a=new Ys({color:13421772}),o.push(a)),"color"in s.attributes&&o.forEach(function(l){l.vertexColors=!0}),s.FBX_Deformer?(i=new Uh(s,a),i.normalizeSkinWeights()):i=new St(s,a),i}createCurve(e,t){const n=e.children.reduce(function(s,a){return t.has(a.ID)&&(s=t.get(a.ID)),s},null),i=new zt({color:3342591,linewidth:1});return new ii(n,i)}getTransformData(e,t){const n={};"InheritType"in t&&(n.inheritType=parseInt(t.InheritType.value)),"RotationOrder"in t?n.eulerOrder=F_(t.RotationOrder.value):n.eulerOrder="ZYX","Lcl_Translation"in t&&(n.translation=t.Lcl_Translation.value),"PreRotation"in t&&(n.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(n.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(n.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(n.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(n.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(n.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(n.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(n.rotationPivot=t.RotationPivot.value),e.userData.transformData=n}setLookAtProperties(e,t){"LookAtProperty"in t&&dt.get(e.ID).children.forEach(function(i){if(i.relationship==="LookAtProperty"){const s=Be.Objects.Model[i.ID];if("Lcl_Translation"in s){const a=s.Lcl_Translation.value;e.target!==void 0?(e.target.position.fromArray(a),Wt.add(e.target)):e.lookAt(new T().fromArray(a))}}})}bindSkeleton(e,t,n){const i=this.parsePoseNodes();for(const s in e){const a=e[s];dt.get(parseInt(a.ID)).parents.forEach(function(l){if(t.has(l.ID)){const c=l.ID;dt.get(c).parents.forEach(function(h){n.has(h.ID)&&n.get(h.ID).bind(new Ca(a.bones),i[h.ID])})}})}}parsePoseNodes(){const e={};if("Pose"in Be.Objects){const t=Be.Objects.Pose;for(const n in t)if(t[n].attrType==="BindPose"&&t[n].NbPoseNodes>0){const i=t[n].PoseNode;Array.isArray(i)?i.forEach(function(s){e[s.Node]=new be().fromArray(s.Matrix.a)}):e[i.Node]=new be().fromArray(i.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in Be&&"AmbientColor"in Be.GlobalSettings){const e=Be.GlobalSettings.AmbientColor.value,t=e[0],n=e[1],i=e[2];if(t!==0||n!==0||i!==0){const s=new ce(t,n,i);Wt.add(new Gl(s,1))}}}}class JT{constructor(){this.negativeMaterialIndices=!1}parse(e){const t=new Map;if("Geometry"in Be.Objects){const n=Be.Objects.Geometry;for(const i in n){const s=dt.get(parseInt(i)),a=this.parseGeometry(s,n[i],e);t.set(parseInt(i),a)}}return this.negativeMaterialIndices===!0&&console.warn("THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected."),t}parseGeometry(e,t,n){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,n);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,n){const i=n.skeletons,s=[],a=e.parents.map(function(h){return Be.Objects.Model[h.ID]});if(a.length===0)return;const o=e.children.reduce(function(h,f){return i[f.ID]!==void 0&&(h=i[f.ID]),h},null);e.children.forEach(function(h){n.morphTargets[h.ID]!==void 0&&s.push(n.morphTargets[h.ID])});const l=a[0],c={};"RotationOrder"in l&&(c.eulerOrder=F_(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);const u=O_(c);return this.genGeometry(t,o,s,u)}genGeometry(e,t,n,i){const s=new De;e.attrName&&(s.name=e.attrName);const a=this.parseGeoNode(e,t),o=this.genBuffers(a),l=new ge(o.vertex,3);if(l.applyMatrix4(i),s.setAttribute("position",l),o.colors.length>0&&s.setAttribute("color",new ge(o.colors,3)),t&&(s.setAttribute("skinIndex",new Rl(o.weightsIndices,4)),s.setAttribute("skinWeight",new ge(o.vertexWeights,4)),s.FBX_Deformer=t),o.normal.length>0){const c=new Nt().getNormalMatrix(i),u=new ge(o.normal,3);u.applyNormalMatrix(c),s.setAttribute("normal",u)}if(o.uvs.forEach(function(c,u){let h="uv"+(u+1).toString();u===0&&(h="uv"),s.setAttribute(h,new ge(o.uvs[u],2))}),a.material&&a.material.mappingType!=="AllSame"){let c=o.materialIndex[0],u=0;if(o.materialIndex.forEach(function(h,f){h!==c&&(s.addGroup(u,f-u,c),c=h,u=f)}),s.groups.length>0){const h=s.groups[s.groups.length-1],f=h.start+h.count;f!==o.materialIndex.length&&s.addGroup(f,o.materialIndex.length-f,c)}s.groups.length===0&&s.addGroup(0,o.materialIndex.length,o.materialIndex[0])}return this.addMorphTargets(s,e,n,i),s}parseGeoNode(e,t){const n={};if(n.vertexPositions=e.Vertices!==void 0?e.Vertices.a:[],n.vertexIndices=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(n.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(n.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(n.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){n.uv=[];let i=0;for(;e.LayerElementUV[i];)e.LayerElementUV[i].UV&&n.uv.push(this.parseUVs(e.LayerElementUV[i])),i++}return n.weightTable={},t!==null&&(n.skeleton=t,t.rawBones.forEach(function(i,s){i.indices.forEach(function(a,o){n.weightTable[a]===void 0&&(n.weightTable[a]=[]),n.weightTable[a].push({id:s,weight:i.weights[o]})})})),n}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let n=0,i=0,s=!1,a=[],o=[],l=[],c=[],u=[],h=[];const f=this;return e.vertexIndices.forEach(function(d,p){let m,g=!1;d<0&&(d=d^-1,g=!0);let v=[],x=[];if(a.push(d*3,d*3+1,d*3+2),e.color){const _=ko(p,n,d,e.color);l.push(_[0],_[1],_[2])}if(e.skeleton){if(e.weightTable[d]!==void 0&&e.weightTable[d].forEach(function(_){x.push(_.weight),v.push(_.id)}),x.length>4){s||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),s=!0);const _=[0,0,0,0],y=[0,0,0,0];x.forEach(function(M,w){let C=M,b=v[w];y.forEach(function(A,L,k){if(C>A){k[L]=C,C=A;const W=_[L];_[L]=b,b=W}})}),v=_,x=y}for(;x.length<4;)x.push(0),v.push(0);for(let _=0;_<4;++_)u.push(x[_]),h.push(v[_])}if(e.normal){const _=ko(p,n,d,e.normal);o.push(_[0],_[1],_[2])}e.material&&e.material.mappingType!=="AllSame"&&(m=ko(p,n,d,e.material)[0],m<0&&(f.negativeMaterialIndices=!0,m=0)),e.uv&&e.uv.forEach(function(_,y){const M=ko(p,n,d,_);c[y]===void 0&&(c[y]=[]),c[y].push(M[0]),c[y].push(M[1])}),i++,g&&(i>4&&console.warn("THREE.FBXLoader: Polygons with more than four sides are not supported. Make sure to triangulate the geometry during export."),f.genFace(t,e,a,m,o,l,c,u,h,i),n++,i=0,a=[],o=[],l=[],c=[],u=[],h=[])}),t}genFace(e,t,n,i,s,a,o,l,c,u){for(let h=2;h<u;h++)e.vertex.push(t.vertexPositions[n[0]]),e.vertex.push(t.vertexPositions[n[1]]),e.vertex.push(t.vertexPositions[n[2]]),e.vertex.push(t.vertexPositions[n[(h-1)*3]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+1]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+2]]),e.vertex.push(t.vertexPositions[n[h*3]]),e.vertex.push(t.vertexPositions[n[h*3+1]]),e.vertex.push(t.vertexPositions[n[h*3+2]]),t.skeleton&&(e.vertexWeights.push(l[0]),e.vertexWeights.push(l[1]),e.vertexWeights.push(l[2]),e.vertexWeights.push(l[3]),e.vertexWeights.push(l[(h-1)*4]),e.vertexWeights.push(l[(h-1)*4+1]),e.vertexWeights.push(l[(h-1)*4+2]),e.vertexWeights.push(l[(h-1)*4+3]),e.vertexWeights.push(l[h*4]),e.vertexWeights.push(l[h*4+1]),e.vertexWeights.push(l[h*4+2]),e.vertexWeights.push(l[h*4+3]),e.weightsIndices.push(c[0]),e.weightsIndices.push(c[1]),e.weightsIndices.push(c[2]),e.weightsIndices.push(c[3]),e.weightsIndices.push(c[(h-1)*4]),e.weightsIndices.push(c[(h-1)*4+1]),e.weightsIndices.push(c[(h-1)*4+2]),e.weightsIndices.push(c[(h-1)*4+3]),e.weightsIndices.push(c[h*4]),e.weightsIndices.push(c[h*4+1]),e.weightsIndices.push(c[h*4+2]),e.weightsIndices.push(c[h*4+3])),t.color&&(e.colors.push(a[0]),e.colors.push(a[1]),e.colors.push(a[2]),e.colors.push(a[(h-1)*3]),e.colors.push(a[(h-1)*3+1]),e.colors.push(a[(h-1)*3+2]),e.colors.push(a[h*3]),e.colors.push(a[h*3+1]),e.colors.push(a[h*3+2])),t.material&&t.material.mappingType!=="AllSame"&&(e.materialIndex.push(i),e.materialIndex.push(i),e.materialIndex.push(i)),t.normal&&(e.normal.push(s[0]),e.normal.push(s[1]),e.normal.push(s[2]),e.normal.push(s[(h-1)*3]),e.normal.push(s[(h-1)*3+1]),e.normal.push(s[(h-1)*3+2]),e.normal.push(s[h*3]),e.normal.push(s[h*3+1]),e.normal.push(s[h*3+2])),t.uv&&t.uv.forEach(function(f,d){e.uvs[d]===void 0&&(e.uvs[d]=[]),e.uvs[d].push(o[d][0]),e.uvs[d].push(o[d][1]),e.uvs[d].push(o[d][(h-1)*2]),e.uvs[d].push(o[d][(h-1)*2+1]),e.uvs[d].push(o[d][h*2]),e.uvs[d].push(o[d][h*2+1])})}addMorphTargets(e,t,n,i){if(n.length===0)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const s=this;n.forEach(function(a){a.rawTargets.forEach(function(o){const l=Be.Objects.Geometry[o.geoID];l!==void 0&&s.genMorphGeometry(e,t,l,i,o.name)})})}genMorphGeometry(e,t,n,i,s){const a=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],o=n.Vertices!==void 0?n.Vertices.a:[],l=n.Indexes!==void 0?n.Indexes.a:[],c=e.attributes.position.count*3,u=new Float32Array(c);for(let p=0;p<l.length;p++){const m=l[p]*3;u[m]=o[p*3],u[m+1]=o[p*3+1],u[m+2]=o[p*3+2]}const h={vertexIndices:a,vertexPositions:u},f=this.genBuffers(h),d=new ge(f.vertex,3);d.name=s||n.attrName,d.applyMatrix4(i),e.morphAttributes.position.push(d)}parseNormals(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Normals.a;let s=[];return n==="IndexToDirect"&&("NormalIndex"in e?s=e.NormalIndex.a:"NormalsIndex"in e&&(s=e.NormalsIndex.a)),{dataSize:3,buffer:i,indices:s,mappingType:t,referenceType:n}}parseUVs(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.UV.a;let s=[];return n==="IndexToDirect"&&(s=e.UVIndex.a),{dataSize:2,buffer:i,indices:s,mappingType:t,referenceType:n}}parseVertexColors(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Colors.a;let s=[];return n==="IndexToDirect"&&(s=e.ColorIndex.a),{dataSize:4,buffer:i,indices:s,mappingType:t,referenceType:n}}parseMaterialIndices(e){const t=e.MappingInformationType,n=e.ReferenceInformationType;if(t==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};const i=e.Materials.a,s=[];for(let a=0;a<i.length;++a)s.push(a);return{dataSize:1,buffer:i,indices:s,mappingType:t,referenceType:n}}parseNurbsGeometry(e){if(Np===void 0)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new De;const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new De;const n=t-1,i=e.KnotVector.a,s=[],a=e.Points.a;for(let h=0,f=a.length;h<f;h+=4)s.push(new Ye().fromArray(a,h));let o,l;if(e.Form==="Closed")s.push(s[0]);else if(e.Form==="Periodic"){o=n,l=i.length-1-o;for(let h=0;h<n;++h)s.push(s[h])}const u=new Np(n,i,s,o,l).getPoints(s.length*12);return new De().setFromPoints(u)}}class KT{parse(){const e=[],t=this.parseClips();if(t!==void 0)for(const n in t){const i=t[n],s=this.addClip(i);e.push(s)}return e}parseClips(){if(Be.Objects.AnimationCurve===void 0)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=Be.Objects.AnimationCurveNode,t=new Map;for(const n in e){const i=e[n];if(i.attrName.match(/S|R|T|DeformPercent/)!==null){const s={id:i.id,attr:i.attrName,curves:{}};t.set(s.id,s)}}return t}parseAnimationCurves(e){const t=Be.Objects.AnimationCurve;for(const n in t){const i={id:t[n].id,times:t[n].KeyTime.a.map(iE),values:t[n].KeyValueFloat.a},s=dt.get(i.id);if(s!==void 0){const a=s.parents[0].ID,o=s.parents[0].relationship;o.match(/X/)?e.get(a).curves.x=i:o.match(/Y/)?e.get(a).curves.y=i:o.match(/Z/)?e.get(a).curves.z=i:o.match(/d|DeformPercent/)&&e.has(a)&&(e.get(a).curves.morph=i)}}}parseAnimationLayers(e){const t=Be.Objects.AnimationLayer,n=new Map;for(const i in t){const s=[],a=dt.get(parseInt(i));a!==void 0&&(a.children.forEach(function(l,c){if(e.has(l.ID)){const u=e.get(l.ID);if(u.curves.x!==void 0||u.curves.y!==void 0||u.curves.z!==void 0){if(s[c]===void 0){const h=dt.get(l.ID).parents.filter(function(f){return f.relationship!==void 0})[0].ID;if(h!==void 0){const f=Be.Objects.Model[h.toString()];if(f===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}const d={modelName:f.attrName?Ue.sanitizeNodeName(f.attrName):"",ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};Wt.traverse(function(p){p.ID===f.id&&(d.transform=p.matrix,p.userData.transformData&&(d.eulerOrder=p.userData.transformData.eulerOrder))}),d.transform||(d.transform=new be),"PreRotation"in f&&(d.preRotation=f.PreRotation.value),"PostRotation"in f&&(d.postRotation=f.PostRotation.value),s[c]=d}}s[c]&&(s[c][u.attr]=u)}else if(u.curves.morph!==void 0){if(s[c]===void 0){const h=dt.get(l.ID).parents.filter(function(v){return v.relationship!==void 0})[0].ID,f=dt.get(h).parents[0].ID,d=dt.get(f).parents[0].ID,p=dt.get(d).parents[0].ID,m=Be.Objects.Model[p],g={modelName:m.attrName?Ue.sanitizeNodeName(m.attrName):"",morphName:Be.Objects.Deformer[h].attrName};s[c]=g}s[c][u.attr]=u}}}),n.set(parseInt(i),s))}return n}parseAnimStacks(e){const t=Be.Objects.AnimationStack,n={};for(const i in t){const s=dt.get(parseInt(i)).children;s.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const a=e.get(s[0].ID);n[i]={name:t[i].attrName,layer:a}}return n}addClip(e){let t=[];const n=this;return e.layer.forEach(function(i){t=t.concat(n.generateTracks(i))}),new mr(e.name,-1,t)}generateTracks(e){const t=[];let n=new T,i=new bt,s=new T;if(e.transform&&e.transform.decompose(n,i,s),n=n.toArray(),i=new qt().setFromQuaternion(i,e.eulerOrder).toArray(),s=s.toArray(),e.T!==void 0&&Object.keys(e.T.curves).length>0){const a=this.generateVectorTrack(e.modelName,e.T.curves,n,"position");a!==void 0&&t.push(a)}if(e.R!==void 0&&Object.keys(e.R.curves).length>0){const a=this.generateRotationTrack(e.modelName,e.R.curves,i,e.preRotation,e.postRotation,e.eulerOrder);a!==void 0&&t.push(a)}if(e.S!==void 0&&Object.keys(e.S.curves).length>0){const a=this.generateVectorTrack(e.modelName,e.S.curves,s,"scale");a!==void 0&&t.push(a)}if(e.DeformPercent!==void 0){const a=this.generateMorphTrack(e);a!==void 0&&t.push(a)}return t}generateVectorTrack(e,t,n,i){const s=this.getTimesForAllAxes(t),a=this.getKeyframeTrackValues(s,t,n);return new ds(e+"."+i,s,a)}generateRotationTrack(e,t,n,i,s,a){t.x!==void 0&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(Tn.degToRad)),t.y!==void 0&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(Tn.degToRad)),t.z!==void 0&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(Tn.degToRad));const o=this.getTimesForAllAxes(t),l=this.getKeyframeTrackValues(o,t,n);i!==void 0&&(i=i.map(Tn.degToRad),i.push(a),i=new qt().fromArray(i),i=new bt().setFromEuler(i)),s!==void 0&&(s=s.map(Tn.degToRad),s.push(a),s=new qt().fromArray(s),s=new bt().setFromEuler(s).invert());const c=new bt,u=new qt,h=[];for(let f=0;f<l.length;f+=3)u.set(l[f],l[f+1],l[f+2],a),c.setFromEuler(u),i!==void 0&&c.premultiply(i),s!==void 0&&c.multiply(s),c.toArray(h,f/3*4);return new Sr(e+".quaternion",o,h)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,n=t.values.map(function(s){return s/100}),i=Wt.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new fs(e.modelName+".morphTargetInfluences["+i+"]",t.times,n)}getTimesForAllAxes(e){let t=[];if(e.x!==void 0&&(t=t.concat(e.x.times)),e.y!==void 0&&(t=t.concat(e.y.times)),e.z!==void 0&&(t=t.concat(e.z.times)),t=t.sort(function(n,i){return n-i}),t.length>1){let n=1,i=t[0];for(let s=1;s<t.length;s++){const a=t[s];a!==i&&(t[n]=a,i=a,n++)}t=t.slice(0,n)}return t}getKeyframeTrackValues(e,t,n){const i=n,s=[];let a=-1,o=-1,l=-1;return e.forEach(function(c){if(t.x&&(a=t.x.times.indexOf(c)),t.y&&(o=t.y.times.indexOf(c)),t.z&&(l=t.z.times.indexOf(c)),a!==-1){const u=t.x.values[a];s.push(u),i[0]=u}else s.push(i[0]);if(o!==-1){const u=t.y.values[o];s.push(u),i[1]=u}else s.push(i[1]);if(l!==-1){const u=t.z.values[l];s.push(u),i[2]=u}else s.push(i[2])}),s}interpolateRotations(e){for(let t=1;t<e.values.length;t++){const n=e.values[t-1],i=e.values[t]-n,s=Math.abs(i);if(s>=180){const a=s/180,o=i/a;let l=n+o;const c=e.times[t-1],h=(e.times[t]-c)/a;let f=c+h;const d=[],p=[];for(;f<e.times[t];)d.push(f),f+=h,p.push(l),l+=o;e.times=Bp(e.times,t,d),e.values=Bp(e.values,t,p)}}}}class QT{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new D_,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,n=e.split(/[\r\n]+/);return n.forEach(function(i,s){const a=i.match(/^[\s\t]*;/),o=i.match(/^[\s\t]*$/);if(a||o)return;const l=i.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),c=i.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),u=i.match("^\\t{"+(t.currentIndent-1)+"}}");l?t.parseNodeBegin(i,l):c?t.parseNodeProperty(i,c,n[++s]):u?t.popStack():i.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(i)}),this.allNodes}parseNodeBegin(e,t){const n=t[1].trim().replace(/^"/,"").replace(/"$/,""),i=t[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),s={name:n},a=this.parseNodeAttr(i),o=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(n,s):n in o?(n==="PoseNode"?o.PoseNode.push(s):o[n].id!==void 0&&(o[n]={},o[n][o[n].id]=o[n]),a.id!==""&&(o[n][a.id]=s)):typeof a.id=="number"?(o[n]={},o[n][a.id]=s):n!=="Properties70"&&(n==="PoseNode"?o[n]=[s]:o[n]=s),typeof a.id=="number"&&(s.id=a.id),a.name!==""&&(s.attrName=a.name),a.type!==""&&(s.attrType=a.type),this.pushStack(s)}parseNodeAttr(e){let t=e[0];e[0]!==""&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let n="",i="";return e.length>1&&(n=e[1].replace(/^(\w+)::/,""),i=e[2]),{id:t,name:n,type:i}}parseNodeProperty(e,t,n){let i=t[1].replace(/^"/,"").replace(/"$/,"").trim(),s=t[2].replace(/^"/,"").replace(/"$/,"").trim();i==="Content"&&s===","&&(s=n.replace(/"/g,"").replace(/,$/,"").trim());const a=this.getCurrentNode();if(a.name==="Properties70"){this.parseNodeSpecialProperty(e,i,s);return}if(i==="C"){const l=s.split(",").slice(1),c=parseInt(l[0]),u=parseInt(l[1]);let h=s.split(",").slice(3);h=h.map(function(f){return f.trim().replace(/^"/,"")}),i="connections",s=[c,u],sE(s,h),a[i]===void 0&&(a[i]=[])}i==="Node"&&(a.id=s),i in a&&Array.isArray(a[i])?a[i].push(s):i!=="a"?a[i]=s:a.a=s,this.setCurrentProp(a,i),i==="a"&&s.slice(-1)!==","&&(a.a=Yc(s))}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,e.slice(-1)!==","&&(t.a=Yc(t.a))}parseNodeSpecialProperty(e,t,n){const i=n.split('",').map(function(u){return u.trim().replace(/^\"/,"").replace(/\s/,"_")}),s=i[0],a=i[1],o=i[2],l=i[3];let c=i[4];switch(a){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=Yc(c);break}this.getPrevNode()[s]={type:a,type2:o,flag:l,value:c},this.setCurrentProp(this.getPrevNode(),s)}}class eE{parse(e){const t=new kp(e);t.skip(23);const n=t.getUint32();if(n<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+n);const i=new D_;for(;!this.endOfContent(t);){const s=this.parseNode(t,n);s!==null&&i.add(s.name,s)}return i}endOfContent(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const n={},i=t>=7500?e.getUint64():e.getUint32(),s=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const a=e.getUint8(),o=e.getString(a);if(i===0)return null;const l=[];for(let f=0;f<s;f++)l.push(this.parseProperty(e));const c=l.length>0?l[0]:"",u=l.length>1?l[1]:"",h=l.length>2?l[2]:"";for(n.singleProperty=s===1&&e.getOffset()===i;i>e.getOffset();){const f=this.parseNode(e,t);f!==null&&this.parseSubNode(o,n,f)}return n.propertyList=l,typeof c=="number"&&(n.id=c),u!==""&&(n.attrName=u),h!==""&&(n.attrType=h),o!==""&&(n.name=o),n}parseSubNode(e,t,n){if(n.singleProperty===!0){const i=n.propertyList[0];Array.isArray(i)?(t[n.name]=n,n.a=i):t[n.name]=i}else if(e==="Connections"&&n.name==="C"){const i=[];n.propertyList.forEach(function(s,a){a!==0&&i.push(s)}),t.connections===void 0&&(t.connections=[]),t.connections.push(i)}else if(n.name==="Properties70")Object.keys(n).forEach(function(s){t[s]=n[s]});else if(e==="Properties70"&&n.name==="P"){let i=n.propertyList[0],s=n.propertyList[1];const a=n.propertyList[2],o=n.propertyList[3];let l;i.indexOf("Lcl ")===0&&(i=i.replace("Lcl ","Lcl_")),s.indexOf("Lcl ")===0&&(s=s.replace("Lcl ","Lcl_")),s==="Color"||s==="ColorRGB"||s==="Vector"||s==="Vector3D"||s.indexOf("Lcl_")===0?l=[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:l=n.propertyList[4],t[i]={type:s,type2:a,flag:o,value:l}}else t[n.name]===void 0?typeof n.id=="number"?(t[n.name]={},t[n.name][n.id]=n):t[n.name]=n:n.name==="PoseNode"?(Array.isArray(t[n.name])||(t[n.name]=[t[n.name]]),t[n.name].push(n)):t[n.name][n.id]===void 0&&(t[n.name][n.id]=n)}parseProperty(e){const t=e.getString(1);let n;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return n=e.getUint32(),e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const i=e.getUint32(),s=e.getUint32(),a=e.getUint32();if(s===0)switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}typeof VT>"u"&&console.error("THREE.FBXLoader: External library fflate.min.js required.");const o=ya(new Uint8Array(e.getArrayBuffer(a))),l=new kp(o.buffer);switch(t){case"b":case"c":return l.getBooleanArray(i);case"d":return l.getFloat64Array(i);case"f":return l.getFloat32Array(i);case"i":return l.getInt32Array(i);case"l":return l.getInt64Array(i)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}class kp{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=t!==void 0?t:!0}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(e){const t=[];for(let n=0;n<e;n++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t&2147483648?(t=~t&4294967295,e=~e&4294967295,e===4294967295&&(t=t+1&4294967295),e=e+1&4294967295,-(t*4294967296+e)):t*4294967296+e}getInt64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t*4294967296+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){let t=[];for(let i=0;i<e;i++)t[i]=this.getUint8();const n=t.indexOf(0);return n>=0&&(t=t.slice(0,n)),ps.decodeText(new Uint8Array(t))}}class D_{add(e,t){this[e]=t}}function tE(r){const e="Kaydara FBX Binary  \0";return r.byteLength>=e.length&&e===N_(r,0,e.length)}function nE(r){const e=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let t=0;function n(i){const s=r[i-1];return r=r.slice(t+i),t++,s}for(let i=0;i<e.length;++i)if(n(1)===e[i])return!1;return!0}function zp(r){const e=/FBXVersion: (\d+)/,t=r.match(e);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function iE(r){return r/46186158e3}const rE=[];function ko(r,e,t,n){let i;switch(n.mappingType){case"ByPolygonVertex":i=r;break;case"ByPolygon":i=e;break;case"ByVertice":i=t;break;case"AllSame":i=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}n.referenceType==="IndexToDirect"&&(i=n.indices[i]);const s=i*n.dataSize,a=s+n.dataSize;return aE(rE,n.buffer,s,a)}const jc=new qt,$r=new T;function O_(r){const e=new be,t=new be,n=new be,i=new be,s=new be,a=new be,o=new be,l=new be,c=new be,u=new be,h=new be,f=new be,d=r.inheritType?r.inheritType:0;if(r.translation&&e.setPosition($r.fromArray(r.translation)),r.preRotation){const L=r.preRotation.map(Tn.degToRad);L.push(r.eulerOrder||qt.DefaultOrder),t.makeRotationFromEuler(jc.fromArray(L))}if(r.rotation){const L=r.rotation.map(Tn.degToRad);L.push(r.eulerOrder||qt.DefaultOrder),n.makeRotationFromEuler(jc.fromArray(L))}if(r.postRotation){const L=r.postRotation.map(Tn.degToRad);L.push(r.eulerOrder||qt.DefaultOrder),i.makeRotationFromEuler(jc.fromArray(L)),i.invert()}r.scale&&s.scale($r.fromArray(r.scale)),r.scalingOffset&&o.setPosition($r.fromArray(r.scalingOffset)),r.scalingPivot&&a.setPosition($r.fromArray(r.scalingPivot)),r.rotationOffset&&l.setPosition($r.fromArray(r.rotationOffset)),r.rotationPivot&&c.setPosition($r.fromArray(r.rotationPivot)),r.parentMatrixWorld&&(h.copy(r.parentMatrix),u.copy(r.parentMatrixWorld));const p=t.clone().multiply(n).multiply(i),m=new be;m.extractRotation(u);const g=new be;g.copyPosition(u);const v=g.clone().invert().multiply(u),x=m.clone().invert().multiply(v),_=s,y=new be;if(d===0)y.copy(m).multiply(p).multiply(x).multiply(_);else if(d===1)y.copy(m).multiply(x).multiply(p).multiply(_);else{const k=new be().scale(new T().setFromMatrixScale(h)).clone().invert(),W=x.clone().multiply(k);y.copy(m).multiply(p).multiply(W).multiply(_)}const M=c.clone().invert(),w=a.clone().invert();let C=e.clone().multiply(l).multiply(c).multiply(t).multiply(n).multiply(i).multiply(M).multiply(o).multiply(a).multiply(s).multiply(w);const b=new be().copyPosition(C),A=u.clone().multiply(b);return f.copyPosition(A),C=f.clone().multiply(y),C.premultiply(u.invert()),C}function F_(r){r=r||0;const e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return r===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[r]}function Yc(r){return r.split(",").map(function(t){return parseFloat(t)})}function N_(r,e,t){return e===void 0&&(e=0),t===void 0&&(t=r.byteLength),ps.decodeText(new Uint8Array(r,e,t))}function sE(r,e){for(let t=0,n=r.length,i=e.length;t<i;t++,n++)r[n]=e[t]}function aE(r,e,t,n){for(let i=t,s=0;i<n;i++,s++)r[s]=e[i];return r}function Bp(r,e,t){return r.slice(0,e).concat(t).concat(r.slice(e))}const k_=r=>r&&new Promise(e=>{new YT().load(r,e)}),z_=r=>r&&new Promise(e=>{new Tr().load(r,e)}),oE=["px.png","nx.png","py.png","ny.png","pz.png","nz.png"],lE=r=>r&&new Promise(e=>{new z0().setPath(`${r}/`).load(oE,e)}),cE=["c100007_01","c100007_05","c100007_09","c100034_01","c100035_01","c100036_01","c100037_01","c100041_01"],uE=async r=>await(await fetch(r)).json(),ql=async r=>(await uE(r)).data,hE=(...r)=>e=>r.reduce((t,n)=>n(t),e),fE=r=>[...new Set(r)],Qn=r=>r==="false"?!1:!!r,B_=(r,e,t)=>{if(!e.length)return;const n=e.pop(),i=e.reduce((s,a)=>s==null?void 0:s[a],r);i&&(i[n]=t)};function wf(r){return!!/[0-9A-Fa-f]{6}/.test(r)}function el(r){return wf(r)&&!r.startsWith("#")?new ce(`#${r}`):new ce(r)}async function dE(r=100){return await new Promise(e=>setTimeout(e,r))}function U_(r,e="="){const[t,...n]=r.split(e),i=n.join(e);return[t,i]}const pE=r=>r.startsWith("w302"),Up=([r,...e])=>`${r.toUpperCase()}${e.join("")}`;function mE(r){var t;return r==="smith"?"dragon":r.endsWith("h")?"story":cE.includes(r)?"spAdventurer":(t={c:"adventurer",b:"boss",d:"dragon",e:"enemy",h:"high boss",o:"object",r:"raid boss",w:"weapon"}[r[0]])!=null?t:"other"}function gE(r=kE){const e=new kh(r);return e.outputEncoding=Ve,e}function _E(r={}){const{fov:e,aspect:t,near:n,far:i}={...BE,...r};return new wt(e,t,n,i)}async function vE(r){if(r.startsWith("img:")){const e=r.replace("img:",""),t=await z_(e);return t.encoding=Ve,t.center.set(.5,0),t}if(r.startsWith("sky:")){const e=r.replace("sky:",""),t=await lE(e);return t.encoding=Ve,t}if(r==="transparent")return null;if(wf(r)){const e=r.startsWith("#")?r:`#${r}`;return new ce(e)}}function yE(r){var e,t,n,i;(t=(e=r.map)==null?void 0:e.dispose)==null||t.call(e),(i=(n=r.userData.backupMap)==null?void 0:n.dispose)==null||i.call(n),r.dispose()}const V_=r=>{const e=new Tr().load(r);return e.encoding=Ve,e};function xE(r){const e=[],t=[];return r.traverse(n=>{n.isMesh&&e.push(n),n.isBone&&t.push(n)}),[e,t]}function bE(r){var t,n;if(!r)return;[r.material].flat().forEach(i=>{var s,a,o,l,c,u;(a=(s=i.map)==null?void 0:s.dispose)==null||a.call(s),(c=(l=(o=i.userData)==null?void 0:o.backupMap)==null?void 0:l.dispose)==null||c.call(l),(u=i.dispose)==null||u.call(i)}),(n=(t=r.geometry)==null?void 0:t.dispose)==null||n.call(t)}const ME=()=>{const r=new Date,e=r.toDateString().replaceAll(" ","_"),t=r.toLocaleTimeString().replaceAll(":","-").replaceAll(" ","");return`${e}_${t}`},G_=r=>r?r.split("/").reduce((t,n)=>{const[i,s]=n.split("=");return i&&s&&(t[i]=s),t},{}):{},wE=`
varying vec3 vViewPosition;

struct BlinnPhongMaterial {

	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;

};

void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;

}

void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
`,SE=`
#ifdef USE_MATCAP

	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks
	vec4 matcapColor = texture2D( matcap, uv );

	#ifdef MATCAP_BLENDING_MULTIPLY

		outgoingLight *= matcapColor.rgb;

	#elif defined( MATCAP_BLENDING_ADD )

		outgoingLight += matcapColor.rgb;

	#endif

#endif
`,zo={defines:{TOON:!0,MATCAP:!0,MATCAP_BLENDING_ADD:!0},uniforms:Ta.merge([Ft.toon.uniforms,Ft.phong.uniforms,Ft.matcap.uniforms]),vertexShader:Ft.phong.vertexShader,fragmentShader:Ft.phong.fragmentShader.replace("#include <common>",`
					#ifdef USE_MATCAP
						uniform sampler2D matcap;
					#endif

					#include <common>
				`).replace("#include <envmap_common_pars_fragment>",`
					#include <gradientmap_pars_fragment>
					#include <envmap_common_pars_fragment>
				`).replace("#include <lights_phong_pars_fragment>",wE).replace("#include <envmap_fragment>",`
					#include <envmap_fragment>
					${SE}
				`)};class H_ extends Ht{constructor(e){super(),this._matcapCombine=hl,this.emissiveIntensity=1,this.normalMapType=ai,this.combine=ur,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.lights=!0,this.vertexShader=zo.vertexShader,this.fragmentShader=zo.fragmentShader,this.defines=Object.assign({},zo.defines),Object.defineProperty(this,"matcapCombine",{get:function(){return this._matcapCombine},set:function(n){switch(this._matcapCombine=n,n){case ur:this.defines.MATCAP_BLENDING_MULTIPLY=!0,delete this.defines.MATCAP_BLENDING_ADD;break;default:case hl:this.defines.MATCAP_BLENDING_ADD=!0,delete this.defines.MATCAP_BLENDING_MULTIPLY;break}}}),this.uniforms=Ta.clone(zo.uniforms);const t=["specular","shininess","opacity","diffuse","map","matcap","gradientMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacemantBias","displacemantMap","displacemantScale","specularMap","alphaMap","envMap","reflectivity","refractionRatio"];for(const n of t)Object.defineProperty(this,n,{get:function(){return this.uniforms[n].value},set:function(i){this.uniforms[n].value=i}});Object.defineProperty(this,"color",Object.getOwnPropertyDescriptor(this,"diffuse")),this.setValues(e)}copy(e){return super.copy(e),this.matcapCombine=e.matcapCombine,this.emissiveIntensity=e.emissiveIntensity,this.normalMapType=e.normalMapType,this.combine=e.combine,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}H_.prototype.isMMDToonMaterial=!0;const AE=["color","emissive","specular"],TE=["wireframe","metalness","opacity","roughness","shininess","transparent","emissiveIntensity","transmission","thickness","ior"],W_=["type","flatShading","showTexture","gradientMap","matcap"],EE=[...AE,...TE,...W_],CE=["transparent","opacity","wireframe","showTexture","color"],PE={Basic:[],Toon:["emissive","emissiveIntensity","gradientMap"],Lambert:["emissive","emissiveIntensity"],Phong:["emissive","emissiveIntensity","specular","shininess","flatShading"],Standard:["emissive","emissiveIntensity","metalness","roughness","flatShading"],Physical:["emissive","emissiveIntensity","metalness","roughness","flatShading","transmission","thickness","ior"],Matcap:["flatShading","matcap"],MMDToon:["emissive","emissiveIntensity","specular","shininess","matcap","gradientMap","flatShading"]},rn=r=>`${r}`,Zc=r=>wf(r)?`${r.startsWith("#")?"":"#"}${r}`:r,LE=r=>Array.isArray(r)?r.join(","):r,Sf={wireframe:{name:"Wireframe",type:"boolean",default:!1,valueMap:Qn,toString:rn},showTexture:{name:"Texture",type:"boolean",default:!0,valueMap:Qn,toString:rn},transparent:{name:"Transparent",type:"boolean",default:!1,valueMap:Qn,toString:rn},flatShading:{name:"Flat Shading",type:"boolean",default:!1,valueMap:Qn,toString:rn},color:{name:"Color",type:"color",default:"#ffffff",valueMap:el,toString:Zc},emissive:{name:"Emissive",type:"color",default:"#000000",valueMap:el,toString:Zc},opacity:{name:"Opacity",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:rn},emissiveIntensity:{name:"Emissive Intensity",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:rn},specular:{name:"Specular",type:"color",default:"#111111",valueMap:el,toString:Zc},metalness:{name:"Metalness",type:"percentage",default:0,min:0,max:1,valueMap:parseFloat,toString:rn},roughness:{name:"Roughness",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:rn},shininess:{name:"Shininess",type:"number",default:30,min:1,max:100,valueMap:parseFloat,toString:rn},gradientMap:{name:"Gradient Map",type:"select",default:"none",valueMap:X_,toString:LE},matcap:{name:"Matcap",type:"select",default:"matcap_fresnel.jpg",valueMap:$_,toString:rn},transmission:{name:"Transmission",type:"number",default:1,min:0,max:1,valueMap:parseFloat,toString:rn},thickness:{name:"Thickness",type:"number",default:.01,min:0,max:10,valueMap:parseFloat,toString:rn},ior:{name:"Index-of-refraction",type:"number",default:1.5,min:1,max:2.333,valueMap:parseFloat,toString:rn}},RE=Object.fromEntries(Object.entries(Sf).map(([r,{default:e}])=>[r,e])),ji={...RE,type:"Basic"},IE=Object.fromEntries(Object.entries(Sf).map(([r,{valueMap:e}])=>[r,e])),DE=Object.fromEntries(Object.entries(Sf).map(([r,{toString:e}])=>[r,e])),Jc=r=>[...CE,...PE[r]],OE=(r,e={})=>{if(r==="MMDToon")return new H_(e);const t=`Mesh${r}Material`;return new Z0[t](e)},Vp=(r,{matType:e="Basic",texturePath:t="",force:n=!1}={})=>{r.forEach(i=>{const s=[i.material].flat(),a=Array.isArray(i.material);if(!n&&!t){const o=`isMesh${e}Material`;if(!s.some(c=>!c[o]))return}s.forEach((o,l)=>{var h,f,d,p;const c=t?new Tr().load(t):s[l].map;t&&(c.encoding=Ve);const u=OE(e);if(u.name=o.name,u.map=c,u.userData.backupMap=o.userData.backupMap,t&&((f=(h=o.map)==null?void 0:h.dispose)==null||f.call(h),(p=(d=o.userData.backupMap)==null?void 0:d.dispose)==null||p.call(d)),o.dispose(),a){i.material[l]=u;return}i.material=u})})},FE=r=>Array.isArray(r)?r:r.split(",").map(e=>parseInt(e));function X_(r){const e=FE(r),t=e.length;if(t<2)return null;const n=Uint8Array.from(e),i=new ar(n,t,1,Ch);return i.minFilter=i.magFilter=pt,i.generateMipmaps=!1,i}const NE=r=>r.includes("/")||r.includes(":")?r:`${bT}/${r}`;function $_(r){const e=NE(r);return e?V_(e):null}const kE={alpha:!0,antialias:!0},zE="#cccccc",BE={type:"Perspective",fov:45,aspect:1,far:300,near:.01},UE="c100001_01",Zr={enabled:!0,size:5,color:"#000000",opacity:1},VE={noBackground:!0,fileName:"screenshot",frameRate:30},GE={frameRate:30,fileName:"ani",appendDate:!0},Gp=1,Ku=30,HE={directional:{color:"#ffffff",intensity:.8,position:[1,0,2]},ambient:{color:"#444444",intensity:1},point:{color:"#ffffff",intensity:1}},Kc={"No Mapping":Cn,Linear:Mh,Reinhard:wh,Cineon:Sh,"ACES Filmic":Ah},$a={addEventListener(r,e){var n,i;if(!e)return;(n=this._listeners)!=null||(this._listeners={});const t=this._listeners;return r=r.toLowerCase(),(i=t[r])!=null||(t[r]=[]),t[r].includes(e)||t[r].push(e),e},hasEventListener(r,e){var t,n;return r=r.toLowerCase(),!!((n=(t=this._listeners)==null?void 0:t[r])!=null&&n.includes(e))},removeEventListener(r,e){var i;r=r.toLowerCase();const t=(i=this._listeners)==null?void 0:i[r];if(!t)return;const n=t.indexOf(e);n!==-1&&t.splice(n,1)},dispatchEvent(r){var i,s;const e=(i=r.type)==null?void 0:i.toLowerCase(),t=(s=this._listeners)==null?void 0:s[e];if(!t)return;r.target=this,[...t].forEach(a=>a.call(this,r))},addCountedEventListener(r,e,t=1){const n=this;function i(s){e.call(n,s),t--,t===0&&n.removeEventListener(r,i)}this.addEventListener(r,i)}},WE={face1:[2,1],face2:[0,0],face3:[1,0],face4:[2,0],face5:[3,0],face6:[0,-1],face7:[1,-1],face8:[2,-1],face9:[3,-1]},q_={},XE=async()=>{const r=await ql(`${$l}/face-offset.json`);Object.assign(q_,r)},Hp=r=>q_[r]||[0,0],Qu={},$E=async()=>{const r=await ql(`${$l}/camera-position.json`);Object.assign(Qu,r)},qE=r=>{var e;return(e=Qu[r])!=null?e:Qu[r[0]]},eh={},jE=async()=>{const r=await ql(`${$l}/control-position.json`);Object.assign(eh,r)},YE=r=>{var e;return(e=eh[r])!=null?e:eh[r[0]]},Wp=r=>WE[`face${r}`],ZE=(r,e)=>{const t={x:0,y:0};if(r!==e){const[n,i]=Wp(e),[s,a]=Wp(r);t.x=s-n,t.y=a-i}return[t.x,t.y]},JE=(r,e)=>{const t={x:0,y:0};if(r!==e){const[n,i]=Hp(e),[s,a]=Hp(r);t.x=s-n,t.y=a-i}return[t.x,t.y]},jl=r=>new Proxy(Object.assign(r,$a),{get(e,t){return e[t]},set(e,t,n){return e[t]=n,e.dispatchEvent({type:"change",propName:t,value:n}),!0}}),j_=/mEye_[0-9]/m,Y_=/mMouth_[0-9]/m,KE=/[0-9]{2}/,Z_=["eye","mouth"];function QE(r){const{type:e,meshes:t}=r;return e==="adventurer"?e2(r):t.some(({name:i})=>i.match(/mEye|mMouth/))?t2(r):r}function e2(r){const{meshes:e,id:t}=r,n=c=>`${J0}/${c}/${c}.png`,i=e.find(({name:c})=>c==="mBodyAll"),s={eyeIdx:2,eyeBaseIdx:2,mouthIdx:2,mouthBaseIdx:2,eyeTexture:t,mouthTexture:t},a={type:"uv",reset:function(){this.eyeIdx=this.eyeBaseIdx,this.mouthIdx=this.mouthBaseIdx}},o=c=>([u,h])=>{var x;if(!i)return;const f=`mt${Up(c)}CH`,d=(x=i.geometry.groups)==null?void 0:x.find(_=>{var y;return((y=i.material[_.materialIndex])==null?void 0:y.name)===f});if(!d)return;const{start:p,count:m}=d,g=p+m,v=i.geometry.attributes.uv;for(let _=p;_<g;_++){const y=v.getX(_)+.25*u,M=v.getY(_)+.25*h;v.setXY(_,y,M)}v.needsUpdate=!0},l=c=>u=>{var p,m;if(!i)return;const h=`mt${Up(c)}CH`,f=(m=(p=i.material).find)==null?void 0:m.call(p,({name:g})=>g===h);if(!f)return;const d=n(u);f.map.dispose(),f.map=V_(d),f.needsUpdate=!0};return Z_.forEach(c=>{Object.defineProperties(a,{[`${c}Idx`]:{get(){return s[`${c}Idx`]},set(u){const h=parseInt(u),f=this[`${c}Idx`];s[`${c}Idx`]=h;const d=ZE(h,f);o(c)(d)}},[`${c}BaseIdx`]:{get(){return s[`${c}BaseIdx`]},set(u){s[`${c}BaseIdx`]=u,this[`${c}Idx`]=u}},[`${c}Texture`]:{get(){return s[`${c}Texture`]},set(u){const h=this[`${c}Texture`];s[`${c}Texture`]=u,l(c)(u);const f=JE(u,h);o(c)(f)}}})}),r.face=jl(a),r}function t2(r){const{meshes:e}=r,[t,n]=n2(e);[...t,...n].forEach(l=>l.frustumCulled=!1);const i={eye:t,mouth:n},s={eyeIdx:"",eyeBaseIdx:"",mouthIdx:"",mouthBaseIdx:""},a={eyeList:t,mouthList:n,type:"meshes",reset:function(){this.eyeIdx=this.eyeBaseIdx,this.mouthIdx=this.mouthBaseIdx}},o=l=>c=>{i[l].forEach(u=>{const{name:h}=u,f=KE.exec(h)[0];u.visible=parseInt(f)===c})};return Z_.forEach(l=>Object.defineProperties(a,{[`${l}Idx`]:{get(){return s[`${l}Idx`]},set(c){const u=parseInt(c);o(l)(u),s[`${l}Idx`]=`${u}`}},[`${l}BaseIdx`]:{get(){return s[`${l}BaseIdx`]},set(c){s[`${l}BaseIdx`]=c,this[`${l}Idx`]=c}}})),a.eyeBaseIdx=Gp,a.mouthBaseIdx=Gp,r.face=jl(a),r}function n2(r){const e=r.filter(({name:n})=>n.match(j_)),t=r.filter(({name:n})=>n.match(Y_));return[e,t]}function i2(r){const{model:e,uniqueId:t}=r,[n,i]=xE(e);return Object.defineProperty(i,"list",{value:fE(i.map(({name:s})=>s))}),Object.defineProperty(n,"visible",{get(){return this.filter(({visible:s})=>s)}}),i.forEach(s=>{s.name=`${t}|${s.name}`}),Object.defineProperties(r,{meshes:{get(){return n}},bones:{get(){return i}}})}const J_={},r2=async()=>{const r=await ql(`${$l}/model-parts.json`);Object.assign(J_,r)},s2=r=>J_[r],a2=/mParts([A-Za-z]+)/,Xp=/mParts[A-Za-z]+_([A-Za-z]*)/;function o2(r){const{meshes:e,id:t}=r,n=s2(t),i=[],s=[];if(e.forEach(c=>{var h;let{name:u}=c;if(!!(u!=null&&u.match)){if((u.includes("Effect")||u.includes("Extension"))&&(c.visible=!1),(h=n==null?void 0:n.custom)!=null&&h[u]&&(u=c.name=n.custom[u]),u.match(/mParts/)){i.push(c);return}!u.match(j_)&&!u.match(Y_)&&s.push(c)}}),!i.length&&s.length<2)return r;const a=Object.defineProperties({},{list:{get(){return Object.keys(this)},enumerable:!1},reset:{value:function(){this.list.forEach(c=>this[c].reset())},enumerable:!1},others:{get(){return s},enumerable:!1}});if(r.parts=a,!i.length)return r;const o=new Set(i.map(({name:c})=>{var u;return(u=a2.exec(c))==null?void 0:u[1]}).sort((c,u)=>c>u?1:-1)),l=c=>i.filter(({name:u})=>u.includes(`mParts${c}`)).sort((u,h)=>u.name>h.name?1:-1);return o.forEach(c=>{var g,v,x;const u=n==null?void 0:n[c],h=(v=(g=u==null?void 0:u.name)==null?void 0:g.replaceAll(" ","_"))!=null?v:c,f=u==null?void 0:u.options,d=l(c);d.forEach(_=>_.frustumCulled=!1);const p=d.map(({name:_})=>{var M,w,C;const y=(w=(M=Xp.exec(_))==null?void 0:M[1])!=null?w:"default";return(C=f==null?void 0:f[y])!=null?C:y}),m=(x=u==null?void 0:u.default)!=null?x:p[0];a[h]={_meshes:d,list:p,default:m!=null?m:p[0]},Object.defineProperties(a[h],{current:{get(){var C,b,A;const _=d.filter(({visible:L})=>L).length;if(_===0)return"None";if(_!==1)return"custom";const M=(C=d.find(({visible:L})=>L).name.match(Xp))==null?void 0:C[1];return(A=(b=f==null?void 0:f[M!=null?M:"default"])!=null?b:M)!=null?A:"default"},set(_){if(_.toLowerCase()==="none"){this._meshes.forEach((M,w)=>{M.visible=!1});return}if(!this.list.includes(_))return;const y=this.list.indexOf(_);this._meshes.forEach((M,w)=>{M.visible=w===y})}},index:{get(){return this.current==="custom"?NaN:this.list.indexOf(this.current)},set(_){this._meshes.forEach((y,M)=>{y.visible=M===Number(_)})}},reset:{value:function(){this.current=this.default}}})}),a.reset(),r.parts=a,r}const l2=r=>e=>{const t=e.meshes,n={...ji,...r},{type:i}=n;Vp(t,{force:!0,matType:i});let s={type:i,showTexture:!0},a=Jc(i);const o={get code(){const{type:l,propList:c}=this,u=[];return l!==ji.type&&u.push(`type=${l}`),c.forEach(f=>{const d=DE[f],p=d(this[f]),m=d(ji[f]);p!==m&&u.push(`${f}=${p}`)}),u.join("/").replaceAll("#","")},set code(l){const c=Object.keys(ji),u={...ji,...G_(l)};c.forEach(h=>{this[h]=u[h]})},toString(){const{code:l}=this;return l?`mat=(${l})`:""},get list(){return t.flatMap(({material:l})=>l)},get propList(){return a},set type(l){if(this.type===l)return;a=Jc(l),Vp(t,{matType:l}),s.type=l;const c={...s};s={showTexture:c.showTexture},a.forEach(u=>this[u]=c[u]),s=c},set flatShading(l){const c=Qn(l);c!==this.flatShading&&(s.flatShading=c,this.propList.includes("flatShading")&&this.list.forEach(u=>{u.flatShading=c,u.needsUpdate=!0}))},set gradientMap(l){var h,f;if(l===this.gradientMap||(s.gradientMap=l,!this.propList.includes("gradientMap")))return;const c=(h=this.list[0])==null?void 0:h.gradientMap;(f=c==null?void 0:c.dispose)==null||f.call(c);const u=l==="none"?null:X_(l);this.list.forEach(d=>{d.gradientMap=u,d.needsUpdate=!0})},set showTexture(l){const c=Qn(l);if(this.showTexture===c)return;s.showTexture=c;const u=c?h=>{h.map=h.userData.backupMap,h.userData.backupMap=null,h.needsUpdate=!0}:h=>{h.userData.backupMap=h.map,h.map=null,h.needsUpdate=!0};this.list.forEach(u)},set matcap(l){var h,f;if(s.matcap===l||(s.matcap=l,!this.propList.includes("matcap")))return;const c=(h=this.list[0])==null?void 0:h.matcap;(f=c==null?void 0:c.dispose)==null||f.call(c);const u=$_(l);this.list.forEach(d=>{d.matcap=u,d.needsUpdate=!0})}};return EE.forEach(l=>Object.defineProperty(o,l,{get(){return s[l]},...!W_.includes(l)&&{set(c){c!==this[l]&&(s[l]=c,this.propList.includes(l)&&this.list.forEach(u=>u[l]=IE[l](c)))}}})),Jc(i).forEach(l=>o[l]=n[l]),s={...ji,...s},e.material=jl(o),e},c2=`uniform float opacity;\r
uniform vec3 color;\r
\r
void main() {\r
	gl_FragColor = vec4( color, opacity );\r
}\r
`,u2=`uniform float size;\r
\r
#include <skinning_pars_vertex>\r
\r
void main() {\r
	#include <skinbase_vertex>\r
	\r
    vec3 transformed = position + normal * 0.0005 * size;\r
        \r
	#include <skinning_vertex>\r
	#include <project_vertex>\r
}`,h2=r=>new Ht({side:jt,transparent:!0,depthFunc:bh,vertexShader:u2,fragmentShader:c2,uniforms:r});function f2(r,e){const{material:t}=r,n=Array.isArray(r.material);[t].flat().forEach(yE),r.material=n?new Array(r.material.length).fill(e):e}function d2(r,e){const t=h2(e),n=[],i=["Eff","Extension"];return r.forEach(s=>{const{name:a}=s;if(i.some(l=>a.includes(l)))return;const o=s.clone();o.name=`outline-${s.name}`,f2(o,t),s.isSkinnedMesh&&o.bind(s.skeleton,s.bindMatrix),s.add(o),n.push(o)}),n}const p2={size:parseFloat,opacity:parseFloat,color:el},m2=r=>e=>{const t={...Zr,...r},n=e.meshes,i={size:{value:t.size},opacity:{value:t.opacity},color:{value:new ce(t.color)}},s=d2(n,i),a={...t,enabled:!0},o={get propList(){return["enabled","color","size","opacity"]},get enabled(){return a.enabled},set enabled(l){const c=Qn(l);s.forEach(u=>u.visible=c),a.enabled=c},get code(){if(!this.enabled)return"none";const l=[];return Object.keys(Zr).forEach(c=>{const u=this[c];u!==Zr[c]&&l.push(`${c}=${u}`)}),l.join("/").replaceAll("#","")},set code(l){if(l==="none"){this.enabled=!1;return}const c=Object.keys(Zr),u={...Zr,...G_(l)};c.forEach(h=>{this[h]=u[h]})},toString(){const{code:l}=this;return l?`ol=(${l})`:""}};return["size","opacity","color"].forEach(l=>Object.defineProperty(o,l,{get(){return a[l]},set(c){c!==this[l]&&(a[l]=c,i[l].value=p2[l](c))}})),o.enabled=t.enabled,e.outline=jl(o),e},g2=["push","pop","shift","unshift","splice","reverse","sort"];class ei extends Array{constructor(...e){super(...e),Object.assign(this,$a),g2.forEach(t=>{Object.defineProperty(this,t,{value:(...n)=>{Array.prototype[t].call(this,...n),this.dispatchEvent({type:"change",method:t,args:n})},enumerable:!1})})}remove(e){const t=this.indexOf(e);t!==-1&&this.splice(t,1)}}const $p={chainName:"",chainCode:"",chainLength:0,aniIdx:0,clipDuration:0,clipTimeScale:1,action:null,aniAction:[],aniActionPointer:0};function K_(r){return r.split(">").map(_2)}function _2(r){const[e,...t]=r.split("&"),n=v2(t);return{aniName:e,...n}}function v2(r){const e={},t=[],n={r:{name:"reps",map:parseInt},ts:{name:"timeScale",map:parseFloat},dur:{name:"duration",map:y2}};return r.forEach(i=>{const[s,a]=U_(i);if(s.startsWith("@")){const c=x2(a.replace(/[()]/g,""));c.time=parseFloat(s.slice(1)),t.push(c);return}if(!n[s])return;const{name:o,map:l}=n[s];e[o]=l(a)}),e.aniAction=t.filter(({time:i})=>i<=100&&i>=0).sort((i,s)=>i.time-s.time),e}function y2(r){if(!r)return[0,100];const e=r.split("-").slice(0,2).map(parseFloat),t=e.length===2?e:[0,e[0]];return t.some(n=>n>100||n<0)||t[0]>t[1]?[0,100]:t}function x2(r){return r.split("/").reduce((t,n)=>{const[i,s]=U_(n);return{...t,...b2(i,s)}},{})}const qp={ei:{name:"face.eyeIdx",valueMap:parseInt},mi:{name:"face.mouthIdx",valueMap:parseInt},et:{name:"face.eyeTexture"},mt:{name:"face.mouthTexture"}};function b2(r,e){var i;if(r in qp){const{name:s,valueMap:a}=qp[r];return{[s]:(i=a==null?void 0:a(e))!=null?i:e}}let t=r,n=e;return r.startsWith("att")&&t.replace("att","attachment"),r.startsWith("parts")&&(t+="index",n=parseInt(e)),{[t]:n}}const M2=r=>`${K0}/${r}.json`;function w2(r,e){if(r.startsWith("fbx:"))return S2(r);if(r.startsWith("ex:")){const[,n]=r.split(":"),i=e==null?void 0:e.find(({uuid:s})=>n===s);return Promise.resolve(i.clone())}const t=M2(r);return new Promise(n=>fetch(t).then(i=>i.json()).then(i=>mr.parse(i)).then(n))}async function S2(r){const e=r.replace("fbx:",""),[t,n]=e.split("+"),{animations:i}=await k_(t);return n?i.find(({name:s})=>s===n):i[0]}function A2(r,e=null){return Promise.all(r.map(t=>w2(t,e)))}function T2(r,e=[]){return r.map((t,n)=>{const i=e[n];if(!i||i[0]===0&&i[1]===100)return t;const s=t.duration*Ku,[a,o]=i.map(l=>Math.round(l*s/100));return D0.subclip(t,t.name,a,o,Ku)})}async function E2(r,e=null){const t=K_(r),n=t.map(({aniName:c})=>c),i=t.map(({duration:c})=>c),s=t.map(({aniName:c,duration:u,...h})=>({...h})),a=await A2(n,e),o=T2(a,i);return{code:r,clips:o,mod:s,get duration(){return s.some(({timeScale:u})=>u===0)?1/0:o.map((u,h)=>{var f,d;return u.duration/Math.abs((f=s[h].timeScale)!=null?f:1)*((d=s[h].reps)!=null?d:1)}).reduce((u,h)=>u+h,0)}}}const C2=/[a-z][0-9]{6}/;function P2(r){var h;const{model:e,uniqueId:t,bones:n,id:i,viewer:s}=r,a=s.userData.ani,o=new $0(e),l=(h=n==null?void 0:n.list)!=null?h:[],c={...$a,mixer:o,chain:{},current:{...$p},toString(){var d;const f=(d=this.chain.default)==null?void 0:d.code;return f?`ani=${f}`:""},async addChain(f,{name:d="default",autoplay:p=!0}={}){var g;if(!f||((g=this.chain[d])==null?void 0:g.code)===f)return;o.stopAllAction();const m=await E2(f,a);m.clips.forEach(v=>{v.tracks=v.tracks.reduce((x,_)=>{let y=_.name.split(".")[0];return C2.test(y)&&(_.name.replace(y,i),y=i),l.includes(y)&&(_.name=`${t}|${_.name}`,x.push(_)),x},[])}),this.chain[d]=m,o.addEventListener("finished",u),p&&this.play(d)},play(f=this.current.chainName||"default"){const d=this.chain[f];!d||(this.current.chainName=f,this.current.chainCode=d.code,this.current.chainLength=d.clips.length,this.aniIdx=0)},pause(){this.current.action&&(this.current.action.paused=!0)},resume(){this.current.action&&(this.current.action.paused=!1)},stop(){o.stopAllAction()},reset(){const f=this.current.chainName;this.stop(),this.current={...$p},this.chain[f]=void 0},update(f){var v;o.update(f);const{current:d}=this,{action:p,aniAction:m,clipDuration:g}=d;if(!(!m[d.aniActionPointer]||!p))for(;(p==null?void 0:p.time)>((v=m[d.aniActionPointer])==null?void 0:v.time)*g/100;)this.applyAniAction(m[d.aniActionPointer]),this.current.aniActionPointer++},applyAniAction(f){r.dispatchEvent({type:"aniAction",id:t,aniAction:f});const{time:d,...p}=f;Object.entries(p).forEach(([m,g])=>{const v=m.split(".");B_(r,v,g)})},nextFrame(f=1,d=Ku){if(!this.isPaused)return;const{clipTimeScale:p,clipDuration:m,action:g}=this.current,v=f*p/d;if(g.time+=v,g.time>=m){const x=g.time-m;u(),this.pause(),this.current.action.time+=x*this.current.clipTimeScale}},setTime(f){const{clipDuration:d,action:p}=this.current;!d||f>d||(p.time=f)},get isPaused(){var f;return(f=this.current.action)==null?void 0:f.paused},get aniIdx(){return this.current.aniIdx},set aniIdx(f){if(f>=this.current.chainLength)return;this.current.aniIdx=f,this.current.aniActionPointer=0;const d={type:f===0?"chainStart":"chainMove",index:f,uniqueId:t,chainName:this.current.chainName};this.dispatchEvent(d),o.stopAllAction();const p=this.chain[this.current.chainName],m=p.mod[f],{timeScale:g,reps:v,aniAction:x}=m,_=p.clips[f],y=o.clipAction(_);y.timeScale=g!=null?g:1,y.setLoop(Ph,v!=null?v:1),this.current.clipDuration=_.duration,this.current.action=y,this.current.aniAction=x,this.current.aniActionPointer=0,this.current.clipTimeScale=g!=null?g:1,y.play()}};function u(){const{aniIdx:f,chainLength:d}=c.current,p=(f+1)%d;if(p===0){c.dispatchEvent({type:"ChainFinished",chainName:c.current.chainName});const{face:m}=r;m&&(m.eyeIdx=m.eyeBaseIdx,m.mouthIdx=m.mouthBaseIdx)}c.aniIdx=p}return r.animation=c,r.addEventListener("TimeUpdated",({dt:f})=>c.update(f)),r}function L2(r){const{model:e,bones:t,uniqueId:n}=r,i={};return Object.defineProperty(i,"list",{get(){return Object.values(this).flat()}}),Object.defineProperty(i,"traverse",{value:function(u){this.list.forEach(h=>{var f,d;u(h),(d=(f=h.attachment)==null?void 0:f.traverse)==null||d.call(f,u)})}}),Object.assign(r,{attachment:i,parent:null,parentBone:"",attach:(u,h="root")=>{var d;i[h]=(d=i[h])!=null?d:new ei;const f=h==="root"?e:t.find(({name:p})=>p===`${n}|${h}`);!(f!=null&&f.add)||(u.detach(),f.add(u.model),i[h].push(u),u.parent=r,u.parentBone=h,r.dispatchEvent({type:"AttachmentChanged"}))},remove:(u,h="")=>{var d,p,m;const f=h||Object.keys(i).find(g=>i[g].indexOf(u)!==-1);!f||((p=(d=i[f]).remove)==null||p.call(d,u),(m=u.model.parent)==null||m.remove(u.model),r.dispatchEvent({type:"AttachmentChanged"}))},detach:()=>{var f;(f=e.parent)==null||f.remove(e);const{parent:u,parentBone:h}=r;!u||(u.remove(r,h),r.parent=r.parentBone=null)},attachTo:(u,h="root")=>{var f;r.detach(),(f=u==null?void 0:u.attach)==null||f.call(u,r,h)}})}function R2(r){const{material:e,id:t}=r,n=Js.source.fbx,i=jp(t);pE(t)&&async function(){const l=o(i),c=new Tr().load(l);c.encoding=Ve,c.name=i,e.list.forEach(u=>{var h;return u.map=(h=u.map)!=null?h:c})}();let s=i;Object.defineProperty(r,"texture",{get(){return s},set(l){if(!l){this.texture=i;return}if(l===s)return;const c=o(l),[,u]=a(l),[,h]=a(this.texture),f=e.list.filter(d=>{var p,m,g,v;return((m=(p=d.map)==null?void 0:p.name)==null?void 0:m.includes(h))||((v=(g=d.userData.backupMap)==null?void 0:g.name)==null?void 0:v.includes(h))});!f.length||(async function(){const d=await z_(c);d.name=u,d.encoding=Ve,f.forEach(p=>{var m,g,v,x;p.map&&((g=(m=p.map).dispose)==null||g.call(m),p.map=d),p.userData.backupMap&&((x=(v=p.userData.backupMap).dispose)==null||x.call(v),p.userData.backupMap=d)})}(),s=l)}});function a(l){const[c,u]=l.split(">"),h=c||t,f=u||jp(h);return[h,f]}function o(l){const[c,u]=a(l);return`${n}/${c}/${u}.png`}return r}const jp=r=>r.match(/_[0-9]{2}/)||r.startsWith("h")?r:`>${r}_01`,I2=`uniform float uTime;\r
uniform float uSpread;\r
uniform float uThreshold;\r
uniform float uSpeed;\r
uniform float uParticleSize;\r
uniform float uAuraSize;\r
\r
attribute float aRandom;\r
\r
varying float vIsParticle;\r
varying float vRandom;\r
\r
#include <skinning_pars_vertex>\r
void main() {\r
    #include <skinbase_vertex>\r
\r
    vec3 transformed = position + normal * 0.005 * uSpread;\r
\r
    #include <skinning_vertex>\r
\r
    vec3 objectNormal = normal;\r
\r
	#include <skinnormal_vertex>\r
    \r
    vec4 viewPosition = viewMatrix * modelMatrix * vec4(transformed, 1.0);\r
    float yDisplacement = fract( uTime * uSpeed + aRandom ) * 0.1;\r
    viewPosition.y += yDisplacement;\r
    viewPosition.x += sin( uTime * aRandom * uSpeed + aRandom ) * 0.02;\r
    \r
    gl_Position = projectionMatrix * viewPosition;\r
    \r
    objectNormal.z *= objectNormal.z > 0.7 ? -1.0 : 1.0;\r
    vIsParticle = objectNormal.z - uThreshold;\r
\r
    gl_PointSize = vIsParticle > 0.0 ? uParticleSize : uAuraSize;\r
    gl_PointSize /= -viewPosition.z;\r
\r
    vRandom = aRandom;\r
}\r
`,D2=`uniform sampler2D uTexture;\r
\r
uniform float uTime;\r
uniform float uParticleOpacity;\r
uniform float uAuraOpacity;\r
uniform vec3 uColor;\r
uniform vec3 uColor2;\r
\r
varying float vRandom;\r
varying float vIsParticle;\r
\r
void main(){\r
    vec4 textureColor = texture2D( uTexture, gl_PointCoord );\r
    textureColor.a = length( textureColor.rgb ) ;\r
    textureColor.a *= abs( 1.0 - fract( uTime + vRandom ) ) * 0.5;\r
    textureColor.rgb = mix( uColor, uColor2,  textureColor.a * 2.0 );\r
    textureColor.a *= vIsParticle > 0.0 ? uParticleOpacity * 4.0 : uAuraOpacity;\r
\r
    gl_FragColor = textureColor;\r
    gl_FragColor /= vIsParticle > 0.0 ? 2.0 : 4.0;\r
}\r
`,tl=[{name:"time",uName:"uTime",defaultValue:0,valueMap:Number},{name:"speed",uName:"uSpeed",defaultValue:1,valueMap:Number},{name:"particleOpacity",uName:"uParticleOpacity",defaultValue:.3,valueMap:Number},{name:"auraOpacity",uName:"uAuraOpacity",defaultValue:.3,valueMap:Number},{name:"particleSize",uName:"uParticleSize",defaultValue:10,valueMap:Number},{name:"auraSize",uName:"uAuraSize",defaultValue:100,valueMap:Number},{name:"spread",uName:"uSpread",defaultValue:5,valueMap:Number},{name:"threshold",uName:"uThreshold",defaultValue:.3,valueMap:Number},{name:"texture",uName:"uTexture",defaultValue:"img/textures/particle/cloud.png",valueMap:r=>new Tr().load(r)},{name:"color",uName:"uColor",defaultValue:"#ffffff",valueMap:r=>new ce(r)},{name:"color2",uName:"uColor2",defaultValue:"#33ffff",valueMap:r=>new ce(r)}],O2={aura:["visible",...tl.slice(1).map(({name:r})=>r)]},F2=(r="aura")=>(e,t={})=>{if(!!(e!=null&&e.length)&&r==="aura")return k2(e,t)};function N2(r){return new Ht({vertexShader:I2,fragmentShader:D2,uniforms:r,transparent:!0,blending:cl,depthWrite:!1,side:Rn})}function k2(r,e){const t=tl.map(l=>{var d;const{uName:c,defaultValue:u,valueMap:h}=l,f=(d=h==null?void 0:h(u))!=null?d:u;return[c,{value:f}]}),n=Object.fromEntries(t),i=N2(n),s=[];r.forEach(l=>{const{name:c}=l.geometry;if(c.startsWith("mEye")||c.startsWith("mMouth"))return;const u=l.geometry.clone(),h=u.attributes.position.count,f=new Float32Array(h).fill(0).map(()=>Math.random()-.5);u.setAttribute("aRandom",new nt(f,1)),u.deleteAttribute("color"),u.deleteAttribute("uv");const d=new Gh(u,i);d.name="aura",l.isSkinnedMesh&&(d.type="SkinnedMesh",d.isSkinnedMesh=!0,d.skeleton=l.skeleton,d.bindMatrix=l.bindMatrix,d.bindMatrixInverse=l.bindMatrixInverse,d.bindMode=l.bindMode,d.bind=l.bind,d.clone=l.clone,d.initBones=l.initBones,d.normalizeSkinWeights=l.normalizeSkinWeights,d.pose=l.pose,d.updateMatrixWorld=l.updateMatrixWorld),l.add(d),s.push(d)});const a={visible:!0},o={name:"aura",onDispose:()=>{},get list(){return s},get propList(){return O2.aura},get visible(){return a.visible},set visible(l){const c=Qn(l);this.list.forEach(u=>u.visible=c),a.visible=c},dispose(){this.onDispose(),this.list.forEach(l=>{var c,u,h,f,d;(c=l.parent)==null||c.remove(l),(h=(u=l.material).dispose)==null||h.call(u),(d=(f=l.geometry).dispose)==null||d.call(f)})},set code(l){l.split("/").forEach(u=>{const[h,f]=u.split("=");!tl.map(({name:d})=>d).includes(h)||(this[h]=f)})}};return tl.forEach(l=>{const{name:c,uName:u,defaultValue:h,valueMap:f}=l;a[c]=h,Object.defineProperty(o,c,{get(){return a[c]},set(d){var p;a[c]=d,n[u].value=(p=f==null?void 0:f(d))!=null?p:d}})}),o.onTimeUpdate=({time:l})=>o.time=l,Object.entries(e).forEach(([l,c])=>o[l]=c),o}function z2(r){const{meshes:e}=r,t={list:new ei,dispose(){this.list.forEach(n=>{var i;return(i=n.dispose)==null?void 0:i.call(n)})},add(n="aura",i={}){const s=F2(n)(e,i);return s.onDispose=()=>this.list.remove(s),this.list.push(s),r.addEventListener("TimeUpdated",s.onTimeUpdate),s}};return r.particle=t,r}const B2=r=>{var o,l;if(r.dispatchEvent({type:"dispose"}),!r)return;const{model:e,meshes:t,outline:n,particle:i,viewer:s}=r;i==null||i.list.forEach(c=>c.dispose()),(o=e.parent)!=null&&o.isScene&&(e.parent.remove(e),s.loadedModel.remove(r)),(l=r.detach)==null||l.call(r),[t.reverse(),n==null?void 0:n.all].flat().forEach(bE)};function U2(r){const{x:e,y:t,z:n}=r;return[e,t,n].map(i=>i||"").join()}const V2={position:",,",rotation:",,",scale:"1,1,1"},G2={position:"pos",rotation:"rot",scale:"scl"};function H2(r){return Object.assign(r,{...r.isDLModel&&{toString(){const{id:e,animation:t,outline:n,material:i}=this,s=Object.entries(V2).map(([a,o])=>{const l=U2(this[a]);return l===o?"":`${G2[a]}=${l}`});return[`id=${e}`,...s,t,n,i].filter(a=>`${a}`).join("/")}},dispose(){const{attachment:e,parent:t,parentBone:n}=this;e.list.forEach(i=>i.dispose()),t==null||t.remove(this,n),this.dispatchEvent({type:"dispose"}),B2(this)}})}let Af=(r=21)=>crypto.getRandomValues(new Uint8Array(r)).reduce((e,t)=>(t&=63,t<36?e+=t.toString(36):t<62?e+=(t-26).toString(36).toUpperCase():t>62?e+="-":e+="_",e),"");function W2(r,e){const{id:t,material:n,outline:i,viewer:s}=e,a=[i2,o2,L2,m2(i),l2(n),R2,QE,P2,z2,H2],o={...$a,isDLModel:!0,model:r,id:t,uniqueId:Af(),type:mE(t),viewer:s,userData:{},_time:0,update(l){var c;this._time+=l,(c=this.attachment)==null||c.list.forEach(u=>{var h;return(h=u.update)==null?void 0:h.call(u,l)}),this.dispatchEvent({type:"TimeUpdated",dt:l,time:this._time})},set scale(l){var u;if((u=l.includes)!=null&&u.call(l,",")){const[h,f,d]=l.split(",").map(p=>p?parseFloat(p):1);this.model.scale.set(h,f,d);return}const c=Number(l)||1;this.model.scale.set(c,c,c)},get scale(){const{scale:l}=this.model,{x:c,y:u,z:h}=l;return c===u&&c===h?c:[c,u,h].join(",")},set visible(l){this.model.visible=Qn(l)}};return["position","rotation","visible"].forEach(l=>Object.defineProperty(o,l,{get(){return this.model[l]},enumerable:!0})),r.userData.container=o,hE(...a)(o)}const Yp={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );
			gl_FragColor.a *= opacity;


		}`};class Yl{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const X2=new br(-1,1,1,-1,0,1),Tf=new De;Tf.setAttribute("position",new ge([-1,3,0,-1,-1,0,3,-1,0],3));Tf.setAttribute("uv",new ge([0,2,0,0,2,0],2));class $2{constructor(e){this._mesh=new St(Tf,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,X2)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class th extends Yl{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof Ht?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Ta.clone(e.uniforms),this.material=new Ht({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new $2(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}const q2=Object.freeze(Object.defineProperty({__proto__:null,ShaderPass:th},Symbol.toStringTag,{value:"Module"}));class Zp extends Yl{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const i=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let a,o;this.inverse?(a=0,o=1):(a=1,o=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),s.buffers.stencil.setFunc(i.ALWAYS,a,4294967295),s.buffers.stencil.setClear(o),s.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(i.EQUAL,1,4294967295),s.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),s.buffers.stencil.setLocked(!0)}}class j2 extends Yl{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class Y2{constructor(e,t){if(this.renderer=e,t===void 0){const n=e.getSize(new q);this._pixelRatio=e.getPixelRatio(),this._width=n.width,this._height=n.height,t=new Zt(this._width*this._pixelRatio,this._height*this._pixelRatio),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],Yp===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),th===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new th(Yp),this.clock=new Xl}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let i=0,s=this.passes.length;i<s;i++){const a=this.passes[i];if(a.enabled!==!1){if(a.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),a.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),a.needsSwap){if(n){const o=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}Zp!==void 0&&(a instanceof Zp?n=!0:a instanceof j2&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new q);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}new br(-1,1,1,-1,0,1);const Q_=new De;Q_.setAttribute("position",new ge([-1,3,0,-1,-1,0,3,-1,0],3));Q_.setAttribute("uv",new ge([0,2,0,0,2,0],2));class Z2 extends Yl{constructor(e,t,n,i,s){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=s!==void 0?s:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new ce}render(e,t,n){const i=e.autoClear;e.autoClear=!1;let s,a;this.overrideMaterial!==void 0&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,s),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=a),e.autoClear=i}}function Jp({renderer:r,scene:e,camera:t}){const n=J2(),i=new Y2(r,n),s=new Z2(e,t);return i.addPass(s),i}const J2=()=>new Zt(800,600,{minFilter:ot,magFilter:ot,format:$t,encoding:Ve}),Qc={bloom:Q2,pixel:tC,afterimage:aC,sobel:nC,halftone:iC,dotscreen:rC,bokeh:sC,smaa:eC};async function K2(r,e){var n;r=r.toLowerCase();const t=await((n=Qc[r])==null?void 0:n.call(Qc,e));return t.type=r,t.name=Ef[r].name,t}function Zl(r,e){Object.defineProperty(r,"propList",{value:e}),e.forEach(t=>{Object.defineProperty(r,t,{get(){return this.uniforms[t].value},set(n){this.uniforms[t].value=n}})})}async function Q2({resolution:r=new q(800,600),strength:e=.3,radius:t=.5,threshold:n=.8}={}){const{UnrealBloomPass:i}=await ut(()=>import("./UnrealBloomPass.9a2dd526.js"),[]),s=new i(r,e,t,n);return Object.defineProperty(s,"propList",{value:["radius","strength","threshold"],writable:!1}),s}async function eC({renderer:r}){const{SMAAPass:e}=await ut(()=>import("./SMAAPass.88af3920.js"),[]),t=new q;r.getSize(t);const n=new e(t.x,t.y);return Object.defineProperty(n,"propList",{value:[],writable:!1}),n}async function tC({scene:r,camera:e}){const{RenderPixelatedPass:t}=await ut(()=>import("./RenderPixelatedPass.14aee35d.js"),[]),n=new t(5,r,e);return Object.defineProperty(n,"propList",{value:["size"],writable:!1}),Object.defineProperty(n,"size",{get(){return this.pixelSize},set(i){this.setPixelSize(i)}}),n}async function nC({renderer:r}){const{ShaderPass:e}=await ut(()=>Promise.resolve().then(()=>q2),void 0),{SobelOperatorShader:t}=await ut(()=>import("./SobelOperatorShader.5842e1a7.js"),[]),n=new q;r.getSize(n),n.multiplyScalar(window.devicePixelRatio);const i=new e(t);return i.uniforms.resolution.value.x=n.x,i.uniforms.resolution.value.y=n.y,Object.defineProperty(i,"propList",{value:[],writable:!1}),i}async function iC({renderer:r}){const{HalftonePass:e}=await ut(()=>import("./HalftonePass.23352e46.js"),[]),t=new q;r.getSize(t);const n=new e(t.x,t.y,{radius:4});return Zl(n,["greyscale","radius","scatter","shape"]),n}async function rC(){const{DotScreenPass:r}=await ut(()=>import("./DotScreenPass.ac759b7b.js"),[]),e=new r;return Zl(e,["scale","center"]),e}async function sC({scene:r,camera:e}){const{BokehPass:t}=await ut(()=>import("./BokehPass.9368759e.js"),[]),n=new t(r,e,{});return Zl(n,["focus","aperture","aspect"]),n}async function aC(){const{AfterimagePass:r}=await ut(()=>import("./AfterimagePass.05b9cf2d.js"),[]),e=new r(.7);return Zl(e,["damp"]),e}function oC(r){var a;const{name:e,type:t}=r,n=(a=Ef[t].propList)!=null?a:[],i={};return n.forEach(o=>{Object.defineProperty(i,o,{get(){return r[o]},set(l){r[o]=l},enumerable:!0})}),{target:r,name:e,type:t,params:i,id:Af()}}const Ef={bloom:{name:"Bloom",propList:["enabled","radius","strength","threshold"]},pixel:{name:"Pixelate",propList:["enabled","size"]},afterimage:{name:"Afterimage",propList:["enabled","damp"]},sobel:{name:"Sobel",propList:["enabled"]},halftone:{name:"Halftone",propList:["enabled","greyscale","radius","scatter","shape"]},dotscreen:{name:"Dot Screen",propList:["enabled","scale"]},bokeh:{name:"Bokeh",propList:["enabled","focus","aperture","aspect"]},smaa:{name:"SMAA",propList:["enabled"]}};Object.entries(Ef).map(([r,{name:e}])=>({value:r,label:e}));var ev={exports:{}};(function(r,e){(function(t,n){r.exports=n()})(qr,function(){var t=function(){function n(d){return a.appendChild(d.dom),d}function i(d){for(var p=0;p<a.children.length;p++)a.children[p].style.display=p===d?"block":"none";s=d}var s=0,a=document.createElement("div");a.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",a.addEventListener("click",function(d){d.preventDefault(),i(++s%a.children.length)},!1);var o=(performance||Date).now(),l=o,c=0,u=n(new t.Panel("FPS","#0ff","#002")),h=n(new t.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=n(new t.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:a,addPanel:n,showPanel:i,begin:function(){o=(performance||Date).now()},end:function(){c++;var d=(performance||Date).now();if(h.update(d-o,200),d>l+1e3&&(u.update(1e3*c/(d-l),100),l=d,c=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return d},update:function(){o=this.end()},domElement:a,setMode:i}};return t.Panel=function(n,i,s){var a=1/0,o=0,l=Math.round,c=l(window.devicePixelRatio||1),u=80*c,h=48*c,f=3*c,d=2*c,p=3*c,m=15*c,g=74*c,v=30*c,x=document.createElement("canvas");x.width=u,x.height=h,x.style.cssText="width:80px;height:48px";var _=x.getContext("2d");return _.font="bold "+9*c+"px Helvetica,Arial,sans-serif",_.textBaseline="top",_.fillStyle=s,_.fillRect(0,0,u,h),_.fillStyle=i,_.fillText(n,f,d),_.fillRect(p,m,g,v),_.fillStyle=s,_.globalAlpha=.9,_.fillRect(p,m,g,v),{dom:x,update:function(y,M){a=Math.min(a,y),o=Math.max(o,y),_.fillStyle=s,_.globalAlpha=1,_.fillRect(0,0,u,m),_.fillStyle=i,_.fillText(l(y)+" "+n+" ("+l(a)+"-"+l(o)+")",f,d),_.drawImage(x,p+c,m,g-c,v,p,m,g-c,v),_.fillRect(p+g-c,m,c,v),_.fillStyle=s,_.globalAlpha=.9,_.fillRect(p+g-c,m,c,l((1-y/M)*v))}}},t})})(ev);const lC=ev.exports;var Jl={exports:{}};(function(r,e){(function(t,n){n()})(qr,function(){function t(c,u){return typeof u>"u"?u={autoBom:!1}:typeof u!="object"&&(console.warn("Deprecated: Expected third argument to be a object"),u={autoBom:!u}),u.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(c.type)?new Blob(["\uFEFF",c],{type:c.type}):c}function n(c,u,h){var f=new XMLHttpRequest;f.open("GET",c),f.responseType="blob",f.onload=function(){l(f.response,u,h)},f.onerror=function(){console.error("could not download file")},f.send()}function i(c){var u=new XMLHttpRequest;u.open("HEAD",c,!1);try{u.send()}catch{}return 200<=u.status&&299>=u.status}function s(c){try{c.dispatchEvent(new MouseEvent("click"))}catch{var u=document.createEvent("MouseEvents");u.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),c.dispatchEvent(u)}}var a=typeof window=="object"&&window.window===window?window:typeof self=="object"&&self.self===self?self:typeof qr=="object"&&qr.global===qr?qr:void 0,o=a.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),l=a.saveAs||(typeof window!="object"||window!==a?function(){}:"download"in HTMLAnchorElement.prototype&&!o?function(c,u,h){var f=a.URL||a.webkitURL,d=document.createElement("a");u=u||c.name||"download",d.download=u,d.rel="noopener",typeof c=="string"?(d.href=c,d.origin===location.origin?s(d):i(d.href)?n(c,u,h):s(d,d.target="_blank")):(d.href=f.createObjectURL(c),setTimeout(function(){f.revokeObjectURL(d.href)},4e4),setTimeout(function(){s(d)},0))}:"msSaveOrOpenBlob"in navigator?function(c,u,h){if(u=u||c.name||"download",typeof c!="string")navigator.msSaveOrOpenBlob(t(c,h),u);else if(i(c))n(c,u,h);else{var f=document.createElement("a");f.href=c,f.target="_blank",setTimeout(function(){s(f)})}}:function(c,u,h,f){if(f=f||open("","_blank"),f&&(f.document.title=f.document.body.innerText="downloading..."),typeof c=="string")return n(c,u,h);var d=c.type==="application/octet-stream",p=/constructor/i.test(a.HTMLElement)||a.safari,m=/CriOS\/[\d]+/.test(navigator.userAgent);if((m||d&&p||o)&&typeof FileReader<"u"){var g=new FileReader;g.onloadend=function(){var _=g.result;_=m?_:_.replace(/^data:[^;]*;/,"data:attachment/file;"),f?f.location.href=_:location=_,f=null},g.readAsDataURL(c)}else{var v=a.URL||a.webkitURL,x=v.createObjectURL(c);f?f.location=x:location.href=x,f=null,setTimeout(function(){v.revokeObjectURL(x)},4e4)}});a.saveAs=l.saveAs=l,r.exports=l})})(Jl);const cC=["video/mp4;codecs=h264","video/webm;codecs=h264","video/webm;codecs=vp9","video/webm;codecs=vp8","video/webm"],Bo=cC.filter(MediaRecorder.isTypeSupported);function uC(r){if(!Bo.length)return;const e=[],t=Bo[0],n={settings:{...GE,mimeType:t},get supportedMimeTypes(){return Bo},get mimeType(){return this.settings.mimeType},set mimeType(i){Bo.includes(i)&&(this.settings.mimeType=i)},start(){if(this.recorder)return;const{fileName:i,frameRate:s,mimeType:a}=this.settings,o=r.captureStream(s||30),l=o.getTracks()[0],c=new MediaRecorder(o,{mimeType:a});c.onstart=()=>e.length=0,c.ondataavailable=({data:u})=>e.push(u),c.onstop=()=>{l.stop(),this.recorder=void 0;const u=this.settings.mimeType.includes("webm")?"webm":"mp4",h=new Blob(e,{type:`video/${u}`}),f=this.settings.appendDate?`_${ME()}`:"",d=`${i||"ani"}${f}.${u}`;Jl.exports.saveAs(h,d)},c.start(),this.recorder=c},get state(){var i,s;return(s=(i=this.recorder)==null?void 0:i.state)!=null?s:"idle"}};return["pause","resume","stop"].forEach(i=>{Object.defineProperty(n,i,{value:()=>{var s;return(s=n.recorder)==null?void 0:s[i]()}})}),n}function hC(r){let e=1,t=!1,n=!1;const i=()=>{r.stats.begin(),r.controls.update();const c=t?-e:e,u=r.clock.getDelta()*c;n||r.update(u),r.render(),r.stats.end()};let s=!1;const a=()=>{s||(r.render(),s=!0,setTimeout(()=>s=!1,50))};let o="";return{start(){o!=="active"&&(r.renderer.setAnimationLoop(i),r.controls.removeEventListener("change",a),o="active")},stop(){o!=="inactive"&&(r.renderer.setAnimationLoop(null),r.controls.addEventListener("change",a),o="inactive")},pause(){n=!0},resume(){n=!1},get state(){return o},get timeScale(){return e},set timeScale(c){const u=parseFloat(c);e=isNaN(u)?1:Math.abs(u)},get reverse(){return t},set reverse(c){t=!!c},get paused(){return n},set paused(c){n=!!c}}}const fC=async r=>{const{zip:e}=await ut(()=>import("./browser.a1df0985.js"),[]);return new Promise(t=>e(r,{},(n,i)=>t(new Blob([i]))))},dC=r=>{const e=r.indexOf(",");return r.slice(e+1,1/0)},pC=async r=>{if(r=await r,r instanceof Blob&&(r=await r.arrayBuffer()),r instanceof ArrayBuffer)return new Uint8Array(r);if(typeof r=="string"){const e=r.startsWith("data")?dC(r):r,t=window.atob(e);return Uint8Array.from(t,n=>n.charCodeAt(0))}};async function mC(r){const e=await Promise.all(r.map(({data:n})=>pC(n))),t=Object.fromEntries(r.map(({name:n},i)=>[n,[e[i],{level:0,consume:!0}]]));return fC(t)}async function gC(r,e){const t=r.length.toString().length,n=r.map((i,s)=>{const a=s.toString().padStart(t,"0");return{name:`${e||"ss"}_${a}.png`,data:i}});return mC(n)}function _C(r,e){const t=document.createElement("a");t.style.display="none",t.href=r,t.download=e,document.body.appendChild(t),t.click(),document.body.removeChild(t)}async function nh(r,e="frames"){const t=await gC(r,e);Jl.exports.saveAs(t,`${e}.zip`)}function vC(r){const{canvas:e,scene:t}=r;return{settings:VE,downloadFrame(i=1){const{noBackground:s,fileName:a}=this.settings,o=s&&!r.postProcessing.enabled;let l=null;const c=()=>[t.background,l]=[l,t.background];if(r.loop.state==="inactive"||i===1){o&&c(),r.render();const d=e.toDataURL();o&&c(),_C(d,`${a}.png`),r.render();return}let u=0;const h=[];o&&r.addCountedEventListener("beforeRender",c);function f(){const d=e.toDataURL("image/png");h.push(d),++u===i&&(o&&r.addCountedEventListener("beforeRender",c),nh(h,a))}r.addCountedEventListener("afterRender",f,i)},getFrame(){let i;const{noBackground:s}=this.settings;if(s&&!r.postProcessing.enabled){let o=null;[t.background,o]=[o,t.background],r.render(),i=e.toDataURL("image/png"),[t.background,o]=[o,t.background],r.render()}else r.render(),i=e.toDataURL("image/png");return i},getAllFrames(i){var p,m;const s=i==null?void 0:i.animation.current.chainName;if(!s||i.animation.chain[s].duration===1/0)return;console.info("main thread locked");const o=r.loop.state;r.loop.stop(),(m=(p=i.face)==null?void 0:p.reset)==null||m.call(p),i.animation.stop();const l=[],{frameRate:c,noBackground:u}=this.settings,h=1/(c||30);let f=null,d=!0;for(u&&([t.background,f]=[f,t.background]),i.animation.addCountedEventListener("chainFinished",()=>d=!1),i.animation.play();d;){r.update(h);const g=e.toDataURL();l.push(g)}return console.info("main thread unlocked"),u&&([t.background,f]=[f,t.background]),o==="active"&&r.loop.start(),l},downloadAllFrames(i=0){const s=r.model[i],a=this.getAllFrames(s),{fileName:o}=this.settings;nh(a,o)},getAllFramesAsArrayBuffer(i){var _,y;const s=i==null?void 0:i.animation.current.chainName;if(!s||i.animation.chain[s].duration===1/0)return;console.info("main thread locked");const o=r.renderer.getContext(),l=r.loop.state;(y=(_=i.face)==null?void 0:_.reset)==null||y.call(_),r.loop.stop(),i.animation.stop();const c=[],{frameRate:u,noBackground:h}=this.settings,f=1/(u||30),{width:d,height:p}=e,g=d*p*4;let v=null,x=!0;for(h&&([t.background,v]=[v,t.background]),i.animation.addCountedEventListener("chainFinished",()=>x=!1),i.animation.play();x;){r.update(f);const M=new Uint8Array(g);o.readPixels(0,0,d,p,o.RGBA,o.UNSIGNED_BYTE,M);const w=yC(M,{width:d,height:p});c.push(w.buffer)}return console.info("main thread unlocked"),h&&([t.background,v]=[v,t.background]),l==="active"&&r.loop.start(),c}}}function yC(r,{width:e,height:t}){const n=t/2|0,i=e*4,s=new Uint8Array(e*4);for(let a=0;a<n;++a){const o=a*i,l=(t-a-1)*i;s.set(r.subarray(o,o+i)),r.copyWithin(o,l,l+i),r.set(s,l)}return r}const xC=()=>Promise.all([XE(),$E(),jE(),r2()]),bC={directional:Vl,ambient:Gl,point:ga},MC={directional:Y0,point:j0},wC=r=>{var l,c;const e=bC[r];if(!e)return null;const t=HE[r],{color:n,intensity:i,...s}=t,a=new e(n,i);a.name=(c=(l=a.type)==null?void 0:l.replace)==null?void 0:c.call(l,"Light","");const o=MC[r];return o&&(a.helper=new o(a),Object.defineProperty(a,"showHelper",{get(){return a.helper.visible},set(u){a.helper.visible=!!u,a.helper.update()}}),a.showHelper=!1),Object.defineProperty(a,"colorCode",{get(){return"#"+this.color.getHexString()},set(u){var h,f;this.color=new ce(u),(f=(h=this.helper)==null?void 0:h.update)==null||f.call(h)}}),Object.entries(s).forEach(([u,h])=>{a[u].isVector3?a[u].set(...h):a[u]=h}),a};function SC(r){const e={list:new ei,add:t=>{const n=wC(t);if(!!n)return r.scene.add(n),n.helper&&(r.scene.add(n.helper),n.helper.update()),e.list.push(n),n.remove=()=>{var i,s,a,o,l;e.list.remove(n),n.helper&&((i=n.parent)==null||i.remove(n.helper),(a=(s=n.helper).dispose)==null||a.call(s)),(o=n.parent)==null||o.remove(n),(l=n.dispose)==null||l.call(n)},n}};return e}const Kp={"<":">","(":")","[":"]","{":"}"},AC=r=>{let e="";const t=[],n=[];for(const i of r){if(t.length){e+=i;const s=t.at(-1);i===Kp[s]&&t.pop();continue}if(i==="/"){e&&n.push(e),e="";continue}e+=i,i in Kp&&t.push(i)}return e&&n.push(e),n},tv=r=>AC(r).reduce((t,n)=>{const[i,...s]=n.split("="),a=s==null?void 0:s.join("=");return i&&a&&t.push([i,a]),t},[]),TC={mat:{keys:["material","code"],valueMap:r=>r.slice(1,-1)},ol:{keys:["outline","code"],valueMap:r=>r.slice(1,-1)},ei:{keys:["face","eyeBaseIdx"]},et:{keys:["face","eyeTexture"]},mi:{keys:["face","mouthBaseIdx"]},mt:{keys:["face","mouthTexture"]},tx:{keys:["texture"]},scl:{keys:["scale"]}};async function EC(r){const e=tv(r),t=Object.fromEntries(e),{id:n}=t,i=await this.loadDLModel(n);return await CC(i,t),i}async function CC(r,e){const{ani:t,...n}=e;Object.entries(n).forEach(([i,s])=>{var u;const a=TC[i];if(!a)return;const{keys:o,valueMap:l}=a,c=(u=l==null?void 0:l(s))!=null?u:s;B_(r,o,c)}),t&&await r.animation.addChain(t)}const Cf=class{constructor(){yn(this,"userData",{ani:new ei});yn(this,"dataLoaded",!1);yn(this,"initData",async()=>{await xC(),this.dataLoaded=!0,this.dispatchEvent({type:"dataLoaded"})});yn(this,"_background","");yn(this,"model",new ei);yn(this,"loadedModel",new ei);yn(this,"loadModelFromCode",EC);yn(this,"settings",{outline:Zr,material:ji});yn(this,"viewport",{width:0,height:0,set(e,t){this.width=e,this.height=t}});Object.assign(this,$a);const e=new zh;this.scene=e,this.background=zE,this.clock=new Xl;const t=_E();this.camera=t;const n=SC(this);n.add("directional"),n.add("ambient"),this.light=n;const i=gE();this.renderer=i,this.canvas=i.domElement,this.screenshot=vC(this),this.record=uC(this.canvas),this.controls=new xT(this.camera,this.canvas),this.postProcessing={enabled:!1,passes:new ei,composer:Jp({renderer:i,scene:e,camera:t}),async addPass(s,a={}){const o=await K2(s,{...a,renderer:i,scene:e,camera:t});this.composer.addPass(o);const l=oC(o),{passes:c}=this,u=this;return l.remove=()=>{c.remove(l),u.refresh()},c.push(l),o},async refresh(){this.composer=Jp({renderer:i,scene:e,camera:t});const s=this.passes.map(({type:o,params:l})=>({type:o,params:Object.entries(l)}));this.passes.length=0;const{length:a}=s;for(let o=0;o<a;o++){const{type:l,params:c}=s[o],u=await this.addPass(l);c.forEach(([h,f])=>void(u[h]=f))}},updatePasses(s){this.passes.length=0,this.passes.splice(0,0,...s),this.refresh()}},this.stats=new lC,this.loop=hC(this),this.loop.start(),console.info("%cDragalia Lost Model Viewer","color:yellow;background-color:black;font-size:1.5rem;text-shadow: 0 0 0.5rem white")}get background(){return this._background}set background(e){var n,i;if(this._background===e)return;this._background="loading",(i=(n=this.scene.background)==null?void 0:n.dispose)==null||i.call(n);const t=this;(async function(){t.scene.background=await vE(e),t._background=e,e.startsWith("img:")&&t.updateBgAspectRatio()})()}get toneMapping(){var t,n;const{toneMapping:e}=this.renderer;return(n=(t=Object.entries(Kc).find(([,i])=>i===e))==null?void 0:t[0])!=null?n:"Unknown"}set toneMapping(e){const t=Kc[e]?e:"No Mapping";this.renderer.toneMapping=Kc[t]}get pixelRatio(){return this.renderer.getPixelRatio()}set pixelRatio(e){this.renderer.setPixelRatio(e),this.postProcessing.composer.setPixelRatio(e)}get unusedModel(){return this.loadedModel.filter(e=>!this.model.includes(e))}async loadDLModel(e=UE){this.dataLoaded||await new Promise(a=>this.addCountedEventListener("dataLoaded",a));const t=Cf.getModelPath(e),n=await k_(t);n.name=e;const i={id:e,outline:this.settings.outline,material:this.settings.material,viewer:this},s=W2(n,i);return this.loadedModel.push(s),s.addEventListener("dispose",()=>this.loadedModel.remove(s)),s}add(e){var t;(t=e.detach)==null||t.call(e),this.model.push(e),this.scene.add(e.model),e.parent=this}remove(e){this.model.remove(e),this.scene.remove(e.model)}disposeAllModels(){this.loadedModel.forEach(e=>{var t;return(t=e.dispose)==null?void 0:t.call(e)}),this.model.length=0}static getModelPath(e){return`${this.source.fbx}/${e}/${e}.fbx`}async setViewport(e,t){var a;await dE(200);const n=e!=null?e:window.innerWidth,i=t!=null?t:window.innerHeight;this.viewport.set(n,i),this.renderer.setSize(n,i);const s=n/i;return this.camera.aspect=s,this.camera.updateProjectionMatrix(),(a=this.postProcessing.composer)==null||a.setSize(n,i),this.background.startsWith("img:")&&this.updateBgAspectRatio(),this}updateBgAspectRatio(){if(!this.background.startsWith("img:"))return;const{width:e,height:t}=this.viewport,n=e/t,{background:i}=this.scene,{naturalWidth:s,naturalHeight:a}=i.image,o=s/a,l=n/o,c=n>o?[1,1/l]:[l,1];i.repeat.set(...c)}update(e){var t;(t=this.animation)==null||t.update(e),this.model.forEach(n=>{var i;return(i=n.update)==null?void 0:i.call(n,e)}),this.loop.state==="inactive"&&this.render(),this.dispatchEvent({type:"timeUpdate",dt:e})}stopAll(){this.model.forEach(e=>{var t,n;return(n=(t=e.animation)==null?void 0:t.stop)==null?void 0:n.call(t)})}playAll(){this.model.forEach(e=>{var t,n;return(n=(t=e.animation)==null?void 0:t.play)==null?void 0:n.call(t)})}render(){this.dispatchEvent({type:"beforeRender"}),this.postProcessing.enabled?this.postProcessing.composer.render():this.renderer.render(this.scene,this.camera),this.dispatchEvent({type:"afterRender"})}toString(){return"Dragalia Lost Model Viewer"}dispose(){var e,t,n;this.model.forEach(i=>i.dispose()),(t=(e=this.scene.background)==null?void 0:e.dispose)==null||t.call(e),(n=this.renderer.renderLists)==null||n.dispose(),this.renderer.dispose()}};let Js=Cf;yn(Js,"source",{fbx:J0,ani:K0});var sn={fullscreenEnabled:0,fullscreenElement:1,requestFullscreen:2,exitFullscreen:3,fullscreenchange:4,fullscreenerror:5,fullscreen:6},Qp=["webkitFullscreenEnabled","webkitFullscreenElement","webkitRequestFullscreen","webkitExitFullscreen","webkitfullscreenchange","webkitfullscreenerror","-webkit-full-screen"],em=["mozFullScreenEnabled","mozFullScreenElement","mozRequestFullScreen","mozCancelFullScreen","mozfullscreenchange","mozfullscreenerror","-moz-full-screen"],tm=["msFullscreenEnabled","msFullscreenElement","msRequestFullscreen","msExitFullscreen","MSFullscreenChange","MSFullscreenError","-ms-fullscreen"],Xt=typeof window<"u"&&typeof window.document<"u"?window.document:{},hn="fullscreenEnabled"in Xt&&Object.keys(sn)||Qp[0]in Xt&&Qp||em[0]in Xt&&em||tm[0]in Xt&&tm||[],PC={requestFullscreen:function(r){return r[hn[sn.requestFullscreen]]()},requestFullscreenFunction:function(r){return r[hn[sn.requestFullscreen]]},get exitFullscreen(){return Xt[hn[sn.exitFullscreen]].bind(Xt)},get fullscreenPseudoClass(){return":"+hn[sn.fullscreen]},addEventListener:function(r,e,t){return Xt.addEventListener(hn[sn[r]],e,t)},removeEventListener:function(r,e,t){return Xt.removeEventListener(hn[sn[r]],e,t)},get fullscreenEnabled(){return Boolean(Xt[hn[sn.fullscreenEnabled]])},set fullscreenEnabled(r){},get fullscreenElement(){return Xt[hn[sn.fullscreenElement]]},set fullscreenElement(r){},get onfullscreenchange(){return Xt[("on"+hn[sn.fullscreenchange]).toLowerCase()]},set onfullscreenchange(r){return Xt[("on"+hn[sn.fullscreenchange]).toLowerCase()]=r},get onfullscreenerror(){return Xt[("on"+hn[sn.fullscreenerror]).toLowerCase()]},set onfullscreenerror(r){return Xt[("on"+hn[sn.fullscreenerror]).toLowerCase()]=r}};const Uo=PC,_t=new Js;_t.initData();_t.setViewport();_t.userData.specialCapture={frameRate:30,duration:5,program:"rotate"};window.addEventListener("resize",()=>_t.setViewport());_t.canvas.addEventListener("dblclick",LC);window.viewer=_t;window.model=_t.model;window.getFrame=_t.screenshot.getFrame;window.downloadFrames=nh;window.saveAs=Jl.exports.saveAs;window.THREE=Z0;window.makeGif=async r=>{const{makeGif:e}=await ut(()=>import("./index.e58f6bb8.js"),[]);return await e(r)};function LC(){!Uo.fullscreenEnabled||(Uo.fullscreenElement?Uo.exitFullscreen():Uo.requestFullscreen(_t.canvas))}function RC(){try{return window.self!==window.top}catch{return!0}}let nm="";const nv=RC(),IC=nv?!1:!window.location.hash.includes("showSettings=false"),DC=nv?!1:!window.location.hash.includes("showAC=false"),OC=r=>({showSettings:IC,toggleSettings:()=>r(e=>{e.showSettings=!e.showSettings}),loadingMsg:"",setLoadingMsg:e=>r(t=>{t.loadingMsg=e}),showTimeControl:DC,toggleTimeControl:()=>r(e=>{e.showTimeControl=!e.showTimeControl}),showFrameRate:!1,toggleFrameRate:()=>r(e=>{e.showFrameRate=!e.showFrameRate}),sidebar:{open:!0,toggle:()=>r(e=>{e.sidebar.open=!e.sidebar.open}),settings:{tab:"Model",setTab:e=>r(t=>{t.sidebar.settings.tab=e})},modal:{mode:"",handleSelect:void 0,open:(e,t)=>{nm=_t.loop.state,_t.loop.stop(),r(n=>{n.sidebar.modal.mode=e,n.sidebar.modal.handleSelect=t})},close:()=>{nm==="active"&&_t.loop.start(),r(e=>{e.sidebar.modal.mode="",e.sidebar.modal.handleSelect=void 0})}},manageMode:"single",setManageMode:e=>r(t=>{t.sidebar.manageMode=e})},chainMaker:{target:null,setTarget:e=>r(t=>{t.chainMaker.target=e})},dock:{mode:"",handleSelect:void 0,open:(e="",t)=>r(n=>{n.dock.mode=e,n.dock.handleSelect=t}),close:()=>r(e=>{e.dock.mode="",e.dock.handleSelect=void 0})}});var FC=0;function wn(r,e,t,n,i){var s,a,o={};for(a in e)a=="ref"?s=e[a]:o[a]=e[a];var l={type:r,props:o,key:t,ref:s,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:--FC,__source:i,__self:n};if(typeof r=="function"&&(s=r.defaultProps))for(a in s)o[a]===void 0&&(o[a]=s[a]);return we.vnode&&we.vnode(l),l}const NC=Jt(()=>ut(()=>import("./index.fab8dcc9.js"),["assets/index.fab8dcc9.js","assets/TabBar.1d4611b0.js","assets/ButtonBase.6662f67a.js","assets/Gallery.17849a16.js","assets/Popover.fc3b337e.js","assets/createSvgIcon.d0042501.js","assets/Box.22e5a028.js","assets/DialogTitle.f479d2c3.js","assets/ColorPicker.70b1a34d.js","assets/ColorButton.b1f565fb.js","assets/Button.1af5148c.js","assets/ColorPicker.a4b8921d.css","assets/file2dataURL.4901c6de.js","assets/index.aa80096d.css"])),kC=Jt(()=>ut(()=>import("./index.ee616061.js"),["assets/index.ee616061.js","assets/lists.89086080.js","assets/createSvgIcon.d0042501.js","assets/ButtonBase.6662f67a.js","assets/Gallery.17849a16.js","assets/Popover.fc3b337e.js","assets/Box.22e5a028.js","assets/DialogTitle.f479d2c3.js","assets/Close.1f35ca94.js","assets/lists.4341b07e.css","assets/filterConfig.58f73b29.js","assets/GlowToggle.f90c582d.js","assets/GlowToggle.eb519626.css","assets/filterConfig.ea114570.css","assets/styles.b2417a70.js","assets/styles.6d95f099.css","assets/styles.2ff56570.css","assets/index.8e0ce1fc.js"])),zC=Jt(()=>ut(()=>import("./index.f00d5f32.js"),["assets/index.f00d5f32.js","assets/lists.89086080.js","assets/createSvgIcon.d0042501.js","assets/ButtonBase.6662f67a.js","assets/Gallery.17849a16.js","assets/Popover.fc3b337e.js","assets/Box.22e5a028.js","assets/DialogTitle.f479d2c3.js","assets/Close.1f35ca94.js","assets/lists.4341b07e.css","assets/Stretcher.474fa4c0.js","assets/Stretcher.c7840dc6.css","assets/TabBar.1d4611b0.js","assets/Button.1af5148c.js","assets/ModelIcon.a39d3e2d.js","assets/aniFunction.e411d9ed.js","assets/Selector.5a33388c.js","assets/GlowToggle.f90c582d.js","assets/GlowToggle.eb519626.css","assets/Selector.88a094c7.css","assets/useKey.e7aa850c.js","assets/file2dataURL.4901c6de.js","assets/useToggleState.f51d15e6.js","assets/Check.c64561c7.js","assets/index.a584847b.css","assets/styles.2ff56570.css"])),BC=Jt(()=>ut(()=>import("./index.9847a4eb.js"),["assets/index.9847a4eb.js","assets/AddWeapon.a1941ce2.js","assets/lists.89086080.js","assets/createSvgIcon.d0042501.js","assets/ButtonBase.6662f67a.js","assets/Gallery.17849a16.js","assets/Popover.fc3b337e.js","assets/Box.22e5a028.js","assets/DialogTitle.f479d2c3.js","assets/Close.1f35ca94.js","assets/lists.4341b07e.css","assets/filterConfig.58f73b29.js","assets/GlowToggle.f90c582d.js","assets/GlowToggle.eb519626.css","assets/filterConfig.ea114570.css","assets/index.8e0ce1fc.js","assets/useToggleState.f51d15e6.js","assets/ModelIcon.a39d3e2d.js","assets/AddWeapon.45b642d6.css","assets/styles.2ff56570.css"])),UC=Jt(()=>ut(()=>import("./ColorSelect.28d3ea3e.js"),["assets/ColorSelect.28d3ea3e.js","assets/ColorPicker.70b1a34d.js","assets/ColorButton.b1f565fb.js","assets/Button.1af5148c.js","assets/ButtonBase.6662f67a.js","assets/ColorPicker.a4b8921d.css","assets/DialogTitle.f479d2c3.js"])),VC=Jt(()=>ut(()=>import("./index.27b463fb.js"),["assets/index.27b463fb.js","assets/FaceSelect.755e721d.js","assets/useKey.e7aa850c.js","assets/FacePartSelector.f6ac3b24.js","assets/Selector.5a33388c.js","assets/GlowToggle.f90c582d.js","assets/GlowToggle.eb519626.css","assets/Selector.88a094c7.css","assets/MeshMouthSelect.5c497402.js","assets/Box.22e5a028.js","assets/ButtonBase.6662f67a.js","assets/DialogTitle.f479d2c3.js","assets/Button.1af5148c.js","assets/MeshMouthSelect.7f49998c.css","assets/FaceSelect.febe3778.css"])),GC=Jt(()=>ut(()=>import("./index.1ea06ea2.js"),["assets/index.1ea06ea2.js","assets/FaceTexture.7c5f236d.js","assets/useToggleState.f51d15e6.js","assets/lists.89086080.js","assets/createSvgIcon.d0042501.js","assets/ButtonBase.6662f67a.js","assets/Gallery.17849a16.js","assets/Popover.fc3b337e.js","assets/Box.22e5a028.js","assets/DialogTitle.f479d2c3.js","assets/Close.1f35ca94.js","assets/lists.4341b07e.css","assets/FacePartSelector.f6ac3b24.js","assets/Selector.5a33388c.js","assets/GlowToggle.f90c582d.js","assets/GlowToggle.eb519626.css","assets/Selector.88a094c7.css","assets/filterConfig.58f73b29.js","assets/filterConfig.ea114570.css","assets/styles.b2417a70.js","assets/styles.6d95f099.css","assets/styles.2ff56570.css"])),HC=Jt(()=>ut(()=>import("./index.08f9ab7d.js"),["assets/index.08f9ab7d.js","assets/useKey.e7aa850c.js","assets/Stretcher.474fa4c0.js","assets/Stretcher.c7840dc6.css","assets/BoneManager.20890222.js","assets/ModelIcon.a39d3e2d.js","assets/Accordion.064ec003.js","assets/useToggleState.f51d15e6.js","assets/createSvgIcon.d0042501.js","assets/ButtonBase.6662f67a.js","assets/Accordion.09fd7fc3.css","assets/filterConfig.58f73b29.js","assets/Gallery.17849a16.js","assets/Popover.fc3b337e.js","assets/Box.22e5a028.js","assets/DialogTitle.f479d2c3.js","assets/GlowToggle.f90c582d.js","assets/GlowToggle.eb519626.css","assets/lists.89086080.js","assets/Close.1f35ca94.js","assets/lists.4341b07e.css","assets/filterConfig.ea114570.css","assets/ColorButton.b1f565fb.js","assets/Button.1af5148c.js","assets/SkipPrevious.ad32b098.js","assets/FaceSelect.755e721d.js","assets/FacePartSelector.f6ac3b24.js","assets/Selector.5a33388c.js","assets/Selector.88a094c7.css","assets/MeshMouthSelect.5c497402.js","assets/MeshMouthSelect.7f49998c.css","assets/FaceSelect.febe3778.css","assets/FaceTexture.7c5f236d.js","assets/styles.b2417a70.js","assets/styles.6d95f099.css","assets/styles.2ff56570.css","assets/AddWeapon.a1941ce2.js","assets/index.8e0ce1fc.js","assets/AddWeapon.45b642d6.css","assets/BoneManager.bf3fbd2c.css","assets/index.98b9a174.css"])),im=Jt(()=>ut(()=>import("./index.f21a6833.js"),["assets/index.f21a6833.js","assets/MeshMouthSelect.5c497402.js","assets/Box.22e5a028.js","assets/ButtonBase.6662f67a.js","assets/DialogTitle.f479d2c3.js","assets/Button.1af5148c.js","assets/MeshMouthSelect.7f49998c.css","assets/index.045f3dd6.css"])),WC=Jt(()=>ut(()=>import("./index.249c1d64.js"),["assets/index.249c1d64.js","assets/useKey.e7aa850c.js","assets/Accordion.064ec003.js","assets/useToggleState.f51d15e6.js","assets/createSvgIcon.d0042501.js","assets/ButtonBase.6662f67a.js","assets/Accordion.09fd7fc3.css","assets/ModelIcon.a39d3e2d.js","assets/Button.1af5148c.js","assets/Check.c64561c7.js","assets/DialogTitle.f479d2c3.js","assets/Box.22e5a028.js","assets/index.79f787e2.css","assets/styles.2ff56570.css"])),rm={background:NC,model:kC,animation:zC,weapon:BC,color:UC,face:VC,faceTexture:GC,attachment:HC,target:WC,eye:({onSelect:r})=>wn(im,{part:"eye",onSelect:r}),mouth:({onSelect:r})=>wn(im,{part:"mouth",onSelect:r})},XC=(r,e)=>({Component:void 0,props:void 0,openModal:(t,n)=>r(i=>{i.props=n,i.Component=t}),close:()=>r(t=>{t.Component=void 0}),onClose:void 0,reset:()=>r(t=>{t.Component=t.props=t.onClose=void 0}),getInput:async t=>{if(!rm[t])return null;const{close:n,reset:i}=e(),s=new Promise((a,o)=>{const l=(...c)=>a(c);r(c=>{c.onClose=()=>{o(),n()},c.props={onSelect:l,onAfterSelect:n},c.Component=rm[t]})});try{return await s}catch{return null}finally{i()}},inputModel:()=>e().getInput("model"),inputAni:()=>e().getInput("animation"),inputColor:async()=>{const t=await e().getInput("color");return t==null?void 0:t[0]},inputTarget:()=>e().getInput("target"),inputEye:()=>e().getInput("eye"),inputMouth:()=>e().getInput("mouth")}),$C=r=>({activeModel:void 0,setActiveModel:e=>r({activeModel:e})}),qC=r=>({open:!1,toggle:()=>r(e=>({open:!e.open})),target:null,setTarget:e=>{!e||(e.userData.chain||(e.userData.chain=new ei),r({target:e}))}}),jC=r=>(e,t,n)=>r(i=>e(_y(i)),t,n),qa=r=>uh(jC(r)),ih=qa(OC),_3=qa(rg),v3=qa(rg),YC=qa(vy),y3=qa(XC),x3=uh($C),b3=uh(qC);function ZC(){return new Worker("/dl-model/assets/fetchWorker.841d8105.js")}const JC=r=>{const e=new ZC;return new Promise(t=>{e.addEventListener("message",n=>{e.terminate(),t(n.data)}),e.postMessage(r)})};function iv(){return new Worker("/dl-model/assets/dbWorker.d421d0c2.js")}const rv=(r,e)=>{const t=new iv;return new Promise(n=>{t.addEventListener("message",()=>{n(),t.terminate()}),t.postMessage({type:"put",store:e,value:r})})};function KC(){return new Worker("/dl-model/assets/searchWorker.20599182.js")}async function QC(r,e="",t=["name"]){if(!e||!t.length)return r;const n=new KC;return new Promise(i=>{n.addEventListener("message",s=>{n.terminate(),i(s.data)}),n.postMessage({fullList:r,query:e,keys:t})})}const M3=async r=>{const e=Object.values(r).flat();await rv(e,"model"),console.info("Model DB Initialized")},w3=r=>Kl({type:"get",store:"model",value:r}),S3=r=>Kl({type:"search",store:"model",index:"name",value:r}),A3=async r=>{const t=(await Kl({type:"getByKeyRange",store:"model",value:"c100000_00-c199999_99"})).filter(({id:n})=>!n.endsWith("h"));return QC(t,r)},e3=()=>Kl({type:"getMap",store:"model",index:"name"}),Kl=r=>{const e=new iv;return new Promise(t=>{e.addEventListener("message",n=>{e.terminate(),t(n.data)}),e.postMessage(r)})},ba={},t3=async()=>{if(Object.keys(ba).length)return;const r="ani-personal",e=(await JC([r]))[r];Object.assign(ba,e)},sv=t3(),T3=r=>ba[r],n3=r=>{var e,t;return(t=(e=ba[r])==null?void 0:e[0])!=null?t:r.startsWith("c")?{name:"Bob",code:"CMN_MWM_03"}:null},E3=async()=>{const r=await e3();await sv;const e=Object.entries(ba).flatMap(([t,n])=>{const i=r.get(t);return n.map(s=>({...s,user:t,fullName:`${i} ${s.name}`}))});await rv(e,"animation")},i3="cccccc",r3="c100001_01",sm=(r,e="Unknown")=>{const t=K_(r),{length:n}=t,i=t.map((s,a)=>{const{aniName:o,reps:l=1,timeScale:c=1,duration:u=[0,100],aniAction:h}=s,f=n>1?e+` #${a+1}`:e;return{id:Af(),name:f,aniName:o,reps:l,timeScale:c,duration:u,aniAction:h}});return ei.from(i)},am={ts:{key:"timeScale",defaultValue:1},r:{key:"reps",defaultValue:1}},s3={"face.eyeIdx":"ei","face.mouthIdx":"mi"},C3=r=>r.map(a3).join(">"),a3=r=>{const{aniName:e}=r,t=o3(r),n=l3(r),i=c3(r);return`${e}${t}${n}${i}`},o3=r=>{const e=[];return Object.keys(am).forEach(t=>{const{key:n,defaultValue:i}=am[t];r[n]&&r[n]!==i&&e.push(`&${t}=${r[n]}`)}),e.join("")},l3=r=>{const{duration:e=[0,100]}=r,[t,n]=e;return t!==0?`&dur=${t}-${n}`:n===100?"":`&dur=${n}`},c3=r=>{const{aniAction:e}=r;return e.length?"&"+e.map(n=>{const{time:i,...s}=n,a=Object.entries(s).map(([o,l])=>{var c;return`${(c=s3[o])!=null?c:o}=${l}`});return`@${i}=(${a.join("/")})`}).join("&"):""};function u3(r){if(!(r!=null&&r.userData))return;const{type:e,id:t}=r,{name:n}=r.userData;r.userData.aniSelectState={category:e==="adventurer"?"Adv":"Personal",personalAni:{source:t,sourceName:n}}}function eu(){const r=decodeURI(window.location.hash),e=tv(r),t=Object.fromEntries(e);h3(t),f3(r)}function h3(r){const{bg:e=i3,showAC:t="true",showSettings:n="true"}=r;_t.background=e,ih.setState({showTimeControl:ld(t)}),ih.setState({showSettings:ld(n)})}async function f3(r){_t.disposeAllModels(),setTimeout(async()=>{var a;const e=r.includes("id=")?r:r+`/id=${r3}`,t=await _t.loadModelFromCode(e);_t.add(t);const n=t.type==="adventurer"?"Adv":"Personal";YC.getState().setCategory(n),u3(t);const{id:i}=t;if(!r.includes("camPos=")){const o=qE(i);_t.camera.position.set(...o)}const s=YE(i);if(_t.controls.target.set(...s),r.includes("ani=")){const o=(a=t.animation.current.chainCode)!=null?a:"";o&&(t.userData.chain=sm(o,"init"))}else{const o=n3(i);if(o){const{code:l,name:c}=o;t.animation.addChain(l),t.userData.chain=sm(l,c)}}})}const d3=Jt(()=>ut(()=>import("./index.f26dfdba.js"),["assets/index.f26dfdba.js","assets/createSvgIcon.d0042501.js","assets/ButtonBase.6662f67a.js","assets/BoneManager.20890222.js","assets/ModelIcon.a39d3e2d.js","assets/Accordion.064ec003.js","assets/useToggleState.f51d15e6.js","assets/Accordion.09fd7fc3.css","assets/filterConfig.58f73b29.js","assets/Gallery.17849a16.js","assets/Popover.fc3b337e.js","assets/Box.22e5a028.js","assets/DialogTitle.f479d2c3.js","assets/GlowToggle.f90c582d.js","assets/GlowToggle.eb519626.css","assets/lists.89086080.js","assets/Close.1f35ca94.js","assets/lists.4341b07e.css","assets/filterConfig.ea114570.css","assets/ColorButton.b1f565fb.js","assets/Button.1af5148c.js","assets/SkipPrevious.ad32b098.js","assets/useKey.e7aa850c.js","assets/FaceSelect.755e721d.js","assets/FacePartSelector.f6ac3b24.js","assets/Selector.5a33388c.js","assets/Selector.88a094c7.css","assets/MeshMouthSelect.5c497402.js","assets/MeshMouthSelect.7f49998c.css","assets/FaceSelect.febe3778.css","assets/FaceTexture.7c5f236d.js","assets/styles.b2417a70.js","assets/styles.6d95f099.css","assets/styles.2ff56570.css","assets/AddWeapon.a1941ce2.js","assets/index.8e0ce1fc.js","assets/AddWeapon.45b642d6.css","assets/BoneManager.bf3fbd2c.css","assets/TabBar.1d4611b0.js","assets/aniFunction.e411d9ed.js","assets/index.0f03617c.css"])),p3=Jt(()=>ut(()=>import("./index.e38b8f11.js"),["assets/index.e38b8f11.js","assets/useToggleState.f51d15e6.js","assets/GlowToggle.f90c582d.js","assets/GlowToggle.eb519626.css","assets/Button.1af5148c.js","assets/ButtonBase.6662f67a.js","assets/Popover.fc3b337e.js","assets/SkipPrevious.ad32b098.js","assets/createSvgIcon.d0042501.js","assets/Close.1f35ca94.js","assets/index.0a450c69.css"]));function m3(){const r=Fv(),e=Qs(),t=Qs(),{loadingMsg:n,showTimeControl:i,showSettings:s,showFrameRate:a}=ih();return rs(()=>(r&&sv.then(eu),window.addEventListener("hashchange",eu),()=>window.removeEventListener("hashchange",eu))),rs(()=>{e.current.appendChild(_t.canvas),_t.stats.dom.style.position="",t.current.appendChild(_t.stats.dom)},[]),wn(Fn,{children:[s&&wn(tr,{fallback:null,children:wn(d3,{})}),wn("div",{className:"mount",ref:o=>e.current=o}),wn("div",{className:"stats",style:{display:a?"unset":"none"},ref:o=>t.current=o}),n&&wn("div",{className:"loading-msg",children:n}),i&&wn(tr,{fallback:null,children:wn(p3,{})})]})}ns(wn(m3,{}),document.getElementById("app"));export{rv as $,Jl as A,ut as B,Up as C,tr as D,gC as E,Sl as F,mC as G,y3 as H,C3 as I,Af as J,JC as K,M3 as L,sv as M,E3 as N,Fv as O,BE as P,Om as Q,Ov as R,fE as S,wm as T,lh as U,Xm as V,xm as W,Lm as X,Mm as Y,uh as Z,Qs as _,x3 as a,Kl as a0,On as a1,Cm as a2,_y as a3,Hp as a4,J0 as a5,jp as a6,A3 as a7,S3 as a8,QC as a9,$t as aA,Rn as aB,nt as aC,Tn as aD,Ue as aE,ra as aF,be as aG,zh as aH,sa as aI,fl as aJ,dl as aK,Th as aL,vr as aM,Lt as aN,hr as aO,ia as aP,Ve as aQ,qr as aR,Qm as aS,sl as aT,En as aU,v3 as aa,Jt as ab,YT as ac,T3 as ad,ce as ae,Yl as af,q as ag,Zt as ah,Ta as ai,Ht as aj,T as ak,Yp as al,cl as am,Ci as an,$2 as ao,ct as ap,ot as aq,pt as ar,P0 as as,l0 as at,Ye as au,Fh as av,$g as aw,ni as ax,Qi as ay,Ai as az,sm as b,Vm as c,rm as d,qE as e,YE as f,n3 as g,rs as h,u3 as i,YC as j,Pm as k,Dv as l,_3 as m,wl as n,wn as o,Fn as p,w3 as q,b3 as r,wa as s,Kc as t,ih as u,_t as v,Sm as w,Wm as x,sh as y,Ef as z};
