import{_ as C,a as L,h as S,o}from"./9121d302-jsxRuntime.module.js";import{u as b}from"./70e251a7-useKey.js";import{b as y,f as D}from"./850748e7-index.js";import{S as w}from"./cef298b2-Stretcher.js";import{h as k,i as x}from"./f980cb47-BoneManager.js";import{h as E,v as l}from"./8524ed34-viewer.js";import{B as n}from"./272a55ce-Box.js";import{a as N,b as q}from"./7b2118ae-DialogTitle.js";import{S as I}from"./2f5c5a37-Gallery.js";import{M as K}from"./6060fbc4-filterConfig.js";import{B as T}from"./7e61fe05-Button.js";import"./aceff306-index.js";import"./042e6b4d-_commonjsHelpers.js";import"./4e8de4b5-compat.module.js";import"./6fa25dee-immer.esm.js";import"./45408441-preload-helper.js";/* empty css               */import"./6a23e72f-ModelIcon.js";import"./abd3a33b-Accordion.js";import"./6c499396-useToggleState.js";import"./5c67166c-createSvgIcon.js";import"./8f91ce53-ButtonBase.js";import"./eaf06fd2-Popover.js";import"./e1cac50e-ColorButton.js";import"./9c8ee417-SkipPrevious.js";import"./7b270a3e-Close.js";import"./f28bfb15-FaceSelect.js";import"./c13ebfff-useIsMount.js";import"./4e1e9e52-FacePartSelector.js";import"./0d1abf2a-Selector.js";import"./d65f183e-GlowToggle.js";import"./f1368859-MeshMouthSelect.js";import"./2603cf40-FaceTexture.js";import"./a9dc416e-lists.js";import"./96ba9c36-styles.js";import"./f60cacb5-index.js";import"./a84c5f65-helper.js";import"./80fff432-AddWeapon.js";import"./647a0a28-index.js";import"./54296060-initAniSelectState.js";import"./1c81631e-three.js";import"./e27bbfcf-CopyShader.js";import"./91ac8981-ShaderPass.js";import"./b87293a3-Pass.js";function Dt(){var p;const{activeModel:e}=y();if(!e)return null;const[h,u]=b(),{inputModel:f}=D(),a=C(()=>{}),i=["root",...((p=e==null?void 0:e.bones)==null?void 0:p.list)??[]],[m,c]=L(i[0]),g=E(e.attachment.list.map(t=>t.parentBone));S(()=>{if(!e)return;c("root"),a.current();const t=e.addEventListener("AttachmentChanged",u);return a.current=()=>e.removeEventListener("AttachmentChanged",t),a.current},[e]);const A=t=>{c(t.target.value)},s=async(t=m)=>{const d=await f();if(!d)return;const[v,B]=d,r=await l.loadDLModel(v);r.userData.name=B,e.attach(r,t==="root"?void 0:t),r.outline.code=e.outline.code,r.material.code=e.material.code,l.render()},M=()=>s();return o(n,{className:"AttachmentManager",children:[o(n,{className:"AttachmentManager-top",children:[o(N,{children:"Manage Attachments"}),o(n,{className:"AttachmentManager-add",children:[o(I,{onChange:A,value:m,className:"AttachmentManager-select",children:i.map(t=>o(K,{value:t,children:t},t))}),o(T,{title:"Add Attachment",variant:"contained",onClick:M,children:o(k,{})})]})]}),o(q,{className:"AttachmentManager-body",children:[o(w,{}),g.map(t=>o(x,{add:s,bone:t},t))]},h)]})}export{Dt as default};
