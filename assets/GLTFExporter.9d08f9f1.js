import{am as B,ax as W,ay as X,az as J,aA as U,aB as Z,aC as v,aD as q,aE as $,aF as P,aG as Q,at as ee,aH as te,aI as se,as as ne,aJ as ie,aK as re,aL as oe,aM as ae,aN as ce}from"./index.a7f60097.js";class j{constructor(){this.pluginCallbacks=[],this.register(function(e){return new me(e)}),this.register(function(e){return new Te(e)}),this.register(function(e){return new Ee(e)}),this.register(function(e){return new Me(e)}),this.register(function(e){return new we(e)}),this.register(function(e){return new ye(e)})}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,s,n,t){typeof n=="object"&&(console.warn("THREE.GLTFExporter: parse() expects options as the fourth argument now."),t=n);const r=new xe,i=[];for(let o=0,a=this.pluginCallbacks.length;o<a;o++)i.push(this.pluginCallbacks[o](r));r.setPlugins(i),r.write(e,s,t).catch(n)}parseAsync(e,s){const n=this;return new Promise(function(t,r){n.parse(e,t,r,s)})}}const g={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,FLOAT:5126,UNSIGNED_INT:5125,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},A={};A[ee]=g.NEAREST;A[te]=g.NEAREST_MIPMAP_NEAREST;A[se]=g.NEAREST_MIPMAP_LINEAR;A[ne]=g.LINEAR;A[ie]=g.LINEAR_MIPMAP_NEAREST;A[re]=g.LINEAR_MIPMAP_LINEAR;A[oe]=g.CLAMP_TO_EDGE;A[ae]=g.REPEAT;A[ce]=g.MIRRORED_REPEAT;const z={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},k=12,le=1179937895,ue=2,V=8,fe=1313821514,he=5130562;function _(c,e){return c.length===e.length&&c.every(function(s,n){return s===e[n]})}function pe(c){return new TextEncoder().encode(c).buffer}function de(c){return _(c.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function ge(c,e,s){const n={min:new Array(c.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(c.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let t=e;t<e+s;t++)for(let r=0;r<c.itemSize;r++){let i;c.itemSize>4?i=c.array[t*c.itemSize+r]:r===0?i=c.getX(t):r===1?i=c.getY(t):r===2?i=c.getZ(t):r===3&&(i=c.getW(t)),n.min[r]=Math.min(n.min[r],i),n.max[r]=Math.max(n.max[r],i)}return n}function Y(c){return Math.ceil(c/4)*4}function G(c,e=0){const s=Y(c.byteLength);if(s!==c.byteLength){const n=new Uint8Array(s);if(n.set(new Uint8Array(c)),e!==0)for(let t=c.byteLength;t<s;t++)n[t]=e;return n.buffer}return c}let S=null;function H(){return S||(typeof OffscreenCanvas!="undefined"?S=new OffscreenCanvas(1,1):S=document.createElement("canvas"),S)}class xe{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,s,n){this.options=Object.assign({},{binary:!1,trs:!1,onlyVisible:!0,truncateDrawRange:!0,embedImages:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},n),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);const t=this,r=t.buffers,i=t.json;n=t.options;const o=t.extensionsUsed,a=new Blob(r,{type:"application/octet-stream"}),u=Object.keys(o);if(u.length>0&&(i.extensionsUsed=u),i.buffers&&i.buffers.length>0&&(i.buffers[0].byteLength=a.size),n.binary===!0){const p=new FileReader;p.readAsArrayBuffer(a),p.onloadend=function(){const l=G(p.result),x=new DataView(new ArrayBuffer(V));x.setUint32(0,l.byteLength,!0),x.setUint32(4,he,!0);const f=G(pe(JSON.stringify(i)),32),h=new DataView(new ArrayBuffer(V));h.setUint32(0,f.byteLength,!0),h.setUint32(4,fe,!0);const m=new ArrayBuffer(k),E=new DataView(m);E.setUint32(0,le,!0),E.setUint32(4,ue,!0);const T=k+h.byteLength+f.byteLength+x.byteLength+l.byteLength;E.setUint32(8,T,!0);const b=new Blob([m,h,f,x,l],{type:"application/octet-stream"}),d=new FileReader;d.readAsArrayBuffer(b),d.onloadend=function(){s(d.result)}}}else if(i.buffers&&i.buffers.length>0){const p=new FileReader;p.readAsDataURL(a),p.onloadend=function(){const l=p.result;i.buffers[0].uri=l,s(i)}}else s(i)}serializeUserData(e,s){if(Object.keys(e.userData).length===0)return;const n=this.options,t=this.extensionsUsed;try{const r=JSON.parse(JSON.stringify(e.userData));if(n.includeCustomExtensions&&r.gltfExtensions){s.extensions===void 0&&(s.extensions={});for(const i in r.gltfExtensions)s.extensions[i]=r.gltfExtensions[i],t[i]=!0;delete r.gltfExtensions}Object.keys(r).length>0&&(s.extras=r)}catch(r){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+r.message)}}getUID(e){return this.uids.has(e)||this.uids.set(e,this.uid++),this.uids.get(e)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;const n=new B;for(let t=0,r=e.count;t<r;t++)if(Math.abs(n.fromBufferAttribute(e,t).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){const s=this.cache;if(s.attributesNormalized.has(e))return s.attributesNormalized.get(e);const n=e.clone(),t=new B;for(let r=0,i=n.count;r<i;r++)t.fromBufferAttribute(n,r),t.x===0&&t.y===0&&t.z===0?t.setX(1):t.normalize(),n.setXYZ(r,t.x,t.y,t.z);return s.attributesNormalized.set(e,n),n}applyTextureTransform(e,s){let n=!1;const t={};(s.offset.x!==0||s.offset.y!==0)&&(t.offset=s.offset.toArray(),n=!0),s.rotation!==0&&(t.rotation=s.rotation,n=!0),(s.repeat.x!==1||s.repeat.y!==1)&&(t.scale=s.repeat.toArray(),n=!0),n&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=t,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,s){if(e===s)return e;console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures.");const n=e==null?void 0:e.image,t=s==null?void 0:s.image,r=Math.max((n==null?void 0:n.width)||0,(t==null?void 0:t.width)||0),i=Math.max((n==null?void 0:n.height)||0,(t==null?void 0:t.height)||0),o=H();o.width=r,o.height=i;const a=o.getContext("2d");a.fillStyle="#00ffff",a.fillRect(0,0,r,i);const u=a.getImageData(0,0,r,i);if(n){a.drawImage(n,0,0,r,i);const x=a.getImageData(0,0,r,i).data;for(let f=2;f<x.length;f+=4)u.data[f]=x[f]}if(t){a.drawImage(t,0,0,r,i);const x=a.getImageData(0,0,r,i).data;for(let f=1;f<x.length;f+=4)u.data[f]=x[f]}a.putImageData(u,0,0);const l=(e||s).clone();return l.source=new W(o),l}processBuffer(e){const s=this.json,n=this.buffers;return s.buffers||(s.buffers=[{byteLength:0}]),n.push(e),0}processBufferView(e,s,n,t,r){const i=this.json;i.bufferViews||(i.bufferViews=[]);let o;s===g.UNSIGNED_BYTE?o=1:s===g.UNSIGNED_SHORT?o=2:o=4;const a=Y(t*e.itemSize*o),u=new DataView(new ArrayBuffer(a));let p=0;for(let f=n;f<n+t;f++)for(let h=0;h<e.itemSize;h++){let m;e.itemSize>4?m=e.array[f*e.itemSize+h]:h===0?m=e.getX(f):h===1?m=e.getY(f):h===2?m=e.getZ(f):h===3&&(m=e.getW(f)),s===g.FLOAT?u.setFloat32(p,m,!0):s===g.UNSIGNED_INT?u.setUint32(p,m,!0):s===g.UNSIGNED_SHORT?u.setUint16(p,m,!0):s===g.UNSIGNED_BYTE&&u.setUint8(p,m),p+=o}const l={buffer:this.processBuffer(u.buffer),byteOffset:this.byteOffset,byteLength:a};return r!==void 0&&(l.target=r),r===g.ARRAY_BUFFER&&(l.byteStride=e.itemSize*o),this.byteOffset+=a,i.bufferViews.push(l),{id:i.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){const s=this,n=s.json;return n.bufferViews||(n.bufferViews=[]),new Promise(function(t){const r=new FileReader;r.readAsArrayBuffer(e),r.onloadend=function(){const i=G(r.result),o={buffer:s.processBuffer(i),byteOffset:s.byteOffset,byteLength:i.byteLength};s.byteOffset+=i.byteLength,t(n.bufferViews.push(o)-1)}})}processAccessor(e,s,n,t){const r=this.options,i=this.json,o={1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",16:"MAT4"};let a;if(e.array.constructor===Float32Array)a=g.FLOAT;else if(e.array.constructor===Uint32Array)a=g.UNSIGNED_INT;else if(e.array.constructor===Uint16Array)a=g.UNSIGNED_SHORT;else if(e.array.constructor===Uint8Array)a=g.UNSIGNED_BYTE;else throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type.");if(n===void 0&&(n=0),t===void 0&&(t=e.count),r.truncateDrawRange&&s!==void 0&&s.index===null){const f=n+t,h=s.drawRange.count===1/0?e.count:s.drawRange.start+s.drawRange.count;n=Math.max(n,s.drawRange.start),t=Math.min(f,h)-n,t<0&&(t=0)}if(t===0)return null;const u=ge(e,n,t);let p;s!==void 0&&(p=e===s.index?g.ELEMENT_ARRAY_BUFFER:g.ARRAY_BUFFER);const l=this.processBufferView(e,a,n,t,p),x={bufferView:l.id,byteOffset:l.byteOffset,componentType:a,count:t,max:u.max,min:u.min,type:o[e.itemSize]};return e.normalized===!0&&(x.normalized=!0),i.accessors||(i.accessors=[]),i.accessors.push(x)-1}processImage(e,s,n,t="image/png"){const r=this,i=r.cache,o=r.json,a=r.options,u=r.pending;i.images.has(e)||i.images.set(e,{});const p=i.images.get(e),l=t+":flipY/"+n.toString();if(p[l]!==void 0)return p[l];o.images||(o.images=[]);const x={mimeType:t};if(a.embedImages){const h=H();h.width=Math.min(e.width,a.maxTextureSize),h.height=Math.min(e.height,a.maxTextureSize);const m=h.getContext("2d");if(n===!0&&(m.translate(0,h.height),m.scale(1,-1)),e.data!==void 0){s!==X&&console.error("GLTFExporter: Only RGBAFormat is supported."),(e.width>a.maxTextureSize||e.height>a.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);const E=new Uint8ClampedArray(e.height*e.width*4);for(let T=0;T<E.length;T+=4)E[T+0]=e.data[T+0],E[T+1]=e.data[T+1],E[T+2]=e.data[T+2],E[T+3]=e.data[T+3];m.putImageData(new ImageData(E,e.width,e.height),0,0)}else m.drawImage(e,0,0,h.width,h.height);if(a.binary===!0){let E;h.toBlob!==void 0?E=new Promise(T=>h.toBlob(T,t)):E=h.convertToBlob({type:t}),u.push(E.then(T=>r.processBufferViewImage(T).then(b=>{x.bufferView=b})))}else x.uri=h.toDataURL(t)}else x.uri=e.src;const f=o.images.push(x)-1;return p[l]=f,f}processSampler(e){const s=this.json;s.samplers||(s.samplers=[]);const n={magFilter:A[e.magFilter],minFilter:A[e.minFilter],wrapS:A[e.wrapS],wrapT:A[e.wrapT]};return s.samplers.push(n)-1}processTexture(e){const s=this.cache,n=this.json;if(s.textures.has(e))return s.textures.get(e);n.textures||(n.textures=[]);let t=e.userData.mimeType;t==="image/webp"&&(t="image/png");const r={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY,t)};e.name&&(r.name=e.name),this._invokeAll(function(o){o.writeTexture&&o.writeTexture(e,r)});const i=n.textures.push(r)-1;return s.textures.set(e,i),i}processMaterial(e){const s=this.cache,n=this.json;if(s.materials.has(e))return s.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;n.materials||(n.materials=[]);const t={pbrMetallicRoughness:{}};e.isMeshStandardMaterial!==!0&&e.isMeshBasicMaterial!==!0&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const r=e.color.toArray().concat([e.opacity]);if(_(r,[1,1,1,1])||(t.pbrMetallicRoughness.baseColorFactor=r),e.isMeshStandardMaterial?(t.pbrMetallicRoughness.metallicFactor=e.metalness,t.pbrMetallicRoughness.roughnessFactor=e.roughness):(t.pbrMetallicRoughness.metallicFactor=.5,t.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){const o=this.buildMetalRoughTexture(e.metalnessMap,e.roughnessMap),a={index:this.processTexture(o)};this.applyTextureTransform(a,o),t.pbrMetallicRoughness.metallicRoughnessTexture=a}if(e.map){const o={index:this.processTexture(e.map)};this.applyTextureTransform(o,e.map),t.pbrMetallicRoughness.baseColorTexture=o}if(e.emissive){const o=e.emissive.clone().multiplyScalar(e.emissiveIntensity),a=Math.max(o.r,o.g,o.b);if(a>1&&(o.multiplyScalar(1/a),console.warn("THREE.GLTFExporter: Some emissive components exceed 1; emissive has been limited")),a>0&&(t.emissiveFactor=o.toArray()),e.emissiveMap){const u={index:this.processTexture(e.emissiveMap)};this.applyTextureTransform(u,e.emissiveMap),t.emissiveTexture=u}}if(e.normalMap){const o={index:this.processTexture(e.normalMap)};e.normalScale&&e.normalScale.x!==1&&(o.scale=e.normalScale.x),this.applyTextureTransform(o,e.normalMap),t.normalTexture=o}if(e.aoMap){const o={index:this.processTexture(e.aoMap),texCoord:1};e.aoMapIntensity!==1&&(o.strength=e.aoMapIntensity),this.applyTextureTransform(o,e.aoMap),t.occlusionTexture=o}e.transparent?t.alphaMode="BLEND":e.alphaTest>0&&(t.alphaMode="MASK",t.alphaCutoff=e.alphaTest),e.side===J&&(t.doubleSided=!0),e.name!==""&&(t.name=e.name),this.serializeUserData(e,t),this._invokeAll(function(o){o.writeMaterial&&o.writeMaterial(e,t)});const i=n.materials.push(t)-1;return s.materials.set(e,i),i}processMesh(e){const s=this.cache,n=this.json,t=[e.geometry.uuid];if(Array.isArray(e.material))for(let d=0,y=e.material.length;d<y;d++)t.push(e.material[d].uuid);else t.push(e.material.uuid);const r=t.join(":");if(s.meshes.has(r))return s.meshes.get(r);const i=e.geometry;let o;if(e.isLineSegments?o=g.LINES:e.isLineLoop?o=g.LINE_LOOP:e.isLine?o=g.LINE_STRIP:e.isPoints?o=g.POINTS:o=e.material.wireframe?g.LINES:g.TRIANGLES,i.isBufferGeometry!==!0)throw new Error("THREE.GLTFExporter: Geometry is not of type THREE.BufferGeometry.");const a={},u={},p=[],l=[],x={uv:"TEXCOORD_0",uv2:"TEXCOORD_1",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},f=i.getAttribute("normal");f!==void 0&&!this.isNormalizedNormalAttribute(f)&&(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),i.setAttribute("normal",this.createNormalizedNormalAttribute(f)));let h=null;for(let d in i.attributes){if(d.slice(0,5)==="morph")continue;const y=i.attributes[d];if(d=x[d]||d.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(d)||(d="_"+d),s.attributes.has(this.getUID(y))){u[d]=s.attributes.get(this.getUID(y));continue}h=null;const M=y.array;d==="JOINTS_0"&&!(M instanceof Uint16Array)&&!(M instanceof Uint8Array)&&(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),h=new U(new Uint16Array(M),y.itemSize,y.normalized));const I=this.processAccessor(h||y,i);I!==null&&(u[d]=I,s.attributes.set(this.getUID(y),I))}if(f!==void 0&&i.setAttribute("normal",f),Object.keys(u).length===0)return null;if(e.morphTargetInfluences!==void 0&&e.morphTargetInfluences.length>0){const d=[],y=[],w={};if(e.morphTargetDictionary!==void 0)for(const M in e.morphTargetDictionary)w[e.morphTargetDictionary[M]]=M;for(let M=0;M<e.morphTargetInfluences.length;++M){const I={};let O=!1;for(const L in i.morphAttributes){if(L!=="position"&&L!=="normal"){O||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),O=!0);continue}const N=i.morphAttributes[L][M],C=L.toUpperCase(),F=i.attributes[L];if(s.attributes.has(this.getUID(N))){I[C]=s.attributes.get(this.getUID(N));continue}const D=N.clone();if(!i.morphTargetsRelative)for(let R=0,K=N.count;R<K;R++)D.setXYZ(R,N.getX(R)-F.getX(R),N.getY(R)-F.getY(R),N.getZ(R)-F.getZ(R));I[C]=this.processAccessor(D,i),s.attributes.set(this.getUID(F),I[C])}l.push(I),d.push(e.morphTargetInfluences[M]),e.morphTargetDictionary!==void 0&&y.push(w[M])}a.weights=d,y.length>0&&(a.extras={},a.extras.targetNames=y)}const m=Array.isArray(e.material);if(m&&i.groups.length===0)return null;const E=m?e.material:[e.material],T=m?i.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let d=0,y=T.length;d<y;d++){const w={mode:o,attributes:u};if(this.serializeUserData(i,w),l.length>0&&(w.targets=l),i.index!==null){let I=this.getUID(i.index);(T[d].start!==void 0||T[d].count!==void 0)&&(I+=":"+T[d].start+":"+T[d].count),s.attributes.has(I)?w.indices=s.attributes.get(I):(w.indices=this.processAccessor(i.index,i,T[d].start,T[d].count),s.attributes.set(I,w.indices)),w.indices===null&&delete w.indices}const M=this.processMaterial(E[T[d].materialIndex]);M!==null&&(w.material=M),p.push(w)}a.primitives=p,n.meshes||(n.meshes=[]),this._invokeAll(function(d){d.writeMesh&&d.writeMesh(e,a)});const b=n.meshes.push(a)-1;return s.meshes.set(r,b),b}processCamera(e){const s=this.json;s.cameras||(s.cameras=[]);const n=e.isOrthographicCamera,t={type:n?"orthographic":"perspective"};return n?t.orthographic={xmag:e.right*2,ymag:e.top*2,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:t.perspective={aspectRatio:e.aspect,yfov:Z.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},e.name!==""&&(t.name=e.type),s.cameras.push(t)-1}processAnimation(e,s){const n=this.json,t=this.nodeMap;n.animations||(n.animations=[]),e=j.Utils.mergeMorphTargetTracks(e.clone(),s);const r=e.tracks,i=[],o=[];for(let a=0;a<r.length;++a){const u=r[a],p=v.parseTrackName(u.name);let l=v.findNode(s,p.nodeName);const x=z[p.propertyName];if(p.objectName==="bones"&&(l.isSkinnedMesh===!0?l=l.skeleton.getBoneByName(p.objectIndex):l=void 0),!l||!x)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',u.name),null;const f=1;let h=u.values.length/u.times.length;x===z.morphTargetInfluences&&(h/=l.morphTargetInfluences.length);let m;u.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline===!0?(m="CUBICSPLINE",h/=3):u.getInterpolation()===q?m="STEP":m="LINEAR",o.push({input:this.processAccessor(new U(u.times,f)),output:this.processAccessor(new U(u.values,h)),interpolation:m}),i.push({sampler:o.length-1,target:{node:t.get(l),path:x}})}return n.animations.push({name:e.name||"clip_"+n.animations.length,samplers:o,channels:i}),n.animations.length-1}processSkin(e){const s=this.json,n=this.nodeMap,t=s.nodes[n.get(e)],r=e.skeleton;if(r===void 0)return null;const i=e.skeleton.bones[0];if(i===void 0)return null;const o=[],a=new Float32Array(r.bones.length*16),u=new $;for(let l=0;l<r.bones.length;++l)o.push(n.get(r.bones[l])),u.copy(r.boneInverses[l]),u.multiply(e.bindMatrix).toArray(a,l*16);return s.skins===void 0&&(s.skins=[]),s.skins.push({inverseBindMatrices:this.processAccessor(new U(a,16)),joints:o,skeleton:n.get(i)}),t.skin=s.skins.length-1}processNode(e){const s=this.json,n=this.options,t=this.nodeMap;s.nodes||(s.nodes=[]);const r={};if(n.trs){const o=e.quaternion.toArray(),a=e.position.toArray(),u=e.scale.toArray();_(o,[0,0,0,1])||(r.rotation=o),_(a,[0,0,0])||(r.translation=a),_(u,[1,1,1])||(r.scale=u)}else e.matrixAutoUpdate&&e.updateMatrix(),de(e.matrix)===!1&&(r.matrix=e.matrix.elements);if(e.name!==""&&(r.name=String(e.name)),this.serializeUserData(e,r),e.isMesh||e.isLine||e.isPoints){const o=this.processMesh(e);o!==null&&(r.mesh=o)}else e.isCamera&&(r.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){const o=[];for(let a=0,u=e.children.length;a<u;a++){const p=e.children[a];if(p.visible||n.onlyVisible===!1){const l=this.processNode(p);l!==null&&o.push(l)}}o.length>0&&(r.children=o)}this._invokeAll(function(o){o.writeNode&&o.writeNode(e,r)});const i=s.nodes.push(r)-1;return t.set(e,i),i}processScene(e){const s=this.json,n=this.options;s.scenes||(s.scenes=[],s.scene=0);const t={};e.name!==""&&(t.name=e.name),s.scenes.push(t);const r=[];for(let i=0,o=e.children.length;i<o;i++){const a=e.children[i];if(a.visible||n.onlyVisible===!1){const u=this.processNode(a);u!==null&&r.push(u)}}r.length>0&&(t.nodes=r),this.serializeUserData(e,t)}processObjects(e){const s=new P;s.name="AuxScene";for(let n=0;n<e.length;n++)s.children.push(e[n]);this.processScene(s)}processInput(e){const s=this.options;e=e instanceof Array?e:[e],this._invokeAll(function(t){t.beforeParse&&t.beforeParse(e)});const n=[];for(let t=0;t<e.length;t++)e[t]instanceof P?this.processScene(e[t]):n.push(e[t]);n.length>0&&this.processObjects(n);for(let t=0;t<this.skins.length;++t)this.processSkin(this.skins[t]);for(let t=0;t<s.animations.length;++t)this.processAnimation(s.animations[t],e[0]);this._invokeAll(function(t){t.afterParse&&t.afterParse(e)})}_invokeAll(e){for(let s=0,n=this.plugins.length;s<n;s++)e(this.plugins[s])}}class me{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,s){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return}const n=this.writer,t=n.json,r=n.extensionsUsed,i={};e.name&&(i.name=e.name),i.color=e.color.toArray(),i.intensity=e.intensity,e.isDirectionalLight?i.type="directional":e.isPointLight?(i.type="point",e.distance>0&&(i.range=e.distance)):e.isSpotLight&&(i.type="spot",e.distance>0&&(i.range=e.distance),i.spot={},i.spot.innerConeAngle=(e.penumbra-1)*e.angle*-1,i.spot.outerConeAngle=e.angle),e.decay!==void 0&&e.decay!==2&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),e.target&&(e.target.parent!==e||e.target.position.x!==0||e.target.position.y!==0||e.target.position.z!==-1)&&console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),r[this.name]||(t.extensions=t.extensions||{},t.extensions[this.name]={lights:[]},r[this.name]=!0);const o=t.extensions[this.name].lights;o.push(i),s.extensions=s.extensions||{},s.extensions[this.name]={light:o.length-1}}}class Te{constructor(e){this.writer=e,this.name="KHR_materials_unlit"}writeMaterial(e,s){if(!e.isMeshBasicMaterial)return;const t=this.writer.extensionsUsed;s.extensions=s.extensions||{},s.extensions[this.name]={},t[this.name]=!0,s.pbrMetallicRoughness.metallicFactor=0,s.pbrMetallicRoughness.roughnessFactor=.9}}class Ee{constructor(e){this.writer=e,this.name="KHR_materials_pbrSpecularGlossiness"}writeMaterial(e,s){if(!e.isGLTFSpecularGlossinessMaterial)return;const n=this.writer,t=n.extensionsUsed,r={};s.pbrMetallicRoughness.baseColorFactor&&(r.diffuseFactor=s.pbrMetallicRoughness.baseColorFactor);const i=[1,1,1];if(e.specular.toArray(i,0),r.specularFactor=i,r.glossinessFactor=e.glossiness,s.pbrMetallicRoughness.baseColorTexture&&(r.diffuseTexture=s.pbrMetallicRoughness.baseColorTexture),e.specularMap){const o={index:n.processTexture(e.specularMap)};n.applyTextureTransform(o,e.specularMap),r.specularGlossinessTexture=o}s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class ye{constructor(e){this.writer=e,this.name="KHR_materials_clearcoat"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial)return;const n=this.writer,t=n.extensionsUsed,r={};if(r.clearcoatFactor=e.clearcoat,e.clearcoatMap){const i={index:n.processTexture(e.clearcoatMap)};n.applyTextureTransform(i,e.clearcoatMap),r.clearcoatTexture=i}if(r.clearcoatRoughnessFactor=e.clearcoatRoughness,e.clearcoatRoughnessMap){const i={index:n.processTexture(e.clearcoatRoughnessMap)};n.applyTextureTransform(i,e.clearcoatRoughnessMap),r.clearcoatRoughnessTexture=i}if(e.clearcoatNormalMap){const i={index:n.processTexture(e.clearcoatNormalMap)};n.applyTextureTransform(i,e.clearcoatNormalMap),r.clearcoatNormalTexture=i}s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Me{constructor(e){this.writer=e,this.name="KHR_materials_transmission"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const n=this.writer,t=n.extensionsUsed,r={};if(r.transmissionFactor=e.transmission,e.transmissionMap){const i={index:n.processTexture(e.transmissionMap)};n.applyTextureTransform(i,e.transmissionMap),r.transmissionTexture=i}s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class we{constructor(e){this.writer=e,this.name="KHR_materials_volume"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const n=this.writer,t=n.extensionsUsed,r={};if(r.thicknessFactor=e.thickness,e.thicknessMap){const i={index:n.processTexture(e.thicknessMap)};n.applyTextureTransform(i,e.thicknessMap),r.thicknessTexture=i}r.attenuationDistance=e.attenuationDistance,r.attenuationColor=e.attenuationColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}j.Utils={insertKeyframe:function(c,e){const n=c.getValueSize(),t=new c.TimeBufferType(c.times.length+1),r=new c.ValueBufferType(c.values.length+n),i=c.createInterpolant(new c.ValueBufferType(n));let o;if(c.times.length===0){t[0]=e;for(let a=0;a<n;a++)r[a]=0;o=0}else if(e<c.times[0]){if(Math.abs(c.times[0]-e)<.001)return 0;t[0]=e,t.set(c.times,1),r.set(i.evaluate(e),0),r.set(c.values,n),o=0}else if(e>c.times[c.times.length-1]){if(Math.abs(c.times[c.times.length-1]-e)<.001)return c.times.length-1;t[t.length-1]=e,t.set(c.times,0),r.set(c.values,0),r.set(i.evaluate(e),c.values.length),o=t.length-1}else for(let a=0;a<c.times.length;a++){if(Math.abs(c.times[a]-e)<.001)return a;if(c.times[a]<e&&c.times[a+1]>e){t.set(c.times.slice(0,a+1),0),t[a+1]=e,t.set(c.times.slice(a+1),a+2),r.set(c.values.slice(0,(a+1)*n),0),r.set(i.evaluate(e),(a+1)*n),r.set(c.values.slice((a+1)*n),(a+2)*n),o=a+1;break}}return c.times=t,c.values=r,o},mergeMorphTargetTracks:function(c,e){const s=[],n={},t=c.tracks;for(let r=0;r<t.length;++r){let i=t[r];const o=v.parseTrackName(i.name),a=v.findNode(e,o.nodeName);if(o.propertyName!=="morphTargetInfluences"||o.propertyIndex===void 0){s.push(i);continue}if(i.createInterpolant!==i.InterpolantFactoryMethodDiscrete&&i.createInterpolant!==i.InterpolantFactoryMethodLinear){if(i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),i=i.clone(),i.setInterpolation(Q)}const u=a.morphTargetInfluences.length,p=a.morphTargetDictionary[o.propertyIndex];if(p===void 0)throw new Error("THREE.GLTFExporter: Morph target name not found: "+o.propertyIndex);let l;if(n[a.uuid]===void 0){l=i.clone();const f=new l.ValueBufferType(u*l.times.length);for(let h=0;h<l.times.length;h++)f[h*u+p]=l.values[h];l.name=(o.nodeName||"")+".morphTargetInfluences",l.values=f,n[a.uuid]=l,s.push(l);continue}const x=i.createInterpolant(new i.ValueBufferType(1));l=n[a.uuid];for(let f=0;f<l.times.length;f++)l.values[f*u+p]=x.evaluate(l.times[f]);for(let f=0;f<i.times.length;f++){const h=this.insertKeyframe(l,i.times[f]);l.values[h*u+p]=i.values[f]}}return c.tracks=s,c}};export{j as GLTFExporter};
