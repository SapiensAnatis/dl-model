var Bv=Object.defineProperty,Ov=Object.defineProperties;var zv=Object.getOwnPropertyDescriptors;var pa=Object.getOwnPropertySymbols;var Jf=Object.prototype.hasOwnProperty,Kf=Object.prototype.propertyIsEnumerable;var wc=(r,e,t)=>e in r?Bv(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,tt=(r,e)=>{for(var t in e||(e={}))Jf.call(e,t)&&wc(r,t,e[t]);if(pa)for(var t of pa(e))Kf.call(e,t)&&wc(r,t,e[t]);return r},qn=(r,e)=>Ov(r,zv(e));var Ur=(r,e)=>{var t={};for(var n in r)Jf.call(r,n)&&e.indexOf(n)<0&&(t[n]=r[n]);if(r!=null&&pa)for(var n of pa(r))e.indexOf(n)<0&&Kf.call(r,n)&&(t[n]=r[n]);return t};var gn=(r,e,t)=>(wc(r,typeof e!="symbol"?e+"":e,t),t);const Nv=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerpolicy&&(s.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?s.credentials="include":i.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}};Nv();var Wo,be,Dm,Im,vo,Fm,Qf,Bm,xl={},Om=[],Uv=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function Qn(r,e){for(var t in e)r[t]=e[t];return r}function zm(r){var e=r.parentNode;e&&e.removeChild(r)}function pn(r,e,t){var n,i,s,o={};for(s in e)s=="key"?n=e[s]:s=="ref"?i=e[s]:o[s]=e[s];if(arguments.length>2&&(o.children=arguments.length>3?Wo.call(arguments,2):t),typeof r=="function"&&r.defaultProps!=null)for(s in r.defaultProps)o[s]===void 0&&(o[s]=r.defaultProps[s]);return _o(r,o,n,i,null)}function _o(r,e,t,n,i){var s={type:r,props:e,key:t,ref:n,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:i==null?++Dm:i};return i==null&&be.vnode!=null&&be.vnode(s),s}function _h(){return{current:null}}function En(r){return r.children}function hn(r,e){this.props=r,this.context=e}function ms(r,e){if(e==null)return r.__?ms(r.__,r.__.__k.indexOf(r)+1):null;for(var t;e<r.__k.length;e++)if((t=r.__k[e])!=null&&t.__e!=null)return t.__e;return typeof r.type=="function"?ms(r):null}function Nm(r){var e,t;if((r=r.__)!=null&&r.__c!=null){for(r.__e=r.__c.base=null,e=0;e<r.__k.length;e++)if((t=r.__k[e])!=null&&t.__e!=null){r.__e=r.__c.base=t.__e;break}return Nm(r)}}function gu(r){(!r.__d&&(r.__d=!0)&&vo.push(r)&&!wl.__r++||Qf!==be.debounceRendering)&&((Qf=be.debounceRendering)||Fm)(wl)}function wl(){for(var r;wl.__r=vo.length;)r=vo.sort(function(e,t){return e.__v.__b-t.__v.__b}),vo=[],r.some(function(e){var t,n,i,s,o,a;e.__d&&(o=(s=(t=e).__v).__e,(a=t.__P)&&(n=[],(i=Qn({},s)).__v=s.__v+1,xh(a,s,i,t.__n,a.ownerSVGElement!==void 0,s.__h!=null?[o]:null,n,o==null?ms(s):o,s.__h),Gm(n,s),s.__e!=o&&Nm(s)))})}function Um(r,e,t,n,i,s,o,a,l,c){var u,h,f,d,p,m,g,y=n&&n.__k||Om,v=y.length;for(t.__k=[],u=0;u<e.length;u++)if((d=t.__k[u]=(d=e[u])==null||typeof d=="boolean"?null:typeof d=="string"||typeof d=="number"||typeof d=="bigint"?_o(null,d,null,null,d):Array.isArray(d)?_o(En,{children:d},null,null,null):d.__b>0?_o(d.type,d.props,d.key,null,d.__v):d)!=null){if(d.__=t,d.__b=t.__b+1,(f=y[u])===null||f&&d.key==f.key&&d.type===f.type)y[u]=void 0;else for(h=0;h<v;h++){if((f=y[h])&&d.key==f.key&&d.type===f.type){y[h]=void 0;break}f=null}xh(r,d,f=f||xl,i,s,o,a,l,c),p=d.__e,(h=d.ref)&&f.ref!=h&&(g||(g=[]),f.ref&&g.push(f.ref,null,d),g.push(h,d.__c||p,d)),p!=null?(m==null&&(m=p),typeof d.type=="function"&&d.__k===f.__k?d.__d=l=km(d,l,r):l=Hm(r,d,f,y,p,l),typeof t.type=="function"&&(t.__d=l)):l&&f.__e==l&&l.parentNode!=r&&(l=ms(f))}for(t.__e=m,u=v;u--;)y[u]!=null&&(typeof t.type=="function"&&y[u].__e!=null&&y[u].__e==t.__d&&(t.__d=ms(n,u+1)),Wm(y[u],y[u]));if(g)for(u=0;u<g.length;u++)Vm(g[u],g[++u],g[++u])}function km(r,e,t){for(var n,i=r.__k,s=0;i&&s<i.length;s++)(n=i[s])&&(n.__=r,e=typeof n.type=="function"?km(n,e,t):Hm(t,n,n,i,n.__e,e));return e}function Nn(r,e){return e=e||[],r==null||typeof r=="boolean"||(Array.isArray(r)?r.some(function(t){Nn(t,e)}):e.push(r)),e}function Hm(r,e,t,n,i,s){var o,a,l;if(e.__d!==void 0)o=e.__d,e.__d=void 0;else if(t==null||i!=s||i.parentNode==null)e:if(s==null||s.parentNode!==r)r.appendChild(i),o=null;else{for(a=s,l=0;(a=a.nextSibling)&&l<n.length;l+=2)if(a==i)break e;r.insertBefore(i,s),o=s}return o!==void 0?o:i.nextSibling}function kv(r,e,t,n,i){var s;for(s in t)s==="children"||s==="key"||s in e||bl(r,s,null,t[s],n);for(s in e)i&&typeof e[s]!="function"||s==="children"||s==="key"||s==="value"||s==="checked"||t[s]===e[s]||bl(r,s,e[s],t[s],n)}function ed(r,e,t){e[0]==="-"?r.setProperty(e,t):r[e]=t==null?"":typeof t!="number"||Uv.test(e)?t:t+"px"}function bl(r,e,t,n,i){var s;e:if(e==="style")if(typeof t=="string")r.style.cssText=t;else{if(typeof n=="string"&&(r.style.cssText=n=""),n)for(e in n)t&&e in t||ed(r.style,e,"");if(t)for(e in t)n&&t[e]===n[e]||ed(r.style,e,t[e])}else if(e[0]==="o"&&e[1]==="n")s=e!==(e=e.replace(/Capture$/,"")),e=e.toLowerCase()in r?e.toLowerCase().slice(2):e.slice(2),r.l||(r.l={}),r.l[e+s]=t,t?n||r.addEventListener(e,s?nd:td,s):r.removeEventListener(e,s?nd:td,s);else if(e!=="dangerouslySetInnerHTML"){if(i)e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(e!=="href"&&e!=="list"&&e!=="form"&&e!=="tabIndex"&&e!=="download"&&e in r)try{r[e]=t==null?"":t;break e}catch{}typeof t=="function"||(t!=null&&(t!==!1||e[0]==="a"&&e[1]==="r")?r.setAttribute(e,t):r.removeAttribute(e))}}function td(r){this.l[r.type+!1](be.event?be.event(r):r)}function nd(r){this.l[r.type+!0](be.event?be.event(r):r)}function xh(r,e,t,n,i,s,o,a,l){var c,u,h,f,d,p,m,g,y,v,_,x=e.type;if(e.constructor!==void 0)return null;t.__h!=null&&(l=t.__h,a=e.__e=t.__e,e.__h=null,s=[a]),(c=be.__b)&&c(e);try{e:if(typeof x=="function"){if(g=e.props,y=(c=x.contextType)&&n[c.__c],v=c?y?y.props.value:c.__:n,t.__c?m=(u=e.__c=t.__c).__=u.__E:("prototype"in x&&x.prototype.render?e.__c=u=new x(g,v):(e.__c=u=new hn(g,v),u.constructor=x,u.render=Gv),y&&y.sub(u),u.props=g,u.state||(u.state={}),u.context=v,u.__n=n,h=u.__d=!0,u.__h=[]),u.__s==null&&(u.__s=u.state),x.getDerivedStateFromProps!=null&&(u.__s==u.state&&(u.__s=Qn({},u.__s)),Qn(u.__s,x.getDerivedStateFromProps(g,u.__s))),f=u.props,d=u.state,h)x.getDerivedStateFromProps==null&&u.componentWillMount!=null&&u.componentWillMount(),u.componentDidMount!=null&&u.__h.push(u.componentDidMount);else{if(x.getDerivedStateFromProps==null&&g!==f&&u.componentWillReceiveProps!=null&&u.componentWillReceiveProps(g,v),!u.__e&&u.shouldComponentUpdate!=null&&u.shouldComponentUpdate(g,u.__s,v)===!1||e.__v===t.__v){u.props=g,u.state=u.__s,e.__v!==t.__v&&(u.__d=!1),u.__v=e,e.__e=t.__e,e.__k=t.__k,e.__k.forEach(function(b){b&&(b.__=e)}),u.__h.length&&o.push(u);break e}u.componentWillUpdate!=null&&u.componentWillUpdate(g,u.__s,v),u.componentDidUpdate!=null&&u.__h.push(function(){u.componentDidUpdate(f,d,p)})}u.context=v,u.props=g,u.state=u.__s,(c=be.__r)&&c(e),u.__d=!1,u.__v=e,u.__P=r,c=u.render(u.props,u.state,u.context),u.state=u.__s,u.getChildContext!=null&&(n=Qn(Qn({},n),u.getChildContext())),h||u.getSnapshotBeforeUpdate==null||(p=u.getSnapshotBeforeUpdate(f,d)),_=c!=null&&c.type===En&&c.key==null?c.props.children:c,Um(r,Array.isArray(_)?_:[_],e,t,n,i,s,o,a,l),u.base=e.__e,e.__h=null,u.__h.length&&o.push(u),m&&(u.__E=u.__=null),u.__e=!1}else s==null&&e.__v===t.__v?(e.__k=t.__k,e.__e=t.__e):e.__e=Hv(t.__e,e,t,n,i,s,o,l);(c=be.diffed)&&c(e)}catch(b){e.__v=null,(l||s!=null)&&(e.__e=a,e.__h=!!l,s[s.indexOf(a)]=null),be.__e(b,e,t)}}function Gm(r,e){be.__c&&be.__c(e,r),r.some(function(t){try{r=t.__h,t.__h=[],r.some(function(n){n.call(t)})}catch(n){be.__e(n,t.__v)}})}function Hv(r,e,t,n,i,s,o,a){var l,c,u,h=t.props,f=e.props,d=e.type,p=0;if(d==="svg"&&(i=!0),s!=null){for(;p<s.length;p++)if((l=s[p])&&"setAttribute"in l==!!d&&(d?l.localName===d:l.nodeType===3)){r=l,s[p]=null;break}}if(r==null){if(d===null)return document.createTextNode(f);r=i?document.createElementNS("http://www.w3.org/2000/svg",d):document.createElement(d,f.is&&f),s=null,a=!1}if(d===null)h===f||a&&r.data===f||(r.data=f);else{if(s=s&&Wo.call(r.childNodes),c=(h=t.props||xl).dangerouslySetInnerHTML,u=f.dangerouslySetInnerHTML,!a){if(s!=null)for(h={},p=0;p<r.attributes.length;p++)h[r.attributes[p].name]=r.attributes[p].value;(u||c)&&(u&&(c&&u.__html==c.__html||u.__html===r.innerHTML)||(r.innerHTML=u&&u.__html||""))}if(kv(r,f,h,i,a),u)e.__k=[];else if(p=e.props.children,Um(r,Array.isArray(p)?p:[p],e,t,n,i&&d!=="foreignObject",s,o,s?s[0]:t.__k&&ms(t,0),a),s!=null)for(p=s.length;p--;)s[p]!=null&&zm(s[p]);a||("value"in f&&(p=f.value)!==void 0&&(p!==r.value||d==="progress"&&!p||d==="option"&&p!==h.value)&&bl(r,"value",p,h.value,!1),"checked"in f&&(p=f.checked)!==void 0&&p!==r.checked&&bl(r,"checked",p,h.checked,!1))}return r}function Vm(r,e,t){try{typeof r=="function"?r(e):r.current=e}catch(n){be.__e(n,t)}}function Wm(r,e,t){var n,i;if(be.unmount&&be.unmount(r),(n=r.ref)&&(n.current&&n.current!==r.__e||Vm(n,null,e)),(n=r.__c)!=null){if(n.componentWillUnmount)try{n.componentWillUnmount()}catch(s){be.__e(s,e)}n.base=n.__P=null}if(n=r.__k)for(i=0;i<n.length;i++)n[i]&&Wm(n[i],e,typeof r.type!="function");t||r.__e==null||zm(r.__e),r.__e=r.__d=void 0}function Gv(r,e,t){return this.constructor(r,t)}function dr(r,e,t){var n,i,s;be.__&&be.__(r,e),i=(n=typeof t=="function")?null:t&&t.__k||e.__k,s=[],xh(e,r=(!n&&t||e).__k=pn(En,null,[r]),i||xl,xl,e.ownerSVGElement!==void 0,!n&&t?[t]:i?null:e.firstChild?Wo.call(e.childNodes):null,s,!n&&t?t:i?i.__e:e.firstChild,n),Gm(s,r)}function wh(r,e){dr(r,e,wh)}function $m(r,e,t){var n,i,s,o=Qn({},r.props);for(s in e)s=="key"?n=e[s]:s=="ref"?i=e[s]:o[s]=e[s];return arguments.length>2&&(o.children=arguments.length>3?Wo.call(arguments,2):t),_o(r.type,o,n||r.key,i||r.ref,null)}function bh(r,e){var t={__c:e="__cC"+Bm++,__:r,Consumer:function(n,i){return n.children(i)},Provider:function(n){var i,s;return this.getChildContext||(i=[],(s={})[e]=this,this.getChildContext=function(){return s},this.shouldComponentUpdate=function(o){this.props.value!==o.value&&i.some(gu)},this.sub=function(o){i.push(o);var a=o.componentWillUnmount;o.componentWillUnmount=function(){i.splice(i.indexOf(o),1),a&&a.call(o)}}),n.children}};return t.Provider.__=t.Consumer.contextType=t}Wo=Om.slice,be={__e:function(r,e,t,n){for(var i,s,o;e=e.__;)if((i=e.__c)&&!i.__)try{if((s=i.constructor)&&s.getDerivedStateFromError!=null&&(i.setState(s.getDerivedStateFromError(r)),o=i.__d),i.componentDidCatch!=null&&(i.componentDidCatch(r,n||{}),o=i.__d),o)return i.__E=i}catch(a){r=a}throw r}},Dm=0,Im=function(r){return r!=null&&r.constructor===void 0},hn.prototype.setState=function(r,e){var t;t=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=Qn({},this.state),typeof r=="function"&&(r=r(Qn({},t),this.props)),r&&Qn(t,r),r!=null&&this.__v&&(e&&this.__h.push(e),gu(this))},hn.prototype.forceUpdate=function(r){this.__v&&(this.__e=!0,r&&this.__h.push(r),gu(this))},hn.prototype.render=En,vo=[],Fm=typeof Promise=="function"?Promise.prototype.then.bind(Promise.resolve()):setTimeout,wl.__r=0,Bm=0;var Vv=Object.freeze(Object.defineProperty({__proto__:null,render:dr,hydrate:wh,createElement:pn,h:pn,Fragment:En,createRef:_h,get isValidElement(){return Im},Component:hn,cloneElement:$m,createContext:bh,toChildArray:Nn,get options(){return be}},Symbol.toStringTag,{value:"Module"}));const Wv="modulepreload",id={},$v="/dl-model/",st=function(e,t){return!t||t.length===0?e():Promise.all(t.map(n=>{if(n=`${$v}${n}`,n in id)return;id[n]=!0;const i=n.endsWith(".css"),s=i?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${n}"]${s}`))return;const o=document.createElement("link");if(o.rel=i?"stylesheet":Wv,i||(o.as="script",o.crossOrigin=""),o.href=n,document.head.appendChild(o),i)return new Promise((a,l)=>{o.addEventListener("load",a),o.addEventListener("error",()=>l(new Error(`Unable to preload CSS for ${n}`)))})})).then(()=>e())};var Cr,Rt,rd,gs=0,qm=[],sd=be.__b,od=be.__r,ad=be.diffed,ld=be.__c,cd=be.unmount;function Gs(r,e){be.__h&&be.__h(Rt,r,gs||e),gs=0;var t=Rt.__H||(Rt.__H={__:[],__h:[]});return r>=t.__.length&&t.__.push({}),t.__[r]}function Mh(r){return gs=1,Hl(Zm,r)}function Hl(r,e,t){var n=Gs(Cr++,2);return n.t=r,n.__c||(n.__=[t?t(e):Zm(void 0,e),function(i){var s=n.t(n.__[0],i);n.__[0]!==s&&(n.__=[s,n.__[1]],n.__c.setState({}))}],n.__c=Rt),n.__}function ys(r,e){var t=Gs(Cr++,3);!be.__s&&Eh(t.__H,e)&&(t.__=r,t.__H=e,Rt.__H.__h.push(t))}function Gl(r,e){var t=Gs(Cr++,4);!be.__s&&Eh(t.__H,e)&&(t.__=r,t.__H=e,Rt.__h.push(t))}function bn(r){return gs=5,Vl(function(){return{current:r}},[])}function Xm(r,e,t){gs=6,Gl(function(){return typeof r=="function"?(r(e()),function(){return r(null)}):r?(r.current=e(),function(){return r.current=null}):void 0},t==null?t:t.concat(r))}function Vl(r,e){var t=Gs(Cr++,7);return Eh(t.__H,e)&&(t.__=r(),t.__H=e,t.__h=r),t.__}function jm(r,e){return gs=8,Vl(function(){return r},e)}function Ym(r){var e=Rt.context[r.__c],t=Gs(Cr++,9);return t.c=r,e?(t.__==null&&(t.__=!0,e.sub(Rt)),e.props.value):r.__}function Sh(r,e){be.useDebugValue&&be.useDebugValue(e?e(r):r)}function qv(r){var e=Gs(Cr++,10),t=Mh();return e.__=r,Rt.componentDidCatch||(Rt.componentDidCatch=function(n){e.__&&e.__(n),t[1](n)}),[t[0],function(){t[1](void 0)}]}function Xv(){for(var r;r=qm.shift();)if(r.__P)try{r.__H.__h.forEach(al),r.__H.__h.forEach(yu),r.__H.__h=[]}catch(e){r.__H.__h=[],be.__e(e,r.__v)}}be.__b=function(r){Rt=null,sd&&sd(r)},be.__r=function(r){od&&od(r),Cr=0;var e=(Rt=r.__c).__H;e&&(e.__h.forEach(al),e.__h.forEach(yu),e.__h=[])},be.diffed=function(r){ad&&ad(r);var e=r.__c;e&&e.__H&&e.__H.__h.length&&(qm.push(e)!==1&&rd===be.requestAnimationFrame||((rd=be.requestAnimationFrame)||function(t){var n,i=function(){clearTimeout(s),ud&&cancelAnimationFrame(n),setTimeout(t)},s=setTimeout(i,100);ud&&(n=requestAnimationFrame(i))})(Xv)),Rt=null},be.__c=function(r,e){e.some(function(t){try{t.__h.forEach(al),t.__h=t.__h.filter(function(n){return!n.__||yu(n)})}catch(n){e.some(function(i){i.__h&&(i.__h=[])}),e=[],be.__e(n,t.__v)}}),ld&&ld(r,e)},be.unmount=function(r){cd&&cd(r);var e,t=r.__c;t&&t.__H&&(t.__H.__.forEach(function(n){try{al(n)}catch(i){e=i}}),e&&be.__e(e,t.__v))};var ud=typeof requestAnimationFrame=="function";function al(r){var e=Rt,t=r.__c;typeof t=="function"&&(r.__c=void 0,t()),Rt=e}function yu(r){var e=Rt;r.__c=r.__(),Rt=e}function Eh(r,e){return!r||r.length!==e.length||e.some(function(t,n){return t!==r[n]})}function Zm(r,e){return typeof e=="function"?e(r):e}function Jm(r,e){for(var t in e)r[t]=e[t];return r}function vu(r,e){for(var t in r)if(t!=="__source"&&!(t in e))return!0;for(var n in e)if(n!=="__source"&&r[n]!==e[n])return!0;return!1}function Ml(r){this.props=r}function Km(r,e){function t(i){var s=this.props.ref,o=s==i.ref;return!o&&s&&(s.call?s(null):s.current=null),e?!e(this.props,i)||!o:vu(this.props,i)}function n(i){return this.shouldComponentUpdate=t,pn(r,i)}return n.displayName="Memo("+(r.displayName||r.name)+")",n.prototype.isReactComponent=!0,n.__f=!0,n}(Ml.prototype=new hn).isPureReactComponent=!0,Ml.prototype.shouldComponentUpdate=function(r,e){return vu(this.props,r)||vu(this.state,e)};var hd=be.__b;be.__b=function(r){r.type&&r.type.__f&&r.ref&&(r.props.ref=r.ref,r.ref=null),hd&&hd(r)};var jv=typeof Symbol!="undefined"&&Symbol.for&&Symbol.for("react.forward_ref")||3911;function Qm(r){function e(t){var n=Jm({},t);return delete n.ref,r(n,t.ref||null)}return e.$$typeof=jv,e.render=e,e.prototype.isReactComponent=e.__f=!0,e.displayName="ForwardRef("+(r.displayName||r.name)+")",e}var fd=function(r,e){return r==null?null:Nn(Nn(r).map(e))},eg={map:fd,forEach:fd,count:function(r){return r?Nn(r).length:0},only:function(r){var e=Nn(r);if(e.length!==1)throw"Children.only";return e[0]},toArray:Nn},Yv=be.__e;be.__e=function(r,e,t,n){if(r.then){for(var i,s=e;s=s.__;)if((i=s.__c)&&i.__c)return e.__e==null&&(e.__e=t.__e,e.__k=t.__k),i.__c(r,e)}Yv(r,e,t,n)};var dd=be.unmount;function lr(){this.__u=0,this.t=null,this.__b=null}function tg(r){var e=r.__.__c;return e&&e.__e&&e.__e(r)}function Yt(r){var e,t,n;function i(s){if(e||(e=r()).then(function(o){t=o.default||o},function(o){n=o}),n)throw n;if(!t)throw e;return pn(t,s)}return i.displayName="Lazy",i.__f=!0,i}function cs(){this.u=null,this.o=null}be.unmount=function(r){var e=r.__c;e&&e.__R&&e.__R(),e&&r.__h===!0&&(r.type=null),dd&&dd(r)},(lr.prototype=new hn).__c=function(r,e){var t=e.__c,n=this;n.t==null&&(n.t=[]),n.t.push(t);var i=tg(n.__v),s=!1,o=function(){s||(s=!0,t.__R=null,i?i(a):a())};t.__R=o;var a=function(){if(!--n.__u){if(n.state.__e){var c=n.state.__e;n.__v.__k[0]=function h(f,d,p){return f&&(f.__v=null,f.__k=f.__k&&f.__k.map(function(m){return h(m,d,p)}),f.__c&&f.__c.__P===d&&(f.__e&&p.insertBefore(f.__e,f.__d),f.__c.__e=!0,f.__c.__P=p)),f}(c,c.__c.__P,c.__c.__O)}var u;for(n.setState({__e:n.__b=null});u=n.t.pop();)u.forceUpdate()}},l=e.__h===!0;n.__u++||l||n.setState({__e:n.__b=n.__v.__k[0]}),r.then(o,o)},lr.prototype.componentWillUnmount=function(){this.t=[]},lr.prototype.render=function(r,e){if(this.__b){if(this.__v.__k){var t=document.createElement("div"),n=this.__v.__k[0].__c;this.__v.__k[0]=function s(o,a,l){return o&&(o.__c&&o.__c.__H&&(o.__c.__H.__.forEach(function(c){typeof c.__c=="function"&&c.__c()}),o.__c.__H=null),(o=Jm({},o)).__c!=null&&(o.__c.__P===l&&(o.__c.__P=a),o.__c=null),o.__k=o.__k&&o.__k.map(function(c){return s(c,a,l)})),o}(this.__b,t,n.__O=n.__P)}this.__b=null}var i=e.__e&&pn(En,null,r.fallback);return i&&(i.__h=null),[pn(En,null,e.__e?null:r.children),i]};var pd=function(r,e,t){if(++t[1]===t[0]&&r.o.delete(e),r.props.revealOrder&&(r.props.revealOrder[0]!=="t"||!r.o.size))for(t=r.u;t;){for(;t.length>3;)t.pop()();if(t[1]<t[0])break;r.u=t=t[2]}};function Zv(r){return this.getChildContext=function(){return r.context},r.children}function Jv(r){var e=this,t=r.i;e.componentWillUnmount=function(){dr(null,e.l),e.l=null,e.i=null},e.i&&e.i!==t&&e.componentWillUnmount(),r.__v?(e.l||(e.i=t,e.l={nodeType:1,parentNode:t,childNodes:[],appendChild:function(n){this.childNodes.push(n),e.i.appendChild(n)},insertBefore:function(n,i){this.childNodes.push(n),e.i.appendChild(n)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),e.i.removeChild(n)}}),dr(pn(Zv,{context:e.context},r.__v),e.l)):e.l&&e.componentWillUnmount()}function ng(r,e){return pn(Jv,{__v:r,i:e})}(cs.prototype=new hn).__e=function(r){var e=this,t=tg(e.__v),n=e.o.get(r);return n[0]++,function(i){var s=function(){e.props.revealOrder?(n.push(i),pd(e,r,n)):i()};t?t(s):s()}},cs.prototype.render=function(r){this.u=null,this.o=new Map;var e=Nn(r.children);r.revealOrder&&r.revealOrder[0]==="b"&&e.reverse();for(var t=e.length;t--;)this.o.set(e[t],this.u=[1,0,this.u]);return r.children},cs.prototype.componentDidUpdate=cs.prototype.componentDidMount=function(){var r=this;this.o.forEach(function(e,t){pd(r,t,e)})};var ig=typeof Symbol!="undefined"&&Symbol.for&&Symbol.for("react.element")||60103,Kv=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,Qv=typeof document!="undefined",e_=function(r){return(typeof Symbol!="undefined"&&typeof Symbol()=="symbol"?/fil|che|rad/i:/fil|che|ra/i).test(r)};function rg(r,e,t){return e.__k==null&&(e.textContent=""),dr(r,e),typeof t=="function"&&t(),r?r.__c:null}function sg(r,e,t){return wh(r,e),typeof t=="function"&&t(),r?r.__c:null}hn.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach(function(r){Object.defineProperty(hn.prototype,r,{configurable:!0,get:function(){return this["UNSAFE_"+r]},set:function(e){Object.defineProperty(this,r,{configurable:!0,writable:!0,value:e})}})});var md=be.event;function t_(){}function n_(){return this.cancelBubble}function i_(){return this.defaultPrevented}be.event=function(r){return md&&(r=md(r)),r.persist=t_,r.isPropagationStopped=n_,r.isDefaultPrevented=i_,r.nativeEvent=r};var og,gd={configurable:!0,get:function(){return this.class}},yd=be.vnode;be.vnode=function(r){var e=r.type,t=r.props,n=t;if(typeof e=="string"){var i=e.indexOf("-")===-1;for(var s in n={},t){var o=t[s];Qv&&s==="children"&&e==="noscript"||s==="value"&&"defaultValue"in t&&o==null||(s==="defaultValue"&&"value"in t&&t.value==null?s="value":s==="download"&&o===!0?o="":/ondoubleclick/i.test(s)?s="ondblclick":/^onchange(textarea|input)/i.test(s+e)&&!e_(t.type)?s="oninput":/^onfocus$/i.test(s)?s="onfocusin":/^onblur$/i.test(s)?s="onfocusout":/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(s)?s=s.toLowerCase():i&&Kv.test(s)?s=s.replace(/[A-Z0-9]/,"-$&").toLowerCase():o===null&&(o=void 0),n[s]=o)}e=="select"&&n.multiple&&Array.isArray(n.value)&&(n.value=Nn(t.children).forEach(function(a){a.props.selected=n.value.indexOf(a.props.value)!=-1})),e=="select"&&n.defaultValue!=null&&(n.value=Nn(t.children).forEach(function(a){a.props.selected=n.multiple?n.defaultValue.indexOf(a.props.value)!=-1:n.defaultValue==a.props.value})),r.props=n,t.class!=t.className&&(gd.enumerable="className"in t,t.className!=null&&(n.class=t.className),Object.defineProperty(n,"className",gd))}r.$$typeof=ig,yd&&yd(r)};var vd=be.__r;be.__r=function(r){vd&&vd(r),og=r.__c};var ag={ReactCurrentDispatcher:{current:{readContext:function(r){return og.__n[r.__c].props.value}}}},r_="17.0.2";function lg(r){return pn.bind(null,r)}function Th(r){return!!r&&r.$$typeof===ig}function cg(r){return Th(r)?$m.apply(null,arguments):r}function ug(r){return!!r.__k&&(dr(null,r),!0)}function hg(r){return r&&(r.base||r.nodeType===1&&r)||null}var fg=function(r,e){return r(e)},dg=function(r,e){return r(e)},s_=En,o_={useState:Mh,useReducer:Hl,useEffect:ys,useLayoutEffect:Gl,useRef:bn,useImperativeHandle:Xm,useMemo:Vl,useCallback:jm,useContext:Ym,useDebugValue:Sh,version:"17.0.2",Children:eg,render:rg,hydrate:sg,unmountComponentAtNode:ug,createPortal:ng,createElement:pn,createContext:bh,createFactory:lg,cloneElement:cg,createRef:_h,Fragment:En,isValidElement:Th,findDOMNode:hg,Component:hn,PureComponent:Ml,memo:Km,forwardRef:Qm,flushSync:dg,unstable_batchedUpdates:fg,StrictMode:En,Suspense:lr,SuspenseList:cs,lazy:Yt,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:ag},JL=Object.freeze(Object.defineProperty({__proto__:null,default:o_,version:r_,Children:eg,render:rg,hydrate:sg,unmountComponentAtNode:ug,createPortal:ng,createFactory:lg,cloneElement:cg,isValidElement:Th,findDOMNode:hg,PureComponent:Ml,memo:Km,forwardRef:Qm,flushSync:dg,unstable_batchedUpdates:fg,StrictMode:s_,Suspense:lr,SuspenseList:cs,lazy:Yt,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:ag,createElement:pn,createContext:bh,createRef:_h,Fragment:En,Component:hn,useState:Mh,useReducer:Hl,useEffect:ys,useLayoutEffect:Gl,useRef:bn,useImperativeHandle:Xm,useMemo:Vl,useCallback:jm,useContext:Ym,useDebugValue:Sh,useErrorBoundary:qv},Symbol.toStringTag,{value:"Module"}));const a_=()=>{const r=bn(!0);return ys(()=>{r.current=!1},[]),r.current};function l_(r){let e;const t=new Set,n=(c,u)=>{const h=typeof c=="function"?c(e):c;if(h!==e){const f=e;e=u?h:Object.assign({},e,h),t.forEach(d=>d(e,f))}},i=()=>e,s=(c,u=i,h=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let f=u(e);function d(){const p=u(e);if(!h(f,p)){const m=f;c(f=p,m)}}return t.add(d),()=>t.delete(d)},l={setState:n,getState:i,subscribe:(c,u,h)=>u||h?s(c,u,h):(t.add(c),()=>t.delete(c)),destroy:()=>t.clear()};return e=r(n,i,l),l}const c_=typeof window=="undefined"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),_d=c_?ys:Gl;function Ah(r){const e=typeof r=="function"?l_(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=Hl(g=>g+1,0),o=e.getState(),a=bn(o),l=bn(n),c=bn(i),u=bn(!1),h=bn();h.current===void 0&&(h.current=n(o));let f,d=!1;(a.current!==o||l.current!==n||c.current!==i||u.current)&&(f=n(o),d=!i(h.current,f)),_d(()=>{d&&(h.current=f),a.current=o,l.current=n,c.current=i,u.current=!1});const p=bn(o);_d(()=>{const g=()=>{try{const v=e.getState(),_=l.current(v);c.current(h.current,_)||(a.current=v,h.current=_,s())}catch{u.current=!0,s()}},y=e.subscribe(g);return e.getState()!==p.current&&g(),y},[]);const m=d?f:h.current;return Sh(m),m};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}function Mn(r){for(var e=arguments.length,t=Array(e>1?e-1:0),n=1;n<e;n++)t[n-1]=arguments[n];throw Error("[Immer] minified error nr: "+r+(t.length?" "+t.map(function(i){return"'"+i+"'"}).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function vs(r){return!!r&&!!r[nn]}function pr(r){return!!r&&(function(e){if(!e||typeof e!="object")return!1;var t=Object.getPrototypeOf(e);if(t===null)return!0;var n=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return n===Object||typeof n=="function"&&Function.toString.call(n)===y_}(r)||Array.isArray(r)||!!r[Ad]||!!r.constructor[Ad]||Ch(r)||Lh(r))}function To(r,e,t){t===void 0&&(t=!1),Vs(r)===0?(t?Object.keys:Fh)(r).forEach(function(n){t&&typeof n=="symbol"||e(n,r[n],r)}):r.forEach(function(n,i){return e(i,n,r)})}function Vs(r){var e=r[nn];return e?e.i>3?e.i-4:e.i:Array.isArray(r)?1:Ch(r)?2:Lh(r)?3:0}function _u(r,e){return Vs(r)===2?r.has(e):Object.prototype.hasOwnProperty.call(r,e)}function u_(r,e){return Vs(r)===2?r.get(e):r[e]}function pg(r,e,t){var n=Vs(r);n===2?r.set(e,t):n===3?(r.delete(e),r.add(t)):r[e]=t}function h_(r,e){return r===e?r!==0||1/r==1/e:r!=r&&e!=e}function Ch(r){return m_&&r instanceof Map}function Lh(r){return g_&&r instanceof Set}function Ki(r){return r.o||r.t}function Ph(r){if(Array.isArray(r))return Array.prototype.slice.call(r);var e=v_(r);delete e[nn];for(var t=Fh(e),n=0;n<t.length;n++){var i=t[n],s=e[i];s.writable===!1&&(s.writable=!0,s.configurable=!0),(s.get||s.set)&&(e[i]={configurable:!0,writable:!0,enumerable:s.enumerable,value:r[i]})}return Object.create(Object.getPrototypeOf(r),e)}function Rh(r,e){return e===void 0&&(e=!1),Dh(r)||vs(r)||!pr(r)||(Vs(r)>1&&(r.set=r.add=r.clear=r.delete=f_),Object.freeze(r),e&&To(r,function(t,n){return Rh(n,!0)},!0)),r}function f_(){Mn(2)}function Dh(r){return r==null||typeof r!="object"||Object.isFrozen(r)}function Un(r){var e=__[r];return e||Mn(18,r),e}function xd(){return Ao}function bc(r,e){e&&(Un("Patches"),r.u=[],r.s=[],r.v=e)}function Sl(r){xu(r),r.p.forEach(d_),r.p=null}function xu(r){r===Ao&&(Ao=r.l)}function wd(r){return Ao={p:[],l:Ao,h:r,m:!0,_:0}}function d_(r){var e=r[nn];e.i===0||e.i===1?e.j():e.O=!0}function Mc(r,e){e._=e.p.length;var t=e.p[0],n=r!==void 0&&r!==t;return e.h.g||Un("ES5").S(e,r,n),n?(t[nn].P&&(Sl(e),Mn(4)),pr(r)&&(r=El(e,r),e.l||Tl(e,r)),e.u&&Un("Patches").M(t[nn].t,r,e.u,e.s)):r=El(e,t,[]),Sl(e),e.u&&e.v(e.u,e.s),r!==mg?r:void 0}function El(r,e,t){if(Dh(e))return e;var n=e[nn];if(!n)return To(e,function(s,o){return bd(r,n,e,s,o,t)},!0),e;if(n.A!==r)return e;if(!n.P)return Tl(r,n.t,!0),n.t;if(!n.I){n.I=!0,n.A._--;var i=n.i===4||n.i===5?n.o=Ph(n.k):n.o;To(n.i===3?new Set(i):i,function(s,o){return bd(r,n,i,s,o,t)}),Tl(r,i,!1),t&&r.u&&Un("Patches").R(n,t,r.u,r.s)}return n.o}function bd(r,e,t,n,i,s){if(vs(i)){var o=El(r,i,s&&e&&e.i!==3&&!_u(e.D,n)?s.concat(n):void 0);if(pg(t,n,o),!vs(o))return;r.m=!1}if(pr(i)&&!Dh(i)){if(!r.h.F&&r._<1)return;El(r,i),e&&e.A.l||Tl(r,i)}}function Tl(r,e,t){t===void 0&&(t=!1),r.h.F&&r.m&&Rh(e,t)}function Sc(r,e){var t=r[nn];return(t?Ki(t):r)[e]}function Md(r,e){if(e in r)for(var t=Object.getPrototypeOf(r);t;){var n=Object.getOwnPropertyDescriptor(t,e);if(n)return n;t=Object.getPrototypeOf(t)}}function wu(r){r.P||(r.P=!0,r.l&&wu(r.l))}function Ec(r){r.o||(r.o=Ph(r.t))}function bu(r,e,t){var n=Ch(e)?Un("MapSet").N(e,t):Lh(e)?Un("MapSet").T(e,t):r.g?function(i,s){var o=Array.isArray(i),a={i:o?1:0,A:s?s.A:xd(),P:!1,I:!1,D:{},l:s,t:i,k:null,o:null,j:null,C:!1},l=a,c=Mu;o&&(l=[a],c=go);var u=Proxy.revocable(l,c),h=u.revoke,f=u.proxy;return a.k=f,a.j=h,f}(e,t):Un("ES5").J(e,t);return(t?t.A:xd()).p.push(n),n}function p_(r){return vs(r)||Mn(22,r),function e(t){if(!pr(t))return t;var n,i=t[nn],s=Vs(t);if(i){if(!i.P&&(i.i<4||!Un("ES5").K(i)))return i.t;i.I=!0,n=Sd(t,s),i.I=!1}else n=Sd(t,s);return To(n,function(o,a){i&&u_(i.t,o)===a||pg(n,o,e(a))}),s===3?new Set(n):n}(r)}function Sd(r,e){switch(e){case 2:return new Map(r);case 3:return Array.from(r)}return Ph(r)}var Ed,Ao,Ih=typeof Symbol!="undefined"&&typeof Symbol("x")=="symbol",m_=typeof Map!="undefined",g_=typeof Set!="undefined",Td=typeof Proxy!="undefined"&&Proxy.revocable!==void 0&&typeof Reflect!="undefined",mg=Ih?Symbol.for("immer-nothing"):((Ed={})["immer-nothing"]=!0,Ed),Ad=Ih?Symbol.for("immer-draftable"):"__$immer_draftable",nn=Ih?Symbol.for("immer-state"):"__$immer_state",y_=""+Object.prototype.constructor,Fh=typeof Reflect!="undefined"&&Reflect.ownKeys?Reflect.ownKeys:Object.getOwnPropertySymbols!==void 0?function(r){return Object.getOwnPropertyNames(r).concat(Object.getOwnPropertySymbols(r))}:Object.getOwnPropertyNames,v_=Object.getOwnPropertyDescriptors||function(r){var e={};return Fh(r).forEach(function(t){e[t]=Object.getOwnPropertyDescriptor(r,t)}),e},__={},Mu={get:function(r,e){if(e===nn)return r;var t=Ki(r);if(!_u(t,e))return function(i,s,o){var a,l=Md(s,o);return l?"value"in l?l.value:(a=l.get)===null||a===void 0?void 0:a.call(i.k):void 0}(r,t,e);var n=t[e];return r.I||!pr(n)?n:n===Sc(r.t,e)?(Ec(r),r.o[e]=bu(r.A.h,n,r)):n},has:function(r,e){return e in Ki(r)},ownKeys:function(r){return Reflect.ownKeys(Ki(r))},set:function(r,e,t){var n=Md(Ki(r),e);if(n!=null&&n.set)return n.set.call(r.k,t),!0;if(!r.P){var i=Sc(Ki(r),e),s=i==null?void 0:i[nn];if(s&&s.t===t)return r.o[e]=t,r.D[e]=!1,!0;if(h_(t,i)&&(t!==void 0||_u(r.t,e)))return!0;Ec(r),wu(r)}return r.o[e]===t&&typeof t!="number"&&(t!==void 0||e in r.o)||(r.o[e]=t,r.D[e]=!0,!0)},deleteProperty:function(r,e){return Sc(r.t,e)!==void 0||e in r.t?(r.D[e]=!1,Ec(r),wu(r)):delete r.D[e],r.o&&delete r.o[e],!0},getOwnPropertyDescriptor:function(r,e){var t=Ki(r),n=Reflect.getOwnPropertyDescriptor(t,e);return n&&{writable:!0,configurable:r.i!==1||e!=="length",enumerable:n.enumerable,value:t[e]}},defineProperty:function(){Mn(11)},getPrototypeOf:function(r){return Object.getPrototypeOf(r.t)},setPrototypeOf:function(){Mn(12)}},go={};To(Mu,function(r,e){go[r]=function(){return arguments[0]=arguments[0][0],e.apply(this,arguments)}}),go.deleteProperty=function(r,e){return go.set.call(this,r,e,void 0)},go.set=function(r,e,t){return Mu.set.call(this,r[0],e,t,r[0])};var x_=function(){function r(t){var n=this;this.g=Td,this.F=!0,this.produce=function(i,s,o){if(typeof i=="function"&&typeof s!="function"){var a=s;s=i;var l=n;return function(m){var g=this;m===void 0&&(m=a);for(var y=arguments.length,v=Array(y>1?y-1:0),_=1;_<y;_++)v[_-1]=arguments[_];return l.produce(m,function(x){var b;return(b=s).call.apply(b,[g,x].concat(v))})}}var c;if(typeof s!="function"&&Mn(6),o!==void 0&&typeof o!="function"&&Mn(7),pr(i)){var u=wd(n),h=bu(n,i,void 0),f=!0;try{c=s(h),f=!1}finally{f?Sl(u):xu(u)}return typeof Promise!="undefined"&&c instanceof Promise?c.then(function(m){return bc(u,o),Mc(m,u)},function(m){throw Sl(u),m}):(bc(u,o),Mc(c,u))}if(!i||typeof i!="object"){if((c=s(i))===void 0&&(c=i),c===mg&&(c=void 0),n.F&&Rh(c,!0),o){var d=[],p=[];Un("Patches").M(i,c,d,p),o(d,p)}return c}Mn(21,i)},this.produceWithPatches=function(i,s){if(typeof i=="function")return function(c){for(var u=arguments.length,h=Array(u>1?u-1:0),f=1;f<u;f++)h[f-1]=arguments[f];return n.produceWithPatches(c,function(d){return i.apply(void 0,[d].concat(h))})};var o,a,l=n.produce(i,s,function(c,u){o=c,a=u});return typeof Promise!="undefined"&&l instanceof Promise?l.then(function(c){return[c,o,a]}):[l,o,a]},typeof(t==null?void 0:t.useProxies)=="boolean"&&this.setUseProxies(t.useProxies),typeof(t==null?void 0:t.autoFreeze)=="boolean"&&this.setAutoFreeze(t.autoFreeze)}var e=r.prototype;return e.createDraft=function(t){pr(t)||Mn(8),vs(t)&&(t=p_(t));var n=wd(this),i=bu(this,t,void 0);return i[nn].C=!0,xu(n),i},e.finishDraft=function(t,n){var i=t&&t[nn],s=i.A;return bc(s,n),Mc(void 0,s)},e.setAutoFreeze=function(t){this.F=t},e.setUseProxies=function(t){t&&!Td&&Mn(20),this.g=t},e.applyPatches=function(t,n){var i;for(i=n.length-1;i>=0;i--){var s=n[i];if(s.path.length===0&&s.op==="replace"){t=s.value;break}}i>-1&&(n=n.slice(i+1));var o=Un("Patches").$;return vs(t)?o(t,n):this.produce(t,function(a){return o(a,n)})},r}(),rn=new x_,w_=rn.produce;rn.produceWithPatches.bind(rn);rn.setAutoFreeze.bind(rn);rn.setUseProxies.bind(rn);rn.applyPatches.bind(rn);rn.createDraft.bind(rn);rn.finishDraft.bind(rn);var b_=w_;const gg=r=>({indices:[0,0],_indicesCache:{},setIndex:(e,t)=>{r(n=>{var h,f;const{indices:i,_indicesCache:s}=n;i[e]=t;const o=i.slice(0,e+1).join(),a=(h=s[o])!=null?h:[],{length:l}=i;for(let d=0;e+1+d<l;d++)i[e+1+d]=(f=a[d])!=null?f:0;const c=i.slice(e),u=i.slice(0,e).join();u&&(s[u]=c)})},showFilter:!1,toggleFilter:()=>r(e=>{e.showFilter=!e.showFilter}),searchAll:!1,toggleSearchAll:()=>r(e=>{e.searchAll=!e.searchAll})}),Cd=r=>r==="true";function yg(r,e){return r&&e&&Object.keys(e).forEach(t=>{const n=e[t];typeof n=="object"?(r[t]||(r[t]={}),yg(r[t],n)):r[t]=n}),r}const M_=(r,e)=>({category:"Adv",setCategory:t=>r(n=>{n.category=t}),advAni:{category:"home",setCategory:t=>r(n=>{n.advAni.category=t}),home:{gender:"Male",setGender:t=>r(n=>{n.advAni.home.gender=t})},weapon:{type:"Sword",setType:t=>r(n=>{n.advAni.weapon.type=t}),gunMode:"Long",setGunMode:t=>r(n=>{n.advAni.weapon.gunMode=t})},genericSkill:{type:"Sword",setType:t=>r(n=>{n.advAni.genericSkill.type=t})},groupByWeapon:{setGroupWeaponType:(t,n)=>r(i=>{i.advAni.groupByWeapon[t]=n})},uniqueOther:{type:"Sword",setType:t=>r(n=>{n.advAni.uniqueOther.type=t}),selected:"",setSelected:t=>r(n=>{n.advAni.uniqueOther.selected=t})}},extraAni:{category:"Dance",setCategory:t=>r(n=>{n.extraAni.category=t})},personalAni:{source:"",setSource:t=>r(n=>{n.personalAni.source=t}),sourceName:"",setSourceName:t=>r(n=>{n.personalAni.sourceName=t})},getCurrentState:()=>{const t=e();return JSON.parse(JSON.stringify(t))},loadState:(t={})=>{r(n=>yg(n,t))}});/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Wl="140",Qi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},er={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},vg=0,Su=1,_g=2,S_=3,E_=0,Bh=1,xg=2,us=3,mr=0,$t=1,Ci=2,Oh=1,T_=2,si=0,cr=1,Al=2,Eu=3,Tu=4,wg=5,ir=100,bg=101,Mg=102,Au=103,Cu=104,Sg=200,Eg=201,Tg=202,Ag=203,zh=204,Nh=205,Cg=206,Lg=207,Pg=208,Rg=209,Dg=210,Ig=0,Fg=1,Uh=2,Cl=3,Bg=4,Og=5,zg=6,Ng=7,gr=0,Ug=1,Ll=2,Sn=0,kh=1,Hh=2,Gh=3,Vh=4,kg=5,$l=300,Li=301,Pi=302,_s=303,Co=304,Ws=306,yr=1e3,Pt=1001,Lo=1002,mt=1003,Pl=1004,A_=1004,Rl=1005,C_=1005,ot=1006,Wh=1007,L_=1007,Lr=1008,P_=1008,Ri=1009,Hg=1010,Gg=1011,xs=1012,Vg=1013,xo=1014,ei=1015,ws=1016,Wg=1017,$g=1018,ur=1020,qg=1021,Xg=1022,Wt=1023,$h=1024,jg=1025,Si=1026,vr=1027,Yg=1028,Zg=1029,Jg=1030,Kg=1031,Qg=1033,ll=33776,cl=33777,ul=33778,hl=33779,Lu=35840,Pu=35841,Ru=35842,Du=35843,ey=36196,Iu=37492,Fu=37496,Bu=37808,Ou=37809,zu=37810,Nu=37811,Uu=37812,ku=37813,Hu=37814,Gu=37815,Vu=37816,Wu=37817,$u=37818,qu=37819,Xu=37820,ju=37821,Yu=36492,ty=2200,qh=2201,ny=2202,Po=2300,Ro=2301,fl=2302,sr=2400,or=2401,Do=2402,ql=2500,Xh=2501,iy=0,R_=1,D_=2,oi=3e3,He=3001,ry=3200,sy=3201,Oi=0,oy=1,I_="",Bn="srgb",Mi="srgb-linear",F_=0,dl=7680,B_=7681,O_=7682,z_=7683,N_=34055,U_=34056,k_=5386,H_=512,G_=513,V_=514,W_=515,$_=516,q_=517,X_=518,ay=519,bs=35044,Ms=35048,j_=35040,Y_=35045,Z_=35049,J_=35041,K_=35046,Q_=35050,ex=35042,tx="100",Zu="300 es",Dl=1035;class hi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const Lt=[];for(let r=0;r<256;r++)Lt[r]=(r<16?"0":"")+r.toString(16);let Ld=1234567;const hr=Math.PI/180,Io=180/Math.PI;function tn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Lt[r&255]+Lt[r>>8&255]+Lt[r>>16&255]+Lt[r>>24&255]+"-"+Lt[e&255]+Lt[e>>8&255]+"-"+Lt[e>>16&15|64]+Lt[e>>24&255]+"-"+Lt[t&63|128]+Lt[t>>8&255]+"-"+Lt[t>>16&255]+Lt[t>>24&255]+Lt[n&255]+Lt[n>>8&255]+Lt[n>>16&255]+Lt[n>>24&255]).toLowerCase()}function gt(r,e,t){return Math.max(e,Math.min(t,r))}function jh(r,e){return(r%e+e)%e}function nx(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function ix(r,e,t){return r!==e?(t-r)/(e-r):0}function wo(r,e,t){return(1-t)*r+t*e}function rx(r,e,t,n){return wo(r,e,1-Math.exp(-t*n))}function sx(r,e=1){return e-Math.abs(jh(r,e*2)-e)}function ox(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function ax(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function lx(r,e){return r+Math.floor(Math.random()*(e-r+1))}function cx(r,e){return r+Math.random()*(e-r)}function ux(r){return r*(.5-Math.random())}function hx(r){r!==void 0&&(Ld=r);let e=Ld+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function fx(r){return r*hr}function dx(r){return r*Io}function Ju(r){return(r&r-1)===0&&r!==0}function ly(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Il(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function px(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+n)/2),u=o((e+n)/2),h=s((e-n)/2),f=o((e-n)/2),d=s((n-e)/2),p=o((n-e)/2);switch(i){case"XYX":r.set(a*u,l*h,l*f,a*c);break;case"YZY":r.set(l*f,a*u,l*h,a*c);break;case"ZXZ":r.set(l*h,l*f,a*u,a*c);break;case"XZX":r.set(a*u,l*p,l*d,a*c);break;case"YXY":r.set(l*d,a*u,l*p,a*c);break;case"ZYZ":r.set(l*p,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function mx(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function gx(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var un=Object.freeze({__proto__:null,DEG2RAD:hr,RAD2DEG:Io,generateUUID:tn,clamp:gt,euclideanModulo:jh,mapLinear:nx,inverseLerp:ix,lerp:wo,damp:rx,pingpong:sx,smoothstep:ox,smootherstep:ax,randInt:lx,randFloat:cx,randFloatSpread:ux,seededRandom:hx,degToRad:fx,radToDeg:dx,isPowerOfTwo:Ju,ceilPowerOfTwo:ly,floorPowerOfTwo:Il,setQuaternionFromProperEuler:px,normalize:gx,denormalize:mx});class ${constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}$.prototype.isVector2=!0;class St{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],m=i[0],g=i[3],y=i[6],v=i[1],_=i[4],x=i[7],b=i[2],M=i[5],L=i[8];return s[0]=o*m+a*v+l*b,s[3]=o*g+a*_+l*M,s[6]=o*y+a*x+l*L,s[1]=c*m+u*v+h*b,s[4]=c*g+u*_+h*M,s[7]=c*y+u*x+h*L,s[2]=f*m+d*v+p*b,s[5]=f*g+d*_+p*M,s[8]=f*y+d*x+p*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+i*s*c-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*s,d=c*s-o*l,p=t*h+n*f+i*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=h*m,e[1]=(i*c-u*n)*m,e[2]=(a*n-i*o)*m,e[3]=f*m,e[4]=(u*t-i*l)*m,e[5]=(i*s-a*t)*m,e[6]=d*m,e[7]=(n*l-c*t)*m,e[8]=(o*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-i*c,i*l,-i*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=t*s+n*l,i[3]=t*o+n*c,i[6]=t*a+n*u,i[1]=-n*s+t*l,i[4]=-n*o+t*c,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}St.prototype.isMatrix3=!0;function cy(r){for(let e=r.length-1;e>=0;--e)if(r[e]>65535)return!0;return!1}const yx={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function hs(r,e){return new yx[r](e)}function Fo(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function fr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function pl(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const Tc={[Bn]:{[Mi]:fr},[Mi]:{[Bn]:pl}},ln={legacyMode:!0,get workingColorSpace(){return Mi},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(Tc[e]&&Tc[e][t]!==void 0){const n=Tc[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},uy={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Et={r:0,g:0,b:0},yn={h:0,s:0,l:0},ma={h:0,s:0,l:0};function Ac(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function ga(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class ne{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Bn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ln.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Mi){return this.r=e,this.g=t,this.b=n,ln.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Mi){if(e=jh(e,1),t=gt(t,0,1),n=gt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=Ac(o,s,e+1/3),this.g=Ac(o,s,e),this.b=Ac(o,s,e-1/3)}return ln.toWorkingColorSpace(this,i),this}setStyle(e,t=Bn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,ln.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,ln.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,c=parseInt(s[2],10)/100,u=parseInt(s[3],10)/100;return n(s[4]),this.setHSL(l,c,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,ln.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,ln.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Bn){const n=uy[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=fr(e.r),this.g=fr(e.g),this.b=fr(e.b),this}copyLinearToSRGB(e){return this.r=pl(e.r),this.g=pl(e.g),this.b=pl(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Bn){return ln.fromWorkingColorSpace(ga(this,Et),e),gt(Et.r*255,0,255)<<16^gt(Et.g*255,0,255)<<8^gt(Et.b*255,0,255)<<0}getHexString(e=Bn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Mi){ln.fromWorkingColorSpace(ga(this,Et),t);const n=Et.r,i=Et.g,s=Et.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-s)/h+(i<s?6:0);break;case i:l=(s-n)/h+2;break;case s:l=(n-i)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=Mi){return ln.fromWorkingColorSpace(ga(this,Et),t),e.r=Et.r,e.g=Et.g,e.b=Et.b,e}getStyle(e=Bn){return ln.fromWorkingColorSpace(ga(this,Et),e),e!==Bn?`color(${e} ${Et.r} ${Et.g} ${Et.b})`:`rgb(${Et.r*255|0},${Et.g*255|0},${Et.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(yn),yn.h+=e,yn.s+=t,yn.l+=n,this.setHSL(yn.h,yn.s,yn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(yn),e.getHSL(ma);const n=wo(yn.h,ma.h,t),i=wo(yn.s,ma.s,t),s=wo(yn.l,ma.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}ne.NAMES=uy;ne.prototype.isColor=!0;ne.prototype.r=1;ne.prototype.g=1;ne.prototype.b=1;let kr;class zi{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{kr===void 0&&(kr=Fo("canvas")),kr.width=e.width,kr.height=e.height;const n=kr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=kr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=Fo("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=fr(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(fr(t[n]/255)*255):t[n]=fr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ar{constructor(e=null){this.uuid=tn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(Cc(i[o].image)):s.push(Cc(i[o]))}else s=Cc(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Cc(r){return typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap?zi.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}ar.prototype.isSource=!0;let vx=0;class ft extends hi{constructor(e=ft.DEFAULT_IMAGE,t=ft.DEFAULT_MAPPING,n=Pt,i=Pt,s=ot,o=Lr,a=Wt,l=Ri,c=1,u=oi){super(),Object.defineProperty(this,"id",{value:vx++}),this.uuid=tn(),this.name="",this.source=new ar(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new $(0,0),this.repeat=new $(1,1),this.center=new $(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new St,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==$l)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case yr:e.x=e.x-Math.floor(e.x);break;case Pt:e.x=e.x<0?0:1;break;case Lo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case yr:e.y=e.y-Math.floor(e.y);break;case Pt:e.y=e.y<0?0:1;break;case Lo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}ft.DEFAULT_IMAGE=null;ft.DEFAULT_MAPPING=$l;ft.prototype.isTexture=!0;class qe{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],m=l[2],g=l[6],y=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-m)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+m)<.1&&Math.abs(p+g)<.1&&Math.abs(c+d+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,x=(d+1)/2,b=(y+1)/2,M=(u+f)/4,L=(h+m)/4,w=(p+g)/4;return _>x&&_>b?_<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(_),i=M/n,s=L/n):x>b?x<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(x),n=M/i,s=w/i):b<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(b),n=L/s,i=w/s),this.set(n,i,s,t),this}let v=Math.sqrt((g-p)*(g-p)+(h-m)*(h-m)+(f-u)*(f-u));return Math.abs(v)<.001&&(v=1),this.x=(g-p)/v,this.y=(h-m)/v,this.z=(f-u)/v,this.w=Math.acos((c+d+y-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}qe.prototype.isVector4=!0;class Dt extends hi{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new qe(0,0,e,t),this.scissorTest=!1,this.viewport=new qe(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new ft(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:ot,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Dt.prototype.isWebGLRenderTarget=!0;class $s extends ft{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=mt,this.minFilter=mt,this.wrapR=Pt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}$s.prototype.isDataArrayTexture=!0;class hy extends Dt{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new $s(null,e,t,n),this.texture.isRenderTargetTexture=!0}}hy.prototype.isWebGLArrayRenderTarget=!0;class $o extends ft{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=mt,this.minFilter=mt,this.wrapR=Pt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}$o.prototype.isData3DTexture=!0;class fy extends Dt{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new $o(null,e,t,n),this.texture.isRenderTargetTexture=!0}}fy.prototype.isWebGL3DRenderTarget=!0;class dy extends Dt{constructor(e,t,n,i={}){super(e,t,i);const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}dy.prototype.isWebGLMultipleRenderTargets=!0;class lt{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const f=s[o+0],d=s[o+1],p=s[o+2],m=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=m;return}if(h!==m||l!==f||c!==d||u!==p){let g=1-a;const y=l*f+c*d+u*p+h*m,v=y>=0?1:-1,_=1-y*y;if(_>Number.EPSILON){const b=Math.sqrt(_),M=Math.atan2(b,y*v);g=Math.sin(g*M)/b,a=Math.sin(a*M)/b}const x=a*v;if(l=l*g+f*x,c=c*g+d*x,u=u*g+p*x,h=h*g+m*x,g===1-a){const b=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=b,c*=b,u*=b,h*=b}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=s[o],f=s[o+1],d=s[o+2],p=s[o+3];return e[t]=a*p+u*h+l*d-c*f,e[t+1]=l*p+u*f+c*h-a*d,e[t+2]=c*p+u*d+a*f-l*h,e[t+3]=u*p-a*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(s/2),f=l(n/2),d=l(i/2),p=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=n+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-i)*d}else if(n>a&&n>h){const d=2*Math.sqrt(1+n-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(i+o)/d,this._z=(s+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-n-h);this._w=(s-c)/d,this._x=(i+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-a);this._w=(o-i)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(gt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+i*c-s*l,this._y=i*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*n+t*this._x,this._y=d*i+t*this._y,this._z=d*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=o*h+this._w*f,this._x=n*h+this._x*f,this._y=i*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}lt.prototype.isQuaternion=!0;class S{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Pd.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Pd.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*i-a*n,u=l*n+a*t-s*i,h=l*i+s*n-o*t,f=-s*t-o*n-a*i;return this.x=c*l+f*-s+u*-a-h*-o,this.y=u*l+f*-o+h*-s-c*-a,this.z=h*l+f*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Lc.copy(this).projectOnVector(e),this.sub(Lc)}reflect(e){return this.sub(Lc.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(gt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}S.prototype.isVector3=!0;const Lc=new S,Pd=new lt;class sn{constructor(e=new S(1/0,1/0,1/0),t=new S(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],f=e[l+2];u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),f=e.getZ(l);u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Wi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Wi.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Wi)}else n.boundingBox===null&&n.computeBoundingBox(),Pc.copy(n.boundingBox),Pc.applyMatrix4(e.matrixWorld),this.union(Pc);const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Wi),Wi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ao),ya.subVectors(this.max,ao),Hr.subVectors(e.a,ao),Gr.subVectors(e.b,ao),Vr.subVectors(e.c,ao),pi.subVectors(Gr,Hr),mi.subVectors(Vr,Gr),$i.subVectors(Hr,Vr);let t=[0,-pi.z,pi.y,0,-mi.z,mi.y,0,-$i.z,$i.y,pi.z,0,-pi.x,mi.z,0,-mi.x,$i.z,0,-$i.x,-pi.y,pi.x,0,-mi.y,mi.x,0,-$i.y,$i.x,0];return!Rc(t,Hr,Gr,Vr,ya)||(t=[1,0,0,0,1,0,0,0,1],!Rc(t,Hr,Gr,Vr,ya))?!1:(va.crossVectors(pi,mi),t=[va.x,va.y,va.z],Rc(t,Hr,Gr,Vr,ya))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Wi.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Wi).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Xn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Xn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Xn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Xn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Xn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Xn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Xn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Xn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Xn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}sn.prototype.isBox3=!0;const Xn=[new S,new S,new S,new S,new S,new S,new S,new S],Wi=new S,Pc=new sn,Hr=new S,Gr=new S,Vr=new S,pi=new S,mi=new S,$i=new S,ao=new S,ya=new S,va=new S,qi=new S;function Rc(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){qi.fromArray(r,s);const a=i.x*Math.abs(qi.x)+i.y*Math.abs(qi.y)+i.z*Math.abs(qi.z),l=e.dot(qi),c=t.dot(qi),u=n.dot(qi);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const _x=new sn,Rd=new S,_a=new S,Dc=new S;class Ni{constructor(e=new S,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):_x.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Dc.subVectors(e,this.center);const t=Dc.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(Dc.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?_a.set(0,0,1).multiplyScalar(e.radius):_a.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Rd.copy(e.center).add(_a)),this.expandByPoint(Rd.copy(e.center).sub(_a)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const jn=new S,Ic=new S,xa=new S,gi=new S,Fc=new S,wa=new S,Bc=new S;class Ui{constructor(e=new S,t=new S(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,jn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=jn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(jn.copy(this.direction).multiplyScalar(t).add(this.origin),jn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Ic.copy(e).add(t).multiplyScalar(.5),xa.copy(t).sub(e).normalize(),gi.copy(this.origin).sub(Ic);const s=e.distanceTo(t)*.5,o=-this.direction.dot(xa),a=gi.dot(this.direction),l=-gi.dot(xa),c=gi.lengthSq(),u=Math.abs(1-o*o);let h,f,d,p;if(u>0)if(h=o*l-a,f=o*a-l,p=s*u,h>=0)if(f>=-p)if(f<=p){const m=1/u;h*=m,f*=m,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(xa).multiplyScalar(f).add(Ic),d}intersectSphere(e,t){jn.subVectors(e.center,this.origin);const n=jn.dot(this.direction),i=jn.dot(jn)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,i=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,i=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||s>i||((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,jn)!==null}intersectTriangle(e,t,n,i,s){Fc.subVectors(t,e),wa.subVectors(n,e),Bc.crossVectors(Fc,wa);let o=this.direction.dot(Bc),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;gi.subVectors(this.origin,e);const l=a*this.direction.dot(wa.crossVectors(gi,wa));if(l<0)return null;const c=a*this.direction.dot(Fc.cross(gi));if(c<0||l+c>o)return null;const u=-a*gi.dot(Bc);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ae{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,l,c,u,h,f,d,p,m,g){const y=this.elements;return y[0]=e,y[4]=t,y[8]=n,y[12]=i,y[1]=s,y[5]=o,y[9]=a,y[13]=l,y[2]=c,y[6]=u,y[10]=h,y[14]=f,y[3]=d,y[7]=p,y[11]=m,y[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ae().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Wr.setFromMatrixColumn(e,0).length(),s=1/Wr.setFromMatrixColumn(e,1).length(),o=1/Wr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,d=o*h,p=a*u,m=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+p*c,t[5]=f-m*c,t[9]=-a*l,t[2]=m-f*c,t[6]=p+d*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,m=c*h;t[0]=f+m*a,t[4]=p*a-d,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=m+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,m=c*h;t[0]=f-m*a,t[4]=-o*h,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=m-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,d=o*h,p=a*u,m=a*h;t[0]=l*u,t[4]=p*c-d,t[8]=f*c+m,t[1]=l*h,t[5]=m*c+f,t[9]=d*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,d=o*c,p=a*l,m=a*c;t[0]=l*u,t[4]=m-f*h,t[8]=p*h+d,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*h+p,t[10]=f-m*h}else if(e.order==="XZY"){const f=o*l,d=o*c,p=a*l,m=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+m,t[5]=o*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=a*u,t[10]=m*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(xx,e,wx)}lookAt(e,t,n){const i=this.elements;return Zt.subVectors(e,t),Zt.lengthSq()===0&&(Zt.z=1),Zt.normalize(),yi.crossVectors(n,Zt),yi.lengthSq()===0&&(Math.abs(n.z)===1?Zt.x+=1e-4:Zt.z+=1e-4,Zt.normalize(),yi.crossVectors(n,Zt)),yi.normalize(),ba.crossVectors(Zt,yi),i[0]=yi.x,i[4]=ba.x,i[8]=Zt.x,i[1]=yi.y,i[5]=ba.y,i[9]=Zt.y,i[2]=yi.z,i[6]=ba.z,i[10]=Zt.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],m=n[6],g=n[10],y=n[14],v=n[3],_=n[7],x=n[11],b=n[15],M=i[0],L=i[4],w=i[8],T=i[12],R=i[1],F=i[5],U=i[9],X=i[13],I=i[2],N=i[6],B=i[10],H=i[14],q=i[3],z=i[7],G=i[11],Q=i[15];return s[0]=o*M+a*R+l*I+c*q,s[4]=o*L+a*F+l*N+c*z,s[8]=o*w+a*U+l*B+c*G,s[12]=o*T+a*X+l*H+c*Q,s[1]=u*M+h*R+f*I+d*q,s[5]=u*L+h*F+f*N+d*z,s[9]=u*w+h*U+f*B+d*G,s[13]=u*T+h*X+f*H+d*Q,s[2]=p*M+m*R+g*I+y*q,s[6]=p*L+m*F+g*N+y*z,s[10]=p*w+m*U+g*B+y*G,s[14]=p*T+m*X+g*H+y*Q,s[3]=v*M+_*R+x*I+b*q,s[7]=v*L+_*F+x*N+b*z,s[11]=v*w+_*U+x*B+b*G,s[15]=v*T+_*X+x*H+b*Q,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],m=e[7],g=e[11],y=e[15];return p*(+s*l*h-i*c*h-s*a*f+n*c*f+i*a*d-n*l*d)+m*(+t*l*d-t*c*f+s*o*f-i*o*d+i*c*u-s*l*u)+g*(+t*c*h-t*a*d-s*o*h+n*o*d+s*a*u-n*c*u)+y*(-i*a*u-t*l*h+t*a*f+i*o*h-n*o*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],m=e[13],g=e[14],y=e[15],v=h*g*c-m*f*c+m*l*d-a*g*d-h*l*y+a*f*y,_=p*f*c-u*g*c-p*l*d+o*g*d+u*l*y-o*f*y,x=u*m*c-p*h*c+p*a*d-o*m*d-u*a*y+o*h*y,b=p*h*l-u*m*l-p*a*f+o*m*f+u*a*g-o*h*g,M=t*v+n*_+i*x+s*b;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/M;return e[0]=v*L,e[1]=(m*f*s-h*g*s-m*i*d+n*g*d+h*i*y-n*f*y)*L,e[2]=(a*g*s-m*l*s+m*i*c-n*g*c-a*i*y+n*l*y)*L,e[3]=(h*l*s-a*f*s-h*i*c+n*f*c+a*i*d-n*l*d)*L,e[4]=_*L,e[5]=(u*g*s-p*f*s+p*i*d-t*g*d-u*i*y+t*f*y)*L,e[6]=(p*l*s-o*g*s-p*i*c+t*g*c+o*i*y-t*l*y)*L,e[7]=(o*f*s-u*l*s+u*i*c-t*f*c-o*i*d+t*l*d)*L,e[8]=x*L,e[9]=(p*h*s-u*m*s-p*n*d+t*m*d+u*n*y-t*h*y)*L,e[10]=(o*m*s-p*a*s+p*n*c-t*m*c-o*n*y+t*a*y)*L,e[11]=(u*a*s-o*h*s-u*n*c+t*h*c+o*n*d-t*a*d)*L,e[12]=b*L,e[13]=(u*m*i-p*h*i+p*n*f-t*m*f-u*n*g+t*h*g)*L,e[14]=(p*a*i-o*m*i-p*n*l+t*m*l+o*n*g-t*a*g)*L,e[15]=(o*h*i-u*a*i+u*n*l-t*h*l-o*n*f+t*a*f)*L,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,f=s*c,d=s*u,p=s*h,m=o*u,g=o*h,y=a*h,v=l*c,_=l*u,x=l*h,b=n.x,M=n.y,L=n.z;return i[0]=(1-(m+y))*b,i[1]=(d+x)*b,i[2]=(p-_)*b,i[3]=0,i[4]=(d-x)*M,i[5]=(1-(f+y))*M,i[6]=(g+v)*M,i[7]=0,i[8]=(p+_)*L,i[9]=(g-v)*L,i[10]=(1-(f+m))*L,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Wr.set(i[0],i[1],i[2]).length();const o=Wr.set(i[4],i[5],i[6]).length(),a=Wr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],vn.copy(this);const c=1/s,u=1/o,h=1/a;return vn.elements[0]*=c,vn.elements[1]*=c,vn.elements[2]*=c,vn.elements[4]*=u,vn.elements[5]*=u,vn.elements[6]*=u,vn.elements[8]*=h,vn.elements[9]*=h,vn.elements[10]*=h,t.setFromRotationMatrix(vn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*s/(t-e),c=2*s/(n-i),u=(t+e)/(t-e),h=(n+i)/(n-i),f=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,l=1/(t-e),c=1/(n-i),u=1/(o-s),h=(t+e)*l,f=(n+i)*c,d=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}ae.prototype.isMatrix4=!0;const Wr=new S,vn=new ae,xx=new S(0,0,0),wx=new S(1,1,1),yi=new S,ba=new S,Zt=new S,Dd=new ae,Id=new lt;class en{constructor(e=0,t=0,n=0,i=en.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],f=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(gt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-gt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(gt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-gt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(gt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-gt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Dd.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Dd,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Id.setFromEuler(this),this.setFromQuaternion(Id,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}en.prototype.isEuler=!0;en.DefaultOrder="XYZ";en.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Xl{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let bx=0;const Fd=new S,$r=new lt,Yn=new ae,Ma=new S,lo=new S,Mx=new S,Sx=new lt,Bd=new S(1,0,0),Od=new S(0,1,0),zd=new S(0,0,1),Ex={type:"added"},Nd={type:"removed"};class Be extends hi{constructor(){super(),Object.defineProperty(this,"id",{value:bx++}),this.uuid=tn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Be.DefaultUp.clone();const e=new S,t=new en,n=new lt,i=new S(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ae},normalMatrix:{value:new St}}),this.matrix=new ae,this.matrixWorld=new ae,this.matrixAutoUpdate=Be.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Xl,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return $r.setFromAxisAngle(e,t),this.quaternion.multiply($r),this}rotateOnWorldAxis(e,t){return $r.setFromAxisAngle(e,t),this.quaternion.premultiply($r),this}rotateX(e){return this.rotateOnAxis(Bd,e)}rotateY(e){return this.rotateOnAxis(Od,e)}rotateZ(e){return this.rotateOnAxis(zd,e)}translateOnAxis(e,t){return Fd.copy(e).applyQuaternion(this.quaternion),this.position.add(Fd.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Bd,e)}translateY(e){return this.translateOnAxis(Od,e)}translateZ(e){return this.translateOnAxis(zd,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Yn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ma.copy(e):Ma.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),lo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Yn.lookAt(lo,Ma,this.up):Yn.lookAt(Ma,lo,this.up),this.quaternion.setFromRotationMatrix(Yn),i&&(Yn.extractRotation(i.matrixWorld),$r.setFromRotationMatrix(Yn),this.quaternion.premultiply($r.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Ex)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Nd)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Nd)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Yn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Yn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Yn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(lo,e,Mx),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(lo,Sx,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),d=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Be.DefaultUp=new S(0,1,0);Be.DefaultMatrixAutoUpdate=!0;Be.prototype.isObject3D=!0;const _n=new S,Zn=new S,Oc=new S,Jn=new S,qr=new S,Xr=new S,Ud=new S,zc=new S,Nc=new S,Uc=new S;class vt{constructor(e=new S,t=new S,n=new S){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),_n.subVectors(e,t),i.cross(_n);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){_n.subVectors(i,t),Zn.subVectors(n,t),Oc.subVectors(e,t);const o=_n.dot(_n),a=_n.dot(Zn),l=_n.dot(Oc),c=Zn.dot(Zn),u=Zn.dot(Oc),h=o*c-a*a;if(h===0)return s.set(-2,-1,-1);const f=1/h,d=(c*l-a*u)*f,p=(o*u-a*l)*f;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Jn),Jn.x>=0&&Jn.y>=0&&Jn.x+Jn.y<=1}static getUV(e,t,n,i,s,o,a,l){return this.getBarycoord(e,t,n,i,Jn),l.set(0,0),l.addScaledVector(s,Jn.x),l.addScaledVector(o,Jn.y),l.addScaledVector(a,Jn.z),l}static isFrontFacing(e,t,n,i){return _n.subVectors(n,t),Zn.subVectors(e,t),_n.cross(Zn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return _n.subVectors(this.c,this.b),Zn.subVectors(this.a,this.b),_n.cross(Zn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return vt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return vt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return vt.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return vt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return vt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,a;qr.subVectors(i,n),Xr.subVectors(s,n),zc.subVectors(e,n);const l=qr.dot(zc),c=Xr.dot(zc);if(l<=0&&c<=0)return t.copy(n);Nc.subVectors(e,i);const u=qr.dot(Nc),h=Xr.dot(Nc);if(u>=0&&h<=u)return t.copy(i);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(qr,o);Uc.subVectors(e,s);const d=qr.dot(Uc),p=Xr.dot(Uc);if(p>=0&&d<=p)return t.copy(s);const m=d*c-l*p;if(m<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(Xr,a);const g=u*p-d*h;if(g<=0&&h-u>=0&&d-p>=0)return Ud.subVectors(s,i),a=(h-u)/(h-u+(d-p)),t.copy(i).addScaledVector(Ud,a);const y=1/(g+m+f);return o=m*y,a=f*y,t.copy(n).addScaledVector(qr,o).addScaledVector(Xr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Tx=0;class xt extends hi{constructor(){super(),Object.defineProperty(this,"id",{value:Tx++}),this.uuid=tn(),this.name="",this.type="Material",this.blending=cr,this.side=mr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=zh,this.blendDst=Nh,this.blendEquation=ir,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Cl,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ay,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=dl,this.stencilZFail=dl,this.stencilZPass=dl,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Oh;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==cr&&(n.blending=this.blending),this.side!==mr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}xt.prototype.isMaterial=!0;xt.fromType=function(){return null};class fi extends xt{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=gr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}fi.prototype.isMeshBasicMaterial=!0;const bt=new S,Sa=new $;class We{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=bs,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new ne),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new $),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new S),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new qe),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Sa.fromBufferAttribute(this,t),Sa.applyMatrix3(e),this.setXY(t,Sa.x,Sa.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.applyMatrix3(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.applyMatrix4(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.applyNormalMatrix(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.transformDirection(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==bs&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}We.prototype.isBufferAttribute=!0;class py extends We{constructor(e,t,n){super(new Int8Array(e),t,n)}}class my extends We{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class gy extends We{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class yy extends We{constructor(e,t,n){super(new Int16Array(e),t,n)}}class qo extends We{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class vy extends We{constructor(e,t,n){super(new Int32Array(e),t,n)}}class jl extends We{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class _y extends We{constructor(e,t,n){super(new Uint16Array(e),t,n)}}_y.prototype.isFloat16BufferAttribute=!0;class ge extends We{constructor(e,t,n){super(new Float32Array(e),t,n)}}class xy extends We{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Ax=0;const on=new ae,kc=new Be,jr=new S,Jt=new sn,co=new sn,At=new S;class Me extends hi{constructor(){super(),Object.defineProperty(this,"id",{value:Ax++}),this.uuid=tn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(cy(e)?jl:qo)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new St().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return on.makeRotationFromQuaternion(e),this.applyMatrix4(on),this}rotateX(e){return on.makeRotationX(e),this.applyMatrix4(on),this}rotateY(e){return on.makeRotationY(e),this.applyMatrix4(on),this}rotateZ(e){return on.makeRotationZ(e),this.applyMatrix4(on),this}translate(e,t,n){return on.makeTranslation(e,t,n),this.applyMatrix4(on),this}scale(e,t,n){return on.makeScale(e,t,n),this.applyMatrix4(on),this}lookAt(e){return kc.lookAt(e),kc.updateMatrix(),this.applyMatrix4(kc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(jr).negate(),this.translate(jr.x,jr.y,jr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ge(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new sn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new S(-1/0,-1/0,-1/0),new S(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Jt.setFromBufferAttribute(s),this.morphTargetsRelative?(At.addVectors(this.boundingBox.min,Jt.min),this.boundingBox.expandByPoint(At),At.addVectors(this.boundingBox.max,Jt.max),this.boundingBox.expandByPoint(At)):(this.boundingBox.expandByPoint(Jt.min),this.boundingBox.expandByPoint(Jt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ni);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new S,1/0);return}if(e){const n=this.boundingSphere.center;if(Jt.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];co.setFromBufferAttribute(a),this.morphTargetsRelative?(At.addVectors(Jt.min,co.min),Jt.expandByPoint(At),At.addVectors(Jt.max,co.max),Jt.expandByPoint(At)):(Jt.expandByPoint(co.min),Jt.expandByPoint(co.max))}Jt.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)At.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(At));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)At.fromBufferAttribute(a,c),l&&(jr.fromBufferAttribute(e,c),At.add(jr)),i=Math.max(i,n.distanceToSquared(At))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new We(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let R=0;R<a;R++)c[R]=new S,u[R]=new S;const h=new S,f=new S,d=new S,p=new $,m=new $,g=new $,y=new S,v=new S;function _(R,F,U){h.fromArray(i,R*3),f.fromArray(i,F*3),d.fromArray(i,U*3),p.fromArray(o,R*2),m.fromArray(o,F*2),g.fromArray(o,U*2),f.sub(h),d.sub(h),m.sub(p),g.sub(p);const X=1/(m.x*g.y-g.x*m.y);!isFinite(X)||(y.copy(f).multiplyScalar(g.y).addScaledVector(d,-m.y).multiplyScalar(X),v.copy(d).multiplyScalar(m.x).addScaledVector(f,-g.x).multiplyScalar(X),c[R].add(y),c[F].add(y),c[U].add(y),u[R].add(v),u[F].add(v),u[U].add(v))}let x=this.groups;x.length===0&&(x=[{start:0,count:n.length}]);for(let R=0,F=x.length;R<F;++R){const U=x[R],X=U.start,I=U.count;for(let N=X,B=X+I;N<B;N+=3)_(n[N+0],n[N+1],n[N+2])}const b=new S,M=new S,L=new S,w=new S;function T(R){L.fromArray(s,R*3),w.copy(L);const F=c[R];b.copy(F),b.sub(L.multiplyScalar(L.dot(F))).normalize(),M.crossVectors(w,F);const X=M.dot(u[R])<0?-1:1;l[R*4]=b.x,l[R*4+1]=b.y,l[R*4+2]=b.z,l[R*4+3]=X}for(let R=0,F=x.length;R<F;++R){const U=x[R],X=U.start,I=U.count;for(let N=X,B=X+I;N<B;N+=3)T(n[N+0]),T(n[N+1]),T(n[N+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new We(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const i=new S,s=new S,o=new S,a=new S,l=new S,c=new S,u=new S,h=new S;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),m=e.getX(f+1),g=e.getX(f+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),o.fromBufferAttribute(t,g),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),c.fromBufferAttribute(n,g),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(g,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)i.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const o=n[i].array,a=e.attributes[i],l=a.array,c=a.itemSize*t,u=Math.min(l.length,o.length-c);for(let h=0,f=c;h<u;h++,f++)o[f]=l[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)At.fromBufferAttribute(e,t),At.normalize(),e.setXYZ(t,At.x,At.y,At.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let m=0,g=l.length;m<g;m++){a.isInterleavedBufferAttribute?d=l[m]*a.data.stride+a.offset:d=l[m]*u;for(let y=0;y<u;y++)f[p++]=c[d++]}return new We(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Me,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,n);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(i[l]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Me.prototype.isBufferGeometry=!0;const kd=new ae,Yr=new Ui,Hc=new Ni,vi=new S,_i=new S,xi=new S,Gc=new S,Vc=new S,Wc=new S,Ea=new S,Ta=new S,Aa=new S,Ca=new $,La=new $,Pa=new $,$c=new S,Ra=new S;class ht extends Be{constructor(e=new Me,t=new fi){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Hc.copy(n.boundingSphere),Hc.applyMatrix4(s),e.ray.intersectsSphere(Hc)===!1)||(kd.copy(s).invert(),Yr.copy(e.ray).applyMatrix4(kd),n.boundingBox!==null&&Yr.intersectsBox(n.boundingBox)===!1))return;let o;if(n.isBufferGeometry){const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,f=n.attributes.uv2,d=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(i))for(let m=0,g=d.length;m<g;m++){const y=d[m],v=i[y.materialIndex],_=Math.max(y.start,p.start),x=Math.min(a.count,Math.min(y.start+y.count,p.start+p.count));for(let b=_,M=x;b<M;b+=3){const L=a.getX(b),w=a.getX(b+1),T=a.getX(b+2);o=Da(this,v,e,Yr,l,c,u,h,f,L,w,T),o&&(o.faceIndex=Math.floor(b/3),o.face.materialIndex=y.materialIndex,t.push(o))}}else{const m=Math.max(0,p.start),g=Math.min(a.count,p.start+p.count);for(let y=m,v=g;y<v;y+=3){const _=a.getX(y),x=a.getX(y+1),b=a.getX(y+2);o=Da(this,i,e,Yr,l,c,u,h,f,_,x,b),o&&(o.faceIndex=Math.floor(y/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let m=0,g=d.length;m<g;m++){const y=d[m],v=i[y.materialIndex],_=Math.max(y.start,p.start),x=Math.min(l.count,Math.min(y.start+y.count,p.start+p.count));for(let b=_,M=x;b<M;b+=3){const L=b,w=b+1,T=b+2;o=Da(this,v,e,Yr,l,c,u,h,f,L,w,T),o&&(o.faceIndex=Math.floor(b/3),o.face.materialIndex=y.materialIndex,t.push(o))}}else{const m=Math.max(0,p.start),g=Math.min(l.count,p.start+p.count);for(let y=m,v=g;y<v;y+=3){const _=y,x=y+1,b=y+2;o=Da(this,i,e,Yr,l,c,u,h,f,_,x,b),o&&(o.faceIndex=Math.floor(y/3),t.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}ht.prototype.isMesh=!0;function Cx(r,e,t,n,i,s,o,a){let l;if(e.side===$t?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,e.side!==Ci,a),l===null)return null;Ra.copy(a),Ra.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(Ra);return c<t.near||c>t.far?null:{distance:c,point:Ra.clone(),object:r}}function Da(r,e,t,n,i,s,o,a,l,c,u,h){vi.fromBufferAttribute(i,c),_i.fromBufferAttribute(i,u),xi.fromBufferAttribute(i,h);const f=r.morphTargetInfluences;if(s&&f){Ea.set(0,0,0),Ta.set(0,0,0),Aa.set(0,0,0);for(let p=0,m=s.length;p<m;p++){const g=f[p],y=s[p];g!==0&&(Gc.fromBufferAttribute(y,c),Vc.fromBufferAttribute(y,u),Wc.fromBufferAttribute(y,h),o?(Ea.addScaledVector(Gc,g),Ta.addScaledVector(Vc,g),Aa.addScaledVector(Wc,g)):(Ea.addScaledVector(Gc.sub(vi),g),Ta.addScaledVector(Vc.sub(_i),g),Aa.addScaledVector(Wc.sub(xi),g)))}vi.add(Ea),_i.add(Ta),xi.add(Aa)}r.isSkinnedMesh&&(r.boneTransform(c,vi),r.boneTransform(u,_i),r.boneTransform(h,xi));const d=Cx(r,e,t,n,vi,_i,xi,$c);if(d){a&&(Ca.fromBufferAttribute(a,c),La.fromBufferAttribute(a,u),Pa.fromBufferAttribute(a,h),d.uv=vt.getUV($c,vi,_i,xi,Ca,La,Pa,new $)),l&&(Ca.fromBufferAttribute(l,c),La.fromBufferAttribute(l,u),Pa.fromBufferAttribute(l,h),d.uv2=vt.getUV($c,vi,_i,xi,Ca,La,Pa,new $));const p={a:c,b:u,c:h,normal:new S,materialIndex:0};vt.getNormal(vi,_i,xi,p.normal),d.face=p}return d}class ai extends Me{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,o,s,0),p("z","y","x",1,-1,n,t,-e,o,s,1),p("x","z","y",1,1,e,n,t,i,o,2),p("x","z","y",1,-1,e,n,-t,i,o,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new ge(c,3)),this.setAttribute("normal",new ge(u,3)),this.setAttribute("uv",new ge(h,2));function p(m,g,y,v,_,x,b,M,L,w,T){const R=x/L,F=b/w,U=x/2,X=b/2,I=M/2,N=L+1,B=w+1;let H=0,q=0;const z=new S;for(let G=0;G<B;G++){const Q=G*F-X;for(let Y=0;Y<N;Y++){const re=Y*R-U;z[m]=re*v,z[g]=Q*_,z[y]=I,c.push(z.x,z.y,z.z),z[m]=0,z[g]=0,z[y]=M>0?1:-1,u.push(z.x,z.y,z.z),h.push(Y/L),h.push(1-G/w),H+=1}}for(let G=0;G<w;G++)for(let Q=0;Q<L;Q++){const Y=f+Q+N*G,re=f+Q+N*(G+1),fe=f+(Q+1)+N*(G+1),ye=f+(Q+1)+N*G;l.push(Y,re,ye),l.push(re,fe,ye),q+=6}a.addGroup(d,q,T),d+=q,f+=H}}static fromJSON(e){return new ai(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ss(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Ft(r){const e={};for(let t=0;t<r.length;t++){const n=Ss(r[t]);for(const i in n)e[i]=n[i]}return e}const Xo={clone:Ss,merge:Ft};var Lx=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Px=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class It extends xt{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Lx,this.fragmentShader=Px,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ss(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}It.prototype.isShaderMaterial=!0;class jo extends Be{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ae,this.projectionMatrix=new ae,this.projectionMatrixInverse=new ae}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}jo.prototype.isCamera=!0;class Mt extends jo{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Io*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(hr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Io*2*Math.atan(Math.tan(hr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(hr*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*i/l,t-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Mt.prototype.isPerspectiveCamera=!0;const Zr=90,Jr=1;class Yl extends Be{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new Mt(Zr,Jr,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new S(1,0,0)),this.add(i);const s=new Mt(Zr,Jr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new S(-1,0,0)),this.add(s);const o=new Mt(Zr,Jr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new S(0,1,0)),this.add(o);const a=new Mt(Zr,Jr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new S(0,-1,0)),this.add(a);const l=new Mt(Zr,Jr,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new S(0,0,1)),this.add(l);const c=new Mt(Zr,Jr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new S(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,l,c]=this.children,u=e.getRenderTarget(),h=e.toneMapping,f=e.xr.enabled;e.toneMapping=Sn,e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=h,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class qs extends ft{constructor(e,t,n,i,s,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:Li,super(e,t,n,i,s,o,a,l,c,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}qs.prototype.isCubeTexture=!0;class Zl extends Dt{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new qs(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ot}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ai(5,5,5),s=new It({name:"CubemapFromEquirect",uniforms:Ss(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:$t,blending:si});s.uniforms.tEquirect.value=t;const o=new ht(i,s),a=t.minFilter;return t.minFilter===Lr&&(t.minFilter=ot),new Yl(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}Zl.prototype.isWebGLCubeRenderTarget=!0;const qc=new S,Rx=new S,Dx=new St;class zn{constructor(e=new S(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=qc.subVectors(n,t).cross(Rx.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(qc),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Dx.getNormalMatrix(e),i=this.coplanarPoint(qc).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}zn.prototype.isPlane=!0;const Kr=new Ni,Ia=new S;class Yo{constructor(e=new zn,t=new zn,n=new zn,i=new zn,s=new zn,o=new zn){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],f=n[8],d=n[9],p=n[10],m=n[11],g=n[12],y=n[13],v=n[14],_=n[15];return t[0].setComponents(a-i,h-l,m-f,_-g).normalize(),t[1].setComponents(a+i,h+l,m+f,_+g).normalize(),t[2].setComponents(a+s,h+c,m+d,_+y).normalize(),t[3].setComponents(a-s,h-c,m-d,_-y).normalize(),t[4].setComponents(a-o,h-u,m-p,_-v).normalize(),t[5].setComponents(a+o,h+u,m+p,_+v).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Kr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Kr)}intersectsSprite(e){return Kr.center.set(0,0,0),Kr.radius=.7071067811865476,Kr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Kr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Ia.x=i.normal.x>0?e.max.x:e.min.x,Ia.y=i.normal.y>0?e.max.y:e.min.y,Ia.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Ia)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function wy(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function Ix(r,e){const t=e.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,f=c.usage,d=r.createBuffer();r.bindBuffer(u,d),r.bufferData(u,h,f),c.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,h){const f=u.array,d=u.updateRange;r.bindBuffer(h,c),d.count===-1?r.bufferSubData(h,0,f):(t?r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(r.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(s(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class _r extends Me{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=e/a,f=t/l,d=[],p=[],m=[],g=[];for(let y=0;y<u;y++){const v=y*f-o;for(let _=0;_<c;_++){const x=_*h-s;p.push(x,-v,0),m.push(0,0,1),g.push(_/a),g.push(1-y/l)}}for(let y=0;y<l;y++)for(let v=0;v<a;v++){const _=v+c*y,x=v+c*(y+1),b=v+1+c*(y+1),M=v+1+c*y;d.push(_,x,M),d.push(x,b,M)}this.setIndex(d),this.setAttribute("position",new ge(p,3)),this.setAttribute("normal",new ge(m,3)),this.setAttribute("uv",new ge(g,2))}static fromJSON(e){return new _r(e.width,e.height,e.widthSegments,e.heightSegments)}}var Fx=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Bx=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ox=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,zx=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Nx=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Ux=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,kx="vec3 transformed = vec3( position );",Hx=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Gx=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Vx=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Wx=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,$x=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,qx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Xx=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,jx=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Yx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Zx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Jx=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Kx=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Qx=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ew=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,tw=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,nw=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,iw=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,rw=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,sw="gl_FragColor = linearToOutputTexel( gl_FragColor );",ow=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,aw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,lw=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,cw=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,uw=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,hw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,fw=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,dw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,pw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,mw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,yw=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,vw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,_w=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,xw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,ww=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,bw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Mw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Sw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Ew=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Tw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Aw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Cw=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Lw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Pw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Rw=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Dw=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Iw=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Fw=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Bw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Ow=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,zw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Nw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Uw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,kw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Hw=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Gw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Vw=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Ww=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,$w=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,qw=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Xw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,jw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Yw=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Zw=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Jw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Kw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Qw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,eb=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,tb=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,nb=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,ib=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,rb=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,sb=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ob=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,ab=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,lb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,cb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,ub=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,hb=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,fb=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,db=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,pb=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,mb=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,gb=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,yb=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,vb=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,_b=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,xb=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,wb=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,bb=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Mb=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Sb=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Eb=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Tb=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Ab=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Cb=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Lb=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Pb=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Rb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Db=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Ib=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Fb=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Bb=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Ob=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,zb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Nb=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Ub=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,kb=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Hb=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Gb=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Vb=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Wb=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$b=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,qb=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Xb=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,jb=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Yb=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Zb=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Jb=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Kb=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Qb=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,eM=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tM=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,nM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,iM=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,rM=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,sM=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,oM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ue={alphamap_fragment:Fx,alphamap_pars_fragment:Bx,alphatest_fragment:Ox,alphatest_pars_fragment:zx,aomap_fragment:Nx,aomap_pars_fragment:Ux,begin_vertex:kx,beginnormal_vertex:Hx,bsdfs:Gx,bumpmap_pars_fragment:Vx,clipping_planes_fragment:Wx,clipping_planes_pars_fragment:$x,clipping_planes_pars_vertex:qx,clipping_planes_vertex:Xx,color_fragment:jx,color_pars_fragment:Yx,color_pars_vertex:Zx,color_vertex:Jx,common:Kx,cube_uv_reflection_fragment:Qx,defaultnormal_vertex:ew,displacementmap_pars_vertex:tw,displacementmap_vertex:nw,emissivemap_fragment:iw,emissivemap_pars_fragment:rw,encodings_fragment:sw,encodings_pars_fragment:ow,envmap_fragment:aw,envmap_common_pars_fragment:lw,envmap_pars_fragment:cw,envmap_pars_vertex:uw,envmap_physical_pars_fragment:ww,envmap_vertex:hw,fog_vertex:fw,fog_pars_vertex:dw,fog_fragment:pw,fog_pars_fragment:mw,gradientmap_pars_fragment:gw,lightmap_fragment:yw,lightmap_pars_fragment:vw,lights_lambert_vertex:_w,lights_pars_begin:xw,lights_toon_fragment:bw,lights_toon_pars_fragment:Mw,lights_phong_fragment:Sw,lights_phong_pars_fragment:Ew,lights_physical_fragment:Tw,lights_physical_pars_fragment:Aw,lights_fragment_begin:Cw,lights_fragment_maps:Lw,lights_fragment_end:Pw,logdepthbuf_fragment:Rw,logdepthbuf_pars_fragment:Dw,logdepthbuf_pars_vertex:Iw,logdepthbuf_vertex:Fw,map_fragment:Bw,map_pars_fragment:Ow,map_particle_fragment:zw,map_particle_pars_fragment:Nw,metalnessmap_fragment:Uw,metalnessmap_pars_fragment:kw,morphcolor_vertex:Hw,morphnormal_vertex:Gw,morphtarget_pars_vertex:Vw,morphtarget_vertex:Ww,normal_fragment_begin:$w,normal_fragment_maps:qw,normal_pars_fragment:Xw,normal_pars_vertex:jw,normal_vertex:Yw,normalmap_pars_fragment:Zw,clearcoat_normal_fragment_begin:Jw,clearcoat_normal_fragment_maps:Kw,clearcoat_pars_fragment:Qw,output_fragment:eb,packing:tb,premultiplied_alpha_fragment:nb,project_vertex:ib,dithering_fragment:rb,dithering_pars_fragment:sb,roughnessmap_fragment:ob,roughnessmap_pars_fragment:ab,shadowmap_pars_fragment:lb,shadowmap_pars_vertex:cb,shadowmap_vertex:ub,shadowmask_pars_fragment:hb,skinbase_vertex:fb,skinning_pars_vertex:db,skinning_vertex:pb,skinnormal_vertex:mb,specularmap_fragment:gb,specularmap_pars_fragment:yb,tonemapping_fragment:vb,tonemapping_pars_fragment:_b,transmission_fragment:xb,transmission_pars_fragment:wb,uv_pars_fragment:bb,uv_pars_vertex:Mb,uv_vertex:Sb,uv2_pars_fragment:Eb,uv2_pars_vertex:Tb,uv2_vertex:Ab,worldpos_vertex:Cb,background_vert:Lb,background_frag:Pb,cube_vert:Rb,cube_frag:Db,depth_vert:Ib,depth_frag:Fb,distanceRGBA_vert:Bb,distanceRGBA_frag:Ob,equirect_vert:zb,equirect_frag:Nb,linedashed_vert:Ub,linedashed_frag:kb,meshbasic_vert:Hb,meshbasic_frag:Gb,meshlambert_vert:Vb,meshlambert_frag:Wb,meshmatcap_vert:$b,meshmatcap_frag:qb,meshnormal_vert:Xb,meshnormal_frag:jb,meshphong_vert:Yb,meshphong_frag:Zb,meshphysical_vert:Jb,meshphysical_frag:Kb,meshtoon_vert:Qb,meshtoon_frag:eM,points_vert:tM,points_frag:nM,shadow_vert:iM,shadow_frag:rM,sprite_vert:sM,sprite_frag:oM},he={common:{diffuse:{value:new ne(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new St},uv2Transform:{value:new St},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new $(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ne(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ne(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new St}},sprite:{diffuse:{value:new ne(16777215)},opacity:{value:1},center:{value:new $(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new St}}},Bt={basic:{uniforms:Ft([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.fog]),vertexShader:Ue.meshbasic_vert,fragmentShader:Ue.meshbasic_frag},lambert:{uniforms:Ft([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.fog,he.lights,{emissive:{value:new ne(0)}}]),vertexShader:Ue.meshlambert_vert,fragmentShader:Ue.meshlambert_frag},phong:{uniforms:Ft([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.fog,he.lights,{emissive:{value:new ne(0)},specular:{value:new ne(1118481)},shininess:{value:30}}]),vertexShader:Ue.meshphong_vert,fragmentShader:Ue.meshphong_frag},standard:{uniforms:Ft([he.common,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.roughnessmap,he.metalnessmap,he.fog,he.lights,{emissive:{value:new ne(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ue.meshphysical_vert,fragmentShader:Ue.meshphysical_frag},toon:{uniforms:Ft([he.common,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.gradientmap,he.fog,he.lights,{emissive:{value:new ne(0)}}]),vertexShader:Ue.meshtoon_vert,fragmentShader:Ue.meshtoon_frag},matcap:{uniforms:Ft([he.common,he.bumpmap,he.normalmap,he.displacementmap,he.fog,{matcap:{value:null}}]),vertexShader:Ue.meshmatcap_vert,fragmentShader:Ue.meshmatcap_frag},points:{uniforms:Ft([he.points,he.fog]),vertexShader:Ue.points_vert,fragmentShader:Ue.points_frag},dashed:{uniforms:Ft([he.common,he.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ue.linedashed_vert,fragmentShader:Ue.linedashed_frag},depth:{uniforms:Ft([he.common,he.displacementmap]),vertexShader:Ue.depth_vert,fragmentShader:Ue.depth_frag},normal:{uniforms:Ft([he.common,he.bumpmap,he.normalmap,he.displacementmap,{opacity:{value:1}}]),vertexShader:Ue.meshnormal_vert,fragmentShader:Ue.meshnormal_frag},sprite:{uniforms:Ft([he.sprite,he.fog]),vertexShader:Ue.sprite_vert,fragmentShader:Ue.sprite_frag},background:{uniforms:{uvTransform:{value:new St},t2D:{value:null}},vertexShader:Ue.background_vert,fragmentShader:Ue.background_frag},cube:{uniforms:Ft([he.envmap,{opacity:{value:1}}]),vertexShader:Ue.cube_vert,fragmentShader:Ue.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ue.equirect_vert,fragmentShader:Ue.equirect_frag},distanceRGBA:{uniforms:Ft([he.common,he.displacementmap,{referencePosition:{value:new S},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ue.distanceRGBA_vert,fragmentShader:Ue.distanceRGBA_frag},shadow:{uniforms:Ft([he.lights,he.fog,{color:{value:new ne(0)},opacity:{value:1}}]),vertexShader:Ue.shadow_vert,fragmentShader:Ue.shadow_frag}};Bt.physical={uniforms:Ft([Bt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new $(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new ne(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new $},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ne(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ne(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ue.meshphysical_vert,fragmentShader:Ue.meshphysical_frag};function aM(r,e,t,n,i,s){const o=new ne(0);let a=i===!0?0:1,l,c,u=null,h=0,f=null;function d(m,g){let y=!1,v=g.isScene===!0?g.background:null;v&&v.isTexture&&(v=e.get(v));const _=r.xr,x=_.getSession&&_.getSession();x&&x.environmentBlendMode==="additive"&&(v=null),v===null?p(o,a):v&&v.isColor&&(p(v,1),y=!0),(r.autoClear||y)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),v&&(v.isCubeTexture||v.mapping===Ws)?(c===void 0&&(c=new ht(new ai(1,1,1),new It({name:"BackgroundCubeMaterial",uniforms:Ss(Bt.cube.uniforms),vertexShader:Bt.cube.vertexShader,fragmentShader:Bt.cube.fragmentShader,side:$t,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(b,M,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=v,c.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,(u!==v||h!==v.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,u=v,h=v.version,f=r.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null)):v&&v.isTexture&&(l===void 0&&(l=new ht(new _r(2,2),new It({name:"BackgroundMaterial",uniforms:Ss(Bt.background.uniforms),vertexShader:Bt.background.vertexShader,fragmentShader:Bt.background.fragmentShader,side:mr,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=v,v.matrixAutoUpdate===!0&&v.updateMatrix(),l.material.uniforms.uvTransform.value.copy(v.matrix),(u!==v||h!==v.version||f!==r.toneMapping)&&(l.material.needsUpdate=!0,u=v,h=v.version,f=r.toneMapping),l.layers.enableAll(),m.unshift(l,l.geometry,l.material,0,0,null))}function p(m,g){t.buffers.color.setClear(m.r,m.g,m.b,g,s)}return{getClearColor:function(){return o},setClearColor:function(m,g=1){o.set(m),a=g,p(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(m){a=m,p(o,a)},render:d}}function lM(r,e,t,n){const i=r.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=g(null);let c=l,u=!1;function h(I,N,B,H,q){let z=!1;if(o){const G=m(H,B,N);c!==G&&(c=G,d(c.object)),z=y(I,H,B,q),z&&v(I,H,B,q)}else{const G=N.wireframe===!0;(c.geometry!==H.id||c.program!==B.id||c.wireframe!==G)&&(c.geometry=H.id,c.program=B.id,c.wireframe=G,z=!0)}q!==null&&t.update(q,34963),(z||u)&&(u=!1,w(I,N,B,H),q!==null&&r.bindBuffer(34963,t.get(q).buffer))}function f(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function d(I){return n.isWebGL2?r.bindVertexArray(I):s.bindVertexArrayOES(I)}function p(I){return n.isWebGL2?r.deleteVertexArray(I):s.deleteVertexArrayOES(I)}function m(I,N,B){const H=B.wireframe===!0;let q=a[I.id];q===void 0&&(q={},a[I.id]=q);let z=q[N.id];z===void 0&&(z={},q[N.id]=z);let G=z[H];return G===void 0&&(G=g(f()),z[H]=G),G}function g(I){const N=[],B=[],H=[];for(let q=0;q<i;q++)N[q]=0,B[q]=0,H[q]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:B,attributeDivisors:H,object:I,attributes:{},index:null}}function y(I,N,B,H){const q=c.attributes,z=N.attributes;let G=0;const Q=B.getAttributes();for(const Y in Q)if(Q[Y].location>=0){const fe=q[Y];let ye=z[Y];if(ye===void 0&&(Y==="instanceMatrix"&&I.instanceMatrix&&(ye=I.instanceMatrix),Y==="instanceColor"&&I.instanceColor&&(ye=I.instanceColor)),fe===void 0||fe.attribute!==ye||ye&&fe.data!==ye.data)return!0;G++}return c.attributesNum!==G||c.index!==H}function v(I,N,B,H){const q={},z=N.attributes;let G=0;const Q=B.getAttributes();for(const Y in Q)if(Q[Y].location>=0){let fe=z[Y];fe===void 0&&(Y==="instanceMatrix"&&I.instanceMatrix&&(fe=I.instanceMatrix),Y==="instanceColor"&&I.instanceColor&&(fe=I.instanceColor));const ye={};ye.attribute=fe,fe&&fe.data&&(ye.data=fe.data),q[Y]=ye,G++}c.attributes=q,c.attributesNum=G,c.index=H}function _(){const I=c.newAttributes;for(let N=0,B=I.length;N<B;N++)I[N]=0}function x(I){b(I,0)}function b(I,N){const B=c.newAttributes,H=c.enabledAttributes,q=c.attributeDivisors;B[I]=1,H[I]===0&&(r.enableVertexAttribArray(I),H[I]=1),q[I]!==N&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](I,N),q[I]=N)}function M(){const I=c.newAttributes,N=c.enabledAttributes;for(let B=0,H=N.length;B<H;B++)N[B]!==I[B]&&(r.disableVertexAttribArray(B),N[B]=0)}function L(I,N,B,H,q,z){n.isWebGL2===!0&&(B===5124||B===5125)?r.vertexAttribIPointer(I,N,B,q,z):r.vertexAttribPointer(I,N,B,H,q,z)}function w(I,N,B,H){if(n.isWebGL2===!1&&(I.isInstancedMesh||H.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;_();const q=H.attributes,z=B.getAttributes(),G=N.defaultAttributeValues;for(const Q in z){const Y=z[Q];if(Y.location>=0){let re=q[Q];if(re===void 0&&(Q==="instanceMatrix"&&I.instanceMatrix&&(re=I.instanceMatrix),Q==="instanceColor"&&I.instanceColor&&(re=I.instanceColor)),re!==void 0){const fe=re.normalized,ye=re.itemSize,j=t.get(re);if(j===void 0)continue;const ze=j.buffer,Se=j.type,Re=j.bytesPerElement;if(re.isInterleavedBufferAttribute){const se=re.data,Ie=se.stride,Z=re.offset;if(se.isInstancedInterleavedBuffer){for(let J=0;J<Y.locationSize;J++)b(Y.location+J,se.meshPerAttribute);I.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=se.meshPerAttribute*se.count)}else for(let J=0;J<Y.locationSize;J++)x(Y.location+J);r.bindBuffer(34962,ze);for(let J=0;J<Y.locationSize;J++)L(Y.location+J,ye/Y.locationSize,Se,fe,Ie*Re,(Z+ye/Y.locationSize*J)*Re)}else{if(re.isInstancedBufferAttribute){for(let se=0;se<Y.locationSize;se++)b(Y.location+se,re.meshPerAttribute);I.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=re.meshPerAttribute*re.count)}else for(let se=0;se<Y.locationSize;se++)x(Y.location+se);r.bindBuffer(34962,ze);for(let se=0;se<Y.locationSize;se++)L(Y.location+se,ye/Y.locationSize,Se,fe,ye*Re,ye/Y.locationSize*se*Re)}}else if(G!==void 0){const fe=G[Q];if(fe!==void 0)switch(fe.length){case 2:r.vertexAttrib2fv(Y.location,fe);break;case 3:r.vertexAttrib3fv(Y.location,fe);break;case 4:r.vertexAttrib4fv(Y.location,fe);break;default:r.vertexAttrib1fv(Y.location,fe)}}}}M()}function T(){U();for(const I in a){const N=a[I];for(const B in N){const H=N[B];for(const q in H)p(H[q].object),delete H[q];delete N[B]}delete a[I]}}function R(I){if(a[I.id]===void 0)return;const N=a[I.id];for(const B in N){const H=N[B];for(const q in H)p(H[q].object),delete H[q];delete N[B]}delete a[I.id]}function F(I){for(const N in a){const B=a[N];if(B[I.id]===void 0)continue;const H=B[I.id];for(const q in H)p(H[q].object),delete H[q];delete B[I.id]}}function U(){X(),u=!0,c!==l&&(c=l,d(c.object))}function X(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:U,resetDefaultState:X,dispose:T,releaseStatesOfGeometry:R,releaseStatesOfProgram:F,initAttributes:_,enableAttribute:x,disableUnusedAttributes:M}}function cM(r,e,t,n){const i=n.isWebGL2;let s;function o(c){s=c}function a(c,u){r.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,h){if(h===0)return;let f,d;if(i)f=r,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,c,u,h),t.update(u,s,h)}this.setMode=o,this.render=a,this.renderInstances=l}function uM(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(L){if(L==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";L="mediump"}return L==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&r instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=r.getParameter(34930),f=r.getParameter(35660),d=r.getParameter(3379),p=r.getParameter(34076),m=r.getParameter(34921),g=r.getParameter(36347),y=r.getParameter(36348),v=r.getParameter(36349),_=f>0,x=o||e.has("OES_texture_float"),b=_&&x,M=o?r.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:g,maxVaryings:y,maxFragmentUniforms:v,vertexTextures:_,floatFragmentTextures:x,floatVertexTextures:b,maxSamples:M}}function hM(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new zn,a=new St,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,d){const p=h.length!==0||f||n!==0||i;return i=f,t=u(h,d,0),n=h.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(h,f,d){const p=h.clippingPlanes,m=h.clipIntersection,g=h.clipShadows,y=r.get(h);if(!i||p===null||p.length===0||s&&!g)s?u(null):c();else{const v=s?0:n,_=v*4;let x=y.clippingState||null;l.value=x,x=u(p,f,_,d);for(let b=0;b!==_;++b)x[b]=t[b];y.clippingState=x,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=v}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,f,d,p){const m=h!==null?h.length:0;let g=null;if(m!==0){if(g=l.value,p!==!0||g===null){const y=d+m*4,v=f.matrixWorldInverse;a.getNormalMatrix(v),(g===null||g.length<y)&&(g=new Float32Array(y));for(let _=0,x=d;_!==m;++_,x+=4)o.copy(h[_]).applyMatrix4(v,a),o.normal.toArray(g,x),g[x+3]=o.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,g}}function fM(r){let e=new WeakMap;function t(o,a){return a===_s?o.mapping=Li:a===Co&&(o.mapping=Pi),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===_s||a===Co)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Zl(l.height/2);return c.fromEquirectangularTexture(r,o),e.set(o,c),o.addEventListener("dispose",i),t(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class ki extends jo{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}ki.prototype.isOrthographicCamera=!0;const fs=4,Hd=[.125,.215,.35,.446,.526,.582],rr=20,Xc=new ki,Gd=new ne;let jc=null;const tr=(1+Math.sqrt(5))/2,Qr=1/tr,Vd=[new S(1,1,1),new S(-1,1,1),new S(1,1,-1),new S(-1,1,-1),new S(0,tr,Qr),new S(0,tr,-Qr),new S(Qr,0,tr),new S(-Qr,0,tr),new S(tr,Qr,0),new S(-tr,Qr,0)];class Ku{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){jc=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=qd(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=$d(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(jc),e.scissorTest=!1,Fa(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Li||e.mapping===Pi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),jc=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:ot,minFilter:ot,generateMipmaps:!1,type:ws,format:Wt,encoding:oi,depthBuffer:!1},i=Wd(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Wd(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=dM(s)),this._blurMaterial=pM(s,e,t)}return i}_compileMaterial(e){const t=new ht(this._lodPlanes[0],e);this._renderer.compile(t,Xc)}_sceneToCubeUV(e,t,n,i){const a=new Mt(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(Gd),u.toneMapping=Sn,u.autoClear=!1;const d=new fi({name:"PMREM.Background",side:$t,depthWrite:!1,depthTest:!1}),p=new ht(new ai,d);let m=!1;const g=e.background;g?g.isColor&&(d.color.copy(g),e.background=null,m=!0):(d.color.copy(Gd),m=!0);for(let y=0;y<6;y++){const v=y%3;v===0?(a.up.set(0,l[y],0),a.lookAt(c[y],0,0)):v===1?(a.up.set(0,0,l[y]),a.lookAt(0,c[y],0)):(a.up.set(0,l[y],0),a.lookAt(0,0,c[y]));const _=this._cubeSize;Fa(i,v*_,y>2?_:0,_,_),u.setRenderTarget(i),m&&u.render(p,a),u.render(e,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=f,u.autoClear=h,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Li||e.mapping===Pi;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=qd()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=$d());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new ht(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Fa(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,Xc)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=Vd[(i-1)%Vd.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new ht(this._lodPlanes[i],c),f=c.uniforms,d=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*rr-1),m=s/p,g=isFinite(s)?1+Math.floor(u*m):rr;g>rr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${rr}`);const y=[];let v=0;for(let L=0;L<rr;++L){const w=L/m,T=Math.exp(-w*w/2);y.push(T),L===0?v+=T:L<g&&(v+=2*T)}for(let L=0;L<y.length;L++)y[L]=y[L]/v;f.envMap.value=e.texture,f.samples.value=g,f.weights.value=y,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:_}=this;f.dTheta.value=p,f.mipInt.value=_-n;const x=this._sizeLods[i],b=3*x*(i>_-fs?i-_+fs:0),M=4*(this._cubeSize-x);Fa(t,b,M,3*x,2*x),l.setRenderTarget(t),l.render(h,Xc)}}function dM(r){const e=[],t=[],n=[];let i=r;const s=r-fs+1+Hd.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);t.push(a);let l=1/a;o>r-fs?l=Hd[o-r+fs-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,p=6,m=3,g=2,y=1,v=new Float32Array(m*p*d),_=new Float32Array(g*p*d),x=new Float32Array(y*p*d);for(let M=0;M<d;M++){const L=M%3*2/3-1,w=M>2?0:-1,T=[L,w,0,L+2/3,w,0,L+2/3,w+1,0,L,w,0,L+2/3,w+1,0,L,w+1,0];v.set(T,m*p*M),_.set(f,g*p*M);const R=[M,M,M,M,M,M];x.set(R,y*p*M)}const b=new Me;b.setAttribute("position",new We(v,m)),b.setAttribute("uv",new We(_,g)),b.setAttribute("faceIndex",new We(x,y)),e.push(b),i>fs&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Wd(r,e,t){const n=new Dt(r,e,t);return n.texture.mapping=Ws,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Fa(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function pM(r,e,t){const n=new Float32Array(rr),i=new S(0,1,0);return new It({name:"SphericalGaussianBlur",defines:{n:rr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Yh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:si,depthTest:!1,depthWrite:!1})}function $d(){return new It({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Yh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:si,depthTest:!1,depthWrite:!1})}function qd(){return new It({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Yh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:si,depthTest:!1,depthWrite:!1})}function Yh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function mM(r){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===_s||l===Co,u=l===Li||l===Pi;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=e.get(a);return t===null&&(t=new Ku(r)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),e.set(a,h),h.texture}else{if(e.has(a))return e.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){t===null&&(t=new Ku(r));const f=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",s),f.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function gM(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function yM(r,e,t,n){const i={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete i[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return i[f.id]===!0||(f.addEventListener("dispose",o),i[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const p in f)e.update(f[p],34962);const d=h.morphAttributes;for(const p in d){const m=d[p];for(let g=0,y=m.length;g<y;g++)e.update(m[g],34962)}}function c(h){const f=[],d=h.index,p=h.attributes.position;let m=0;if(d!==null){const v=d.array;m=d.version;for(let _=0,x=v.length;_<x;_+=3){const b=v[_+0],M=v[_+1],L=v[_+2];f.push(b,M,M,L,L,b)}}else{const v=p.array;m=p.version;for(let _=0,x=v.length/3-1;_<x;_+=3){const b=_+0,M=_+1,L=_+2;f.push(b,M,M,L,L,b)}}const g=new(cy(f)?jl:qo)(f,1);g.version=m;const y=s.get(h);y&&e.remove(y),s.set(h,g)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function vM(r,e,t,n){const i=n.isWebGL2;let s;function o(f){s=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function u(f,d){r.drawElements(s,d,a,f*l),t.update(d,s,1)}function h(f,d,p){if(p===0)return;let m,g;if(i)m=r,g="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](s,d,a,f*l,p),t.update(d,s,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function _M(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function xM(r,e){return r[0]-e[0]}function wM(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Yc(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function bM(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new qe,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,f){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=p!==void 0?p.length:0;let g=s.get(u);if(g===void 0||g.count!==m){let N=function(){X.dispose(),s.delete(u),u.removeEventListener("dispose",N)};g!==void 0&&g.texture.dispose();const _=u.morphAttributes.position!==void 0,x=u.morphAttributes.normal!==void 0,b=u.morphAttributes.color!==void 0,M=u.morphAttributes.position||[],L=u.morphAttributes.normal||[],w=u.morphAttributes.color||[];let T=0;_===!0&&(T=1),x===!0&&(T=2),b===!0&&(T=3);let R=u.attributes.position.count*T,F=1;R>e.maxTextureSize&&(F=Math.ceil(R/e.maxTextureSize),R=e.maxTextureSize);const U=new Float32Array(R*F*4*m),X=new $s(U,R,F,m);X.type=ei,X.needsUpdate=!0;const I=T*4;for(let B=0;B<m;B++){const H=M[B],q=L[B],z=w[B],G=R*F*4*B;for(let Q=0;Q<H.count;Q++){const Y=Q*I;_===!0&&(o.fromBufferAttribute(H,Q),H.normalized===!0&&Yc(o,H),U[G+Y+0]=o.x,U[G+Y+1]=o.y,U[G+Y+2]=o.z,U[G+Y+3]=0),x===!0&&(o.fromBufferAttribute(q,Q),q.normalized===!0&&Yc(o,q),U[G+Y+4]=o.x,U[G+Y+5]=o.y,U[G+Y+6]=o.z,U[G+Y+7]=0),b===!0&&(o.fromBufferAttribute(z,Q),z.normalized===!0&&Yc(o,z),U[G+Y+8]=o.x,U[G+Y+9]=o.y,U[G+Y+10]=o.z,U[G+Y+11]=z.itemSize===4?o.w:1)}}g={count:m,texture:X,size:new $(R,F)},s.set(u,g),u.addEventListener("dispose",N)}let y=0;for(let _=0;_<d.length;_++)y+=d[_];const v=u.morphTargetsRelative?1:1-y;f.getUniforms().setValue(r,"morphTargetBaseInfluence",v),f.getUniforms().setValue(r,"morphTargetInfluences",d),f.getUniforms().setValue(r,"morphTargetsTexture",g.texture,t),f.getUniforms().setValue(r,"morphTargetsTextureSize",g.size)}else{const p=d===void 0?0:d.length;let m=n[u.id];if(m===void 0||m.length!==p){m=[];for(let x=0;x<p;x++)m[x]=[x,0];n[u.id]=m}for(let x=0;x<p;x++){const b=m[x];b[0]=x,b[1]=d[x]}m.sort(wM);for(let x=0;x<8;x++)x<p&&m[x][1]?(a[x][0]=m[x][0],a[x][1]=m[x][1]):(a[x][0]=Number.MAX_SAFE_INTEGER,a[x][1]=0);a.sort(xM);const g=u.morphAttributes.position,y=u.morphAttributes.normal;let v=0;for(let x=0;x<8;x++){const b=a[x],M=b[0],L=b[1];M!==Number.MAX_SAFE_INTEGER&&L?(g&&u.getAttribute("morphTarget"+x)!==g[M]&&u.setAttribute("morphTarget"+x,g[M]),y&&u.getAttribute("morphNormal"+x)!==y[M]&&u.setAttribute("morphNormal"+x,y[M]),i[x]=L,v+=L):(g&&u.hasAttribute("morphTarget"+x)===!0&&u.deleteAttribute("morphTarget"+x),y&&u.hasAttribute("morphNormal"+x)===!0&&u.deleteAttribute("morphNormal"+x),i[x]=0)}const _=u.morphTargetsRelative?1:1-v;f.getUniforms().setValue(r,"morphTargetBaseInfluence",_),f.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function MM(r,e,t,n){let i=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=e.get(l,u);return i.get(h)!==c&&(e.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const by=new ft,My=new $s,Sy=new $o,Ey=new qs,Xd=[],jd=[],Yd=new Float32Array(16),Zd=new Float32Array(9),Jd=new Float32Array(4);function Xs(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Xd[i];if(s===void 0&&(s=new Float32Array(i),Xd[i]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function kt(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Ht(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Jl(r,e){let t=jd[e];t===void 0&&(t=new Int32Array(e),jd[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function SM(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function EM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(kt(t,e))return;r.uniform2fv(this.addr,e),Ht(t,e)}}function TM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(kt(t,e))return;r.uniform3fv(this.addr,e),Ht(t,e)}}function AM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(kt(t,e))return;r.uniform4fv(this.addr,e),Ht(t,e)}}function CM(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(kt(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Ht(t,e)}else{if(kt(t,n))return;Jd.set(n),r.uniformMatrix2fv(this.addr,!1,Jd),Ht(t,n)}}function LM(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(kt(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Ht(t,e)}else{if(kt(t,n))return;Zd.set(n),r.uniformMatrix3fv(this.addr,!1,Zd),Ht(t,n)}}function PM(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(kt(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Ht(t,e)}else{if(kt(t,n))return;Yd.set(n),r.uniformMatrix4fv(this.addr,!1,Yd),Ht(t,n)}}function RM(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function DM(r,e){const t=this.cache;kt(t,e)||(r.uniform2iv(this.addr,e),Ht(t,e))}function IM(r,e){const t=this.cache;kt(t,e)||(r.uniform3iv(this.addr,e),Ht(t,e))}function FM(r,e){const t=this.cache;kt(t,e)||(r.uniform4iv(this.addr,e),Ht(t,e))}function BM(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function OM(r,e){const t=this.cache;kt(t,e)||(r.uniform2uiv(this.addr,e),Ht(t,e))}function zM(r,e){const t=this.cache;kt(t,e)||(r.uniform3uiv(this.addr,e),Ht(t,e))}function NM(r,e){const t=this.cache;kt(t,e)||(r.uniform4uiv(this.addr,e),Ht(t,e))}function UM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||by,i)}function kM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Sy,i)}function HM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Ey,i)}function GM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||My,i)}function VM(r){switch(r){case 5126:return SM;case 35664:return EM;case 35665:return TM;case 35666:return AM;case 35674:return CM;case 35675:return LM;case 35676:return PM;case 5124:case 35670:return RM;case 35667:case 35671:return DM;case 35668:case 35672:return IM;case 35669:case 35673:return FM;case 5125:return BM;case 36294:return OM;case 36295:return zM;case 36296:return NM;case 35678:case 36198:case 36298:case 36306:case 35682:return UM;case 35679:case 36299:case 36307:return kM;case 35680:case 36300:case 36308:case 36293:return HM;case 36289:case 36303:case 36311:case 36292:return GM}}function WM(r,e){r.uniform1fv(this.addr,e)}function $M(r,e){const t=Xs(e,this.size,2);r.uniform2fv(this.addr,t)}function qM(r,e){const t=Xs(e,this.size,3);r.uniform3fv(this.addr,t)}function XM(r,e){const t=Xs(e,this.size,4);r.uniform4fv(this.addr,t)}function jM(r,e){const t=Xs(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function YM(r,e){const t=Xs(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function ZM(r,e){const t=Xs(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function JM(r,e){r.uniform1iv(this.addr,e)}function KM(r,e){r.uniform2iv(this.addr,e)}function QM(r,e){r.uniform3iv(this.addr,e)}function eS(r,e){r.uniform4iv(this.addr,e)}function tS(r,e){r.uniform1uiv(this.addr,e)}function nS(r,e){r.uniform2uiv(this.addr,e)}function iS(r,e){r.uniform3uiv(this.addr,e)}function rS(r,e){r.uniform4uiv(this.addr,e)}function sS(r,e,t){const n=e.length,i=Jl(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||by,i[s])}function oS(r,e,t){const n=e.length,i=Jl(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Sy,i[s])}function aS(r,e,t){const n=e.length,i=Jl(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Ey,i[s])}function lS(r,e,t){const n=e.length,i=Jl(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||My,i[s])}function cS(r){switch(r){case 5126:return WM;case 35664:return $M;case 35665:return qM;case 35666:return XM;case 35674:return jM;case 35675:return YM;case 35676:return ZM;case 5124:case 35670:return JM;case 35667:case 35671:return KM;case 35668:case 35672:return QM;case 35669:case 35673:return eS;case 5125:return tS;case 36294:return nS;case 36295:return iS;case 36296:return rS;case 35678:case 36198:case 36298:case 36306:case 35682:return sS;case 35679:case 36299:case 36307:return oS;case 35680:case 36300:case 36308:case 36293:return aS;case 36289:case 36303:case 36311:case 36292:return lS}}function uS(r,e,t){this.id=r,this.addr=t,this.cache=[],this.setValue=VM(e.type)}function hS(r,e,t){this.id=r,this.addr=t,this.cache=[],this.size=e.size,this.setValue=cS(e.type)}function Ty(r){this.id=r,this.seq=[],this.map={}}Ty.prototype.setValue=function(r,e,t){const n=this.seq;for(let i=0,s=n.length;i!==s;++i){const o=n[i];o.setValue(r,e[o.id],t)}};const Zc=/(\w+)(\])?(\[|\.)?/g;function Kd(r,e){r.seq.push(e),r.map[e.id]=e}function fS(r,e,t){const n=r.name,i=n.length;for(Zc.lastIndex=0;;){const s=Zc.exec(n),o=Zc.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){Kd(t,c===void 0?new uS(a,r,e):new hS(a,r,e));break}else{let h=t.map[a];h===void 0&&(h=new Ty(a),Kd(t,h)),t=h}}}function Ei(r,e){this.seq=[],this.map={};const t=r.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=r.getActiveUniform(e,n),s=r.getUniformLocation(e,i.name);fS(i,s,this)}}Ei.prototype.setValue=function(r,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(r,t,n)};Ei.prototype.setOptional=function(r,e,t){const n=e[t];n!==void 0&&this.setValue(r,t,n)};Ei.upload=function(r,e,t,n){for(let i=0,s=e.length;i!==s;++i){const o=e[i],a=t[o.id];a.needsUpdate!==!1&&o.setValue(r,a.value,n)}};Ei.seqWithValue=function(r,e){const t=[];for(let n=0,i=r.length;n!==i;++n){const s=r[n];s.id in e&&t.push(s)}return t};function Qd(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let dS=0;function pS(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++)n.push(o+1+": "+t[o]);return n.join(`
`)}function mS(r){switch(r){case oi:return["Linear","( value )"];case He:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function ep(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[0]);return t.toUpperCase()+`

`+i+`

`+pS(r.getShaderSource(e),o)}else return i}function gS(r,e){const t=mS(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function yS(r,e){let t;switch(e){case kh:t="Linear";break;case Hh:t="Reinhard";break;case Gh:t="OptimizedCineon";break;case Vh:t="ACESFilmic";break;case kg:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function vS(r){return[r.extensionDerivatives||!!r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(yo).join(`
`)}function _S(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function xS(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function yo(r){return r!==""}function tp(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function np(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const wS=/^[ \t]*#include +<([\w\d./]+)>/gm;function Qu(r){return r.replace(wS,bS)}function bS(r,e){const t=Ue[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Qu(t)}const MS=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,SS=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ip(r){return r.replace(SS,Ay).replace(MS,ES)}function ES(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ay(r,e,t,n)}function Ay(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function rp(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function TS(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Bh?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===xg?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===us&&(e="SHADOWMAP_TYPE_VSM"),e}function AS(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case Li:case Pi:e="ENVMAP_TYPE_CUBE";break;case Ws:e="ENVMAP_TYPE_CUBE_UV";break}return e}function CS(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Pi:e="ENVMAP_MODE_REFRACTION";break}return e}function LS(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case gr:e="ENVMAP_BLENDING_MULTIPLY";break;case Ug:e="ENVMAP_BLENDING_MIX";break;case Ll:e="ENVMAP_BLENDING_ADD";break}return e}function PS(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function RS(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=TS(t),c=AS(t),u=CS(t),h=LS(t),f=PS(t),d=t.isWebGL2?"":vS(t),p=_S(s),m=i.createProgram();let g,y,v=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=[p].filter(yo).join(`
`),g.length>0&&(g+=`
`),y=[d,p].filter(yo).join(`
`),y.length>0&&(y+=`
`)):(g=[rp(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(yo).join(`
`),y=[d,rp(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Sn?"#define TONE_MAPPING":"",t.toneMapping!==Sn?Ue.tonemapping_pars_fragment:"",t.toneMapping!==Sn?yS("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ue.encodings_pars_fragment,gS("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(yo).join(`
`)),o=Qu(o),o=tp(o,t),o=np(o,t),a=Qu(a),a=tp(a,t),a=np(a,t),o=ip(o),a=ip(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,y=["#define varying in",t.glslVersion===Zu?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Zu?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const _=v+g+o,x=v+y+a,b=Qd(i,35633,_),M=Qd(i,35632,x);if(i.attachShader(m,b),i.attachShader(m,M),t.index0AttributeName!==void 0?i.bindAttribLocation(m,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),r.debug.checkShaderErrors){const T=i.getProgramInfoLog(m).trim(),R=i.getShaderInfoLog(b).trim(),F=i.getShaderInfoLog(M).trim();let U=!0,X=!0;if(i.getProgramParameter(m,35714)===!1){U=!1;const I=ep(i,b,"vertex"),N=ep(i,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,35715)+`

Program Info Log: `+T+`
`+I+`
`+N)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(R===""||F==="")&&(X=!1);X&&(this.diagnostics={runnable:U,programLog:T,vertexShader:{log:R,prefix:g},fragmentShader:{log:F,prefix:y}})}i.deleteShader(b),i.deleteShader(M);let L;this.getUniforms=function(){return L===void 0&&(L=new Ei(i,m)),L};let w;return this.getAttributes=function(){return w===void 0&&(w=xS(i,m)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=t.shaderName,this.id=dS++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=b,this.fragmentShader=M,this}let DS=0;class IS{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new FS(e);t.set(e,n)}return t.get(e)}}class FS{constructor(e){this.id=DS++,this.code=e,this.usedTimes=0}}function BS(r,e,t,n,i,s,o){const a=new Xl,l=new IS,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,f=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(w,T,R,F,U){const X=F.fog,I=U.geometry,N=w.isMeshStandardMaterial?F.environment:null,B=(w.isMeshStandardMaterial?t:e).get(w.envMap||N),H=!!B&&B.mapping===Ws?B.image.height:null,q=p[w.type];w.precision!==null&&(d=i.getMaxPrecision(w.precision),d!==w.precision&&console.warn("THREE.WebGLProgram.getParameters:",w.precision,"not supported, using",d,"instead."));const z=I.morphAttributes.position||I.morphAttributes.normal||I.morphAttributes.color,G=z!==void 0?z.length:0;let Q=0;I.morphAttributes.position!==void 0&&(Q=1),I.morphAttributes.normal!==void 0&&(Q=2),I.morphAttributes.color!==void 0&&(Q=3);let Y,re,fe,ye;if(q){const se=Bt[q];Y=se.vertexShader,re=se.fragmentShader}else Y=w.vertexShader,re=w.fragmentShader,l.update(w),fe=l.getVertexShaderID(w),ye=l.getFragmentShaderID(w);const j=r.getRenderTarget(),ze=w.alphaTest>0,Se=w.clearcoat>0;return{isWebGL2:u,shaderID:q,shaderName:w.type,vertexShader:Y,fragmentShader:re,defines:w.defines,customVertexShaderID:fe,customFragmentShaderID:ye,isRawShaderMaterial:w.isRawShaderMaterial===!0,glslVersion:w.glslVersion,precision:d,instancing:U.isInstancedMesh===!0,instancingColor:U.isInstancedMesh===!0&&U.instanceColor!==null,supportsVertexTextures:f,outputEncoding:j===null?r.outputEncoding:j.isXRRenderTarget===!0?j.texture.encoding:oi,map:!!w.map,matcap:!!w.matcap,envMap:!!B,envMapMode:B&&B.mapping,envMapCubeUVHeight:H,lightMap:!!w.lightMap,aoMap:!!w.aoMap,emissiveMap:!!w.emissiveMap,bumpMap:!!w.bumpMap,normalMap:!!w.normalMap,objectSpaceNormalMap:w.normalMapType===oy,tangentSpaceNormalMap:w.normalMapType===Oi,decodeVideoTexture:!!w.map&&w.map.isVideoTexture===!0&&w.map.encoding===He,clearcoat:Se,clearcoatMap:Se&&!!w.clearcoatMap,clearcoatRoughnessMap:Se&&!!w.clearcoatRoughnessMap,clearcoatNormalMap:Se&&!!w.clearcoatNormalMap,displacementMap:!!w.displacementMap,roughnessMap:!!w.roughnessMap,metalnessMap:!!w.metalnessMap,specularMap:!!w.specularMap,specularIntensityMap:!!w.specularIntensityMap,specularColorMap:!!w.specularColorMap,opaque:w.transparent===!1&&w.blending===cr,alphaMap:!!w.alphaMap,alphaTest:ze,gradientMap:!!w.gradientMap,sheen:w.sheen>0,sheenColorMap:!!w.sheenColorMap,sheenRoughnessMap:!!w.sheenRoughnessMap,transmission:w.transmission>0,transmissionMap:!!w.transmissionMap,thicknessMap:!!w.thicknessMap,combine:w.combine,vertexTangents:!!w.normalMap&&!!I.attributes.tangent,vertexColors:w.vertexColors,vertexAlphas:w.vertexColors===!0&&!!I.attributes.color&&I.attributes.color.itemSize===4,vertexUvs:!!w.map||!!w.bumpMap||!!w.normalMap||!!w.specularMap||!!w.alphaMap||!!w.emissiveMap||!!w.roughnessMap||!!w.metalnessMap||!!w.clearcoatMap||!!w.clearcoatRoughnessMap||!!w.clearcoatNormalMap||!!w.displacementMap||!!w.transmissionMap||!!w.thicknessMap||!!w.specularIntensityMap||!!w.specularColorMap||!!w.sheenColorMap||!!w.sheenRoughnessMap,uvsVertexOnly:!(!!w.map||!!w.bumpMap||!!w.normalMap||!!w.specularMap||!!w.alphaMap||!!w.emissiveMap||!!w.roughnessMap||!!w.metalnessMap||!!w.clearcoatNormalMap||w.transmission>0||!!w.transmissionMap||!!w.thicknessMap||!!w.specularIntensityMap||!!w.specularColorMap||w.sheen>0||!!w.sheenColorMap||!!w.sheenRoughnessMap)&&!!w.displacementMap,fog:!!X,useFog:w.fog===!0,fogExp2:X&&X.isFogExp2,flatShading:!!w.flatShading,sizeAttenuation:w.sizeAttenuation,logarithmicDepthBuffer:h,skinning:U.isSkinnedMesh===!0,morphTargets:I.morphAttributes.position!==void 0,morphNormals:I.morphAttributes.normal!==void 0,morphColors:I.morphAttributes.color!==void 0,morphTargetsCount:G,morphTextureStride:Q,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:w.dithering,shadowMapEnabled:r.shadowMap.enabled&&R.length>0,shadowMapType:r.shadowMap.type,toneMapping:w.toneMapped?r.toneMapping:Sn,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:w.premultipliedAlpha,doubleSided:w.side===Ci,flipSided:w.side===$t,useDepthPacking:!!w.depthPacking,depthPacking:w.depthPacking||0,index0AttributeName:w.index0AttributeName,extensionDerivatives:w.extensions&&w.extensions.derivatives,extensionFragDepth:w.extensions&&w.extensions.fragDepth,extensionDrawBuffers:w.extensions&&w.extensions.drawBuffers,extensionShaderTextureLOD:w.extensions&&w.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:w.customProgramCacheKey()}}function g(w){const T=[];if(w.shaderID?T.push(w.shaderID):(T.push(w.customVertexShaderID),T.push(w.customFragmentShaderID)),w.defines!==void 0)for(const R in w.defines)T.push(R),T.push(w.defines[R]);return w.isRawShaderMaterial===!1&&(y(T,w),v(T,w),T.push(r.outputEncoding)),T.push(w.customProgramCacheKey),T.join()}function y(w,T){w.push(T.precision),w.push(T.outputEncoding),w.push(T.envMapMode),w.push(T.envMapCubeUVHeight),w.push(T.combine),w.push(T.vertexUvs),w.push(T.fogExp2),w.push(T.sizeAttenuation),w.push(T.morphTargetsCount),w.push(T.morphAttributeCount),w.push(T.numDirLights),w.push(T.numPointLights),w.push(T.numSpotLights),w.push(T.numHemiLights),w.push(T.numRectAreaLights),w.push(T.numDirLightShadows),w.push(T.numPointLightShadows),w.push(T.numSpotLightShadows),w.push(T.shadowMapType),w.push(T.toneMapping),w.push(T.numClippingPlanes),w.push(T.numClipIntersection),w.push(T.depthPacking)}function v(w,T){a.disableAll(),T.isWebGL2&&a.enable(0),T.supportsVertexTextures&&a.enable(1),T.instancing&&a.enable(2),T.instancingColor&&a.enable(3),T.map&&a.enable(4),T.matcap&&a.enable(5),T.envMap&&a.enable(6),T.lightMap&&a.enable(7),T.aoMap&&a.enable(8),T.emissiveMap&&a.enable(9),T.bumpMap&&a.enable(10),T.normalMap&&a.enable(11),T.objectSpaceNormalMap&&a.enable(12),T.tangentSpaceNormalMap&&a.enable(13),T.clearcoat&&a.enable(14),T.clearcoatMap&&a.enable(15),T.clearcoatRoughnessMap&&a.enable(16),T.clearcoatNormalMap&&a.enable(17),T.displacementMap&&a.enable(18),T.specularMap&&a.enable(19),T.roughnessMap&&a.enable(20),T.metalnessMap&&a.enable(21),T.gradientMap&&a.enable(22),T.alphaMap&&a.enable(23),T.alphaTest&&a.enable(24),T.vertexColors&&a.enable(25),T.vertexAlphas&&a.enable(26),T.vertexUvs&&a.enable(27),T.vertexTangents&&a.enable(28),T.uvsVertexOnly&&a.enable(29),T.fog&&a.enable(30),w.push(a.mask),a.disableAll(),T.useFog&&a.enable(0),T.flatShading&&a.enable(1),T.logarithmicDepthBuffer&&a.enable(2),T.skinning&&a.enable(3),T.morphTargets&&a.enable(4),T.morphNormals&&a.enable(5),T.morphColors&&a.enable(6),T.premultipliedAlpha&&a.enable(7),T.shadowMapEnabled&&a.enable(8),T.physicallyCorrectLights&&a.enable(9),T.doubleSided&&a.enable(10),T.flipSided&&a.enable(11),T.useDepthPacking&&a.enable(12),T.dithering&&a.enable(13),T.specularIntensityMap&&a.enable(14),T.specularColorMap&&a.enable(15),T.transmission&&a.enable(16),T.transmissionMap&&a.enable(17),T.thicknessMap&&a.enable(18),T.sheen&&a.enable(19),T.sheenColorMap&&a.enable(20),T.sheenRoughnessMap&&a.enable(21),T.decodeVideoTexture&&a.enable(22),T.opaque&&a.enable(23),w.push(a.mask)}function _(w){const T=p[w.type];let R;if(T){const F=Bt[T];R=Xo.clone(F.uniforms)}else R=w.uniforms;return R}function x(w,T){let R;for(let F=0,U=c.length;F<U;F++){const X=c[F];if(X.cacheKey===T){R=X,++R.usedTimes;break}}return R===void 0&&(R=new RS(r,T,w,s),c.push(R)),R}function b(w){if(--w.usedTimes===0){const T=c.indexOf(w);c[T]=c[c.length-1],c.pop(),w.destroy()}}function M(w){l.remove(w)}function L(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:_,acquireProgram:x,releaseProgram:b,releaseShaderCache:M,programs:c,dispose:L}}function OS(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function zS(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function sp(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function op(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(h,f,d,p,m,g){let y=r[e];return y===void 0?(y={id:h.id,object:h,geometry:f,material:d,groupOrder:p,renderOrder:h.renderOrder,z:m,group:g},r[e]=y):(y.id=h.id,y.object=h,y.geometry=f,y.material=d,y.groupOrder=p,y.renderOrder=h.renderOrder,y.z=m,y.group=g),e++,y}function a(h,f,d,p,m,g){const y=o(h,f,d,p,m,g);d.transmission>0?n.push(y):d.transparent===!0?i.push(y):t.push(y)}function l(h,f,d,p,m,g){const y=o(h,f,d,p,m,g);d.transmission>0?n.unshift(y):d.transparent===!0?i.unshift(y):t.unshift(y)}function c(h,f){t.length>1&&t.sort(h||zS),n.length>1&&n.sort(f||sp),i.length>1&&i.sort(f||sp)}function u(){for(let h=e,f=r.length;h<f;h++){const d=r[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:u,sort:c}}function NS(){let r=new WeakMap;function e(n,i){let s;return r.has(n)===!1?(s=new op,r.set(n,[s])):i>=r.get(n).length?(s=new op,r.get(n).push(s)):s=r.get(n)[i],s}function t(){r=new WeakMap}return{get:e,dispose:t}}function US(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new S,color:new ne};break;case"SpotLight":t={position:new S,direction:new S,color:new ne,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new S,color:new ne,distance:0,decay:0};break;case"HemisphereLight":t={direction:new S,skyColor:new ne,groundColor:new ne};break;case"RectAreaLight":t={color:new ne,position:new S,halfWidth:new S,halfHeight:new S};break}return r[e.id]=t,t}}}function kS(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let HS=0;function GS(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function VS(r,e){const t=new US,n=kS(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new S);const s=new S,o=new ae,a=new ae;function l(u,h){let f=0,d=0,p=0;for(let T=0;T<9;T++)i.probe[T].set(0,0,0);let m=0,g=0,y=0,v=0,_=0,x=0,b=0,M=0;u.sort(GS);const L=h!==!0?Math.PI:1;for(let T=0,R=u.length;T<R;T++){const F=u[T],U=F.color,X=F.intensity,I=F.distance,N=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)f+=U.r*X*L,d+=U.g*X*L,p+=U.b*X*L;else if(F.isLightProbe)for(let B=0;B<9;B++)i.probe[B].addScaledVector(F.sh.coefficients[B],X);else if(F.isDirectionalLight){const B=t.get(F);if(B.color.copy(F.color).multiplyScalar(F.intensity*L),F.castShadow){const H=F.shadow,q=n.get(F);q.shadowBias=H.bias,q.shadowNormalBias=H.normalBias,q.shadowRadius=H.radius,q.shadowMapSize=H.mapSize,i.directionalShadow[m]=q,i.directionalShadowMap[m]=N,i.directionalShadowMatrix[m]=F.shadow.matrix,x++}i.directional[m]=B,m++}else if(F.isSpotLight){const B=t.get(F);if(B.position.setFromMatrixPosition(F.matrixWorld),B.color.copy(U).multiplyScalar(X*L),B.distance=I,B.coneCos=Math.cos(F.angle),B.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),B.decay=F.decay,F.castShadow){const H=F.shadow,q=n.get(F);q.shadowBias=H.bias,q.shadowNormalBias=H.normalBias,q.shadowRadius=H.radius,q.shadowMapSize=H.mapSize,i.spotShadow[y]=q,i.spotShadowMap[y]=N,i.spotShadowMatrix[y]=F.shadow.matrix,M++}i.spot[y]=B,y++}else if(F.isRectAreaLight){const B=t.get(F);B.color.copy(U).multiplyScalar(X),B.halfWidth.set(F.width*.5,0,0),B.halfHeight.set(0,F.height*.5,0),i.rectArea[v]=B,v++}else if(F.isPointLight){const B=t.get(F);if(B.color.copy(F.color).multiplyScalar(F.intensity*L),B.distance=F.distance,B.decay=F.decay,F.castShadow){const H=F.shadow,q=n.get(F);q.shadowBias=H.bias,q.shadowNormalBias=H.normalBias,q.shadowRadius=H.radius,q.shadowMapSize=H.mapSize,q.shadowCameraNear=H.camera.near,q.shadowCameraFar=H.camera.far,i.pointShadow[g]=q,i.pointShadowMap[g]=N,i.pointShadowMatrix[g]=F.shadow.matrix,b++}i.point[g]=B,g++}else if(F.isHemisphereLight){const B=t.get(F);B.skyColor.copy(F.color).multiplyScalar(X*L),B.groundColor.copy(F.groundColor).multiplyScalar(X*L),i.hemi[_]=B,_++}}v>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=he.LTC_FLOAT_1,i.rectAreaLTC2=he.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=he.LTC_HALF_1,i.rectAreaLTC2=he.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=d,i.ambient[2]=p;const w=i.hash;(w.directionalLength!==m||w.pointLength!==g||w.spotLength!==y||w.rectAreaLength!==v||w.hemiLength!==_||w.numDirectionalShadows!==x||w.numPointShadows!==b||w.numSpotShadows!==M)&&(i.directional.length=m,i.spot.length=y,i.rectArea.length=v,i.point.length=g,i.hemi.length=_,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=b,i.pointShadowMap.length=b,i.spotShadow.length=M,i.spotShadowMap.length=M,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=b,i.spotShadowMatrix.length=M,w.directionalLength=m,w.pointLength=g,w.spotLength=y,w.rectAreaLength=v,w.hemiLength=_,w.numDirectionalShadows=x,w.numPointShadows=b,w.numSpotShadows=M,i.version=HS++)}function c(u,h){let f=0,d=0,p=0,m=0,g=0;const y=h.matrixWorldInverse;for(let v=0,_=u.length;v<_;v++){const x=u[v];if(x.isDirectionalLight){const b=i.directional[f];b.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(y),f++}else if(x.isSpotLight){const b=i.spot[p];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(y),b.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),b.direction.sub(s),b.direction.transformDirection(y),p++}else if(x.isRectAreaLight){const b=i.rectArea[m];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(y),a.identity(),o.copy(x.matrixWorld),o.premultiply(y),a.extractRotation(o),b.halfWidth.set(x.width*.5,0,0),b.halfHeight.set(0,x.height*.5,0),b.halfWidth.applyMatrix4(a),b.halfHeight.applyMatrix4(a),m++}else if(x.isPointLight){const b=i.point[d];b.position.setFromMatrixPosition(x.matrixWorld),b.position.applyMatrix4(y),d++}else if(x.isHemisphereLight){const b=i.hemi[g];b.direction.setFromMatrixPosition(x.matrixWorld),b.direction.transformDirection(y),g++}}}return{setup:l,setupView:c,state:i}}function ap(r,e){const t=new VS(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){t.setup(n,h)}function c(h){t.setupView(n,h)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function WS(r,e){let t=new WeakMap;function n(s,o=0){let a;return t.has(s)===!1?(a=new ap(r,e),t.set(s,[a])):o>=t.get(s).length?(a=new ap(r,e),t.get(s).push(a)):a=t.get(s)[o],a}function i(){t=new WeakMap}return{get:n,dispose:i}}class Kl extends xt{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=ry,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}Kl.prototype.isMeshDepthMaterial=!0;class Ql extends xt{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new S,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Ql.prototype.isMeshDistanceMaterial=!0;const $S=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,qS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Cy(r,e,t){let n=new Yo;const i=new $,s=new $,o=new qe,a=new Kl({depthPacking:sy}),l=new Ql,c={},u=t.maxTextureSize,h={0:$t,1:mr,2:Ci},f=new It({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new $},radius:{value:4}},vertexShader:$S,fragmentShader:qS}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new Me;p.setAttribute("position",new We(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new ht(p,f),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Bh,this.render=function(x,b,M){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||x.length===0)return;const L=r.getRenderTarget(),w=r.getActiveCubeFace(),T=r.getActiveMipmapLevel(),R=r.state;R.setBlending(si),R.buffers.color.setClear(1,1,1,1),R.buffers.depth.setTest(!0),R.setScissorTest(!1);for(let F=0,U=x.length;F<U;F++){const X=x[F],I=X.shadow;if(I===void 0){console.warn("THREE.WebGLShadowMap:",X,"has no shadow.");continue}if(I.autoUpdate===!1&&I.needsUpdate===!1)continue;i.copy(I.mapSize);const N=I.getFrameExtents();if(i.multiply(N),s.copy(I.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/N.x),i.x=s.x*N.x,I.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/N.y),i.y=s.y*N.y,I.mapSize.y=s.y)),I.map===null&&!I.isPointLightShadow&&this.type===us&&(I.map=new Dt(i.x,i.y),I.map.texture.name=X.name+".shadowMap",I.mapPass=new Dt(i.x,i.y),I.camera.updateProjectionMatrix()),I.map===null){const H={minFilter:mt,magFilter:mt,format:Wt};I.map=new Dt(i.x,i.y,H),I.map.texture.name=X.name+".shadowMap",I.camera.updateProjectionMatrix()}r.setRenderTarget(I.map),r.clear();const B=I.getViewportCount();for(let H=0;H<B;H++){const q=I.getViewport(H);o.set(s.x*q.x,s.y*q.y,s.x*q.z,s.y*q.w),R.viewport(o),I.updateMatrices(X,H),n=I.getFrustum(),_(b,M,I.camera,X,this.type)}!I.isPointLightShadow&&this.type===us&&y(I,M),I.needsUpdate=!1}g.needsUpdate=!1,r.setRenderTarget(L,w,T)};function y(x,b){const M=e.update(m);f.defines.VSM_SAMPLES!==x.blurSamples&&(f.defines.VSM_SAMPLES=x.blurSamples,d.defines.VSM_SAMPLES=x.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),f.uniforms.shadow_pass.value=x.map.texture,f.uniforms.resolution.value=x.mapSize,f.uniforms.radius.value=x.radius,r.setRenderTarget(x.mapPass),r.clear(),r.renderBufferDirect(b,null,M,f,m,null),d.uniforms.shadow_pass.value=x.mapPass.texture,d.uniforms.resolution.value=x.mapSize,d.uniforms.radius.value=x.radius,r.setRenderTarget(x.map),r.clear(),r.renderBufferDirect(b,null,M,d,m,null)}function v(x,b,M,L,w,T){let R=null;const F=M.isPointLight===!0?x.customDistanceMaterial:x.customDepthMaterial;if(F!==void 0?R=F:R=M.isPointLight===!0?l:a,r.localClippingEnabled&&b.clipShadows===!0&&b.clippingPlanes.length!==0||b.displacementMap&&b.displacementScale!==0||b.alphaMap&&b.alphaTest>0){const U=R.uuid,X=b.uuid;let I=c[U];I===void 0&&(I={},c[U]=I);let N=I[X];N===void 0&&(N=R.clone(),I[X]=N),R=N}return R.visible=b.visible,R.wireframe=b.wireframe,T===us?R.side=b.shadowSide!==null?b.shadowSide:b.side:R.side=b.shadowSide!==null?b.shadowSide:h[b.side],R.alphaMap=b.alphaMap,R.alphaTest=b.alphaTest,R.clipShadows=b.clipShadows,R.clippingPlanes=b.clippingPlanes,R.clipIntersection=b.clipIntersection,R.displacementMap=b.displacementMap,R.displacementScale=b.displacementScale,R.displacementBias=b.displacementBias,R.wireframeLinewidth=b.wireframeLinewidth,R.linewidth=b.linewidth,M.isPointLight===!0&&R.isMeshDistanceMaterial===!0&&(R.referencePosition.setFromMatrixPosition(M.matrixWorld),R.nearDistance=L,R.farDistance=w),R}function _(x,b,M,L,w){if(x.visible===!1)return;if(x.layers.test(b.layers)&&(x.isMesh||x.isLine||x.isPoints)&&(x.castShadow||x.receiveShadow&&w===us)&&(!x.frustumCulled||n.intersectsObject(x))){x.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,x.matrixWorld);const F=e.update(x),U=x.material;if(Array.isArray(U)){const X=F.groups;for(let I=0,N=X.length;I<N;I++){const B=X[I],H=U[B.materialIndex];if(H&&H.visible){const q=v(x,H,L,M.near,M.far,w);r.renderBufferDirect(M,null,F,q,x,B)}}}else if(U.visible){const X=v(x,U,L,M.near,M.far,w);r.renderBufferDirect(M,null,F,X,x,null)}}const R=x.children;for(let F=0,U=R.length;F<U;F++)_(R[F],b,M,L,w)}}function XS(r,e,t){const n=t.isWebGL2;function i(){let D=!1;const le=new qe;let oe=null;const Ce=new qe(0,0,0,0);return{setMask:function(me){oe!==me&&!D&&(r.colorMask(me,me,me,me),oe=me)},setLocked:function(me){D=me},setClear:function(me,we,ce,Le,Qe){Qe===!0&&(me*=Le,we*=Le,ce*=Le),le.set(me,we,ce,Le),Ce.equals(le)===!1&&(r.clearColor(me,we,ce,Le),Ce.copy(le))},reset:function(){D=!1,oe=null,Ce.set(-1,0,0,0)}}}function s(){let D=!1,le=null,oe=null,Ce=null;return{setTest:function(me){me?ye(2929):j(2929)},setMask:function(me){le!==me&&!D&&(r.depthMask(me),le=me)},setFunc:function(me){if(oe!==me){if(me)switch(me){case Ig:r.depthFunc(512);break;case Fg:r.depthFunc(519);break;case Uh:r.depthFunc(513);break;case Cl:r.depthFunc(515);break;case Bg:r.depthFunc(514);break;case Og:r.depthFunc(518);break;case zg:r.depthFunc(516);break;case Ng:r.depthFunc(517);break;default:r.depthFunc(515)}else r.depthFunc(515);oe=me}},setLocked:function(me){D=me},setClear:function(me){Ce!==me&&(r.clearDepth(me),Ce=me)},reset:function(){D=!1,le=null,oe=null,Ce=null}}}function o(){let D=!1,le=null,oe=null,Ce=null,me=null,we=null,ce=null,Le=null,Qe=null;return{setTest:function($e){D||($e?ye(2960):j(2960))},setMask:function($e){le!==$e&&!D&&(r.stencilMask($e),le=$e)},setFunc:function($e,Ln,Pn){(oe!==$e||Ce!==Ln||me!==Pn)&&(r.stencilFunc($e,Ln,Pn),oe=$e,Ce=Ln,me=Pn)},setOp:function($e,Ln,Pn){(we!==$e||ce!==Ln||Le!==Pn)&&(r.stencilOp($e,Ln,Pn),we=$e,ce=Ln,Le=Pn)},setLocked:function($e){D=$e},setClear:function($e){Qe!==$e&&(r.clearStencil($e),Qe=$e)},reset:function(){D=!1,le=null,oe=null,Ce=null,me=null,we=null,ce=null,Le=null,Qe=null}}}const a=new i,l=new s,c=new o;let u={},h={},f=new WeakMap,d=[],p=null,m=!1,g=null,y=null,v=null,_=null,x=null,b=null,M=null,L=!1,w=null,T=null,R=null,F=null,U=null;const X=r.getParameter(35661);let I=!1,N=0;const B=r.getParameter(7938);B.indexOf("WebGL")!==-1?(N=parseFloat(/^WebGL (\d)/.exec(B)[1]),I=N>=1):B.indexOf("OpenGL ES")!==-1&&(N=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),I=N>=2);let H=null,q={};const z=r.getParameter(3088),G=r.getParameter(2978),Q=new qe().fromArray(z),Y=new qe().fromArray(G);function re(D,le,oe){const Ce=new Uint8Array(4),me=r.createTexture();r.bindTexture(D,me),r.texParameteri(D,10241,9728),r.texParameteri(D,10240,9728);for(let we=0;we<oe;we++)r.texImage2D(le+we,0,6408,1,1,0,6408,5121,Ce);return me}const fe={};fe[3553]=re(3553,3553,1),fe[34067]=re(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ye(2929),l.setFunc(Cl),ie(!1),_e(Su),ye(2884),Z(si);function ye(D){u[D]!==!0&&(r.enable(D),u[D]=!0)}function j(D){u[D]!==!1&&(r.disable(D),u[D]=!1)}function ze(D,le){return h[D]!==le?(r.bindFramebuffer(D,le),h[D]=le,n&&(D===36009&&(h[36160]=le),D===36160&&(h[36009]=le)),!0):!1}function Se(D,le){let oe=d,Ce=!1;if(D)if(oe=f.get(le),oe===void 0&&(oe=[],f.set(le,oe)),D.isWebGLMultipleRenderTargets){const me=D.texture;if(oe.length!==me.length||oe[0]!==36064){for(let we=0,ce=me.length;we<ce;we++)oe[we]=36064+we;oe.length=me.length,Ce=!0}}else oe[0]!==36064&&(oe[0]=36064,Ce=!0);else oe[0]!==1029&&(oe[0]=1029,Ce=!0);Ce&&(t.isWebGL2?r.drawBuffers(oe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(oe))}function Re(D){return p!==D?(r.useProgram(D),p=D,!0):!1}const se={[ir]:32774,[bg]:32778,[Mg]:32779};if(n)se[Au]=32775,se[Cu]=32776;else{const D=e.get("EXT_blend_minmax");D!==null&&(se[Au]=D.MIN_EXT,se[Cu]=D.MAX_EXT)}const Ie={[Sg]:0,[Eg]:1,[Tg]:768,[zh]:770,[Dg]:776,[Pg]:774,[Cg]:772,[Ag]:769,[Nh]:771,[Rg]:775,[Lg]:773};function Z(D,le,oe,Ce,me,we,ce,Le){if(D===si){m===!0&&(j(3042),m=!1);return}if(m===!1&&(ye(3042),m=!0),D!==wg){if(D!==g||Le!==L){if((y!==ir||x!==ir)&&(r.blendEquation(32774),y=ir,x=ir),Le)switch(D){case cr:r.blendFuncSeparate(1,771,1,771);break;case Al:r.blendFunc(1,1);break;case Eu:r.blendFuncSeparate(0,769,0,1);break;case Tu:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}else switch(D){case cr:r.blendFuncSeparate(770,771,1,771);break;case Al:r.blendFunc(770,1);break;case Eu:r.blendFuncSeparate(0,769,0,1);break;case Tu:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}v=null,_=null,b=null,M=null,g=D,L=Le}return}me=me||le,we=we||oe,ce=ce||Ce,(le!==y||me!==x)&&(r.blendEquationSeparate(se[le],se[me]),y=le,x=me),(oe!==v||Ce!==_||we!==b||ce!==M)&&(r.blendFuncSeparate(Ie[oe],Ie[Ce],Ie[we],Ie[ce]),v=oe,_=Ce,b=we,M=ce),g=D,L=null}function J(D,le){D.side===Ci?j(2884):ye(2884);let oe=D.side===$t;le&&(oe=!oe),ie(oe),D.blending===cr&&D.transparent===!1?Z(si):Z(D.blending,D.blendEquation,D.blendSrc,D.blendDst,D.blendEquationAlpha,D.blendSrcAlpha,D.blendDstAlpha,D.premultipliedAlpha),l.setFunc(D.depthFunc),l.setTest(D.depthTest),l.setMask(D.depthWrite),a.setMask(D.colorWrite);const Ce=D.stencilWrite;c.setTest(Ce),Ce&&(c.setMask(D.stencilWriteMask),c.setFunc(D.stencilFunc,D.stencilRef,D.stencilFuncMask),c.setOp(D.stencilFail,D.stencilZFail,D.stencilZPass)),De(D.polygonOffset,D.polygonOffsetFactor,D.polygonOffsetUnits),D.alphaToCoverage===!0?ye(32926):j(32926)}function ie(D){w!==D&&(D?r.frontFace(2304):r.frontFace(2305),w=D)}function _e(D){D!==vg?(ye(2884),D!==T&&(D===Su?r.cullFace(1029):D===_g?r.cullFace(1028):r.cullFace(1032))):j(2884),T=D}function de(D){D!==R&&(I&&r.lineWidth(D),R=D)}function De(D,le,oe){D?(ye(32823),(F!==le||U!==oe)&&(r.polygonOffset(le,oe),F=le,U=oe)):j(32823)}function Ae(D){D?ye(3089):j(3089)}function Ee(D){D===void 0&&(D=33984+X-1),H!==D&&(r.activeTexture(D),H=D)}function nt(D,le){H===null&&Ee();let oe=q[H];oe===void 0&&(oe={type:void 0,texture:void 0},q[H]=oe),(oe.type!==D||oe.texture!==le)&&(r.bindTexture(D,le||fe[D]),oe.type=D,oe.texture=le)}function Ye(){const D=q[H];D!==void 0&&D.type!==void 0&&(r.bindTexture(D.type,null),D.type=void 0,D.texture=void 0)}function P(){try{r.compressedTexImage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function E(){try{r.texSubImage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function V(){try{r.texSubImage3D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function ee(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function pe(){try{r.texStorage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function ve(){try{r.texStorage3D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function Te(){try{r.texImage2D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function A(){try{r.texImage3D.apply(r,arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function te(D){Q.equals(D)===!1&&(r.scissor(D.x,D.y,D.z,D.w),Q.copy(D))}function xe(D){Y.equals(D)===!1&&(r.viewport(D.x,D.y,D.z,D.w),Y.copy(D))}function ue(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},H=null,q={},h={},f=new WeakMap,d=[],p=null,m=!1,g=null,y=null,v=null,_=null,x=null,b=null,M=null,L=!1,w=null,T=null,R=null,F=null,U=null,Q.set(0,0,r.canvas.width,r.canvas.height),Y.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ye,disable:j,bindFramebuffer:ze,drawBuffers:Se,useProgram:Re,setBlending:Z,setMaterial:J,setFlipSided:ie,setCullFace:_e,setLineWidth:de,setPolygonOffset:De,setScissorTest:Ae,activeTexture:Ee,bindTexture:nt,unbindTexture:Ye,compressedTexImage2D:P,texImage2D:Te,texImage3D:A,texStorage2D:pe,texStorage3D:ve,texSubImage2D:E,texSubImage3D:V,compressedTexSubImage2D:ee,scissor:te,viewport:xe,reset:ue}}function jS(r,e,t,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let m;const g=new WeakMap;let y=!1;try{y=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(P,E){return y?new OffscreenCanvas(P,E):Fo("canvas")}function _(P,E,V,ee){let pe=1;if((P.width>ee||P.height>ee)&&(pe=ee/Math.max(P.width,P.height)),pe<1||E===!0)if(typeof HTMLImageElement!="undefined"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&P instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&P instanceof ImageBitmap){const ve=E?Il:Math.floor,Te=ve(pe*P.width),A=ve(pe*P.height);m===void 0&&(m=v(Te,A));const te=V?v(Te,A):m;return te.width=Te,te.height=A,te.getContext("2d").drawImage(P,0,0,Te,A),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+P.width+"x"+P.height+") to ("+Te+"x"+A+")."),te}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+P.width+"x"+P.height+")."),P;return P}function x(P){return Ju(P.width)&&Ju(P.height)}function b(P){return a?!1:P.wrapS!==Pt||P.wrapT!==Pt||P.minFilter!==mt&&P.minFilter!==ot}function M(P,E){return P.generateMipmaps&&E&&P.minFilter!==mt&&P.minFilter!==ot}function L(P){r.generateMipmap(P)}function w(P,E,V,ee,pe=!1){if(a===!1)return E;if(P!==null){if(r[P]!==void 0)return r[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let ve=E;return E===6403&&(V===5126&&(ve=33326),V===5131&&(ve=33325),V===5121&&(ve=33321)),E===33319&&(V===5126&&(ve=33328),V===5131&&(ve=33327),V===5121&&(ve=33323)),E===6408&&(V===5126&&(ve=34836),V===5131&&(ve=34842),V===5121&&(ve=ee===He&&pe===!1?35907:32856),V===32819&&(ve=32854),V===32820&&(ve=32855)),(ve===33325||ve===33326||ve===33327||ve===33328||ve===34842||ve===34836)&&e.get("EXT_color_buffer_float"),ve}function T(P,E,V){return M(P,V)===!0||P.isFramebufferTexture&&P.minFilter!==mt&&P.minFilter!==ot?Math.log2(Math.max(E.width,E.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?E.mipmaps.length:1}function R(P){return P===mt||P===Pl||P===Rl?9728:9729}function F(P){const E=P.target;E.removeEventListener("dispose",F),X(E),E.isVideoTexture&&p.delete(E)}function U(P){const E=P.target;E.removeEventListener("dispose",U),N(E)}function X(P){const E=n.get(P);if(E.__webglInit===void 0)return;const V=P.source,ee=g.get(V);if(ee){const pe=ee[E.__cacheKey];pe.usedTimes--,pe.usedTimes===0&&I(P),Object.keys(ee).length===0&&g.delete(V)}n.remove(P)}function I(P){const E=n.get(P);r.deleteTexture(E.__webglTexture);const V=P.source,ee=g.get(V);delete ee[E.__cacheKey],o.memory.textures--}function N(P){const E=P.texture,V=n.get(P),ee=n.get(E);if(ee.__webglTexture!==void 0&&(r.deleteTexture(ee.__webglTexture),o.memory.textures--),P.depthTexture&&P.depthTexture.dispose(),P.isWebGLCubeRenderTarget)for(let pe=0;pe<6;pe++)r.deleteFramebuffer(V.__webglFramebuffer[pe]),V.__webglDepthbuffer&&r.deleteRenderbuffer(V.__webglDepthbuffer[pe]);else r.deleteFramebuffer(V.__webglFramebuffer),V.__webglDepthbuffer&&r.deleteRenderbuffer(V.__webglDepthbuffer),V.__webglMultisampledFramebuffer&&r.deleteFramebuffer(V.__webglMultisampledFramebuffer),V.__webglColorRenderbuffer&&r.deleteRenderbuffer(V.__webglColorRenderbuffer),V.__webglDepthRenderbuffer&&r.deleteRenderbuffer(V.__webglDepthRenderbuffer);if(P.isWebGLMultipleRenderTargets)for(let pe=0,ve=E.length;pe<ve;pe++){const Te=n.get(E[pe]);Te.__webglTexture&&(r.deleteTexture(Te.__webglTexture),o.memory.textures--),n.remove(E[pe])}n.remove(E),n.remove(P)}let B=0;function H(){B=0}function q(){const P=B;return P>=l&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+l),B+=1,P}function z(P){const E=[];return E.push(P.wrapS),E.push(P.wrapT),E.push(P.magFilter),E.push(P.minFilter),E.push(P.anisotropy),E.push(P.internalFormat),E.push(P.format),E.push(P.type),E.push(P.generateMipmaps),E.push(P.premultiplyAlpha),E.push(P.flipY),E.push(P.unpackAlignment),E.push(P.encoding),E.join()}function G(P,E){const V=n.get(P);if(P.isVideoTexture&&nt(P),P.isRenderTargetTexture===!1&&P.version>0&&V.__version!==P.version){const ee=P.image;if(ee===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ee.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Se(V,P,E);return}}t.activeTexture(33984+E),t.bindTexture(3553,V.__webglTexture)}function Q(P,E){const V=n.get(P);if(P.version>0&&V.__version!==P.version){Se(V,P,E);return}t.activeTexture(33984+E),t.bindTexture(35866,V.__webglTexture)}function Y(P,E){const V=n.get(P);if(P.version>0&&V.__version!==P.version){Se(V,P,E);return}t.activeTexture(33984+E),t.bindTexture(32879,V.__webglTexture)}function re(P,E){const V=n.get(P);if(P.version>0&&V.__version!==P.version){Re(V,P,E);return}t.activeTexture(33984+E),t.bindTexture(34067,V.__webglTexture)}const fe={[yr]:10497,[Pt]:33071,[Lo]:33648},ye={[mt]:9728,[Pl]:9984,[Rl]:9986,[ot]:9729,[Wh]:9985,[Lr]:9987};function j(P,E,V){if(V?(r.texParameteri(P,10242,fe[E.wrapS]),r.texParameteri(P,10243,fe[E.wrapT]),(P===32879||P===35866)&&r.texParameteri(P,32882,fe[E.wrapR]),r.texParameteri(P,10240,ye[E.magFilter]),r.texParameteri(P,10241,ye[E.minFilter])):(r.texParameteri(P,10242,33071),r.texParameteri(P,10243,33071),(P===32879||P===35866)&&r.texParameteri(P,32882,33071),(E.wrapS!==Pt||E.wrapT!==Pt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(P,10240,R(E.magFilter)),r.texParameteri(P,10241,R(E.minFilter)),E.minFilter!==mt&&E.minFilter!==ot&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ee=e.get("EXT_texture_filter_anisotropic");if(E.type===ei&&e.has("OES_texture_float_linear")===!1||a===!1&&E.type===ws&&e.has("OES_texture_half_float_linear")===!1)return;(E.anisotropy>1||n.get(E).__currentAnisotropy)&&(r.texParameterf(P,ee.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,i.getMaxAnisotropy())),n.get(E).__currentAnisotropy=E.anisotropy)}}function ze(P,E){let V=!1;P.__webglInit===void 0&&(P.__webglInit=!0,E.addEventListener("dispose",F));const ee=E.source;let pe=g.get(ee);pe===void 0&&(pe={},g.set(ee,pe));const ve=z(E);if(ve!==P.__cacheKey){pe[ve]===void 0&&(pe[ve]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,V=!0),pe[ve].usedTimes++;const Te=pe[P.__cacheKey];Te!==void 0&&(pe[P.__cacheKey].usedTimes--,Te.usedTimes===0&&I(E)),P.__cacheKey=ve,P.__webglTexture=pe[ve].texture}return V}function Se(P,E,V){let ee=3553;E.isDataArrayTexture&&(ee=35866),E.isData3DTexture&&(ee=32879);const pe=ze(P,E),ve=E.source;if(t.activeTexture(33984+V),t.bindTexture(ee,P.__webglTexture),ve.version!==ve.__currentVersion||pe===!0){r.pixelStorei(37440,E.flipY),r.pixelStorei(37441,E.premultiplyAlpha),r.pixelStorei(3317,E.unpackAlignment),r.pixelStorei(37443,0);const Te=b(E)&&x(E.image)===!1;let A=_(E.image,Te,!1,u);A=Ye(E,A);const te=x(A)||a,xe=s.convert(E.format,E.encoding);let ue=s.convert(E.type),D=w(E.internalFormat,xe,ue,E.encoding,E.isVideoTexture);j(ee,E,te);let le;const oe=E.mipmaps,Ce=a&&E.isVideoTexture!==!0,me=P.__version===void 0||pe===!0,we=T(E,A,te);if(E.isDepthTexture)D=6402,a?E.type===ei?D=36012:E.type===xo?D=33190:E.type===ur?D=35056:D=33189:E.type===ei&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),E.format===Si&&D===6402&&E.type!==xs&&E.type!==xo&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),E.type=xs,ue=s.convert(E.type)),E.format===vr&&D===6402&&(D=34041,E.type!==ur&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),E.type=ur,ue=s.convert(E.type))),me&&(Ce?t.texStorage2D(3553,1,D,A.width,A.height):t.texImage2D(3553,0,D,A.width,A.height,0,xe,ue,null));else if(E.isDataTexture)if(oe.length>0&&te){Ce&&me&&t.texStorage2D(3553,we,D,oe[0].width,oe[0].height);for(let ce=0,Le=oe.length;ce<Le;ce++)le=oe[ce],Ce?t.texSubImage2D(3553,ce,0,0,le.width,le.height,xe,ue,le.data):t.texImage2D(3553,ce,D,le.width,le.height,0,xe,ue,le.data);E.generateMipmaps=!1}else Ce?(me&&t.texStorage2D(3553,we,D,A.width,A.height),t.texSubImage2D(3553,0,0,0,A.width,A.height,xe,ue,A.data)):t.texImage2D(3553,0,D,A.width,A.height,0,xe,ue,A.data);else if(E.isCompressedTexture){Ce&&me&&t.texStorage2D(3553,we,D,oe[0].width,oe[0].height);for(let ce=0,Le=oe.length;ce<Le;ce++)le=oe[ce],E.format!==Wt?xe!==null?Ce?t.compressedTexSubImage2D(3553,ce,0,0,le.width,le.height,xe,le.data):t.compressedTexImage2D(3553,ce,D,le.width,le.height,0,le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ce?t.texSubImage2D(3553,ce,0,0,le.width,le.height,xe,ue,le.data):t.texImage2D(3553,ce,D,le.width,le.height,0,xe,ue,le.data)}else if(E.isDataArrayTexture)Ce?(me&&t.texStorage3D(35866,we,D,A.width,A.height,A.depth),t.texSubImage3D(35866,0,0,0,0,A.width,A.height,A.depth,xe,ue,A.data)):t.texImage3D(35866,0,D,A.width,A.height,A.depth,0,xe,ue,A.data);else if(E.isData3DTexture)Ce?(me&&t.texStorage3D(32879,we,D,A.width,A.height,A.depth),t.texSubImage3D(32879,0,0,0,0,A.width,A.height,A.depth,xe,ue,A.data)):t.texImage3D(32879,0,D,A.width,A.height,A.depth,0,xe,ue,A.data);else if(E.isFramebufferTexture){if(me)if(Ce)t.texStorage2D(3553,we,D,A.width,A.height);else{let ce=A.width,Le=A.height;for(let Qe=0;Qe<we;Qe++)t.texImage2D(3553,Qe,D,ce,Le,0,xe,ue,null),ce>>=1,Le>>=1}}else if(oe.length>0&&te){Ce&&me&&t.texStorage2D(3553,we,D,oe[0].width,oe[0].height);for(let ce=0,Le=oe.length;ce<Le;ce++)le=oe[ce],Ce?t.texSubImage2D(3553,ce,0,0,xe,ue,le):t.texImage2D(3553,ce,D,xe,ue,le);E.generateMipmaps=!1}else Ce?(me&&t.texStorage2D(3553,we,D,A.width,A.height),t.texSubImage2D(3553,0,0,0,xe,ue,A)):t.texImage2D(3553,0,D,xe,ue,A);M(E,te)&&L(ee),ve.__currentVersion=ve.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function Re(P,E,V){if(E.image.length!==6)return;const ee=ze(P,E),pe=E.source;if(t.activeTexture(33984+V),t.bindTexture(34067,P.__webglTexture),pe.version!==pe.__currentVersion||ee===!0){r.pixelStorei(37440,E.flipY),r.pixelStorei(37441,E.premultiplyAlpha),r.pixelStorei(3317,E.unpackAlignment),r.pixelStorei(37443,0);const ve=E.isCompressedTexture||E.image[0].isCompressedTexture,Te=E.image[0]&&E.image[0].isDataTexture,A=[];for(let ce=0;ce<6;ce++)!ve&&!Te?A[ce]=_(E.image[ce],!1,!0,c):A[ce]=Te?E.image[ce].image:E.image[ce],A[ce]=Ye(E,A[ce]);const te=A[0],xe=x(te)||a,ue=s.convert(E.format,E.encoding),D=s.convert(E.type),le=w(E.internalFormat,ue,D,E.encoding),oe=a&&E.isVideoTexture!==!0,Ce=P.__version===void 0;let me=T(E,te,xe);j(34067,E,xe);let we;if(ve){oe&&Ce&&t.texStorage2D(34067,me,le,te.width,te.height);for(let ce=0;ce<6;ce++){we=A[ce].mipmaps;for(let Le=0;Le<we.length;Le++){const Qe=we[Le];E.format!==Wt?ue!==null?oe?t.compressedTexSubImage2D(34069+ce,Le,0,0,Qe.width,Qe.height,ue,Qe.data):t.compressedTexImage2D(34069+ce,Le,le,Qe.width,Qe.height,0,Qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):oe?t.texSubImage2D(34069+ce,Le,0,0,Qe.width,Qe.height,ue,D,Qe.data):t.texImage2D(34069+ce,Le,le,Qe.width,Qe.height,0,ue,D,Qe.data)}}}else{we=E.mipmaps,oe&&Ce&&(we.length>0&&me++,t.texStorage2D(34067,me,le,A[0].width,A[0].height));for(let ce=0;ce<6;ce++)if(Te){oe?t.texSubImage2D(34069+ce,0,0,0,A[ce].width,A[ce].height,ue,D,A[ce].data):t.texImage2D(34069+ce,0,le,A[ce].width,A[ce].height,0,ue,D,A[ce].data);for(let Le=0;Le<we.length;Le++){const $e=we[Le].image[ce].image;oe?t.texSubImage2D(34069+ce,Le+1,0,0,$e.width,$e.height,ue,D,$e.data):t.texImage2D(34069+ce,Le+1,le,$e.width,$e.height,0,ue,D,$e.data)}}else{oe?t.texSubImage2D(34069+ce,0,0,0,ue,D,A[ce]):t.texImage2D(34069+ce,0,le,ue,D,A[ce]);for(let Le=0;Le<we.length;Le++){const Qe=we[Le];oe?t.texSubImage2D(34069+ce,Le+1,0,0,ue,D,Qe.image[ce]):t.texImage2D(34069+ce,Le+1,le,ue,D,Qe.image[ce])}}}M(E,xe)&&L(34067),pe.__currentVersion=pe.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function se(P,E,V,ee,pe){const ve=s.convert(V.format,V.encoding),Te=s.convert(V.type),A=w(V.internalFormat,ve,Te,V.encoding);n.get(E).__hasExternalTextures||(pe===32879||pe===35866?t.texImage3D(pe,0,A,E.width,E.height,E.depth,0,ve,Te,null):t.texImage2D(pe,0,A,E.width,E.height,0,ve,Te,null)),t.bindFramebuffer(36160,P),Ee(E)?f.framebufferTexture2DMultisampleEXT(36160,ee,pe,n.get(V).__webglTexture,0,Ae(E)):r.framebufferTexture2D(36160,ee,pe,n.get(V).__webglTexture,0),t.bindFramebuffer(36160,null)}function Ie(P,E,V){if(r.bindRenderbuffer(36161,P),E.depthBuffer&&!E.stencilBuffer){let ee=33189;if(V||Ee(E)){const pe=E.depthTexture;pe&&pe.isDepthTexture&&(pe.type===ei?ee=36012:pe.type===xo&&(ee=33190));const ve=Ae(E);Ee(E)?f.renderbufferStorageMultisampleEXT(36161,ve,ee,E.width,E.height):r.renderbufferStorageMultisample(36161,ve,ee,E.width,E.height)}else r.renderbufferStorage(36161,ee,E.width,E.height);r.framebufferRenderbuffer(36160,36096,36161,P)}else if(E.depthBuffer&&E.stencilBuffer){const ee=Ae(E);V&&Ee(E)===!1?r.renderbufferStorageMultisample(36161,ee,35056,E.width,E.height):Ee(E)?f.renderbufferStorageMultisampleEXT(36161,ee,35056,E.width,E.height):r.renderbufferStorage(36161,34041,E.width,E.height),r.framebufferRenderbuffer(36160,33306,36161,P)}else{const ee=E.isWebGLMultipleRenderTargets===!0?E.texture[0]:E.texture,pe=s.convert(ee.format,ee.encoding),ve=s.convert(ee.type),Te=w(ee.internalFormat,pe,ve,ee.encoding),A=Ae(E);V&&Ee(E)===!1?r.renderbufferStorageMultisample(36161,A,Te,E.width,E.height):Ee(E)?f.renderbufferStorageMultisampleEXT(36161,A,Te,E.width,E.height):r.renderbufferStorage(36161,Te,E.width,E.height)}r.bindRenderbuffer(36161,null)}function Z(P,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,P),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),G(E.depthTexture,0);const ee=n.get(E.depthTexture).__webglTexture,pe=Ae(E);if(E.depthTexture.format===Si)Ee(E)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,ee,0,pe):r.framebufferTexture2D(36160,36096,3553,ee,0);else if(E.depthTexture.format===vr)Ee(E)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,ee,0,pe):r.framebufferTexture2D(36160,33306,3553,ee,0);else throw new Error("Unknown depthTexture format")}function J(P){const E=n.get(P),V=P.isWebGLCubeRenderTarget===!0;if(P.depthTexture&&!E.__autoAllocateDepthBuffer){if(V)throw new Error("target.depthTexture not supported in Cube render targets");Z(E.__webglFramebuffer,P)}else if(V){E.__webglDepthbuffer=[];for(let ee=0;ee<6;ee++)t.bindFramebuffer(36160,E.__webglFramebuffer[ee]),E.__webglDepthbuffer[ee]=r.createRenderbuffer(),Ie(E.__webglDepthbuffer[ee],P,!1)}else t.bindFramebuffer(36160,E.__webglFramebuffer),E.__webglDepthbuffer=r.createRenderbuffer(),Ie(E.__webglDepthbuffer,P,!1);t.bindFramebuffer(36160,null)}function ie(P,E,V){const ee=n.get(P);E!==void 0&&se(ee.__webglFramebuffer,P,P.texture,36064,3553),V!==void 0&&J(P)}function _e(P){const E=P.texture,V=n.get(P),ee=n.get(E);P.addEventListener("dispose",U),P.isWebGLMultipleRenderTargets!==!0&&(ee.__webglTexture===void 0&&(ee.__webglTexture=r.createTexture()),ee.__version=E.version,o.memory.textures++);const pe=P.isWebGLCubeRenderTarget===!0,ve=P.isWebGLMultipleRenderTargets===!0,Te=x(P)||a;if(pe){V.__webglFramebuffer=[];for(let A=0;A<6;A++)V.__webglFramebuffer[A]=r.createFramebuffer()}else if(V.__webglFramebuffer=r.createFramebuffer(),ve)if(i.drawBuffers){const A=P.texture;for(let te=0,xe=A.length;te<xe;te++){const ue=n.get(A[te]);ue.__webglTexture===void 0&&(ue.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(a&&P.samples>0&&Ee(P)===!1){V.__webglMultisampledFramebuffer=r.createFramebuffer(),V.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(36161,V.__webglColorRenderbuffer);const A=s.convert(E.format,E.encoding),te=s.convert(E.type),xe=w(E.internalFormat,A,te,E.encoding),ue=Ae(P);r.renderbufferStorageMultisample(36161,ue,xe,P.width,P.height),t.bindFramebuffer(36160,V.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064,36161,V.__webglColorRenderbuffer),r.bindRenderbuffer(36161,null),P.depthBuffer&&(V.__webglDepthRenderbuffer=r.createRenderbuffer(),Ie(V.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(36160,null)}if(pe){t.bindTexture(34067,ee.__webglTexture),j(34067,E,Te);for(let A=0;A<6;A++)se(V.__webglFramebuffer[A],P,E,36064,34069+A);M(E,Te)&&L(34067),t.unbindTexture()}else if(ve){const A=P.texture;for(let te=0,xe=A.length;te<xe;te++){const ue=A[te],D=n.get(ue);t.bindTexture(3553,D.__webglTexture),j(3553,ue,Te),se(V.__webglFramebuffer,P,ue,36064+te,3553),M(ue,Te)&&L(3553)}t.unbindTexture()}else{let A=3553;(P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(a?A=P.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(A,ee.__webglTexture),j(A,E,Te),se(V.__webglFramebuffer,P,E,36064,A),M(E,Te)&&L(A),t.unbindTexture()}P.depthBuffer&&J(P)}function de(P){const E=x(P)||a,V=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let ee=0,pe=V.length;ee<pe;ee++){const ve=V[ee];if(M(ve,E)){const Te=P.isWebGLCubeRenderTarget?34067:3553,A=n.get(ve).__webglTexture;t.bindTexture(Te,A),L(Te),t.unbindTexture()}}}function De(P){if(a&&P.samples>0&&Ee(P)===!1){const E=P.width,V=P.height;let ee=16384;const pe=[36064],ve=P.stencilBuffer?33306:36096;P.depthBuffer&&pe.push(ve);const Te=n.get(P),A=Te.__ignoreDepthValues!==void 0?Te.__ignoreDepthValues:!1;A===!1&&(P.depthBuffer&&(ee|=256),P.stencilBuffer&&(ee|=1024)),t.bindFramebuffer(36008,Te.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Te.__webglFramebuffer),A===!0&&(r.invalidateFramebuffer(36008,[ve]),r.invalidateFramebuffer(36009,[ve])),r.blitFramebuffer(0,0,E,V,0,0,E,V,ee,9728),d&&r.invalidateFramebuffer(36008,pe),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,Te.__webglMultisampledFramebuffer)}}function Ae(P){return Math.min(h,P.samples)}function Ee(P){const E=n.get(P);return a&&P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function nt(P){const E=o.render.frame;p.get(P)!==E&&(p.set(P,E),P.update())}function Ye(P,E){const V=P.encoding,ee=P.format,pe=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||P.format===Dl||V!==oi&&(V===He?a===!1?e.has("EXT_sRGB")===!0&&ee===Wt?(P.format=Dl,P.minFilter=ot,P.generateMipmaps=!1):E=zi.sRGBToLinear(E):(ee!==Wt||pe!==Ri)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",V)),E}this.allocateTextureUnit=q,this.resetTextureUnits=H,this.setTexture2D=G,this.setTexture2DArray=Q,this.setTexture3D=Y,this.setTextureCube=re,this.rebindTextures=ie,this.setupRenderTarget=_e,this.updateRenderTargetMipmap=de,this.updateMultisampleRenderTarget=De,this.setupDepthRenderbuffer=J,this.setupFrameBufferTexture=se,this.useMultisampledRTT=Ee}function Ly(r,e,t){const n=t.isWebGL2;function i(s,o=null){let a;if(s===Ri)return 5121;if(s===Wg)return 32819;if(s===$g)return 32820;if(s===Hg)return 5120;if(s===Gg)return 5122;if(s===xs)return 5123;if(s===Vg)return 5124;if(s===xo)return 5125;if(s===ei)return 5126;if(s===ws)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===qg)return 6406;if(s===Wt)return 6408;if(s===$h)return 6409;if(s===jg)return 6410;if(s===Si)return 6402;if(s===vr)return 34041;if(s===Yg)return 6403;if(s===Xg)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Dl)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===Zg)return 36244;if(s===Jg)return 33319;if(s===Kg)return 33320;if(s===Qg)return 36249;if(s===ll||s===cl||s===ul||s===hl)if(o===He)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===ll)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===cl)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===ul)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===hl)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===ll)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===cl)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===ul)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===hl)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Lu||s===Pu||s===Ru||s===Du)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===Lu)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Pu)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Ru)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Du)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===ey)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Iu||s===Fu)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===Iu)return o===He?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===Fu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Bu||s===Ou||s===zu||s===Nu||s===Uu||s===ku||s===Hu||s===Gu||s===Vu||s===Wu||s===$u||s===qu||s===Xu||s===ju)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===Bu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Ou)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===zu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Nu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Uu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===ku)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Hu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Gu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Vu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Wu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===$u)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===qu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Xu)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===ju)return o===He?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Yu)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===Yu)return o===He?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===ur?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class Zh extends Mt{constructor(e=[]){super(),this.cameras=e}}Zh.prototype.isArrayCamera=!0;class ti extends Be{constructor(){super(),this.type="Group"}}ti.prototype.isGroup=!0;const YS={type:"move"};class Jc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ti,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ti,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new S,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new S),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ti,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new S,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new S),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(a!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(YS))),c&&e.hand){o=!0;for(const m of e.hand.values()){const g=t.getJointPose(m,n);if(c.joints[m.jointName]===void 0){const v=new ti;v.matrixAutoUpdate=!1,v.visible=!1,c.joints[m.jointName]=v,c.add(v)}const y=c.joints[m.jointName];g!==null&&(y.matrix.fromArray(g.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.jointRadius=g.radius),y.visible=g!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}}class Jh extends ft{constructor(e,t,n,i,s,o,a,l,c,u){if(u=u!==void 0?u:Si,u!==Si&&u!==vr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Si&&(n=xs),n===void 0&&u===vr&&(n=ur),super(null,i,s,o,a,l,u,n,c),this.image={width:e,height:t},this.magFilter=a!==void 0?a:mt,this.minFilter=l!==void 0?l:mt,this.flipY=!1,this.generateMipmaps=!1}}Jh.prototype.isDepthTexture=!0;class ZS extends hi{constructor(e,t){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=null,c=null,u=null,h=null,f=null,d=null;const p=t.getContextAttributes();let m=null,g=null;const y=[],v=new Map,_=new Mt;_.layers.enable(1),_.viewport=new qe;const x=new Mt;x.layers.enable(2),x.viewport=new qe;const b=[_,x],M=new Zh;M.layers.enable(1),M.layers.enable(2);let L=null,w=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(z){let G=y[z];return G===void 0&&(G=new Jc,y[z]=G),G.getTargetRaySpace()},this.getControllerGrip=function(z){let G=y[z];return G===void 0&&(G=new Jc,y[z]=G),G.getGripSpace()},this.getHand=function(z){let G=y[z];return G===void 0&&(G=new Jc,y[z]=G),G.getHandSpace()};function T(z){const G=v.get(z.inputSource);G&&G.dispatchEvent({type:z.type,data:z.inputSource})}function R(){v.forEach(function(z,G){z.disconnect(G)}),v.clear(),L=null,w=null,e.setRenderTarget(m),f=null,h=null,u=null,i=null,g=null,q.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(z){s=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(z){a=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(z){l=z},this.getBaseLayer=function(){return h!==null?h:f},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(z){if(i=z,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",T),i.addEventListener("selectstart",T),i.addEventListener("selectend",T),i.addEventListener("squeeze",T),i.addEventListener("squeezestart",T),i.addEventListener("squeezeend",T),i.addEventListener("end",R),i.addEventListener("inputsourceschange",F),p.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const G={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,G),i.updateRenderState({baseLayer:f}),g=new Dt(f.framebufferWidth,f.framebufferHeight,{format:Wt,type:Ri,encoding:e.outputEncoding})}else{let G=null,Q=null,Y=null;p.depth&&(Y=p.stencil?35056:33190,G=p.stencil?vr:Si,Q=p.stencil?ur:xs);const re={colorFormat:e.outputEncoding===He?35907:32856,depthFormat:Y,scaleFactor:s};u=new XRWebGLBinding(i,t),h=u.createProjectionLayer(re),i.updateRenderState({layers:[h]}),g=new Dt(h.textureWidth,h.textureHeight,{format:Wt,type:Ri,depthTexture:new Jh(h.textureWidth,h.textureHeight,Q,void 0,void 0,void 0,void 0,void 0,void 0,G),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const fe=e.properties.get(g);fe.__ignoreDepthValues=h.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(1),o=await i.requestReferenceSpace(a),q.setContext(i),q.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function F(z){const G=i.inputSources;for(let Q=0;Q<G.length;Q++){const Y=G[Q].handedness==="right"?1:0;v.set(G[Q],y[Y])}for(let Q=0;Q<z.removed.length;Q++){const Y=z.removed[Q],re=v.get(Y);re&&(re.dispatchEvent({type:"disconnected",data:Y}),v.delete(Y))}for(let Q=0;Q<z.added.length;Q++){const Y=z.added[Q],re=v.get(Y);re&&re.dispatchEvent({type:"connected",data:Y})}}const U=new S,X=new S;function I(z,G,Q){U.setFromMatrixPosition(G.matrixWorld),X.setFromMatrixPosition(Q.matrixWorld);const Y=U.distanceTo(X),re=G.projectionMatrix.elements,fe=Q.projectionMatrix.elements,ye=re[14]/(re[10]-1),j=re[14]/(re[10]+1),ze=(re[9]+1)/re[5],Se=(re[9]-1)/re[5],Re=(re[8]-1)/re[0],se=(fe[8]+1)/fe[0],Ie=ye*Re,Z=ye*se,J=Y/(-Re+se),ie=J*-Re;G.matrixWorld.decompose(z.position,z.quaternion,z.scale),z.translateX(ie),z.translateZ(J),z.matrixWorld.compose(z.position,z.quaternion,z.scale),z.matrixWorldInverse.copy(z.matrixWorld).invert();const _e=ye+J,de=j+J,De=Ie-ie,Ae=Z+(Y-ie),Ee=ze*j/de*_e,nt=Se*j/de*_e;z.projectionMatrix.makePerspective(De,Ae,Ee,nt,_e,de)}function N(z,G){G===null?z.matrixWorld.copy(z.matrix):z.matrixWorld.multiplyMatrices(G.matrixWorld,z.matrix),z.matrixWorldInverse.copy(z.matrixWorld).invert()}this.updateCamera=function(z){if(i===null)return;M.near=x.near=_.near=z.near,M.far=x.far=_.far=z.far,(L!==M.near||w!==M.far)&&(i.updateRenderState({depthNear:M.near,depthFar:M.far}),L=M.near,w=M.far);const G=z.parent,Q=M.cameras;N(M,G);for(let re=0;re<Q.length;re++)N(Q[re],G);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),z.position.copy(M.position),z.quaternion.copy(M.quaternion),z.scale.copy(M.scale),z.matrix.copy(M.matrix),z.matrixWorld.copy(M.matrixWorld);const Y=z.children;for(let re=0,fe=Y.length;re<fe;re++)Y[re].updateMatrixWorld(!0);Q.length===2?I(M,_,x):M.projectionMatrix.copy(_.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(z){h!==null&&(h.fixedFoveation=z),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=z)};let B=null;function H(z,G){if(c=G.getViewerPose(l||o),d=G,c!==null){const Y=c.views;f!==null&&(e.setRenderTargetFramebuffer(g,f.framebuffer),e.setRenderTarget(g));let re=!1;Y.length!==M.cameras.length&&(M.cameras.length=0,re=!0);for(let fe=0;fe<Y.length;fe++){const ye=Y[fe];let j=null;if(f!==null)j=f.getViewport(ye);else{const Se=u.getViewSubImage(h,ye);j=Se.viewport,fe===0&&(e.setRenderTargetTextures(g,Se.colorTexture,h.ignoreDepthValues?void 0:Se.depthStencilTexture),e.setRenderTarget(g))}const ze=b[fe];ze.matrix.fromArray(ye.transform.matrix),ze.projectionMatrix.fromArray(ye.projectionMatrix),ze.viewport.set(j.x,j.y,j.width,j.height),fe===0&&M.matrix.copy(ze.matrix),re===!0&&M.cameras.push(ze)}}const Q=i.inputSources;for(let Y=0;Y<y.length;Y++){const re=Q[Y],fe=v.get(re);fe!==void 0&&fe.update(re,G,l||o)}B&&B(z,G),d=null}const q=new wy;q.setAnimationLoop(H),this.setAnimationLoop=function(z){B=z},this.dispose=function(){}}}function JS(r,e){function t(m,g){m.fogColor.value.copy(g.color),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function n(m,g,y,v,_){g.isMeshBasicMaterial||g.isMeshLambertMaterial?i(m,g):g.isMeshToonMaterial?(i(m,g),u(m,g)):g.isMeshPhongMaterial?(i(m,g),c(m,g)):g.isMeshStandardMaterial?(i(m,g),h(m,g),g.isMeshPhysicalMaterial&&f(m,g,_)):g.isMeshMatcapMaterial?(i(m,g),d(m,g)):g.isMeshDepthMaterial?i(m,g):g.isMeshDistanceMaterial?(i(m,g),p(m,g)):g.isMeshNormalMaterial?i(m,g):g.isLineBasicMaterial?(s(m,g),g.isLineDashedMaterial&&o(m,g)):g.isPointsMaterial?a(m,g,y,v):g.isSpriteMaterial?l(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===$t&&(m.bumpScale.value*=-1)),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===$t&&m.normalScale.value.negate()),g.specularMap&&(m.specularMap.value=g.specularMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const y=e.get(g).envMap;if(y&&(m.envMap.value=y,m.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap){m.lightMap.value=g.lightMap;const x=r.physicallyCorrectLights!==!0?Math.PI:1;m.lightMapIntensity.value=g.lightMapIntensity*x}g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity);let v;g.map?v=g.map:g.specularMap?v=g.specularMap:g.displacementMap?v=g.displacementMap:g.normalMap?v=g.normalMap:g.bumpMap?v=g.bumpMap:g.roughnessMap?v=g.roughnessMap:g.metalnessMap?v=g.metalnessMap:g.alphaMap?v=g.alphaMap:g.emissiveMap?v=g.emissiveMap:g.clearcoatMap?v=g.clearcoatMap:g.clearcoatNormalMap?v=g.clearcoatNormalMap:g.clearcoatRoughnessMap?v=g.clearcoatRoughnessMap:g.specularIntensityMap?v=g.specularIntensityMap:g.specularColorMap?v=g.specularColorMap:g.transmissionMap?v=g.transmissionMap:g.thicknessMap?v=g.thicknessMap:g.sheenColorMap?v=g.sheenColorMap:g.sheenRoughnessMap&&(v=g.sheenRoughnessMap),v!==void 0&&(v.isWebGLRenderTarget&&(v=v.texture),v.matrixAutoUpdate===!0&&v.updateMatrix(),m.uvTransform.value.copy(v.matrix));let _;g.aoMap?_=g.aoMap:g.lightMap&&(_=g.lightMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),m.uv2Transform.value.copy(_.matrix))}function s(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity}function o(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function a(m,g,y,v){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*y,m.scale.value=v*.5,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let _;g.map?_=g.map:g.alphaMap&&(_=g.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),m.uvTransform.value.copy(_.matrix))}function l(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let y;g.map?y=g.map:g.alphaMap&&(y=g.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),m.uvTransform.value.copy(y.matrix))}function c(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function h(m,g){m.roughness.value=g.roughness,m.metalness.value=g.metalness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap),e.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,y){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),m.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===$t&&m.clearcoatNormalScale.value.negate())),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=y.texture,m.transmissionSamplerSize.value.set(y.width,y.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap)}function d(m,g){g.matcap&&(m.matcap.value=g.matcap)}function p(m,g){m.referencePosition.value.copy(g.referencePosition),m.nearDistance.value=g.nearDistance,m.farDistance.value=g.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function KS(){const r=Fo("canvas");return r.style.display="block",r}function Ke(r={}){const e=r.canvas!==void 0?r.canvas:KS(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,a=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,l=r.powerPreference!==void 0?r.powerPreference:"default",c=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let h=null,f=null;const d=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=oi,this.physicallyCorrectLights=!1,this.toneMapping=Sn,this.toneMappingExposure=1;const m=this;let g=!1,y=0,v=0,_=null,x=-1,b=null;const M=new qe,L=new qe;let w=null,T=e.width,R=e.height,F=1,U=null,X=null;const I=new qe(0,0,T,R),N=new qe(0,0,T,R);let B=!1;const H=new Yo;let q=!1,z=!1,G=null;const Q=new ae,Y=new $,re=new S,fe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ye(){return _===null?F:1}let j=t;function ze(C,O){for(let W=0;W<C.length;W++){const k=C[W],K=e.getContext(k,O);if(K!==null)return K}return null}try{const C={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Wl}`),e.addEventListener("webglcontextlost",D,!1),e.addEventListener("webglcontextrestored",le,!1),j===null){const O=["webgl2","webgl","experimental-webgl"];if(m.isWebGL1Renderer===!0&&O.shift(),j=ze(O,C),j===null)throw ze(O)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}j.getShaderPrecisionFormat===void 0&&(j.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Se,Re,se,Ie,Z,J,ie,_e,de,De,Ae,Ee,nt,Ye,P,E,V,ee,pe,ve,Te,A,te;function xe(){Se=new gM(j),Re=new uM(j,Se,r),Se.init(Re),A=new Ly(j,Se,Re),se=new XS(j,Se,Re),Ie=new _M(j),Z=new OS,J=new jS(j,Se,se,Z,Re,A,Ie),ie=new fM(m),_e=new mM(m),de=new Ix(j,Re),te=new lM(j,Se,de,Re),De=new yM(j,de,Ie,te),Ae=new MM(j,De,de,Ie),pe=new bM(j,Re,J),E=new hM(Z),Ee=new BS(m,ie,_e,Se,Re,te,E),nt=new JS(m,Z),Ye=new NS,P=new WS(Se,Re),ee=new aM(m,ie,se,Ae,u,o),V=new Cy(m,Ae,Re),ve=new cM(j,Se,Ie,Re),Te=new vM(j,Se,Ie,Re),Ie.programs=Ee.programs,m.capabilities=Re,m.extensions=Se,m.properties=Z,m.renderLists=Ye,m.shadowMap=V,m.state=se,m.info=Ie}xe();const ue=new ZS(m,j);this.xr=ue,this.getContext=function(){return j},this.getContextAttributes=function(){return j.getContextAttributes()},this.forceContextLoss=function(){const C=Se.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Se.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return F},this.setPixelRatio=function(C){C!==void 0&&(F=C,this.setSize(T,R,!1))},this.getSize=function(C){return C.set(T,R)},this.setSize=function(C,O,W){if(ue.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}T=C,R=O,e.width=Math.floor(C*F),e.height=Math.floor(O*F),W!==!1&&(e.style.width=C+"px",e.style.height=O+"px"),this.setViewport(0,0,C,O)},this.getDrawingBufferSize=function(C){return C.set(T*F,R*F).floor()},this.setDrawingBufferSize=function(C,O,W){T=C,R=O,F=W,e.width=Math.floor(C*W),e.height=Math.floor(O*W),this.setViewport(0,0,C,O)},this.getCurrentViewport=function(C){return C.copy(M)},this.getViewport=function(C){return C.copy(I)},this.setViewport=function(C,O,W,k){C.isVector4?I.set(C.x,C.y,C.z,C.w):I.set(C,O,W,k),se.viewport(M.copy(I).multiplyScalar(F).floor())},this.getScissor=function(C){return C.copy(N)},this.setScissor=function(C,O,W,k){C.isVector4?N.set(C.x,C.y,C.z,C.w):N.set(C,O,W,k),se.scissor(L.copy(N).multiplyScalar(F).floor())},this.getScissorTest=function(){return B},this.setScissorTest=function(C){se.setScissorTest(B=C)},this.setOpaqueSort=function(C){U=C},this.setTransparentSort=function(C){X=C},this.getClearColor=function(C){return C.copy(ee.getClearColor())},this.setClearColor=function(){ee.setClearColor.apply(ee,arguments)},this.getClearAlpha=function(){return ee.getClearAlpha()},this.setClearAlpha=function(){ee.setClearAlpha.apply(ee,arguments)},this.clear=function(C=!0,O=!0,W=!0){let k=0;C&&(k|=16384),O&&(k|=256),W&&(k|=1024),j.clear(k)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",D,!1),e.removeEventListener("webglcontextrestored",le,!1),Ye.dispose(),P.dispose(),Z.dispose(),ie.dispose(),_e.dispose(),Ae.dispose(),te.dispose(),Ee.dispose(),ue.dispose(),ue.removeEventListener("sessionstart",Le),ue.removeEventListener("sessionend",Qe),G&&(G.dispose(),G=null),$e.stop()};function D(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function le(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const C=Ie.autoReset,O=V.enabled,W=V.autoUpdate,k=V.needsUpdate,K=V.type;xe(),Ie.autoReset=C,V.enabled=O,V.autoUpdate=W,V.needsUpdate=k,V.type=K}function oe(C){const O=C.target;O.removeEventListener("dispose",oe),Ce(O)}function Ce(C){me(C),Z.remove(C)}function me(C){const O=Z.get(C).programs;O!==void 0&&(O.forEach(function(W){Ee.releaseProgram(W)}),C.isShaderMaterial&&Ee.releaseShaderCache(C))}this.renderBufferDirect=function(C,O,W,k,K,Pe){O===null&&(O=fe);const Fe=K.isMesh&&K.matrixWorld.determinant()<0,Ne=Dv(C,O,W,k,K);se.setMaterial(k,Fe);let Oe=W.index;const et=W.attributes.position;if(Oe===null){if(et===void 0||et.count===0)return}else if(Oe.count===0)return;let Xe=1;k.wireframe===!0&&(Oe=De.getWireframeAttribute(W),Xe=2),te.setup(K,k,Ne,W,Oe);let je,ct=ve;Oe!==null&&(je=de.get(Oe),ct=Te,ct.setIndex(je));const Vi=Oe!==null?Oe.count:et.count,Or=W.drawRange.start*Xe,zr=W.drawRange.count*Xe,Rn=Pe!==null?Pe.start*Xe:0,Ze=Pe!==null?Pe.count*Xe:1/0,Nr=Math.max(Or,Rn),wt=Math.min(Vi,Or+zr,Rn+Ze)-1,Dn=Math.max(0,wt-Nr+1);if(Dn!==0){if(K.isMesh)k.wireframe===!0?(se.setLineWidth(k.wireframeLinewidth*ye()),ct.setMode(1)):ct.setMode(4);else if(K.isLine){let di=k.linewidth;di===void 0&&(di=1),se.setLineWidth(di*ye()),K.isLineSegments?ct.setMode(1):K.isLineLoop?ct.setMode(2):ct.setMode(3)}else K.isPoints?ct.setMode(0):K.isSprite&&ct.setMode(4);if(K.isInstancedMesh)ct.renderInstances(Nr,Dn,K.count);else if(W.isInstancedBufferGeometry){const di=Math.min(W.instanceCount,W._maxInstanceCount);ct.renderInstances(Nr,Dn,di)}else ct.render(Nr,Dn)}},this.compile=function(C,O){f=P.get(C),f.init(),p.push(f),C.traverseVisible(function(W){W.isLight&&W.layers.test(O.layers)&&(f.pushLight(W),W.castShadow&&f.pushShadow(W))}),f.setupLights(m.physicallyCorrectLights),C.traverse(function(W){const k=W.material;if(k)if(Array.isArray(k))for(let K=0;K<k.length;K++){const Pe=k[K];vc(Pe,C,W)}else vc(k,C,W)}),p.pop(),f=null};let we=null;function ce(C){we&&we(C)}function Le(){$e.stop()}function Qe(){$e.start()}const $e=new wy;$e.setAnimationLoop(ce),typeof self!="undefined"&&$e.setContext(self),this.setAnimationLoop=function(C){we=C,ue.setAnimationLoop(C),C===null?$e.stop():$e.start()},ue.addEventListener("sessionstart",Le),ue.addEventListener("sessionend",Qe),this.render=function(C,O){if(O!==void 0&&O.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(g===!0)return;C.autoUpdate===!0&&C.updateMatrixWorld(),O.parent===null&&O.updateMatrixWorld(),ue.enabled===!0&&ue.isPresenting===!0&&(ue.cameraAutoUpdate===!0&&ue.updateCamera(O),O=ue.getCamera()),C.isScene===!0&&C.onBeforeRender(m,C,O,_),f=P.get(C,p.length),f.init(),p.push(f),Q.multiplyMatrices(O.projectionMatrix,O.matrixWorldInverse),H.setFromProjectionMatrix(Q),z=this.localClippingEnabled,q=E.init(this.clippingPlanes,z,O),h=Ye.get(C,d.length),h.init(),d.push(h),Ln(C,O,0,m.sortObjects),h.finish(),m.sortObjects===!0&&h.sort(U,X),q===!0&&E.beginShadows();const W=f.state.shadowsArray;if(V.render(W,C,O),q===!0&&E.endShadows(),this.info.autoReset===!0&&this.info.reset(),ee.render(h,C),f.setupLights(m.physicallyCorrectLights),O.isArrayCamera){const k=O.cameras;for(let K=0,Pe=k.length;K<Pe;K++){const Fe=k[K];Pn(h,C,Fe,Fe.viewport)}}else Pn(h,C,O);_!==null&&(J.updateMultisampleRenderTarget(_),J.updateRenderTargetMipmap(_)),C.isScene===!0&&C.onAfterRender(m,C,O),te.resetDefaultState(),x=-1,b=null,p.pop(),p.length>0?f=p[p.length-1]:f=null,d.pop(),d.length>0?h=d[d.length-1]:h=null};function Ln(C,O,W,k){if(C.visible===!1)return;if(C.layers.test(O.layers)){if(C.isGroup)W=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(O);else if(C.isLight)f.pushLight(C),C.castShadow&&f.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||H.intersectsSprite(C)){k&&re.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Q);const Fe=Ae.update(C),Ne=C.material;Ne.visible&&h.push(C,Fe,Ne,W,re.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==Ie.render.frame&&(C.skeleton.update(),C.skeleton.frame=Ie.render.frame),!C.frustumCulled||H.intersectsObject(C))){k&&re.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Q);const Fe=Ae.update(C),Ne=C.material;if(Array.isArray(Ne)){const Oe=Fe.groups;for(let et=0,Xe=Oe.length;et<Xe;et++){const je=Oe[et],ct=Ne[je.materialIndex];ct&&ct.visible&&h.push(C,Fe,ct,W,re.z,je)}}else Ne.visible&&h.push(C,Fe,Ne,W,re.z,null)}}const Pe=C.children;for(let Fe=0,Ne=Pe.length;Fe<Ne;Fe++)Ln(Pe[Fe],O,W,k)}function Pn(C,O,W,k){const K=C.opaque,Pe=C.transmissive,Fe=C.transparent;f.setupLightsView(W),Pe.length>0&&Pv(K,O,W),k&&se.viewport(M.copy(k)),K.length>0&&da(K,O,W),Pe.length>0&&da(Pe,O,W),Fe.length>0&&da(Fe,O,W),se.buffers.depth.setTest(!0),se.buffers.depth.setMask(!0),se.buffers.color.setMask(!0),se.setPolygonOffset(!1)}function Pv(C,O,W){const k=Re.isWebGL2;G===null&&(G=new Dt(1,1,{generateMipmaps:!0,type:Se.has("EXT_color_buffer_half_float")?ws:Ri,minFilter:Lr,samples:k&&s===!0?4:0})),m.getDrawingBufferSize(Y),k?G.setSize(Y.x,Y.y):G.setSize(Il(Y.x),Il(Y.y));const K=m.getRenderTarget();m.setRenderTarget(G),m.clear();const Pe=m.toneMapping;m.toneMapping=Sn,da(C,O,W),m.toneMapping=Pe,J.updateMultisampleRenderTarget(G),J.updateRenderTargetMipmap(G),m.setRenderTarget(K)}function da(C,O,W){const k=O.isScene===!0?O.overrideMaterial:null;for(let K=0,Pe=C.length;K<Pe;K++){const Fe=C[K],Ne=Fe.object,Oe=Fe.geometry,et=k===null?Fe.material:k,Xe=Fe.group;Ne.layers.test(W.layers)&&Rv(Ne,O,W,Oe,et,Xe)}}function Rv(C,O,W,k,K,Pe){C.onBeforeRender(m,O,W,k,K,Pe),C.modelViewMatrix.multiplyMatrices(W.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),K.onBeforeRender(m,O,W,k,C,Pe),K.transparent===!0&&K.side===Ci?(K.side=$t,K.needsUpdate=!0,m.renderBufferDirect(W,O,k,K,C,Pe),K.side=mr,K.needsUpdate=!0,m.renderBufferDirect(W,O,k,K,C,Pe),K.side=Ci):m.renderBufferDirect(W,O,k,K,C,Pe),C.onAfterRender(m,O,W,k,K,Pe)}function vc(C,O,W){O.isScene!==!0&&(O=fe);const k=Z.get(C),K=f.state.lights,Pe=f.state.shadowsArray,Fe=K.state.version,Ne=Ee.getParameters(C,K.state,Pe,O,W),Oe=Ee.getProgramCacheKey(Ne);let et=k.programs;k.environment=C.isMeshStandardMaterial?O.environment:null,k.fog=O.fog,k.envMap=(C.isMeshStandardMaterial?_e:ie).get(C.envMap||k.environment),et===void 0&&(C.addEventListener("dispose",oe),et=new Map,k.programs=et);let Xe=et.get(Oe);if(Xe!==void 0){if(k.currentProgram===Xe&&k.lightsStateVersion===Fe)return Zf(C,Ne),Xe}else Ne.uniforms=Ee.getUniforms(C),C.onBuild(W,Ne,m),C.onBeforeCompile(Ne,m),Xe=Ee.acquireProgram(Ne,Oe),et.set(Oe,Xe),k.uniforms=Ne.uniforms;const je=k.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(je.clippingPlanes=E.uniform),Zf(C,Ne),k.needsLights=Fv(C),k.lightsStateVersion=Fe,k.needsLights&&(je.ambientLightColor.value=K.state.ambient,je.lightProbe.value=K.state.probe,je.directionalLights.value=K.state.directional,je.directionalLightShadows.value=K.state.directionalShadow,je.spotLights.value=K.state.spot,je.spotLightShadows.value=K.state.spotShadow,je.rectAreaLights.value=K.state.rectArea,je.ltc_1.value=K.state.rectAreaLTC1,je.ltc_2.value=K.state.rectAreaLTC2,je.pointLights.value=K.state.point,je.pointLightShadows.value=K.state.pointShadow,je.hemisphereLights.value=K.state.hemi,je.directionalShadowMap.value=K.state.directionalShadowMap,je.directionalShadowMatrix.value=K.state.directionalShadowMatrix,je.spotShadowMap.value=K.state.spotShadowMap,je.spotShadowMatrix.value=K.state.spotShadowMatrix,je.pointShadowMap.value=K.state.pointShadowMap,je.pointShadowMatrix.value=K.state.pointShadowMatrix);const ct=Xe.getUniforms(),Vi=Ei.seqWithValue(ct.seq,je);return k.currentProgram=Xe,k.uniformsList=Vi,Xe}function Zf(C,O){const W=Z.get(C);W.outputEncoding=O.outputEncoding,W.instancing=O.instancing,W.skinning=O.skinning,W.morphTargets=O.morphTargets,W.morphNormals=O.morphNormals,W.morphColors=O.morphColors,W.morphTargetsCount=O.morphTargetsCount,W.numClippingPlanes=O.numClippingPlanes,W.numIntersection=O.numClipIntersection,W.vertexAlphas=O.vertexAlphas,W.vertexTangents=O.vertexTangents,W.toneMapping=O.toneMapping}function Dv(C,O,W,k,K){O.isScene!==!0&&(O=fe),J.resetTextureUnits();const Pe=O.fog,Fe=k.isMeshStandardMaterial?O.environment:null,Ne=_===null?m.outputEncoding:_.isXRRenderTarget===!0?_.texture.encoding:oi,Oe=(k.isMeshStandardMaterial?_e:ie).get(k.envMap||Fe),et=k.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,Xe=!!k.normalMap&&!!W.attributes.tangent,je=!!W.morphAttributes.position,ct=!!W.morphAttributes.normal,Vi=!!W.morphAttributes.color,Or=k.toneMapped?m.toneMapping:Sn,zr=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,Rn=zr!==void 0?zr.length:0,Ze=Z.get(k),Nr=f.state.lights;if(q===!0&&(z===!0||C!==b)){const In=C===b&&k.id===x;E.setState(k,C,In)}let wt=!1;k.version===Ze.__version?(Ze.needsLights&&Ze.lightsStateVersion!==Nr.state.version||Ze.outputEncoding!==Ne||K.isInstancedMesh&&Ze.instancing===!1||!K.isInstancedMesh&&Ze.instancing===!0||K.isSkinnedMesh&&Ze.skinning===!1||!K.isSkinnedMesh&&Ze.skinning===!0||Ze.envMap!==Oe||k.fog===!0&&Ze.fog!==Pe||Ze.numClippingPlanes!==void 0&&(Ze.numClippingPlanes!==E.numPlanes||Ze.numIntersection!==E.numIntersection)||Ze.vertexAlphas!==et||Ze.vertexTangents!==Xe||Ze.morphTargets!==je||Ze.morphNormals!==ct||Ze.morphColors!==Vi||Ze.toneMapping!==Or||Re.isWebGL2===!0&&Ze.morphTargetsCount!==Rn)&&(wt=!0):(wt=!0,Ze.__version=k.version);let Dn=Ze.currentProgram;wt===!0&&(Dn=vc(k,O,K));let di=!1,so=!1,_c=!1;const zt=Dn.getUniforms(),oo=Ze.uniforms;if(se.useProgram(Dn.program)&&(di=!0,so=!0,_c=!0),k.id!==x&&(x=k.id,so=!0),di||b!==C){if(zt.setValue(j,"projectionMatrix",C.projectionMatrix),Re.logarithmicDepthBuffer&&zt.setValue(j,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),b!==C&&(b=C,so=!0,_c=!0),k.isShaderMaterial||k.isMeshPhongMaterial||k.isMeshToonMaterial||k.isMeshStandardMaterial||k.envMap){const In=zt.map.cameraPosition;In!==void 0&&In.setValue(j,re.setFromMatrixPosition(C.matrixWorld))}(k.isMeshPhongMaterial||k.isMeshToonMaterial||k.isMeshLambertMaterial||k.isMeshBasicMaterial||k.isMeshStandardMaterial||k.isShaderMaterial)&&zt.setValue(j,"isOrthographic",C.isOrthographicCamera===!0),(k.isMeshPhongMaterial||k.isMeshToonMaterial||k.isMeshLambertMaterial||k.isMeshBasicMaterial||k.isMeshStandardMaterial||k.isShaderMaterial||k.isShadowMaterial||K.isSkinnedMesh)&&zt.setValue(j,"viewMatrix",C.matrixWorldInverse)}if(K.isSkinnedMesh){zt.setOptional(j,K,"bindMatrix"),zt.setOptional(j,K,"bindMatrixInverse");const In=K.skeleton;In&&(Re.floatVertexTextures?(In.boneTexture===null&&In.computeBoneTexture(),zt.setValue(j,"boneTexture",In.boneTexture,J),zt.setValue(j,"boneTextureSize",In.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const xc=W.morphAttributes;return(xc.position!==void 0||xc.normal!==void 0||xc.color!==void 0&&Re.isWebGL2===!0)&&pe.update(K,W,k,Dn),(so||Ze.receiveShadow!==K.receiveShadow)&&(Ze.receiveShadow=K.receiveShadow,zt.setValue(j,"receiveShadow",K.receiveShadow)),so&&(zt.setValue(j,"toneMappingExposure",m.toneMappingExposure),Ze.needsLights&&Iv(oo,_c),Pe&&k.fog===!0&&nt.refreshFogUniforms(oo,Pe),nt.refreshMaterialUniforms(oo,k,F,R,G),Ei.upload(j,Ze.uniformsList,oo,J)),k.isShaderMaterial&&k.uniformsNeedUpdate===!0&&(Ei.upload(j,Ze.uniformsList,oo,J),k.uniformsNeedUpdate=!1),k.isSpriteMaterial&&zt.setValue(j,"center",K.center),zt.setValue(j,"modelViewMatrix",K.modelViewMatrix),zt.setValue(j,"normalMatrix",K.normalMatrix),zt.setValue(j,"modelMatrix",K.matrixWorld),Dn}function Iv(C,O){C.ambientLightColor.needsUpdate=O,C.lightProbe.needsUpdate=O,C.directionalLights.needsUpdate=O,C.directionalLightShadows.needsUpdate=O,C.pointLights.needsUpdate=O,C.pointLightShadows.needsUpdate=O,C.spotLights.needsUpdate=O,C.spotLightShadows.needsUpdate=O,C.rectAreaLights.needsUpdate=O,C.hemisphereLights.needsUpdate=O}function Fv(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return _},this.setRenderTargetTextures=function(C,O,W){Z.get(C.texture).__webglTexture=O,Z.get(C.depthTexture).__webglTexture=W;const k=Z.get(C);k.__hasExternalTextures=!0,k.__hasExternalTextures&&(k.__autoAllocateDepthBuffer=W===void 0,k.__autoAllocateDepthBuffer||Se.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),k.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,O){const W=Z.get(C);W.__webglFramebuffer=O,W.__useDefaultFramebuffer=O===void 0},this.setRenderTarget=function(C,O=0,W=0){_=C,y=O,v=W;let k=!0;if(C){const Oe=Z.get(C);Oe.__useDefaultFramebuffer!==void 0?(se.bindFramebuffer(36160,null),k=!1):Oe.__webglFramebuffer===void 0?J.setupRenderTarget(C):Oe.__hasExternalTextures&&J.rebindTextures(C,Z.get(C.texture).__webglTexture,Z.get(C.depthTexture).__webglTexture)}let K=null,Pe=!1,Fe=!1;if(C){const Oe=C.texture;(Oe.isData3DTexture||Oe.isDataArrayTexture)&&(Fe=!0);const et=Z.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(K=et[O],Pe=!0):Re.isWebGL2&&C.samples>0&&J.useMultisampledRTT(C)===!1?K=Z.get(C).__webglMultisampledFramebuffer:K=et,M.copy(C.viewport),L.copy(C.scissor),w=C.scissorTest}else M.copy(I).multiplyScalar(F).floor(),L.copy(N).multiplyScalar(F).floor(),w=B;if(se.bindFramebuffer(36160,K)&&Re.drawBuffers&&k&&se.drawBuffers(C,K),se.viewport(M),se.scissor(L),se.setScissorTest(w),Pe){const Oe=Z.get(C.texture);j.framebufferTexture2D(36160,36064,34069+O,Oe.__webglTexture,W)}else if(Fe){const Oe=Z.get(C.texture),et=O||0;j.framebufferTextureLayer(36160,36064,Oe.__webglTexture,W||0,et)}x=-1},this.readRenderTargetPixels=function(C,O,W,k,K,Pe,Fe){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ne=Z.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Fe!==void 0&&(Ne=Ne[Fe]),Ne){se.bindFramebuffer(36160,Ne);try{const Oe=C.texture,et=Oe.format,Xe=Oe.type;if(et!==Wt&&A.convert(et)!==j.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const je=Xe===ws&&(Se.has("EXT_color_buffer_half_float")||Re.isWebGL2&&Se.has("EXT_color_buffer_float"));if(Xe!==Ri&&A.convert(Xe)!==j.getParameter(35738)&&!(Xe===ei&&(Re.isWebGL2||Se.has("OES_texture_float")||Se.has("WEBGL_color_buffer_float")))&&!je){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}O>=0&&O<=C.width-k&&W>=0&&W<=C.height-K&&j.readPixels(O,W,k,K,A.convert(et),A.convert(Xe),Pe)}finally{const Oe=_!==null?Z.get(_).__webglFramebuffer:null;se.bindFramebuffer(36160,Oe)}}},this.copyFramebufferToTexture=function(C,O,W=0){if(O.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const k=Math.pow(2,-W),K=Math.floor(O.image.width*k),Pe=Math.floor(O.image.height*k);J.setTexture2D(O,0),j.copyTexSubImage2D(3553,W,0,0,C.x,C.y,K,Pe),se.unbindTexture()},this.copyTextureToTexture=function(C,O,W,k=0){const K=O.image.width,Pe=O.image.height,Fe=A.convert(W.format),Ne=A.convert(W.type);J.setTexture2D(W,0),j.pixelStorei(37440,W.flipY),j.pixelStorei(37441,W.premultiplyAlpha),j.pixelStorei(3317,W.unpackAlignment),O.isDataTexture?j.texSubImage2D(3553,k,C.x,C.y,K,Pe,Fe,Ne,O.image.data):O.isCompressedTexture?j.compressedTexSubImage2D(3553,k,C.x,C.y,O.mipmaps[0].width,O.mipmaps[0].height,Fe,O.mipmaps[0].data):j.texSubImage2D(3553,k,C.x,C.y,Fe,Ne,O.image),k===0&&W.generateMipmaps&&j.generateMipmap(3553),se.unbindTexture()},this.copyTextureToTexture3D=function(C,O,W,k,K=0){if(m.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Pe=C.max.x-C.min.x+1,Fe=C.max.y-C.min.y+1,Ne=C.max.z-C.min.z+1,Oe=A.convert(k.format),et=A.convert(k.type);let Xe;if(k.isData3DTexture)J.setTexture3D(k,0),Xe=32879;else if(k.isDataArrayTexture)J.setTexture2DArray(k,0),Xe=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}j.pixelStorei(37440,k.flipY),j.pixelStorei(37441,k.premultiplyAlpha),j.pixelStorei(3317,k.unpackAlignment);const je=j.getParameter(3314),ct=j.getParameter(32878),Vi=j.getParameter(3316),Or=j.getParameter(3315),zr=j.getParameter(32877),Rn=W.isCompressedTexture?W.mipmaps[0]:W.image;j.pixelStorei(3314,Rn.width),j.pixelStorei(32878,Rn.height),j.pixelStorei(3316,C.min.x),j.pixelStorei(3315,C.min.y),j.pixelStorei(32877,C.min.z),W.isDataTexture||W.isData3DTexture?j.texSubImage3D(Xe,K,O.x,O.y,O.z,Pe,Fe,Ne,Oe,et,Rn.data):W.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),j.compressedTexSubImage3D(Xe,K,O.x,O.y,O.z,Pe,Fe,Ne,Oe,Rn.data)):j.texSubImage3D(Xe,K,O.x,O.y,O.z,Pe,Fe,Ne,Oe,et,Rn),j.pixelStorei(3314,je),j.pixelStorei(32878,ct),j.pixelStorei(3316,Vi),j.pixelStorei(3315,Or),j.pixelStorei(32877,zr),K===0&&k.generateMipmaps&&j.generateMipmap(Xe),se.unbindTexture()},this.initTexture=function(C){J.setTexture2D(C,0),se.unbindTexture()},this.resetState=function(){y=0,v=0,_=null,se.reset(),te.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Ke.prototype.isWebGLRenderer=!0;class Py extends Ke{}Py.prototype.isWebGL1Renderer=!0;class Zo{constructor(e,t=25e-5){this.name="",this.color=new ne(e),this.density=t}clone(){return new Zo(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Zo.prototype.isFogExp2=!0;class Jo{constructor(e,t=1,n=1e3){this.name="",this.color=new ne(e),this.near=t,this.far=n}clone(){return new Jo(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Jo.prototype.isFog=!0;class Ko extends Be{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}Ko.prototype.isScene=!0;class Pr{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=bs,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=tn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=tn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=tn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Pr.prototype.isInterleavedBuffer=!0;const Nt=new S;class Di{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Nt.fromBufferAttribute(this,t),Nt.applyMatrix4(e),this.setXYZ(t,Nt.x,Nt.y,Nt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Nt.fromBufferAttribute(this,t),Nt.applyNormalMatrix(e),this.setXYZ(t,Nt.x,Nt.y,Nt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Nt.fromBufferAttribute(this,t),Nt.transformDirection(e),this.setXYZ(t,Nt.x,Nt.y,Nt.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new We(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Di(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Di.prototype.isInterleavedBufferAttribute=!0;class ec extends xt{constructor(e){super(),this.type="SpriteMaterial",this.color=new ne(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}ec.prototype.isSpriteMaterial=!0;let es;const uo=new S,ts=new S,ns=new S,is=new $,ho=new $,Ry=new ae,Ba=new S,fo=new S,Oa=new S,lp=new $,Kc=new $,cp=new $;class tc extends Be{constructor(e){if(super(),this.type="Sprite",es===void 0){es=new Me;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Pr(t,5);es.setIndex([0,1,2,0,2,3]),es.setAttribute("position",new Di(n,3,0,!1)),es.setAttribute("uv",new Di(n,2,3,!1))}this.geometry=es,this.material=e!==void 0?e:new ec,this.center=new $(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ts.setFromMatrixScale(this.matrixWorld),Ry.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ns.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ts.multiplyScalar(-ns.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;za(Ba.set(-.5,-.5,0),ns,o,ts,i,s),za(fo.set(.5,-.5,0),ns,o,ts,i,s),za(Oa.set(.5,.5,0),ns,o,ts,i,s),lp.set(0,0),Kc.set(1,0),cp.set(1,1);let a=e.ray.intersectTriangle(Ba,fo,Oa,!1,uo);if(a===null&&(za(fo.set(-.5,.5,0),ns,o,ts,i,s),Kc.set(0,1),a=e.ray.intersectTriangle(Ba,Oa,fo,!1,uo),a===null))return;const l=e.ray.origin.distanceTo(uo);l<e.near||l>e.far||t.push({distance:l,point:uo.clone(),uv:vt.getUV(uo,Ba,fo,Oa,lp,Kc,cp,new $),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}tc.prototype.isSprite=!0;function za(r,e,t,n,i,s){is.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(ho.x=s*is.x-i*is.y,ho.y=i*is.x+s*is.y):ho.copy(is),r.copy(e),r.x+=ho.x,r.y+=ho.y,r.applyMatrix4(Ry)}const Na=new S,up=new S;class Dy extends Be{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Na.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Na);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Na.setFromMatrixPosition(e.matrixWorld),up.setFromMatrixPosition(this.matrixWorld);const n=Na.distanceTo(up)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}const hp=new S,fp=new qe,dp=new qe,QS=new S,pp=new ae;class Qo extends ht{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ae,this.bindMatrixInverse=new ae}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new qe,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;fp.fromBufferAttribute(i.attributes.skinIndex,e),dp.fromBufferAttribute(i.attributes.skinWeight,e),hp.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=dp.getComponent(s);if(o!==0){const a=fp.getComponent(s);pp.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(QS.copy(hp).applyMatrix4(pp),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}Qo.prototype.isSkinnedMesh=!0;class Es extends Be{constructor(){super(),this.type="Bone"}}Es.prototype.isBone=!0;class Ti extends ft{constructor(e=null,t=1,n=1,i,s,o,a,l,c=mt,u=mt,h,f){super(null,o,a,l,c,u,i,s,h,f),this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Ti.prototype.isDataTexture=!0;const mp=new ae,e1=new ae;class ea{constructor(e=[],t=[]){this.uuid=tn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ae)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ae;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:e1;mp.multiplyMatrices(a,t[s]),mp.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new ea(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=ly(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ti(t,e,e,Wt,ei);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Es),this.bones.push(o),this.boneInverses.push(new ae().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class xr extends We{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}xr.prototype.isInstancedBufferAttribute=!0;const gp=new ae,yp=new ae,Ua=[],po=new ht;class Kh extends ht{constructor(e,t,n){super(e,t),this.instanceMatrix=new xr(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(po.geometry=this.geometry,po.material=this.material,po.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,gp),yp.multiplyMatrices(n,gp),po.matrixWorld=yp,po.raycast(e,Ua);for(let o=0,a=Ua.length;o<a;o++){const l=Ua[o];l.instanceId=s,l.object=this,t.push(l)}Ua.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new xr(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Kh.prototype.isInstancedMesh=!0;class Tt extends xt{constructor(e){super(),this.type="LineBasicMaterial",this.color=new ne(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}Tt.prototype.isLineBasicMaterial=!0;const vp=new S,_p=new S,xp=new ae,Qc=new Ui,ka=new Ni;class Gn extends Be{constructor(e=new Me,t=new Tt){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)vp.fromBufferAttribute(t,i-1),_p.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=vp.distanceTo(_p);e.setAttribute("lineDistance",new ge(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ka.copy(n.boundingSphere),ka.applyMatrix4(i),ka.radius+=s,e.ray.intersectsSphere(ka)===!1)return;xp.copy(i).invert(),Qc.copy(e.ray).applyMatrix4(xp);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new S,u=new S,h=new S,f=new S,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const p=n.index,g=n.attributes.position;if(p!==null){const y=Math.max(0,o.start),v=Math.min(p.count,o.start+o.count);for(let _=y,x=v-1;_<x;_+=d){const b=p.getX(_),M=p.getX(_+1);if(c.fromBufferAttribute(g,b),u.fromBufferAttribute(g,M),Qc.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const w=e.ray.origin.distanceTo(f);w<e.near||w>e.far||t.push({distance:w,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}else{const y=Math.max(0,o.start),v=Math.min(g.count,o.start+o.count);for(let _=y,x=v-1;_<x;_+=d){if(c.fromBufferAttribute(g,_),u.fromBufferAttribute(g,_+1),Qc.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(f);M<e.near||M>e.far||t.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Gn.prototype.isLine=!0;const wp=new S,bp=new S;class Xt extends Gn{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)wp.fromBufferAttribute(t,i),bp.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+wp.distanceTo(bp);e.setAttribute("lineDistance",new ge(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Xt.prototype.isLineSegments=!0;class Qh extends Gn{constructor(e,t){super(e,t),this.type="LineLoop"}}Qh.prototype.isLineLoop=!0;class Rr extends xt{constructor(e){super(),this.type="PointsMaterial",this.color=new ne(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}Rr.prototype.isPointsMaterial=!0;const Mp=new ae,eh=new Ui,Ha=new Ni,Ga=new S;class js extends Be{constructor(e=new Me,t=new Rr){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ha.copy(n.boundingSphere),Ha.applyMatrix4(i),Ha.radius+=s,e.ray.intersectsSphere(Ha)===!1)return;Mp.copy(i).invert(),eh.copy(e.ray).applyMatrix4(Mp);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a;if(n.isBufferGeometry){const c=n.index,h=n.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let p=f,m=d;p<m;p++){const g=c.getX(p);Ga.fromBufferAttribute(h,g),Sp(Ga,g,l,i,e,t,this)}}else{const f=Math.max(0,o.start),d=Math.min(h.count,o.start+o.count);for(let p=f,m=d;p<m;p++)Ga.fromBufferAttribute(h,p),Sp(Ga,p,l,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}js.prototype.isPoints=!0;function Sp(r,e,t,n,i,s,o){const a=eh.distanceSqToPoint(r);if(a<t){const l=new S;eh.closestPointToPoint(r,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class Iy extends ft{constructor(e,t,n,i,s,o,a,l,c){super(e,t,n,i,s,o,a,l,c),this.minFilter=o!==void 0?o:ot,this.magFilter=s!==void 0?s:ot,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Iy.prototype.isVideoTexture=!0;class Fy extends ft{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=mt,this.minFilter=mt,this.generateMipmaps=!1,this.needsUpdate=!0}}Fy.prototype.isFramebufferTexture=!0;class ef extends ft{constructor(e,t,n,i,s,o,a,l,c,u,h,f){super(null,o,a,l,c,u,i,s,h,f),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}ef.prototype.isCompressedTexture=!0;class By extends ft{constructor(e,t,n,i,s,o,a,l,c){super(e,t,n,i,s,o,a,l,c),this.needsUpdate=!0}}By.prototype.isCanvasTexture=!0;class jt{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const u=n[i],f=n[i+1]-u,d=(o-u)/f;return(i+d)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=t||(o.isVector2?new $:new S);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new S,i=[],s=[],o=[],a=new S,l=new ae;for(let d=0;d<=e;d++){const p=d/e;i[d]=this.getTangentAt(p,new S)}s[0]=new S,o[0]=new S;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(i[d-1],i[d]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(gt(i[d-1].dot(i[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(a,p))}o[d].crossVectors(i[d],s[d])}if(t===!0){let d=Math.acos(gt(s[0].dot(s[e]),-1,1));d/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(d=-d);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(i[p],d*p)),o[p].crossVectors(i[p],s[p])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ta extends jt{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const n=t||new $,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}ta.prototype.isEllipseCurve=!0;class tf extends ta{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.type="ArcCurve"}}tf.prototype.isArcCurve=!0;function nf(){let r=0,e=0,t=0,n=0;function i(s,o,a,l){r=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){i(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,i(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return r+e*s+t*o+n*a}}}const Va=new S,eu=new nf,tu=new nf,nu=new nf;class rf extends jt{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new S){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%s]:(Va.subVectors(i[0],i[1]).add(i[0]),c=Va);const h=i[a%s],f=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(Va.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=Va),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),m=Math.pow(h.distanceToSquared(f),d),g=Math.pow(f.distanceToSquared(u),d);m<1e-4&&(m=1),p<1e-4&&(p=m),g<1e-4&&(g=m),eu.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,m,g),tu.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,m,g),nu.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,m,g)}else this.curveType==="catmullrom"&&(eu.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),tu.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),nu.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(eu.calc(l),tu.calc(l),nu.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new S().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}rf.prototype.isCatmullRomCurve3=!0;function Ep(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,a=r*r,l=r*a;return(2*t-2*n+s+o)*l+(-3*t+3*n-2*s-o)*a+s*r+t}function t1(r,e){const t=1-r;return t*t*e}function n1(r,e){return 2*(1-r)*r*e}function i1(r,e){return r*r*e}function bo(r,e,t,n){return t1(r,e)+n1(r,t)+i1(r,n)}function r1(r,e){const t=1-r;return t*t*t*e}function s1(r,e){const t=1-r;return 3*t*t*r*e}function o1(r,e){return 3*(1-r)*r*r*e}function a1(r,e){return r*r*r*e}function Mo(r,e,t,n,i){return r1(r,e)+s1(r,t)+o1(r,n)+a1(r,i)}class nc extends jt{constructor(e=new $,t=new $,n=new $,i=new $){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new $){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Mo(e,i.x,s.x,o.x,a.x),Mo(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}nc.prototype.isCubicBezierCurve=!0;class sf extends jt{constructor(e=new S,t=new S,n=new S,i=new S){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new S){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Mo(e,i.x,s.x,o.x,a.x),Mo(e,i.y,s.y,o.y,a.y),Mo(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}sf.prototype.isCubicBezierCurve3=!0;class na extends jt{constructor(e=new $,t=new $){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new $){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new $;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}na.prototype.isLineCurve=!0;class Oy extends jt{constructor(e=new S,t=new S){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new S){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ic extends jt{constructor(e=new $,t=new $,n=new $){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new $){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(bo(e,i.x,s.x,o.x),bo(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}ic.prototype.isQuadraticBezierCurve=!0;class rc extends jt{constructor(e=new S,t=new S,n=new S){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new S){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(bo(e,i.x,s.x,o.x),bo(e,i.y,s.y,o.y),bo(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}rc.prototype.isQuadraticBezierCurve3=!0;class sc extends jt{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new $){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Ep(a,l.x,c.x,u.x,h.x),Ep(a,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new $().fromArray(i))}return this}}sc.prototype.isSplineCurve=!0;var of=Object.freeze({__proto__:null,ArcCurve:tf,CatmullRomCurve3:rf,CubicBezierCurve:nc,CubicBezierCurve3:sf,EllipseCurve:ta,LineCurve:na,LineCurve3:Oy,QuadraticBezierCurve:ic,QuadraticBezierCurve3:rc,SplineCurve:sc});class zy extends jt{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new na(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new of[i.type]().fromJSON(i))}return this}}class Ts extends zy{constructor(e){super(),this.type="Path",this.currentPoint=new $,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new na(this.currentPoint.clone(),new $(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new ic(this.currentPoint.clone(),new $(e,t),new $(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new nc(this.currentPoint.clone(),new $(e,t),new $(n,i),new $(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new sc(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,n,i,s,o,a,l),this}absellipse(e,t,n,i,s,o,a,l){const c=new ta(e,t,n,i,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class wr extends Me{constructor(e=[new $(0,.5),new $(.5,0),new $(0,-.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=gt(i,0,Math.PI*2);const s=[],o=[],a=[],l=[],c=[],u=1/t,h=new S,f=new $,d=new S,p=new S,m=new S;let g=0,y=0;for(let v=0;v<=e.length-1;v++)switch(v){case 0:g=e[v+1].x-e[v].x,y=e[v+1].y-e[v].y,d.x=y*1,d.y=-g,d.z=y*0,m.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(m.x,m.y,m.z);break;default:g=e[v+1].x-e[v].x,y=e[v+1].y-e[v].y,d.x=y*1,d.y=-g,d.z=y*0,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),l.push(d.x,d.y,d.z),m.copy(p)}for(let v=0;v<=t;v++){const _=n+v*u*i,x=Math.sin(_),b=Math.cos(_);for(let M=0;M<=e.length-1;M++){h.x=e[M].x*x,h.y=e[M].y,h.z=e[M].x*b,o.push(h.x,h.y,h.z),f.x=v/t,f.y=M/(e.length-1),a.push(f.x,f.y);const L=l[3*M+0]*x,w=l[3*M+1],T=l[3*M+0]*b;c.push(L,w,T)}}for(let v=0;v<t;v++)for(let _=0;_<e.length-1;_++){const x=_+v*e.length,b=x,M=x+e.length,L=x+e.length+1,w=x+1;s.push(b,M,w),s.push(L,w,M)}this.setIndex(s),this.setAttribute("position",new ge(o,3)),this.setAttribute("uv",new ge(a,2)),this.setAttribute("normal",new ge(c,3))}static fromJSON(e){return new wr(e.points,e.segments,e.phiStart,e.phiLength)}}class As extends wr{constructor(e=1,t=1,n=4,i=8){const s=new Ts;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new As(e.radius,e.length,e.capSegments,e.radialSegments)}}class Cs extends Me{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],a=[],l=[],c=new S,u=new $;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=n+h/t*i;c.x=e*Math.cos(d),c.y=e*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=t;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new ge(o,3)),this.setAttribute("normal",new ge(a,3)),this.setAttribute("uv",new ge(l,2))}static fromJSON(e){return new Cs(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Ii extends Me{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const u=[],h=[],f=[],d=[];let p=0;const m=[],g=n/2;let y=0;v(),o===!1&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(u),this.setAttribute("position",new ge(h,3)),this.setAttribute("normal",new ge(f,3)),this.setAttribute("uv",new ge(d,2));function v(){const x=new S,b=new S;let M=0;const L=(t-e)/n;for(let w=0;w<=s;w++){const T=[],R=w/s,F=R*(t-e)+e;for(let U=0;U<=i;U++){const X=U/i,I=X*l+a,N=Math.sin(I),B=Math.cos(I);b.x=F*N,b.y=-R*n+g,b.z=F*B,h.push(b.x,b.y,b.z),x.set(N,L,B).normalize(),f.push(x.x,x.y,x.z),d.push(X,1-R),T.push(p++)}m.push(T)}for(let w=0;w<i;w++)for(let T=0;T<s;T++){const R=m[T][w],F=m[T+1][w],U=m[T+1][w+1],X=m[T][w+1];u.push(R,F,X),u.push(F,U,X),M+=6}c.addGroup(y,M,0),y+=M}function _(x){const b=p,M=new $,L=new S;let w=0;const T=x===!0?e:t,R=x===!0?1:-1;for(let U=1;U<=i;U++)h.push(0,g*R,0),f.push(0,R,0),d.push(.5,.5),p++;const F=p;for(let U=0;U<=i;U++){const I=U/i*l+a,N=Math.cos(I),B=Math.sin(I);L.x=T*B,L.y=g*R,L.z=T*N,h.push(L.x,L.y,L.z),f.push(0,R,0),M.x=N*.5+.5,M.y=B*.5*R+.5,d.push(M.x,M.y),p++}for(let U=0;U<i;U++){const X=b+U,I=F+U;x===!0?u.push(I,I+1,X):u.push(I+1,I,X),w+=3}c.addGroup(y,w,x===!0?1:2),y+=w}}static fromJSON(e){return new Ii(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ls extends Ii{constructor(e=1,t=1,n=8,i=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Ls(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Vn extends Me{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];a(i),c(n),u(),this.setAttribute("position",new ge(s,3)),this.setAttribute("normal",new ge(s.slice(),3)),this.setAttribute("uv",new ge(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(v){const _=new S,x=new S,b=new S;for(let M=0;M<t.length;M+=3)d(t[M+0],_),d(t[M+1],x),d(t[M+2],b),l(_,x,b,v)}function l(v,_,x,b){const M=b+1,L=[];for(let w=0;w<=M;w++){L[w]=[];const T=v.clone().lerp(x,w/M),R=_.clone().lerp(x,w/M),F=M-w;for(let U=0;U<=F;U++)U===0&&w===M?L[w][U]=T:L[w][U]=T.clone().lerp(R,U/F)}for(let w=0;w<M;w++)for(let T=0;T<2*(M-w)-1;T++){const R=Math.floor(T/2);T%2===0?(f(L[w][R+1]),f(L[w+1][R]),f(L[w][R])):(f(L[w][R+1]),f(L[w+1][R+1]),f(L[w+1][R]))}}function c(v){const _=new S;for(let x=0;x<s.length;x+=3)_.x=s[x+0],_.y=s[x+1],_.z=s[x+2],_.normalize().multiplyScalar(v),s[x+0]=_.x,s[x+1]=_.y,s[x+2]=_.z}function u(){const v=new S;for(let _=0;_<s.length;_+=3){v.x=s[_+0],v.y=s[_+1],v.z=s[_+2];const x=g(v)/2/Math.PI+.5,b=y(v)/Math.PI+.5;o.push(x,1-b)}p(),h()}function h(){for(let v=0;v<o.length;v+=6){const _=o[v+0],x=o[v+2],b=o[v+4],M=Math.max(_,x,b),L=Math.min(_,x,b);M>.9&&L<.1&&(_<.2&&(o[v+0]+=1),x<.2&&(o[v+2]+=1),b<.2&&(o[v+4]+=1))}}function f(v){s.push(v.x,v.y,v.z)}function d(v,_){const x=v*3;_.x=e[x+0],_.y=e[x+1],_.z=e[x+2]}function p(){const v=new S,_=new S,x=new S,b=new S,M=new $,L=new $,w=new $;for(let T=0,R=0;T<s.length;T+=9,R+=6){v.set(s[T+0],s[T+1],s[T+2]),_.set(s[T+3],s[T+4],s[T+5]),x.set(s[T+6],s[T+7],s[T+8]),M.set(o[R+0],o[R+1]),L.set(o[R+2],o[R+3]),w.set(o[R+4],o[R+5]),b.copy(v).add(_).add(x).divideScalar(3);const F=g(b);m(M,R+0,v,F),m(L,R+2,_,F),m(w,R+4,x,F)}}function m(v,_,x,b){b<0&&v.x===1&&(o[_]=v.x-1),x.x===0&&x.z===0&&(o[_]=b/2/Math.PI+.5)}function g(v){return Math.atan2(v.z,-v.x)}function y(v){return Math.atan2(-v.y,Math.sqrt(v.x*v.x+v.z*v.z))}}static fromJSON(e){return new Vn(e.vertices,e.indices,e.radius,e.details)}}class Ps extends Vn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ps(e.radius,e.detail)}}const Wa=new S,$a=new S,iu=new S,qa=new vt;class af extends Me{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(hr*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:m,b:g,c:y}=qa;if(m.fromBufferAttribute(a,c[0]),g.fromBufferAttribute(a,c[1]),y.fromBufferAttribute(a,c[2]),qa.getNormal(iu),h[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,h[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,h[2]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let v=0;v<3;v++){const _=(v+1)%3,x=h[v],b=h[_],M=qa[u[v]],L=qa[u[_]],w=`${x}_${b}`,T=`${b}_${x}`;T in f&&f[T]?(iu.dot(f[T].normal)<=s&&(d.push(M.x,M.y,M.z),d.push(L.x,L.y,L.z)),f[T]=null):w in f||(f[w]={index0:c[v],index1:c[_],normal:iu.clone()})}}for(const p in f)if(f[p]){const{index0:m,index1:g}=f[p];Wa.fromBufferAttribute(a,m),$a.fromBufferAttribute(a,g),d.push(Wa.x,Wa.y,Wa.z),d.push($a.x,$a.y,$a.z)}this.setAttribute("position",new ge(d,3))}}}class kn extends Ts{constructor(e){super(e),this.uuid=tn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ts().fromJSON(i))}return this}}const l1={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Ny(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,f,d;if(n&&(s=d1(r,e,s,t)),r.length>80*t){a=c=r[0],l=u=r[1];for(let p=t;p<i;p+=t)h=r[p],f=r[p+1],h<a&&(a=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-a,u-l),d=d!==0?1/d:0}return Bo(s,o,t,a,l,d),o}};function Ny(r,e,t,n,i){let s,o;if(i===S1(r,e,t,n)>0)for(s=e;s<t;s+=n)o=Tp(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=Tp(s,r[s],r[s+1],o);return o&&oc(o,o.next)&&(zo(o),o=o.next),o}function Fi(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(oc(t,t.next)||at(t.prev,t,t.next)===0)){if(zo(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Bo(r,e,t,n,i,s,o){if(!r)return;!o&&s&&v1(r,n,i,s);let a=r,l,c;for(;r.prev!==r.next;){if(l=r.prev,c=r.next,s?u1(r,n,i,s):c1(r)){e.push(l.i/t),e.push(r.i/t),e.push(c.i/t),zo(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=h1(Fi(r),e,t),Bo(r,e,t,n,i,s,2)):o===2&&f1(r,e,t,n,i,s):Bo(Fi(r),e,t,n,i,s,1);break}}}function c1(r){const e=r.prev,t=r,n=r.next;if(at(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(ds(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&at(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function u1(r,e,t,n){const i=r.prev,s=r,o=r.next;if(at(i,s,o)>=0)return!1;const a=i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,l=i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,c=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,h=th(a,l,e,t,n),f=th(c,u,e,t,n);let d=r.prevZ,p=r.nextZ;for(;d&&d.z>=h&&p&&p.z<=f;){if(d!==r.prev&&d!==r.next&&ds(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&at(d.prev,d,d.next)>=0||(d=d.prevZ,p!==r.prev&&p!==r.next&&ds(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&at(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=h;){if(d!==r.prev&&d!==r.next&&ds(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&at(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==r.prev&&p!==r.next&&ds(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&at(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function h1(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!oc(i,s)&&Uy(i,n,n.next,s)&&Oo(i,s)&&Oo(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),zo(n),zo(n.next),n=r=s),n=n.next}while(n!==r);return Fi(n)}function f1(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&w1(o,a)){let l=ky(o,a);o=Fi(o,o.next),l=Fi(l,l.next),Bo(o,e,t,n,i,s),Bo(l,e,t,n,i,s);return}a=a.next}o=o.next}while(o!==r)}function d1(r,e,t,n){const i=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*n,l=s<o-1?e[s+1]*n:r.length,c=Ny(r,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(x1(c));for(i.sort(p1),s=0;s<i.length;s++)m1(i[s],t),t=Fi(t,t.next);return t}function p1(r,e){return r.x-e.x}function m1(r,e){if(e=g1(r,e),e){const t=ky(e,r);Fi(e,e.next),Fi(t,t.next)}}function g1(r,e){let t=e;const n=r.x,i=r.y;let s=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const f=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=n&&f>s){if(s=f,f===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===s)return o;const a=o,l=o.x,c=o.y;let u=1/0,h;t=o;do n>=t.x&&t.x>=l&&n!==t.x&&ds(i<c?n:s,i,l,c,i<c?s:n,i,t.x,t.y)&&(h=Math.abs(i-t.y)/(n-t.x),Oo(t,r)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&y1(o,t)))&&(o=t,u=h)),t=t.next;while(t!==a);return o}function y1(r,e){return at(r.prev,r,e.prev)<0&&at(e.next,r,r.next)<0}function v1(r,e,t,n){let i=r;do i.z===null&&(i.z=th(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,_1(i)}function _1(r){let e,t,n,i,s,o,a,l,c=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,!!n);e++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,c*=2}while(o>1);return r}function th(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function x1(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function ds(r,e,t,n,i,s,o,a){return(i-o)*(e-a)-(r-o)*(s-a)>=0&&(r-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(i-o)*(n-a)>=0}function w1(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!b1(r,e)&&(Oo(r,e)&&Oo(e,r)&&M1(r,e)&&(at(r.prev,r,e.prev)||at(r,e.prev,e))||oc(r,e)&&at(r.prev,r,r.next)>0&&at(e.prev,e,e.next)>0)}function at(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function oc(r,e){return r.x===e.x&&r.y===e.y}function Uy(r,e,t,n){const i=ja(at(r,e,t)),s=ja(at(r,e,n)),o=ja(at(t,n,r)),a=ja(at(t,n,e));return!!(i!==s&&o!==a||i===0&&Xa(r,t,e)||s===0&&Xa(r,n,e)||o===0&&Xa(t,r,n)||a===0&&Xa(t,e,n))}function Xa(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function ja(r){return r>0?1:r<0?-1:0}function b1(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Uy(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Oo(r,e){return at(r.prev,r,r.next)<0?at(r,e,r.next)>=0&&at(r,r.prev,e)>=0:at(r,e,r.prev)<0||at(r,r.next,e)<0}function M1(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function ky(r,e){const t=new nh(r.i,r.x,r.y),n=new nh(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Tp(r,e,t,n){const i=new nh(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function zo(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function nh(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function S1(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Hn{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Hn.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Ap(e),Cp(n,e);let o=e.length;t.forEach(Ap);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,Cp(n,t[l]);const a=l1.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Ap(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Cp(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Wn extends Me{constructor(e=new kn([new $(.5,.5),new $(-.5,.5),new $(-.5,-.5),new $(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new ge(i,3)),this.setAttribute("uv",new ge(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:1,f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const y=t.extrudePath,v=t.UVGenerator!==void 0?t.UVGenerator:E1;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let _,x=!1,b,M,L,w;y&&(_=y.getSpacedPoints(u),x=!0,f=!1,b=y.computeFrenetFrames(u,!1),M=new S,L=new S,w=new S),f||(g=0,d=0,p=0,m=0);const T=a.extractPoints(c);let R=T.shape;const F=T.holes;if(!Hn.isClockWise(R)){R=R.reverse();for(let Z=0,J=F.length;Z<J;Z++){const ie=F[Z];Hn.isClockWise(ie)&&(F[Z]=ie.reverse())}}const X=Hn.triangulateShape(R,F),I=R;for(let Z=0,J=F.length;Z<J;Z++){const ie=F[Z];R=R.concat(ie)}function N(Z,J,ie){return J||console.error("THREE.ExtrudeGeometry: vec does not exist"),J.clone().multiplyScalar(ie).add(Z)}const B=R.length,H=X.length;function q(Z,J,ie){let _e,de,De;const Ae=Z.x-J.x,Ee=Z.y-J.y,nt=ie.x-Z.x,Ye=ie.y-Z.y,P=Ae*Ae+Ee*Ee,E=Ae*Ye-Ee*nt;if(Math.abs(E)>Number.EPSILON){const V=Math.sqrt(P),ee=Math.sqrt(nt*nt+Ye*Ye),pe=J.x-Ee/V,ve=J.y+Ae/V,Te=ie.x-Ye/ee,A=ie.y+nt/ee,te=((Te-pe)*Ye-(A-ve)*nt)/(Ae*Ye-Ee*nt);_e=pe+Ae*te-Z.x,de=ve+Ee*te-Z.y;const xe=_e*_e+de*de;if(xe<=2)return new $(_e,de);De=Math.sqrt(xe/2)}else{let V=!1;Ae>Number.EPSILON?nt>Number.EPSILON&&(V=!0):Ae<-Number.EPSILON?nt<-Number.EPSILON&&(V=!0):Math.sign(Ee)===Math.sign(Ye)&&(V=!0),V?(_e=-Ee,de=Ae,De=Math.sqrt(P)):(_e=Ae,de=Ee,De=Math.sqrt(P/2))}return new $(_e/De,de/De)}const z=[];for(let Z=0,J=I.length,ie=J-1,_e=Z+1;Z<J;Z++,ie++,_e++)ie===J&&(ie=0),_e===J&&(_e=0),z[Z]=q(I[Z],I[ie],I[_e]);const G=[];let Q,Y=z.concat();for(let Z=0,J=F.length;Z<J;Z++){const ie=F[Z];Q=[];for(let _e=0,de=ie.length,De=de-1,Ae=_e+1;_e<de;_e++,De++,Ae++)De===de&&(De=0),Ae===de&&(Ae=0),Q[_e]=q(ie[_e],ie[De],ie[Ae]);G.push(Q),Y=Y.concat(Q)}for(let Z=0;Z<g;Z++){const J=Z/g,ie=d*Math.cos(J*Math.PI/2),_e=p*Math.sin(J*Math.PI/2)+m;for(let de=0,De=I.length;de<De;de++){const Ae=N(I[de],z[de],_e);ze(Ae.x,Ae.y,-ie)}for(let de=0,De=F.length;de<De;de++){const Ae=F[de];Q=G[de];for(let Ee=0,nt=Ae.length;Ee<nt;Ee++){const Ye=N(Ae[Ee],Q[Ee],_e);ze(Ye.x,Ye.y,-ie)}}}const re=p+m;for(let Z=0;Z<B;Z++){const J=f?N(R[Z],Y[Z],re):R[Z];x?(L.copy(b.normals[0]).multiplyScalar(J.x),M.copy(b.binormals[0]).multiplyScalar(J.y),w.copy(_[0]).add(L).add(M),ze(w.x,w.y,w.z)):ze(J.x,J.y,0)}for(let Z=1;Z<=u;Z++)for(let J=0;J<B;J++){const ie=f?N(R[J],Y[J],re):R[J];x?(L.copy(b.normals[Z]).multiplyScalar(ie.x),M.copy(b.binormals[Z]).multiplyScalar(ie.y),w.copy(_[Z]).add(L).add(M),ze(w.x,w.y,w.z)):ze(ie.x,ie.y,h/u*Z)}for(let Z=g-1;Z>=0;Z--){const J=Z/g,ie=d*Math.cos(J*Math.PI/2),_e=p*Math.sin(J*Math.PI/2)+m;for(let de=0,De=I.length;de<De;de++){const Ae=N(I[de],z[de],_e);ze(Ae.x,Ae.y,h+ie)}for(let de=0,De=F.length;de<De;de++){const Ae=F[de];Q=G[de];for(let Ee=0,nt=Ae.length;Ee<nt;Ee++){const Ye=N(Ae[Ee],Q[Ee],_e);x?ze(Ye.x,Ye.y+_[u-1].y,_[u-1].x+ie):ze(Ye.x,Ye.y,h+ie)}}}fe(),ye();function fe(){const Z=i.length/3;if(f){let J=0,ie=B*J;for(let _e=0;_e<H;_e++){const de=X[_e];Se(de[2]+ie,de[1]+ie,de[0]+ie)}J=u+g*2,ie=B*J;for(let _e=0;_e<H;_e++){const de=X[_e];Se(de[0]+ie,de[1]+ie,de[2]+ie)}}else{for(let J=0;J<H;J++){const ie=X[J];Se(ie[2],ie[1],ie[0])}for(let J=0;J<H;J++){const ie=X[J];Se(ie[0]+B*u,ie[1]+B*u,ie[2]+B*u)}}n.addGroup(Z,i.length/3-Z,0)}function ye(){const Z=i.length/3;let J=0;j(I,J),J+=I.length;for(let ie=0,_e=F.length;ie<_e;ie++){const de=F[ie];j(de,J),J+=de.length}n.addGroup(Z,i.length/3-Z,1)}function j(Z,J){let ie=Z.length;for(;--ie>=0;){const _e=ie;let de=ie-1;de<0&&(de=Z.length-1);for(let De=0,Ae=u+g*2;De<Ae;De++){const Ee=B*De,nt=B*(De+1),Ye=J+_e+Ee,P=J+de+Ee,E=J+de+nt,V=J+_e+nt;Re(Ye,P,E,V)}}}function ze(Z,J,ie){l.push(Z),l.push(J),l.push(ie)}function Se(Z,J,ie){se(Z),se(J),se(ie);const _e=i.length/3,de=v.generateTopUV(n,i,_e-3,_e-2,_e-1);Ie(de[0]),Ie(de[1]),Ie(de[2])}function Re(Z,J,ie,_e){se(Z),se(J),se(_e),se(J),se(ie),se(_e);const de=i.length/3,De=v.generateSideWallUV(n,i,de-6,de-3,de-2,de-1);Ie(De[0]),Ie(De[1]),Ie(De[3]),Ie(De[1]),Ie(De[2]),Ie(De[3])}function se(Z){i.push(l[Z*3+0]),i.push(l[Z*3+1]),i.push(l[Z*3+2])}function Ie(Z){s.push(Z.x),s.push(Z.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return T1(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new of[i.type]().fromJSON(i)),new Wn(n,e.options)}}const E1={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],c=e[i*3],u=e[i*3+1];return[new $(s,o),new $(a,l),new $(c,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[n*3],u=e[n*3+1],h=e[n*3+2],f=e[i*3],d=e[i*3+1],p=e[i*3+2],m=e[s*3],g=e[s*3+1],y=e[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new $(o,1-l),new $(c,1-h),new $(f,1-p),new $(m,1-y)]:[new $(a,1-l),new $(u,1-h),new $(d,1-p),new $(g,1-y)]}};function T1(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Rs extends Vn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Rs(e.radius,e.detail)}}class br extends Vn{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new br(e.radius,e.detail)}}class Ds extends Me{constructor(e=.5,t=1,n=8,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=e;const f=(t-e)/i,d=new S,p=new $;for(let m=0;m<=i;m++){for(let g=0;g<=n;g++){const y=s+g/n*o;d.x=h*Math.cos(y),d.y=h*Math.sin(y),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let m=0;m<i;m++){const g=m*(n+1);for(let y=0;y<n;y++){const v=y+g,_=v,x=v+n+1,b=v+n+2,M=v+1;a.push(_,x,M),a.push(x,b,M)}}this.setIndex(a),this.setAttribute("position",new ge(l,3)),this.setAttribute("normal",new ge(c,3)),this.setAttribute("uv",new ge(u,2))}static fromJSON(e){return new Ds(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Mr extends Me{constructor(e=new kn([new $(0,.5),new $(-.5,-.5),new $(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new ge(i,3)),this.setAttribute("normal",new ge(s,3)),this.setAttribute("uv",new ge(o,2));function c(u){const h=i.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;Hn.isClockWise(d)===!1&&(d=d.reverse());for(let g=0,y=p.length;g<y;g++){const v=p[g];Hn.isClockWise(v)===!0&&(p[g]=v.reverse())}const m=Hn.triangulateShape(d,p);for(let g=0,y=p.length;g<y;g++){const v=p[g];d=d.concat(v)}for(let g=0,y=d.length;g<y;g++){const v=d[g];i.push(v.x,v.y,0),s.push(0,0,1),o.push(v.x,v.y)}for(let g=0,y=m.length;g<y;g++){const v=m[g],_=v[0]+h,x=v[1]+h,b=v[2]+h;n.push(_,x,b),l+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return A1(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new Mr(n,e.curveSegments)}}function A1(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Sr extends Me{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new S,f=new S,d=[],p=[],m=[],g=[];for(let y=0;y<=n;y++){const v=[],_=y/n;let x=0;y==0&&o==0?x=.5/t:y==n&&l==Math.PI&&(x=-.5/t);for(let b=0;b<=t;b++){const M=b/t;h.x=-e*Math.cos(i+M*s)*Math.sin(o+_*a),h.y=e*Math.cos(o+_*a),h.z=e*Math.sin(i+M*s)*Math.sin(o+_*a),p.push(h.x,h.y,h.z),f.copy(h).normalize(),m.push(f.x,f.y,f.z),g.push(M+x,1-_),v.push(c++)}u.push(v)}for(let y=0;y<n;y++)for(let v=0;v<t;v++){const _=u[y][v+1],x=u[y][v],b=u[y+1][v],M=u[y+1][v+1];(y!==0||o>0)&&d.push(_,x,M),(y!==n-1||l<Math.PI)&&d.push(x,b,M)}this.setIndex(d),this.setAttribute("position",new ge(p,3)),this.setAttribute("normal",new ge(m,3)),this.setAttribute("uv",new ge(g,2))}static fromJSON(e){return new Sr(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Is extends Vn{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Is(e.radius,e.detail)}}class Fs extends Me{constructor(e=1,t=.4,n=8,i=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],c=[],u=new S,h=new S,f=new S;for(let d=0;d<=n;d++)for(let p=0;p<=i;p++){const m=p/i*s,g=d/n*Math.PI*2;h.x=(e+t*Math.cos(g))*Math.cos(m),h.y=(e+t*Math.cos(g))*Math.sin(m),h.z=t*Math.sin(g),a.push(h.x,h.y,h.z),u.x=e*Math.cos(m),u.y=e*Math.sin(m),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/i),c.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=i;p++){const m=(i+1)*d+p-1,g=(i+1)*(d-1)+p-1,y=(i+1)*(d-1)+p,v=(i+1)*d+p;o.push(m,g,v),o.push(g,y,v)}this.setIndex(o),this.setAttribute("position",new ge(a,3)),this.setAttribute("normal",new ge(l,3)),this.setAttribute("uv",new ge(c,2))}static fromJSON(e){return new Fs(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Bs extends Me{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],c=[],u=[],h=new S,f=new S,d=new S,p=new S,m=new S,g=new S,y=new S;for(let _=0;_<=n;++_){const x=_/n*s*Math.PI*2;v(x,s,o,e,d),v(x+.01,s,o,e,p),g.subVectors(p,d),y.addVectors(p,d),m.crossVectors(g,y),y.crossVectors(m,g),m.normalize(),y.normalize();for(let b=0;b<=i;++b){const M=b/i*Math.PI*2,L=-t*Math.cos(M),w=t*Math.sin(M);h.x=d.x+(L*y.x+w*m.x),h.y=d.y+(L*y.y+w*m.y),h.z=d.z+(L*y.z+w*m.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(_/n),u.push(b/i)}}for(let _=1;_<=n;_++)for(let x=1;x<=i;x++){const b=(i+1)*(_-1)+(x-1),M=(i+1)*_+(x-1),L=(i+1)*_+x,w=(i+1)*(_-1)+x;a.push(b,M,w),a.push(M,L,w)}this.setIndex(a),this.setAttribute("position",new ge(l,3)),this.setAttribute("normal",new ge(c,3)),this.setAttribute("uv",new ge(u,2));function v(_,x,b,M,L){const w=Math.cos(_),T=Math.sin(_),R=b/x*_,F=Math.cos(R);L.x=M*(2+F)*.5*w,L.y=M*(2+F)*T*.5,L.z=M*Math.sin(R)*.5}}static fromJSON(e){return new Bs(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Os extends Me{constructor(e=new rc(new S(-1,-1,0),new S(-1,1,0),new S(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new S,l=new S,c=new $;let u=new S;const h=[],f=[],d=[],p=[];m(),this.setIndex(p),this.setAttribute("position",new ge(h,3)),this.setAttribute("normal",new ge(f,3)),this.setAttribute("uv",new ge(d,2));function m(){for(let _=0;_<t;_++)g(_);g(s===!1?t:0),v(),y()}function g(_){u=e.getPointAt(_/t,u);const x=o.normals[_],b=o.binormals[_];for(let M=0;M<=i;M++){const L=M/i*Math.PI*2,w=Math.sin(L),T=-Math.cos(L);l.x=T*x.x+w*b.x,l.y=T*x.y+w*b.y,l.z=T*x.z+w*b.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,h.push(a.x,a.y,a.z)}}function y(){for(let _=1;_<=t;_++)for(let x=1;x<=i;x++){const b=(i+1)*(_-1)+(x-1),M=(i+1)*_+(x-1),L=(i+1)*_+x,w=(i+1)*(_-1)+x;p.push(b,M,w),p.push(M,L,w)}}function v(){for(let _=0;_<=t;_++)for(let x=0;x<=i;x++)c.x=_/t,c.y=x/i,d.push(c.x,c.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Os(new of[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class lf extends Me{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new S,s=new S;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,m=f+d;p<m;p+=3)for(let g=0;g<3;g++){const y=a.getX(p+g),v=a.getX(p+(g+1)%3);i.fromBufferAttribute(o,y),s.fromBufferAttribute(o,v),Lp(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,h=3*a+(c+1)%3;i.fromBufferAttribute(o,u),s.fromBufferAttribute(o,h),Lp(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ge(t,3))}}}function Lp(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Pp=Object.freeze({__proto__:null,BoxGeometry:ai,BoxBufferGeometry:ai,CapsuleGeometry:As,CapsuleBufferGeometry:As,CircleGeometry:Cs,CircleBufferGeometry:Cs,ConeGeometry:Ls,ConeBufferGeometry:Ls,CylinderGeometry:Ii,CylinderBufferGeometry:Ii,DodecahedronGeometry:Ps,DodecahedronBufferGeometry:Ps,EdgesGeometry:af,ExtrudeGeometry:Wn,ExtrudeBufferGeometry:Wn,IcosahedronGeometry:Rs,IcosahedronBufferGeometry:Rs,LatheGeometry:wr,LatheBufferGeometry:wr,OctahedronGeometry:br,OctahedronBufferGeometry:br,PlaneGeometry:_r,PlaneBufferGeometry:_r,PolyhedronGeometry:Vn,PolyhedronBufferGeometry:Vn,RingGeometry:Ds,RingBufferGeometry:Ds,ShapeGeometry:Mr,ShapeBufferGeometry:Mr,SphereGeometry:Sr,SphereBufferGeometry:Sr,TetrahedronGeometry:Is,TetrahedronBufferGeometry:Is,TorusGeometry:Fs,TorusBufferGeometry:Fs,TorusKnotGeometry:Bs,TorusKnotBufferGeometry:Bs,TubeGeometry:Os,TubeBufferGeometry:Os,WireframeGeometry:lf});class cf extends xt{constructor(e){super(),this.type="ShadowMaterial",this.color=new ne(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}cf.prototype.isShadowMaterial=!0;class uf extends It{constructor(e){super(e),this.type="RawShaderMaterial"}}uf.prototype.isRawShaderMaterial=!0;class ac extends xt{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ne(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Oi,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}ac.prototype.isMeshStandardMaterial=!0;class hf extends ac{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new $(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return gt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new ne(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new ne(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ne(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}hf.prototype.isMeshPhysicalMaterial=!0;class ps extends xt{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new ne(16777215),this.specular=new ne(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Oi,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=gr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}ps.prototype.isMeshPhongMaterial=!0;class ff extends xt{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ne(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Oi,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}ff.prototype.isMeshToonMaterial=!0;class df extends xt{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Oi,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}df.prototype.isMeshNormalMaterial=!0;class lc extends xt{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new ne(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ne(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=gr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}lc.prototype.isMeshLambertMaterial=!0;class pf extends xt{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ne(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Oi,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}pf.prototype.isMeshMatcapMaterial=!0;class mf extends Tt{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}mf.prototype.isLineDashedMaterial=!0;const C1={ShadowMaterial:cf,SpriteMaterial:ec,RawShaderMaterial:uf,ShaderMaterial:It,PointsMaterial:Rr,MeshPhysicalMaterial:hf,MeshStandardMaterial:ac,MeshPhongMaterial:ps,MeshToonMaterial:ff,MeshNormalMaterial:df,MeshLambertMaterial:lc,MeshDepthMaterial:Kl,MeshDistanceMaterial:Ql,MeshBasicMaterial:fi,MeshMatcapMaterial:pf,LineDashedMaterial:mf,LineBasicMaterial:Tt,Material:xt};xt.fromType=function(r){return new C1[r]};const it={arraySlice:function(r,e,t){return it.isTypedArray(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)i[o++]=r[a+l]}return i},flattenJSON:function(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)},subclip:function(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*i;if(!(p<t||p>=n)){h.push(c.times[d]);for(let m=0;m<u;++m)f.push(c.values[d*u+m])}}h.length!==0&&(c.times=it.convertArray(h,c.times.constructor),c.values=it.convertArray(f,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=r.tracks.find(function(y){return y.name===a.name&&y.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let m;if(s<=a.times[0]){const y=u,v=h-u;m=it.arraySlice(a.values,y,v)}else if(s>=a.times[p]){const y=p*h+u,v=y+h-u;m=it.arraySlice(a.values,y,v)}else{const y=a.createInterpolant(),v=u,_=h-u;y.evaluate(s),m=it.arraySlice(y.resultBuffer,v,_)}l==="quaternion"&&new lt().fromArray(m).normalize().conjugate().toArray(m);const g=c.times.length;for(let y=0;y<g;++y){const v=y*d+f;if(l==="quaternion")lt.multiplyQuaternionsFlat(c.values,v,m,0,c.values,v);else{const _=d-f*2;for(let x=0;x<_;++x)c.values[v+x]-=m[x]}}}return r.blendMode=Xh,r}};class li{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}li.prototype.beforeStart_=li.prototype.copySampleValue_;li.prototype.afterEnd_=li.prototype.copySampleValue_;class Hy extends li{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:sr,endingEnd:sr}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case or:s=e,a=2*t-n;break;case Do:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case or:o=e,l=2*n-t;break;case Do:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const c=(n-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),m=p*p,g=m*p,y=-f*g+2*f*m-f*p,v=(1+f)*g+(-1.5-2*f)*m+(-.5+f)*p+1,_=(-1-d)*g+(1.5+d)*m+.5*p,x=d*g-d*m;for(let b=0;b!==a;++b)s[b]=y*o[u+b]+v*o[c+b]+_*o[l+b]+x*o[h+b];return s}}class gf extends li{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(n-t)/(i-t),h=1-u;for(let f=0;f!==a;++f)s[f]=o[c+f]*h+o[l+f]*u;return s}}class Gy extends li{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Cn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=it.convertArray(t,this.TimeBufferType),this.values=it.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:it.convertArray(e.times,Array),values:it.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Gy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new gf(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Hy(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Po:t=this.InterpolantFactoryMethodDiscrete;break;case Ro:t=this.InterpolantFactoryMethodLinear;break;case fl:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Po;case this.InterpolantFactoryMethodLinear:return Ro;case this.InterpolantFactoryMethodSmooth:return fl}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=it.arraySlice(n,s,o),this.values=it.arraySlice(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(i!==void 0&&it.isTypedArray(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=it.arraySlice(this.times),t=it.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===fl,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(i)l=!0;else{const h=a*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const m=t[h+p];if(m!==t[f+p]||m!==t[d+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*n,f=o*n;for(let d=0;d!==n;++d)t[f+d]=t[h+d]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=it.arraySlice(e,0,o),this.values=it.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=it.arraySlice(this.times,0),t=it.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Cn.prototype.TimeBufferType=Float32Array;Cn.prototype.ValueBufferType=Float32Array;Cn.prototype.DefaultInterpolation=Ro;class Dr extends Cn{}Dr.prototype.ValueTypeName="bool";Dr.prototype.ValueBufferType=Array;Dr.prototype.DefaultInterpolation=Po;Dr.prototype.InterpolantFactoryMethodLinear=void 0;Dr.prototype.InterpolantFactoryMethodSmooth=void 0;class yf extends Cn{}yf.prototype.ValueTypeName="color";class zs extends Cn{}zs.prototype.ValueTypeName="number";class Vy extends li{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let c=e*a;for(let u=c+a;c!==u;c+=4)lt.slerpFlat(s,0,o,c-a,o,c,l);return s}}class Ir extends Cn{InterpolantFactoryMethodLinear(e){return new Vy(this.times,this.values,this.getValueSize(),e)}}Ir.prototype.ValueTypeName="quaternion";Ir.prototype.DefaultInterpolation=Ro;Ir.prototype.InterpolantFactoryMethodSmooth=void 0;class Fr extends Cn{}Fr.prototype.ValueTypeName="string";Fr.prototype.ValueBufferType=Array;Fr.prototype.DefaultInterpolation=Po;Fr.prototype.InterpolantFactoryMethodLinear=void 0;Fr.prototype.InterpolantFactoryMethodSmooth=void 0;class Ns extends Cn{}Ns.prototype.ValueTypeName="vector";class Er{constructor(e,t=-1,n,i=ql){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=tn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(P1(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(Cn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=it.getKeyframeOrder(l);l=it.sortedArray(l,1,u),c=it.sortedArray(c,1,u),!i&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new zs(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let f=i[h];f||(i[h]=f=[]),f.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,m){if(d.length!==0){const g=[],y=[];it.flattenJSON(d,g,y,p),g.length!==0&&m.push(new h(f,g,y))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let m=0;m<f[p].morphTargets.length;m++)d[f[p].morphTargets[m]]=-1;for(const m in d){const g=[],y=[];for(let v=0;v!==f[p].morphTargets.length;++v){const _=f[p];g.push(_.time),y.push(_.morphTarget===m?1:0)}i.push(new zs(".morphTargetInfluence["+m+"]",g,y))}l=d.length*o}else{const d=".bones["+t[h].name+"]";n(Ns,d+".position",f,"pos",i),n(Ir,d+".quaternion",f,"rot",i),n(Ns,d+".scale",f,"scl",i)}}return i.length===0?null:new this(s,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function L1(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return zs;case"vector":case"vector2":case"vector3":case"vector4":return Ns;case"color":return yf;case"quaternion":return Ir;case"bool":case"boolean":return Dr;case"string":return Fr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function P1(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=L1(r.type);if(r.times===void 0){const t=[],n=[];it.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Tr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class vf{constructor(e,t,n){const i=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const Wy=new vf;class Ot{constructor(e){this.manager=e!==void 0?e:Wy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Kn={};class Tn extends Ot{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Tr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Kn[e]!==void 0){Kn[e].push({onLoad:t,onProgress:n,onError:i});return}Kn[e]=[],Kn[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||c.body===void 0||c.body.getReader===void 0)return c;const u=Kn[e],h=c.body.getReader(),f=c.headers.get("Content-Length"),d=f?parseInt(f):0,p=d!==0;let m=0;const g=new ReadableStream({start(y){v();function v(){h.read().then(({done:_,value:x})=>{if(_)y.close();else{m+=x.byteLength;const b=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:d});for(let M=0,L=u.length;M<L;M++){const w=u[M];w.onProgress&&w.onProgress(b)}y.enqueue(x),v()}})}}});return new Response(g)}else throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{Tr.add(e,c);const u=Kn[e];delete Kn[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=Kn[e];if(u===void 0)throw this.manager.itemError(e),c;delete Kn[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class R1 extends Ot{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Tn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Er.parse(e[n]);t.push(i)}return t}}class D1 extends Ot{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],a=new ef,l=new Tn(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function u(h){l.load(e[h],function(f){const d=s.parse(f,!0);o[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(a.minFilter=ot),a.image=o,a.format=d.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else l.load(e,function(h){const f=s.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){o[p]={mipmaps:[]};for(let m=0;m<f.mipmapCount;m++)o[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+m]),o[p].format=f.format,o[p].width=f.width,o[p].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=ot),a.format=f.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class No extends Ot{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Tr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=Fo("img");function l(){u(),Tr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(h){u(),i&&i(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class _f extends Ot{constructor(e){super(e)}load(e,t,n,i){const s=new qs,o=new No(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){s.images[c]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return s}}class $y extends Ot{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ti,a=new Tn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){const c=s.parse(l);!c||(c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:Pt,o.wrapT=c.wrapT!==void 0?c.wrapT:Pt,o.magFilter=c.magFilter!==void 0?c.magFilter:ot,o.minFilter=c.minFilter!==void 0?c.minFilter:ot,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.encoding!==void 0&&(o.encoding=c.encoding),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=Lr),c.mipmapCount===1&&(o.minFilter=ot),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c))},n,i),o}}class Hi extends Ot{constructor(e){super(e)}load(e,t,n,i){const s=new ft,o=new No(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class An extends Be{constructor(e,t=1){super(),this.type="Light",this.color=new ne(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}An.prototype.isLight=!0;class xf extends An{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Be.DefaultUp),this.updateMatrix(),this.groundColor=new ne(t)}copy(e){return An.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}xf.prototype.isHemisphereLight=!0;const Rp=new ae,Dp=new S,Ip=new S;class wf{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new $(512,512),this.map=null,this.mapPass=null,this.matrix=new ae,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Yo,this._frameExtents=new $(1,1),this._viewportCount=1,this._viewports=[new qe(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Dp.setFromMatrixPosition(e.matrixWorld),t.position.copy(Dp),Ip.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Ip),t.updateMatrixWorld(),Rp.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class qy extends wf{constructor(){super(new Mt(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=Io*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}qy.prototype.isSpotLightShadow=!0;class cc extends An{constructor(e,t,n=0,i=Math.PI/3,s=0,o=1){super(e,t),this.type="SpotLight",this.position.copy(Be.DefaultUp),this.updateMatrix(),this.target=new Be,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.shadow=new qy}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}cc.prototype.isSpotLight=!0;const Fp=new ae,mo=new S,ru=new S;class Xy extends wf{constructor(){super(new Mt(90,1,.5,500)),this._frameExtents=new $(4,2),this._viewportCount=6,this._viewports=[new qe(2,1,1,1),new qe(0,1,1,1),new qe(3,1,1,1),new qe(1,1,1,1),new qe(3,0,1,1),new qe(1,0,1,1)],this._cubeDirections=[new S(1,0,0),new S(-1,0,0),new S(0,0,1),new S(0,0,-1),new S(0,1,0),new S(0,-1,0)],this._cubeUps=[new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,1,0),new S(0,0,1),new S(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),mo.setFromMatrixPosition(e.matrixWorld),n.position.copy(mo),ru.copy(n.position),ru.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(ru),n.updateMatrixWorld(),i.makeTranslation(-mo.x,-mo.y,-mo.z),Fp.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Fp)}}Xy.prototype.isPointLightShadow=!0;class Us extends An{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Xy}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}Us.prototype.isPointLight=!0;class jy extends wf{constructor(){super(new ki(-5,5,5,-5,.5,500))}}jy.prototype.isDirectionalLightShadow=!0;class ia extends An{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Be.DefaultUp),this.updateMatrix(),this.target=new Be,this.shadow=new jy}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}ia.prototype.isDirectionalLight=!0;class ra extends An{constructor(e,t){super(e,t),this.type="AmbientLight"}}ra.prototype.isAmbientLight=!0;class bf extends An{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}bf.prototype.isRectAreaLight=!0;class Mf{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new S)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}Mf.prototype.isSphericalHarmonics3=!0;class sa extends An{constructor(e=new Mf,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}sa.prototype.isLightProbe=!0;class Yy extends Ot{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,o=new Tn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=xt.fromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new ne().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new ne().setHex(o.value);break;case"v2":i.uniforms[s].value=new $().fromArray(o.value);break;case"v3":i.uniforms[s].value=new S().fromArray(o.value);break;case"v4":i.uniforms[s].value=new qe().fromArray(o.value);break;case"m3":i.uniforms[s].value=new St().fromArray(o.value);break;case"m4":i.uniforms[s].value=new ae().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new $().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new $().fromArray(e.clearcoatNormalScale)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}}class Ar{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Sf extends Me{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Sf.prototype.isInstancedBufferGeometry=!0;class Zy extends Ot{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Tn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(d,p){if(t[p]!==void 0)return t[p];const g=d.interleavedBuffers[p],y=s(d,g.buffer),v=hs(g.type,y),_=new Pr(v,g.stride);return _.uuid=g.uuid,t[p]=_,_}function s(d,p){if(n[p]!==void 0)return n[p];const g=d.arrayBuffers[p],y=new Uint32Array(g).buffer;return n[p]=y,y}const o=e.isInstancedBufferGeometry?new Sf:new Me,a=e.data.index;if(a!==void 0){const d=hs(a.type,a.array);o.setIndex(new We(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let m;if(p.isInterleavedBufferAttribute){const g=i(e.data,p.data);m=new Di(g,p.itemSize,p.offset,p.normalized)}else{const g=hs(p.type,p.array),y=p.isInstancedBufferAttribute?xr:We;m=new y(g,p.itemSize,p.normalized)}p.name!==void 0&&(m.name=p.name),p.usage!==void 0&&m.setUsage(p.usage),p.updateRange!==void 0&&(m.updateRange.offset=p.updateRange.offset,m.updateRange.count=p.updateRange.count),o.setAttribute(d,m)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],m=[];for(let g=0,y=p.length;g<y;g++){const v=p[g];let _;if(v.isInterleavedBufferAttribute){const x=i(e.data,v.data);_=new Di(x,v.itemSize,v.offset,v.normalized)}else{const x=hs(v.type,v.array);_=new We(x,v.itemSize,v.normalized)}v.name!==void 0&&(_.name=v.name),m.push(_)}o.morphAttributes[d]=m}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const m=h[d];o.addGroup(m.start,m.count,m.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new S;f.center!==void 0&&d.fromArray(f.center),o.boundingSphere=new Ni(d,f.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class I1 extends Ot{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?Ar.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Tn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Ar.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Tn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,n),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),t!==void 0){let h=!1;for(const f in o)if(o[f]instanceof HTMLImageElement){h=!0;break}h===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,i,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new kn().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new ea().fromJSON(e[s],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Zy;for(let s=0,o=e.length;s<o;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:l.type in Pp?a=Pp[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),a.isBufferGeometry===!0&&l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Yy;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];if(l.type==="MultiMaterial"){const c=[];for(let u=0;u<l.materials.length;u++){const h=l.materials[u];n[h.uuid]===void 0&&(n[h.uuid]=s.parse(h)),c.push(n[h.uuid])}i[l.uuid]=c}else n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Er.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(u)}else return l.data?{data:hs(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new vf(t);s=new No(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const g=f[p],y=a(g);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new Ti(y.data,y.width,y.height)))}i[h.uuid]=new ar(d)}else{const d=a(h.url);i[h.uuid]=new ar(d)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:hs(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new No(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h],p=await s(d);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new Ti(p.data,p.width,p.height)))}n[l.uuid]=new ar(u)}else{const u=await s(l.url);n[l.uuid]=new ar(u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let u;Array.isArray(c)?(u=new qs,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new Ti:u=new ft,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,F1)),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],Bp),u.wrapT=n(a.wrap[1],Bp)),a.format!==void 0&&(u.format=a.format),a.type!==void 0&&(u.type=a.type),a.encoding!==void 0&&(u.encoding=a.encoding),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,Op)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,Op)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(e,t,n,i,s){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const g=f[p];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),d.push(n[g])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function c(f){return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),i[f]}let u,h;switch(e.type){case"Scene":o=new Ko,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new ne(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Jo(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Zo(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new Mt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new ki(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new ra(e.color,e.intensity);break;case"DirectionalLight":o=new ia(e.color,e.intensity);break;case"PointLight":o=new Us(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new bf(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new cc(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new xf(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new sa().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=l(e.material),o=new Qo(u,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=l(e.material),o=new ht(u,h);break;case"InstancedMesh":u=a(e.geometry),h=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;o=new Kh(u,h,f),o.instanceMatrix=new xr(new Float32Array(d.array),16),p!==void 0&&(o.instanceColor=new xr(new Float32Array(p.array),p.itemSize));break;case"LOD":o=new Dy;break;case"Line":o=new Gn(a(e.geometry),l(e.material));break;case"LineLoop":o=new Qh(a(e.geometry),l(e.material));break;case"LineSegments":o=new Xt(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new js(a(e.geometry),l(e.material));break;case"Sprite":o=new tc(l(e.material));break;case"Group":o=new ti;break;case"Bone":o=new Es;break;default:o=new Be}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)o.add(this.parseObject(f[d],t,n,i,s))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];o.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],m=o.getObjectByProperty("uuid",p.object);m!==void 0&&o.addLevel(m,p.distance)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const F1={UVMapping:$l,CubeReflectionMapping:Li,CubeRefractionMapping:Pi,EquirectangularReflectionMapping:_s,EquirectangularRefractionMapping:Co,CubeUVReflectionMapping:Ws},Bp={RepeatWrapping:yr,ClampToEdgeWrapping:Pt,MirroredRepeatWrapping:Lo},Op={NearestFilter:mt,NearestMipmapNearestFilter:Pl,NearestMipmapLinearFilter:Rl,LinearFilter:ot,LinearMipmapNearestFilter:Wh,LinearMipmapLinearFilter:Lr};class Jy extends Ot{constructor(e){super(e),typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Tr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){Tr.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}Jy.prototype.isImageBitmapLoader=!0;let Ya;const Ef={getContext:function(){return Ya===void 0&&(Ya=new(window.AudioContext||window.webkitAudioContext)),Ya},setContext:function(r){Ya=r}};class Ky extends Ot{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Tn(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const l=a.slice(0);Ef.getContext().decodeAudioData(l,function(u){t(u)})}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}}class Qy extends sa{constructor(e,t,n=1){super(void 0,n);const i=new ne().set(e),s=new ne().set(t),o=new S(i.r,i.g,i.b),a=new S(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)}}Qy.prototype.isHemisphereLightProbe=!0;class e0 extends sa{constructor(e,t=1){super(void 0,t);const n=new ne().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}e0.prototype.isAmbientLightProbe=!0;const zp=new ae,Np=new ae,Xi=new ae;class B1{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Mt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Mt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Xi.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(hr*t.fov*.5)/t.zoom;let a,l;Np.elements[12]=-i,zp.elements[12]=i,a=-o*t.aspect+s,l=o*t.aspect+s,Xi.elements[0]=2*t.near/(l-a),Xi.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Xi),a=-o*t.aspect-s,l=o*t.aspect-s,Xi.elements[0]=2*t.near/(l-a),Xi.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Xi)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Np),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(zp)}}class uc{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Up(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Up();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Up(){return(typeof performance=="undefined"?Date:performance).now()}const ji=new S,kp=new lt,O1=new S,Yi=new S;class z1 extends Be{constructor(){super(),this.type="AudioListener",this.context=Ef.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new uc}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ji,kp,O1),Yi.set(0,0,-1).applyQuaternion(kp),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ji.x,i),t.positionY.linearRampToValueAtTime(ji.y,i),t.positionZ.linearRampToValueAtTime(ji.z,i),t.forwardX.linearRampToValueAtTime(Yi.x,i),t.forwardY.linearRampToValueAtTime(Yi.y,i),t.forwardZ.linearRampToValueAtTime(Yi.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(ji.x,ji.y,ji.z),t.setOrientation(Yi.x,Yi.y,Yi.z,n.x,n.y,n.z)}}class Tf extends Be{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Zi=new S,Hp=new lt,N1=new S,Ji=new S;class U1 extends Tf{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Zi,Hp,N1),Ji.set(0,0,1).applyQuaternion(Hp);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Zi.x,n),t.positionY.linearRampToValueAtTime(Zi.y,n),t.positionZ.linearRampToValueAtTime(Zi.z,n),t.orientationX.linearRampToValueAtTime(Ji.x,n),t.orientationY.linearRampToValueAtTime(Ji.y,n),t.orientationZ.linearRampToValueAtTime(Ji.z,n)}else t.setPosition(Zi.x,Zi.y,Zi.z),t.setOrientation(Ji.x,Ji.y,Ji.z)}}class t0{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class n0{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){lt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;lt.multiplyQuaternionsFlat(e,o,e,t,e,n),lt.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const Af="\\[\\]\\.:\\/",k1=new RegExp("["+Af+"]","g"),Cf="[^"+Af+"]",H1="[^"+Af.replace("\\.","")+"]",G1=/((?:WC+[\/:])*)/.source.replace("WC",Cf),V1=/(WCOD+)?/.source.replace("WCOD",H1),W1=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Cf),$1=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Cf),q1=new RegExp("^"+G1+V1+W1+$1+"$"),X1=["material","materials","bones"];class j1{constructor(e,t,n){const i=n||Ge.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Ge{constructor(e,t,n){this.path=t,this.parsedPath=n||Ge.parseTrackName(t),this.node=Ge.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ge.Composite(e,t,n):new Ge(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(k1,"")}static parseTrackName(e){const t=q1.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);X1.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Ge.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[i];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ge.Composite=j1;Ge.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ge.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ge.prototype.GetterByBindingType=[Ge.prototype._getValue_direct,Ge.prototype._getValue_array,Ge.prototype._getValue_arrayElement,Ge.prototype._getValue_toArray];Ge.prototype.SetterByBindingTypeAndVersioning=[[Ge.prototype._setValue_direct,Ge.prototype._setValue_direct_setNeedsUpdate,Ge.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ge.prototype._setValue_array,Ge.prototype._setValue_array_setNeedsUpdate,Ge.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ge.prototype._setValue_arrayElement,Ge.prototype._setValue_arrayElement_setNeedsUpdate,Ge.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ge.prototype._setValue_fromArray,Ge.prototype._setValue_fromArray_setNeedsUpdate,Ge.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class i0{constructor(){this.uuid=tn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let m=0,g=o;m!==g;++m)s[m].push(new Ge(f,n[m],i[m]))}else if(p<c){a=e[p];const m=--c,g=e[m];t[g.uuid]=p,e[p]=g,t[d]=m,e[m]=f;for(let y=0,v=o;y!==v;++y){const _=s[y],x=_[m];let b=_[p];_[p]=x,b===void 0&&(b=new Ge(f,n[y],i[y])),_[m]=b}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=t[c];if(u!==void 0&&u>=s){const h=s++,f=e[h];t[f.uuid]=u,e[u]=f,t[c]=h,e[h]=l;for(let d=0,p=i;d!==p;++d){const m=n[d],g=m[h],y=m[u];m[u]=g,m[h]=y}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],u=c.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<s){const f=--s,d=e[f],p=--o,m=e[p];t[d.uuid]=h,e[h]=d,t[m.uuid]=f,e[f]=m,e.pop();for(let g=0,y=i;g!==y;++g){const v=n[g],_=v[f],x=v[p];v[h]=_,v[f]=x,v.pop()}}else{const f=--o,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,m=i;p!==m;++p){const g=n[p];g[h]=g[f],g.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);i=s.length,n[e]=i,o.push(e),a.push(t),s.push(h);for(let f=u,d=l.length;f!==d;++f){const p=l[f];h[f]=new Ge(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}i0.prototype.isAnimationObjectGroup=!0;class Y1{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:sr,endingEnd:sr};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=qh,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,a=i/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;if(l<0||n===0)return;this._startTime=null,t=n*l}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Xh:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case ql:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===ny;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===ty){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=or,i.endingEnd=or):(e?i.endingStart=this.zeroSlopeAtStart?or:sr:i.endingStart=Do,t?i.endingEnd=this.zeroSlopeAtEnd?or:sr:i.endingEnd=Do)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}class Lf extends hi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==s;++h){const f=i[h],d=f.name;let p=u[d];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const m=t&&t._propertyBindings[h].binding.parsedPath;p=new n0(Ge.create(n,d,m),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new gf(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?Er.findByName(i,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=ql),l!==void 0){const h=l.actionByRoot[s];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new Y1(this,o,t,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Er.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}Lf.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class hc{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new hc(this.value.clone===void 0?this.value:this.value.clone())}}class r0 extends Pr{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}r0.prototype.isInstancedInterleavedBuffer=!0;class s0{constructor(e,t,n,i,s){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}s0.prototype.isGLBufferAttribute=!0;class Z1{constructor(e,t,n=0,i=1/0){this.ray=new Ui(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Xl,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return ih(e,this,n,t),n.sort(Gp),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)ih(e[i],this,n,t);return n.sort(Gp),n}}function Gp(r,e){return r.distance-e.distance}function ih(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)ih(i[s],e,t,!0)}}class rh{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(gt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class J1{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Vp=new $;class Ys{constructor(e=new $(1/0,1/0),t=new $(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Vp.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Vp.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Ys.prototype.isBox2=!0;const Wp=new S,Za=new S;class o0{constructor(e=new S,t=new S){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Wp.subVectors(e,this.start),Za.subVectors(this.end,this.start);const n=Za.dot(Za);let s=Za.dot(Wp)/n;return t&&(s=gt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const $p=new S;class K1 extends Be{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new Me,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new ge(i,3));const s=new Tt({fog:!1,toneMapped:!1});this.cone=new Xt(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),$p.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt($p),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const wi=new S,Ja=new ae,su=new ae;class a0 extends Xt{constructor(e){const t=l0(e),n=new Me,i=[],s=[],o=new ne(0,0,1),a=new ne(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new ge(i,3)),n.setAttribute("color",new ge(s,3));const l=new Tt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");su.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Ja.multiplyMatrices(su,a.matrixWorld),wi.setFromMatrixPosition(Ja),i.setXYZ(o,wi.x,wi.y,wi.z),Ja.multiplyMatrices(su,a.parent.matrixWorld),wi.setFromMatrixPosition(Ja),i.setXYZ(o+1,wi.x,wi.y,wi.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function l0(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,l0(r.children[t]));return e}class c0 extends ht{constructor(e,t,n){const i=new Sr(t,4,2),s=new fi({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Q1=new S,qp=new ne,Xp=new ne;class eE extends Be{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new br(t);i.rotateY(Math.PI*.5),this.material=new fi({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new We(o,3)),this.add(new ht(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");qp.copy(this.light.color),Xp.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?qp:Xp;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(Q1.setFromMatrixPosition(this.light.matrixWorld).negate())}}class u0 extends Xt{constructor(e=10,t=10,n=4473924,i=8947848){n=new ne(n),i=new ne(i);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let f=0,d=0,p=-a;f<=t;f++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const m=f===s?n:i;m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3}const u=new Me;u.setAttribute("position",new ge(l,3)),u.setAttribute("color",new ge(c,3));const h=new Tt({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}}class tE extends Xt{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new ne(s),o=new ne(o);const a=[],l=[];for(let h=0;h<=t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,p);const m=h&1?s:o;l.push(m.r,m.g,m.b),l.push(m.r,m.g,m.b)}for(let h=0;h<=n;h++){const f=h&1?s:o,d=e-e/n*h;for(let p=0;p<i;p++){let m=p/i*(Math.PI*2),g=Math.sin(m)*d,y=Math.cos(m)*d;a.push(g,0,y),l.push(f.r,f.g,f.b),m=(p+1)/i*(Math.PI*2),g=Math.sin(m)*d,y=Math.cos(m)*d,a.push(g,0,y),l.push(f.r,f.g,f.b)}}const c=new Me;c.setAttribute("position",new ge(a,3)),c.setAttribute("color",new ge(l,3));const u=new Tt({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}}const jp=new S,Ka=new S,Yp=new S;class h0 extends Be{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new Me;i.setAttribute("position",new ge([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Tt({fog:!1,toneMapped:!1});this.lightPlane=new Gn(i,s),this.add(this.lightPlane),i=new Me,i.setAttribute("position",new ge([0,0,0,0,0,1],3)),this.targetLine=new Gn(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){jp.setFromMatrixPosition(this.light.matrixWorld),Ka.setFromMatrixPosition(this.light.target.matrixWorld),Yp.subVectors(Ka,jp),this.lightPlane.lookAt(Ka),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ka),this.targetLine.scale.z=Yp.length()}}const Qa=new S,ut=new jo;class nE extends Xt{constructor(e){const t=new Me,n=new Tt({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={},a=new ne(16755200),l=new ne(16711680),c=new ne(43775),u=new ne(16777215),h=new ne(3355443);f("n1","n2",a),f("n2","n4",a),f("n4","n3",a),f("n3","n1",a),f("f1","f2",a),f("f2","f4",a),f("f4","f3",a),f("f3","f1",a),f("n1","f1",a),f("n2","f2",a),f("n3","f3",a),f("n4","f4",a),f("p","n1",l),f("p","n2",l),f("p","n3",l),f("p","n4",l),f("u1","u2",c),f("u2","u3",c),f("u3","u1",c),f("c","t",u),f("p","c",h),f("cn1","cn2",h),f("cn3","cn4",h),f("cf1","cf2",h),f("cf3","cf4",h);function f(p,m,g){d(p,g),d(m,g)}function d(p,m){i.push(0,0,0),s.push(m.r,m.g,m.b),o[p]===void 0&&(o[p]=[]),o[p].push(i.length/3-1)}t.setAttribute("position",new ge(i,3)),t.setAttribute("color",new ge(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;ut.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),dt("c",t,e,ut,0,0,-1),dt("t",t,e,ut,0,0,1),dt("n1",t,e,ut,-n,-i,-1),dt("n2",t,e,ut,n,-i,-1),dt("n3",t,e,ut,-n,i,-1),dt("n4",t,e,ut,n,i,-1),dt("f1",t,e,ut,-n,-i,1),dt("f2",t,e,ut,n,-i,1),dt("f3",t,e,ut,-n,i,1),dt("f4",t,e,ut,n,i,1),dt("u1",t,e,ut,n*.7,i*1.1,-1),dt("u2",t,e,ut,-n*.7,i*1.1,-1),dt("u3",t,e,ut,0,i*2,-1),dt("cf1",t,e,ut,-n,0,1),dt("cf2",t,e,ut,n,0,1),dt("cf3",t,e,ut,0,-i,1),dt("cf4",t,e,ut,0,i,1),dt("cn1",t,e,ut,-n,0,-1),dt("cn2",t,e,ut,n,0,-1),dt("cn3",t,e,ut,0,-i,-1),dt("cn4",t,e,ut,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function dt(r,e,t,n,i,s,o){Qa.set(i,s,o).unproject(n);const a=e[r];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],Qa.x,Qa.y,Qa.z)}}const el=new sn;class f0 extends Xt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new Me;s.setIndex(new We(n,1)),s.setAttribute("position",new We(i,3)),super(s,new Tt({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&el.setFromObject(this.object),el.isEmpty())return;const t=el.min,n=el.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return Xt.prototype.copy.call(this,e),this.object=e.object,this}}class iE extends Xt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Me;s.setIndex(new We(n,1)),s.setAttribute("position",new ge(i,3)),super(s,new Tt({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class rE extends Gn{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new Me;o.setAttribute("position",new ge(s,3)),o.computeBoundingSphere(),super(o,new Tt({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],l=new Me;l.setAttribute("position",new ge(a,3)),l.computeBoundingSphere(),this.add(new ht(l,new fi({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?$t:mr,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const Zp=new S;let tl,ou;class sE extends Be{constructor(e=new S(0,0,1),t=new S(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",tl===void 0&&(tl=new Me,tl.setAttribute("position",new ge([0,0,0,0,1,0],3)),ou=new Ii(0,.5,1,5,1),ou.translate(0,-.5,0)),this.position.copy(t),this.line=new Gn(tl,new Tt({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ht(ou,new fi({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Zp.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Zp,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class d0 extends Xt{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Me;i.setAttribute("position",new ge(t,3)),i.setAttribute("color",new ge(n,3));const s=new Tt({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new ne,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class oE{constructor(){this.type="ShapePath",this.color=new ne,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ts,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(v){const _=[];for(let x=0,b=v.length;x<b;x++){const M=v[x],L=new kn;L.curves=M.curves,_.push(L)}return _}function i(v,_){const x=_.length;let b=!1;for(let M=x-1,L=0;L<x;M=L++){let w=_[M],T=_[L],R=T.x-w.x,F=T.y-w.y;if(Math.abs(F)>Number.EPSILON){if(F<0&&(w=_[L],R=-R,T=_[M],F=-F),v.y<w.y||v.y>T.y)continue;if(v.y===w.y){if(v.x===w.x)return!0}else{const U=F*(v.x-w.x)-R*(v.y-w.y);if(U===0)return!0;if(U<0)continue;b=!b}}else{if(v.y!==w.y)continue;if(T.x<=v.x&&v.x<=w.x||w.x<=v.x&&v.x<=T.x)return!0}}return b}const s=Hn.isClockWise,o=this.subPaths;if(o.length===0)return[];if(t===!0)return n(o);let a,l,c;const u=[];if(o.length===1)return l=o[0],c=new kn,c.curves=l.curves,u.push(c),u;let h=!s(o[0].getPoints());h=e?!h:h;const f=[],d=[];let p=[],m=0,g;d[m]=void 0,p[m]=[];for(let v=0,_=o.length;v<_;v++)l=o[v],g=l.getPoints(),a=s(g),a=e?!a:a,a?(!h&&d[m]&&m++,d[m]={s:new kn,p:g},d[m].s.curves=l.curves,h&&m++,p[m]=[]):p[m].push({h:l,p:g[0]});if(!d[0])return n(o);if(d.length>1){let v=!1,_=0;for(let x=0,b=d.length;x<b;x++)f[x]=[];for(let x=0,b=d.length;x<b;x++){const M=p[x];for(let L=0;L<M.length;L++){const w=M[L];let T=!0;for(let R=0;R<d.length;R++)i(w.p,d[R].p)&&(x!==R&&_++,T?(T=!1,f[R].push(w)):v=!0);T&&f[x].push(w)}}_>0&&v===!1&&(p=f)}let y;for(let v=0,_=d.length;v<_;v++){c=d[v].s,u.push(c),y=p[v];for(let x=0,b=y.length;x<b;x++)c.holes.push(y[x].h)}return u}}class aE{static toHalfFloat(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=gt(e,-65504,65504),Jp[0]=e;const t=Kp[0],n=t>>23&511;return xn[n]+((t&8388607)>>wn[n])}static fromHalfFloat(e){const t=e>>10;return Kp[0]=Pf[m0[t]+(e&1023)]+Zs[t],Jp[0]}}const p0=new ArrayBuffer(4),Jp=new Float32Array(p0),Kp=new Uint32Array(p0),xn=new Uint32Array(512),wn=new Uint32Array(512);for(let r=0;r<256;++r){const e=r-127;e<-27?(xn[r]=0,xn[r|256]=32768,wn[r]=24,wn[r|256]=24):e<-14?(xn[r]=1024>>-e-14,xn[r|256]=1024>>-e-14|32768,wn[r]=-e-1,wn[r|256]=-e-1):e<=15?(xn[r]=e+15<<10,xn[r|256]=e+15<<10|32768,wn[r]=13,wn[r|256]=13):e<128?(xn[r]=31744,xn[r|256]=64512,wn[r]=24,wn[r|256]=24):(xn[r]=31744,xn[r|256]=64512,wn[r]=13,wn[r|256]=13)}const Pf=new Uint32Array(2048),Zs=new Uint32Array(64),m0=new Uint32Array(64);for(let r=1;r<1024;++r){let e=r<<13,t=0;for(;(e&8388608)===0;)e<<=1,t-=8388608;e&=-8388609,t+=947912704,Pf[r]=e|t}for(let r=1024;r<2048;++r)Pf[r]=939524096+(r-1024<<13);for(let r=1;r<31;++r)Zs[r]=r<<23;Zs[31]=1199570944;Zs[32]=2147483648;for(let r=33;r<63;++r)Zs[r]=2147483648+(r-32<<23);Zs[63]=3347054592;for(let r=1;r<64;++r)r!==32&&(m0[r]=1024);const lE=0,cE=1,uE=0,hE=1,fE=2;function dE(r){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),r}function pE(r=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),r.isMultiMaterial=!0,r.materials=r,r.clone=function(){return r.slice()},r}class mE extends js{constructor(e,t){console.warn("THREE.PointCloud has been renamed to THREE.Points."),super(e,t)}}class gE extends tc{constructor(e){console.warn("THREE.Particle has been renamed to THREE.Sprite."),super(e)}}class yE extends js{constructor(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),super(e,t)}}class vE extends Rr{constructor(e){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class _E extends Rr{constructor(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class xE extends Rr{constructor(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class wE extends S{constructor(e,t,n){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),super(e,t,n)}}class bE extends We{constructor(e,t){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),super(e,t),this.setUsage(Ms)}}class ME extends py{constructor(e,t){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),super(e,t)}}class SE extends my{constructor(e,t){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),super(e,t)}}class EE extends gy{constructor(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),super(e,t)}}class TE extends yy{constructor(e,t){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),super(e,t)}}class AE extends qo{constructor(e,t){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),super(e,t)}}class CE extends vy{constructor(e,t){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),super(e,t)}}class LE extends jl{constructor(e,t){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),super(e,t)}}class PE extends ge{constructor(e,t){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),super(e,t)}}class RE extends xy{constructor(e,t){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),super(e,t)}}jt.create=function(r,e){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(jt.prototype),r.prototype.constructor=r,r.prototype.getPoint=e,r};Ts.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)};class DE extends d0{constructor(e){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),super(e)}}class IE extends f0{constructor(e,t){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),super(e,t)}}class FE extends Xt{constructor(e,t){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),super(new af(e.geometry),new Tt({color:t!==void 0?t:16777215}))}}u0.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};a0.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};class BE extends Xt{constructor(e,t){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),super(new lf(e.geometry),new Tt({color:t!==void 0?t:16777215}))}}Ot.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ar.extractUrlBase(r)};Ot.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};class OE extends Tn{constructor(e){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),super(e)}}class zE extends $y{constructor(e){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),super(e)}}Ys.prototype.center=function(r){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(r)};Ys.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Ys.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};Ys.prototype.size=function(r){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(r)};sn.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)};sn.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};sn.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};sn.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};sn.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)};en.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};Ni.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Yo.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)};o0.prototype.center=function(r){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(r)};St.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};St.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};St.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};St.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};St.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};St.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};ae.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)};ae.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};ae.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new S().setFromMatrixColumn(this,3)};ae.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)};ae.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};ae.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};ae.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};ae.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};ae.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)};ae.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};ae.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};ae.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};ae.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};ae.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};ae.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};ae.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};ae.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};ae.prototype.makeFrustum=function(r,e,t,n,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,e,n,t,i,s)};ae.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};zn.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)};lt.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)};lt.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Ui.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};Ui.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)};Ui.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};vt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};vt.prototype.barycoordFromPoint=function(r,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,e)};vt.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)};vt.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)};vt.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)};vt.barycoordFromPoint=function(r,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),vt.getBarycoord(r,e,t,n,i)};vt.normal=function(r,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),vt.getNormal(r,e,t,n)};kn.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)};kn.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Wn(this,r)};kn.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Mr(this,r)};$.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};$.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};$.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};S.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};S.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};S.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)};S.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)};S.prototype.getColumnFromMatrix=function(r,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,r)};S.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)};S.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};S.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};S.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};qe.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};qe.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Be.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)};Be.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Be.prototype.translate=function(r,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,r)};Be.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Be.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Be.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});ht.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(ht.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),iy},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Qo.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Mt.prototype.setLens=function(r,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(r)};Object.defineProperties(An.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}});Object.defineProperties(We.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Ms},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Ms)}}});We.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Ms:bs),this};We.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},We.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Me.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)};Me.prototype.addAttribute=function(r,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new We(arguments[1],arguments[2]))):r==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(r,e)};Me.prototype.addDrawCall=function(r,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,e)};Me.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Me.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Me.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)};Me.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Me.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Pr.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Ms:bs),this};Pr.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Wn.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Wn.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Wn.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};Ko.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};hc.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this};Object.defineProperties(xt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ne}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===Oh}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(It.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}});Ke.prototype.clearTarget=function(r,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(e,t,n)};Ke.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)};Ke.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};Ke.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};Ke.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};Ke.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};Ke.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};Ke.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};Ke.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};Ke.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};Ke.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};Ke.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};Ke.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};Ke.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};Ke.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)};Ke.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};Ke.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};Ke.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};Ke.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};Ke.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};Ke.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};Ke.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};Ke.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};Ke.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};Ke.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(Ke.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=r===!0?He:oi}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Cy.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});class NE extends Zl{constructor(e,t,n){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),super(e,n)}}Object.defineProperties(Dt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}});Tf.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new Ky().load(r,function(n){e.setBuffer(n)}),this};t0.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};Yl.prototype.updateCubeMap=function(r,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,e)};Yl.prototype.clear=function(r,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,e,t,n)};zi.crossOrigin=void 0;zi.loadTexture=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Hi;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};zi.loadTextureCube=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new _f;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};zi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};zi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function UE(){console.error("THREE.CanvasRenderer has been removed")}function kE(){console.error("THREE.JSONLoader has been removed.")}const HE={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function GE(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}class VE extends Me{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class WE extends Me{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function $E(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function qE(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function XE(){console.error("THREE.ImmediateRenderObject has been removed.")}class jE extends Dt{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class YE extends $s{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class ZE extends $o{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Wl}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Wl);var g0=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Vh,AddEquation:ir,AddOperation:Ll,AdditiveAnimationBlendMode:Xh,AdditiveBlending:Al,AlphaFormat:qg,AlwaysDepth:Fg,AlwaysStencilFunc:ay,AmbientLight:ra,AmbientLightProbe:e0,AnimationClip:Er,AnimationLoader:R1,AnimationMixer:Lf,AnimationObjectGroup:i0,AnimationUtils:it,ArcCurve:tf,ArrayCamera:Zh,ArrowHelper:sE,Audio:Tf,AudioAnalyser:t0,AudioContext:Ef,AudioListener:z1,AudioLoader:Ky,AxesHelper:d0,AxisHelper:DE,BackSide:$t,BasicDepthPacking:ry,BasicShadowMap:E_,BinaryTextureLoader:zE,Bone:Es,BooleanKeyframeTrack:Dr,BoundingBoxHelper:IE,Box2:Ys,Box3:sn,Box3Helper:iE,BoxBufferGeometry:ai,BoxGeometry:ai,BoxHelper:f0,BufferAttribute:We,BufferGeometry:Me,BufferGeometryLoader:Zy,ByteType:Hg,Cache:Tr,Camera:jo,CameraHelper:nE,CanvasRenderer:UE,CanvasTexture:By,CapsuleBufferGeometry:As,CapsuleGeometry:As,CatmullRomCurve3:rf,CineonToneMapping:Gh,CircleBufferGeometry:Cs,CircleGeometry:Cs,ClampToEdgeWrapping:Pt,Clock:uc,Color:ne,ColorKeyframeTrack:yf,ColorManagement:ln,CompressedTexture:ef,CompressedTextureLoader:D1,ConeBufferGeometry:Ls,ConeGeometry:Ls,CubeCamera:Yl,CubeReflectionMapping:Li,CubeRefractionMapping:Pi,CubeTexture:qs,CubeTextureLoader:_f,CubeUVReflectionMapping:Ws,CubicBezierCurve:nc,CubicBezierCurve3:sf,CubicInterpolant:Hy,CullFaceBack:Su,CullFaceFront:_g,CullFaceFrontBack:S_,CullFaceNone:vg,Curve:jt,CurvePath:zy,CustomBlending:wg,CustomToneMapping:kg,CylinderBufferGeometry:Ii,CylinderGeometry:Ii,Cylindrical:J1,Data3DTexture:$o,DataArrayTexture:$s,DataTexture:Ti,DataTexture2DArray:YE,DataTexture3D:ZE,DataTextureLoader:$y,DataUtils:aE,DecrementStencilOp:z_,DecrementWrapStencilOp:U_,DefaultLoadingManager:Wy,DepthFormat:Si,DepthStencilFormat:vr,DepthTexture:Jh,DirectionalLight:ia,DirectionalLightHelper:h0,DiscreteInterpolant:Gy,DodecahedronBufferGeometry:Ps,DodecahedronGeometry:Ps,DoubleSide:Ci,DstAlphaFactor:Cg,DstColorFactor:Pg,DynamicBufferAttribute:bE,DynamicCopyUsage:Q_,DynamicDrawUsage:Ms,DynamicReadUsage:Z_,EdgesGeometry:af,EdgesHelper:FE,EllipseCurve:ta,EqualDepth:Bg,EqualStencilFunc:V_,EquirectangularReflectionMapping:_s,EquirectangularRefractionMapping:Co,Euler:en,EventDispatcher:hi,ExtrudeBufferGeometry:Wn,ExtrudeGeometry:Wn,FaceColors:hE,FileLoader:Tn,FlatShading:Oh,Float16BufferAttribute:_y,Float32Attribute:PE,Float32BufferAttribute:ge,Float64Attribute:RE,Float64BufferAttribute:xy,FloatType:ei,Fog:Jo,FogExp2:Zo,Font:qE,FontLoader:$E,FramebufferTexture:Fy,FrontSide:mr,Frustum:Yo,GLBufferAttribute:s0,GLSL1:tx,GLSL3:Zu,GreaterDepth:zg,GreaterEqualDepth:Og,GreaterEqualStencilFunc:X_,GreaterStencilFunc:$_,GridHelper:u0,Group:ti,HalfFloatType:ws,HemisphereLight:xf,HemisphereLightHelper:eE,HemisphereLightProbe:Qy,IcosahedronBufferGeometry:Rs,IcosahedronGeometry:Rs,ImageBitmapLoader:Jy,ImageLoader:No,ImageUtils:zi,ImmediateRenderObject:XE,IncrementStencilOp:O_,IncrementWrapStencilOp:N_,InstancedBufferAttribute:xr,InstancedBufferGeometry:Sf,InstancedInterleavedBuffer:r0,InstancedMesh:Kh,Int16Attribute:TE,Int16BufferAttribute:yy,Int32Attribute:CE,Int32BufferAttribute:vy,Int8Attribute:ME,Int8BufferAttribute:py,IntType:Vg,InterleavedBuffer:Pr,InterleavedBufferAttribute:Di,Interpolant:li,InterpolateDiscrete:Po,InterpolateLinear:Ro,InterpolateSmooth:fl,InvertStencilOp:k_,JSONLoader:kE,KeepStencilOp:dl,KeyframeTrack:Cn,LOD:Dy,LatheBufferGeometry:wr,LatheGeometry:wr,Layers:Xl,LensFlare:GE,LessDepth:Uh,LessEqualDepth:Cl,LessEqualStencilFunc:W_,LessStencilFunc:G_,Light:An,LightProbe:sa,Line:Gn,Line3:o0,LineBasicMaterial:Tt,LineCurve:na,LineCurve3:Oy,LineDashedMaterial:mf,LineLoop:Qh,LinePieces:cE,LineSegments:Xt,LineStrip:lE,LinearEncoding:oi,LinearFilter:ot,LinearInterpolant:gf,LinearMipMapLinearFilter:P_,LinearMipMapNearestFilter:L_,LinearMipmapLinearFilter:Lr,LinearMipmapNearestFilter:Wh,LinearSRGBColorSpace:Mi,LinearToneMapping:kh,Loader:Ot,LoaderUtils:Ar,LoadingManager:vf,LoopOnce:ty,LoopPingPong:ny,LoopRepeat:qh,LuminanceAlphaFormat:jg,LuminanceFormat:$h,MOUSE:Qi,Material:xt,MaterialLoader:Yy,Math:un,MathUtils:un,Matrix3:St,Matrix4:ae,MaxEquation:Cu,Mesh:ht,MeshBasicMaterial:fi,MeshDepthMaterial:Kl,MeshDistanceMaterial:Ql,MeshFaceMaterial:dE,MeshLambertMaterial:lc,MeshMatcapMaterial:pf,MeshNormalMaterial:df,MeshPhongMaterial:ps,MeshPhysicalMaterial:hf,MeshStandardMaterial:ac,MeshToonMaterial:ff,MinEquation:Au,MirroredRepeatWrapping:Lo,MixOperation:Ug,MultiMaterial:pE,MultiplyBlending:Tu,MultiplyOperation:gr,NearestFilter:mt,NearestMipMapLinearFilter:C_,NearestMipMapNearestFilter:A_,NearestMipmapLinearFilter:Rl,NearestMipmapNearestFilter:Pl,NeverDepth:Ig,NeverStencilFunc:H_,NoBlending:si,NoColorSpace:I_,NoColors:uE,NoToneMapping:Sn,NormalAnimationBlendMode:ql,NormalBlending:cr,NotEqualDepth:Ng,NotEqualStencilFunc:q_,NumberKeyframeTrack:zs,Object3D:Be,ObjectLoader:I1,ObjectSpaceNormalMap:oy,OctahedronBufferGeometry:br,OctahedronGeometry:br,OneFactor:Eg,OneMinusDstAlphaFactor:Lg,OneMinusDstColorFactor:Rg,OneMinusSrcAlphaFactor:Nh,OneMinusSrcColorFactor:Ag,OrthographicCamera:ki,PCFShadowMap:Bh,PCFSoftShadowMap:xg,PMREMGenerator:Ku,ParametricGeometry:VE,Particle:gE,ParticleBasicMaterial:_E,ParticleSystem:yE,ParticleSystemMaterial:xE,Path:Ts,PerspectiveCamera:Mt,Plane:zn,PlaneBufferGeometry:_r,PlaneGeometry:_r,PlaneHelper:rE,PointCloud:mE,PointCloudMaterial:vE,PointLight:Us,PointLightHelper:c0,Points:js,PointsMaterial:Rr,PolarGridHelper:tE,PolyhedronBufferGeometry:Vn,PolyhedronGeometry:Vn,PositionalAudio:U1,PropertyBinding:Ge,PropertyMixer:n0,QuadraticBezierCurve:ic,QuadraticBezierCurve3:rc,Quaternion:lt,QuaternionKeyframeTrack:Ir,QuaternionLinearInterpolant:Vy,REVISION:Wl,RGBADepthPacking:sy,RGBAFormat:Wt,RGBAIntegerFormat:Qg,RGBA_ASTC_10x10_Format:qu,RGBA_ASTC_10x5_Format:Vu,RGBA_ASTC_10x6_Format:Wu,RGBA_ASTC_10x8_Format:$u,RGBA_ASTC_12x10_Format:Xu,RGBA_ASTC_12x12_Format:ju,RGBA_ASTC_4x4_Format:Bu,RGBA_ASTC_5x4_Format:Ou,RGBA_ASTC_5x5_Format:zu,RGBA_ASTC_6x5_Format:Nu,RGBA_ASTC_6x6_Format:Uu,RGBA_ASTC_8x5_Format:ku,RGBA_ASTC_8x6_Format:Hu,RGBA_ASTC_8x8_Format:Gu,RGBA_BPTC_Format:Yu,RGBA_ETC2_EAC_Format:Fu,RGBA_PVRTC_2BPPV1_Format:Du,RGBA_PVRTC_4BPPV1_Format:Ru,RGBA_S3TC_DXT1_Format:cl,RGBA_S3TC_DXT3_Format:ul,RGBA_S3TC_DXT5_Format:hl,RGBFormat:Xg,RGB_ETC1_Format:ey,RGB_ETC2_Format:Iu,RGB_PVRTC_2BPPV1_Format:Pu,RGB_PVRTC_4BPPV1_Format:Lu,RGB_S3TC_DXT1_Format:ll,RGFormat:Jg,RGIntegerFormat:Kg,RawShaderMaterial:uf,Ray:Ui,Raycaster:Z1,RectAreaLight:bf,RedFormat:Yg,RedIntegerFormat:Zg,ReinhardToneMapping:Hh,RepeatWrapping:yr,ReplaceStencilOp:B_,ReverseSubtractEquation:Mg,RingBufferGeometry:Ds,RingGeometry:Ds,SRGBColorSpace:Bn,Scene:Ko,SceneUtils:HE,ShaderChunk:Ue,ShaderLib:Bt,ShaderMaterial:It,ShadowMaterial:cf,Shape:kn,ShapeBufferGeometry:Mr,ShapeGeometry:Mr,ShapePath:oE,ShapeUtils:Hn,ShortType:Gg,Skeleton:ea,SkeletonHelper:a0,SkinnedMesh:Qo,SmoothShading:T_,Source:ar,Sphere:Ni,SphereBufferGeometry:Sr,SphereGeometry:Sr,Spherical:rh,SphericalHarmonics3:Mf,SplineCurve:sc,SpotLight:cc,SpotLightHelper:K1,Sprite:tc,SpriteMaterial:ec,SrcAlphaFactor:zh,SrcAlphaSaturateFactor:Dg,SrcColorFactor:Tg,StaticCopyUsage:K_,StaticDrawUsage:bs,StaticReadUsage:Y_,StereoCamera:B1,StreamCopyUsage:ex,StreamDrawUsage:j_,StreamReadUsage:J_,StringKeyframeTrack:Fr,SubtractEquation:bg,SubtractiveBlending:Eu,TOUCH:er,TangentSpaceNormalMap:Oi,TetrahedronBufferGeometry:Is,TetrahedronGeometry:Is,TextGeometry:WE,Texture:ft,TextureLoader:Hi,TorusBufferGeometry:Fs,TorusGeometry:Fs,TorusKnotBufferGeometry:Bs,TorusKnotGeometry:Bs,Triangle:vt,TriangleFanDrawMode:D_,TriangleStripDrawMode:R_,TrianglesDrawMode:iy,TubeBufferGeometry:Os,TubeGeometry:Os,UVMapping:$l,Uint16Attribute:AE,Uint16BufferAttribute:qo,Uint32Attribute:LE,Uint32BufferAttribute:jl,Uint8Attribute:SE,Uint8BufferAttribute:my,Uint8ClampedAttribute:EE,Uint8ClampedBufferAttribute:gy,Uniform:hc,UniformsLib:he,UniformsUtils:Xo,UnsignedByteType:Ri,UnsignedInt248Type:ur,UnsignedIntType:xo,UnsignedShort4444Type:Wg,UnsignedShort5551Type:$g,UnsignedShortType:xs,VSMShadowMap:us,Vector2:$,Vector3:S,Vector4:qe,VectorKeyframeTrack:Ns,Vertex:wE,VertexColors:fE,VideoTexture:Iy,WebGL1Renderer:Py,WebGL3DRenderTarget:fy,WebGLArrayRenderTarget:hy,WebGLCubeRenderTarget:Zl,WebGLMultipleRenderTargets:dy,WebGLMultisampleRenderTarget:jE,WebGLRenderTarget:Dt,WebGLRenderTargetCube:NE,WebGLRenderer:Ke,WebGLUtils:Ly,WireframeGeometry:lf,WireframeHelper:BE,WrapAroundEnding:Do,XHRLoader:OE,ZeroCurvatureEnding:sr,ZeroFactor:Sg,ZeroSlopeEnding:or,ZeroStencilOp:F_,_SRGBAFormat:Dl,sRGBEncoding:He},Symbol.toStringTag,{value:"Module"}));const Qp={type:"change"},au={type:"start"},em={type:"end"};class JE extends hi{constructor(e,t){super(),t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new S,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Qi.ROTATE,MIDDLE:Qi.DOLLY,RIGHT:Qi.PAN},this.touches={ONE:er.ROTATE,TWO:er.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(A){A.addEventListener("keydown",Ye),this._domElementKeyEvents=A},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Qp),n.update(),s=i.NONE},this.update=function(){const A=new S,te=new lt().setFromUnitVectors(e.up,new S(0,1,0)),xe=te.clone().invert(),ue=new S,D=new lt,le=2*Math.PI;return function(){const Ce=n.object.position;A.copy(Ce).sub(n.target),A.applyQuaternion(te),a.setFromVector3(A),n.autoRotate&&s===i.NONE&&T(L()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let me=n.minAzimuthAngle,we=n.maxAzimuthAngle;return isFinite(me)&&isFinite(we)&&(me<-Math.PI?me+=le:me>Math.PI&&(me-=le),we<-Math.PI?we+=le:we>Math.PI&&(we-=le),me<=we?a.theta=Math.max(me,Math.min(we,a.theta)):a.theta=a.theta>(me+we)/2?Math.max(me,a.theta):Math.min(we,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),A.setFromSpherical(a),A.applyQuaternion(xe),Ce.copy(n.target).add(A),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||ue.distanceToSquared(n.object.position)>o||8*(1-D.dot(n.object.quaternion))>o?(n.dispatchEvent(Qp),ue.copy(n.object.position),D.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",V),n.domElement.removeEventListener("pointerdown",ie),n.domElement.removeEventListener("pointercancel",De),n.domElement.removeEventListener("wheel",nt),n.domElement.removeEventListener("pointermove",_e),n.domElement.removeEventListener("pointerup",de),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Ye)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=i.NONE;const o=1e-6,a=new rh,l=new rh;let c=1;const u=new S;let h=!1;const f=new $,d=new $,p=new $,m=new $,g=new $,y=new $,v=new $,_=new $,x=new $,b=[],M={};function L(){return 2*Math.PI/60/60*n.autoRotateSpeed}function w(){return Math.pow(.95,n.zoomSpeed)}function T(A){l.theta-=A}function R(A){l.phi-=A}const F=function(){const A=new S;return function(xe,ue){A.setFromMatrixColumn(ue,0),A.multiplyScalar(-xe),u.add(A)}}(),U=function(){const A=new S;return function(xe,ue){n.screenSpacePanning===!0?A.setFromMatrixColumn(ue,1):(A.setFromMatrixColumn(ue,0),A.crossVectors(n.object.up,A)),A.multiplyScalar(xe),u.add(A)}}(),X=function(){const A=new S;return function(xe,ue){const D=n.domElement;if(n.object.isPerspectiveCamera){const le=n.object.position;A.copy(le).sub(n.target);let oe=A.length();oe*=Math.tan(n.object.fov/2*Math.PI/180),F(2*xe*oe/D.clientHeight,n.object.matrix),U(2*ue*oe/D.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(F(xe*(n.object.right-n.object.left)/n.object.zoom/D.clientWidth,n.object.matrix),U(ue*(n.object.top-n.object.bottom)/n.object.zoom/D.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function I(A){n.object.isPerspectiveCamera?c/=A:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*A)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function N(A){n.object.isPerspectiveCamera?c*=A:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/A)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function B(A){f.set(A.clientX,A.clientY)}function H(A){v.set(A.clientX,A.clientY)}function q(A){m.set(A.clientX,A.clientY)}function z(A){d.set(A.clientX,A.clientY),p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const te=n.domElement;T(2*Math.PI*p.x/te.clientHeight),R(2*Math.PI*p.y/te.clientHeight),f.copy(d),n.update()}function G(A){_.set(A.clientX,A.clientY),x.subVectors(_,v),x.y>0?I(w()):x.y<0&&N(w()),v.copy(_),n.update()}function Q(A){g.set(A.clientX,A.clientY),y.subVectors(g,m).multiplyScalar(n.panSpeed),X(y.x,y.y),m.copy(g),n.update()}function Y(A){A.deltaY<0?N(w()):A.deltaY>0&&I(w()),n.update()}function re(A){let te=!1;switch(A.code){case n.keys.UP:X(0,n.keyPanSpeed),te=!0;break;case n.keys.BOTTOM:X(0,-n.keyPanSpeed),te=!0;break;case n.keys.LEFT:X(n.keyPanSpeed,0),te=!0;break;case n.keys.RIGHT:X(-n.keyPanSpeed,0),te=!0;break}te&&(A.preventDefault(),n.update())}function fe(){if(b.length===1)f.set(b[0].pageX,b[0].pageY);else{const A=.5*(b[0].pageX+b[1].pageX),te=.5*(b[0].pageY+b[1].pageY);f.set(A,te)}}function ye(){if(b.length===1)m.set(b[0].pageX,b[0].pageY);else{const A=.5*(b[0].pageX+b[1].pageX),te=.5*(b[0].pageY+b[1].pageY);m.set(A,te)}}function j(){const A=b[0].pageX-b[1].pageX,te=b[0].pageY-b[1].pageY,xe=Math.sqrt(A*A+te*te);v.set(0,xe)}function ze(){n.enableZoom&&j(),n.enablePan&&ye()}function Se(){n.enableZoom&&j(),n.enableRotate&&fe()}function Re(A){if(b.length==1)d.set(A.pageX,A.pageY);else{const xe=Te(A),ue=.5*(A.pageX+xe.x),D=.5*(A.pageY+xe.y);d.set(ue,D)}p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const te=n.domElement;T(2*Math.PI*p.x/te.clientHeight),R(2*Math.PI*p.y/te.clientHeight),f.copy(d)}function se(A){if(b.length===1)g.set(A.pageX,A.pageY);else{const te=Te(A),xe=.5*(A.pageX+te.x),ue=.5*(A.pageY+te.y);g.set(xe,ue)}y.subVectors(g,m).multiplyScalar(n.panSpeed),X(y.x,y.y),m.copy(g)}function Ie(A){const te=Te(A),xe=A.pageX-te.x,ue=A.pageY-te.y,D=Math.sqrt(xe*xe+ue*ue);_.set(0,D),x.set(0,Math.pow(_.y/v.y,n.zoomSpeed)),I(x.y),v.copy(_)}function Z(A){n.enableZoom&&Ie(A),n.enablePan&&se(A)}function J(A){n.enableZoom&&Ie(A),n.enableRotate&&Re(A)}function ie(A){n.enabled!==!1&&(b.length===0&&(n.domElement.setPointerCapture(A.pointerId),n.domElement.addEventListener("pointermove",_e),n.domElement.addEventListener("pointerup",de)),ee(A),A.pointerType==="touch"?P(A):Ae(A))}function _e(A){n.enabled!==!1&&(A.pointerType==="touch"?E(A):Ee(A))}function de(A){pe(A),b.length===0&&(n.domElement.releasePointerCapture(A.pointerId),n.domElement.removeEventListener("pointermove",_e),n.domElement.removeEventListener("pointerup",de)),n.dispatchEvent(em),s=i.NONE}function De(A){pe(A)}function Ae(A){let te;switch(A.button){case 0:te=n.mouseButtons.LEFT;break;case 1:te=n.mouseButtons.MIDDLE;break;case 2:te=n.mouseButtons.RIGHT;break;default:te=-1}switch(te){case Qi.DOLLY:if(n.enableZoom===!1)return;H(A),s=i.DOLLY;break;case Qi.ROTATE:if(A.ctrlKey||A.metaKey||A.shiftKey){if(n.enablePan===!1)return;q(A),s=i.PAN}else{if(n.enableRotate===!1)return;B(A),s=i.ROTATE}break;case Qi.PAN:if(A.ctrlKey||A.metaKey||A.shiftKey){if(n.enableRotate===!1)return;B(A),s=i.ROTATE}else{if(n.enablePan===!1)return;q(A),s=i.PAN}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(au)}function Ee(A){if(n.enabled!==!1)switch(s){case i.ROTATE:if(n.enableRotate===!1)return;z(A);break;case i.DOLLY:if(n.enableZoom===!1)return;G(A);break;case i.PAN:if(n.enablePan===!1)return;Q(A);break}}function nt(A){n.enabled===!1||n.enableZoom===!1||s!==i.NONE||(A.preventDefault(),n.dispatchEvent(au),Y(A),n.dispatchEvent(em))}function Ye(A){n.enabled===!1||n.enablePan===!1||re(A)}function P(A){switch(ve(A),b.length){case 1:switch(n.touches.ONE){case er.ROTATE:if(n.enableRotate===!1)return;fe(),s=i.TOUCH_ROTATE;break;case er.PAN:if(n.enablePan===!1)return;ye(),s=i.TOUCH_PAN;break;default:s=i.NONE}break;case 2:switch(n.touches.TWO){case er.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;ze(),s=i.TOUCH_DOLLY_PAN;break;case er.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Se(),s=i.TOUCH_DOLLY_ROTATE;break;default:s=i.NONE}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(au)}function E(A){switch(ve(A),s){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;Re(A),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;se(A),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Z(A),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;J(A),n.update();break;default:s=i.NONE}}function V(A){n.enabled!==!1&&A.preventDefault()}function ee(A){b.push(A)}function pe(A){delete M[A.pointerId];for(let te=0;te<b.length;te++)if(b[te].pointerId==A.pointerId){b.splice(te,1);return}}function ve(A){let te=M[A.pointerId];te===void 0&&(te=new $,M[A.pointerId]=te),te.set(A.pageX,A.pageY)}function Te(A){const te=A.pointerId===b[0].pointerId?b[1]:b[0];return M[te.pointerId]}n.domElement.addEventListener("contextmenu",V),n.domElement.addEventListener("pointerdown",ie),n.domElement.addEventListener("pointercancel",De),n.domElement.addEventListener("wheel",nt,{passive:!1}),this.update()}}const y0="fbx",v0="animations",KE="img/textures/matcap",fc="data";/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/var tm={},sh=function(r){return URL.createObjectURL(new Blob([r],{type:"text/javascript"}))},_0=function(r){return new Worker(r)};try{URL.revokeObjectURL(sh(""))}catch{sh=function(e){return"data:application/javascript;charset=UTF-8,"+encodeURI(e)},_0=function(e){return new Worker(e,{type:"module"})}}var QE=function(r,e,t,n,i){var s=_0(tm[e]||(tm[e]=sh(r)));return s.onerror=function(o){return i(o.error,null)},s.onmessage=function(o){return i(null,o.data)},s.postMessage(t,n),s},Ve=Uint8Array,Ct=Uint16Array,ci=Uint32Array,Js=new Ve([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Ks=new Ve([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Uo=new Ve([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),x0=function(r,e){for(var t=new Ct(31),n=0;n<31;++n)t[n]=e+=1<<r[n-1];for(var i=new ci(t[30]),n=1;n<30;++n)for(var s=t[n];s<t[n+1];++s)i[s]=s-t[n]<<5|n;return[t,i]},w0=x0(Js,2),Rf=w0[0],Fl=w0[1];Rf[28]=258,Fl[258]=28;var b0=x0(Ks,0),M0=b0[0],oh=b0[1],ko=new Ct(32768);for(var rt=0;rt<32768;++rt){var bi=(rt&43690)>>>1|(rt&21845)<<1;bi=(bi&52428)>>>2|(bi&13107)<<2,bi=(bi&61680)>>>4|(bi&3855)<<4,ko[rt]=((bi&65280)>>>8|(bi&255)<<8)>>>1}var fn=function(r,e,t){for(var n=r.length,i=0,s=new Ct(e);i<n;++i)++s[r[i]-1];var o=new Ct(e);for(i=0;i<e;++i)o[i]=o[i-1]+s[i-1]<<1;var a;if(t){a=new Ct(1<<e);var l=15-e;for(i=0;i<n;++i)if(r[i])for(var c=i<<4|r[i],u=e-r[i],h=o[r[i]-1]++<<u,f=h|(1<<u)-1;h<=f;++h)a[ko[h]>>>l]=c}else for(a=new Ct(n),i=0;i<n;++i)r[i]&&(a[i]=ko[o[r[i]-1]++]>>>15-r[i]);return a},ui=new Ve(288);for(var rt=0;rt<144;++rt)ui[rt]=8;for(var rt=144;rt<256;++rt)ui[rt]=9;for(var rt=256;rt<280;++rt)ui[rt]=7;for(var rt=280;rt<288;++rt)ui[rt]=8;var ks=new Ve(32);for(var rt=0;rt<32;++rt)ks[rt]=5;var S0=fn(ui,9,0),E0=fn(ui,9,1),T0=fn(ks,5,0),A0=fn(ks,5,1),ml=function(r){for(var e=r[0],t=1;t<r.length;++t)r[t]>e&&(e=r[t]);return e},cn=function(r,e,t){var n=e/8|0;return(r[n]|r[n+1]<<8)>>(e&7)&t},gl=function(r,e){var t=e/8|0;return(r[t]|r[t+1]<<8|r[t+2]<<16)>>(e&7)},oa=function(r){return(r/8|0)+(r&7&&1)},dn=function(r,e,t){(e==null||e<0)&&(e=0),(t==null||t>r.length)&&(t=r.length);var n=new(r instanceof Ct?Ct:r instanceof ci?ci:Ve)(t-e);return n.set(r.subarray(e,t)),n},aa=function(r,e,t){var n=r.length;if(!n||t&&!t.l&&n<5)return e||new Ve(0);var i=!e||t,s=!t||t.i;t||(t={}),e||(e=new Ve(n*3));var o=function(j){var ze=e.length;if(j>ze){var Se=new Ve(Math.max(ze*2,j));Se.set(e),e=Se}},a=t.f||0,l=t.p||0,c=t.b||0,u=t.l,h=t.d,f=t.m,d=t.n,p=n*8;do{if(!u){t.f=a=cn(r,l,1);var m=cn(r,l+1,3);if(l+=3,m)if(m==1)u=E0,h=A0,f=9,d=5;else if(m==2){var _=cn(r,l,31)+257,x=cn(r,l+10,15)+4,b=_+cn(r,l+5,31)+1;l+=14;for(var M=new Ve(b),L=new Ve(19),w=0;w<x;++w)L[Uo[w]]=cn(r,l+w*3,7);l+=x*3;for(var T=ml(L),R=(1<<T)-1,F=fn(L,T,1),w=0;w<b;){var U=F[cn(r,l,R)];l+=U&15;var g=U>>>4;if(g<16)M[w++]=g;else{var X=0,I=0;for(g==16?(I=3+cn(r,l,3),l+=2,X=M[w-1]):g==17?(I=3+cn(r,l,7),l+=3):g==18&&(I=11+cn(r,l,127),l+=7);I--;)M[w++]=X}}var N=M.subarray(0,_),B=M.subarray(_);f=ml(N),d=ml(B),u=fn(N,f,1),h=fn(B,d,1)}else throw"invalid block type";else{var g=oa(l)+4,y=r[g-4]|r[g-3]<<8,v=g+y;if(v>n){if(s)throw"unexpected EOF";break}i&&o(c+y),e.set(r.subarray(g,v),c),t.b=c+=y,t.p=l=v*8;continue}if(l>p){if(s)throw"unexpected EOF";break}}i&&o(c+131072);for(var H=(1<<f)-1,q=(1<<d)-1,z=l;;z=l){var X=u[gl(r,l)&H],G=X>>>4;if(l+=X&15,l>p){if(s)throw"unexpected EOF";break}if(!X)throw"invalid length/literal";if(G<256)e[c++]=G;else if(G==256){z=l,u=null;break}else{var Q=G-254;if(G>264){var w=G-257,Y=Js[w];Q=cn(r,l,(1<<Y)-1)+Rf[w],l+=Y}var re=h[gl(r,l)&q],fe=re>>>4;if(!re)throw"invalid distance";l+=re&15;var B=M0[fe];if(fe>3){var Y=Ks[fe];B+=gl(r,l)&(1<<Y)-1,l+=Y}if(l>p){if(s)throw"unexpected EOF";break}i&&o(c+131072);for(var ye=c+Q;c<ye;c+=4)e[c]=e[c-B],e[c+1]=e[c+1-B],e[c+2]=e[c+2-B],e[c+3]=e[c+3-B];c=ye}}t.l=u,t.p=z,t.b=c,u&&(a=1,t.m=f,t.d=h,t.n=d)}while(!a);return c==e.length?e:dn(e,0,c)},Fn=function(r,e,t){t<<=e&7;var n=e/8|0;r[n]|=t,r[n+1]|=t>>>8},ss=function(r,e,t){t<<=e&7;var n=e/8|0;r[n]|=t,r[n+1]|=t>>>8,r[n+2]|=t>>>16},yl=function(r,e){for(var t=[],n=0;n<r.length;++n)r[n]&&t.push({s:n,f:r[n]});var i=t.length,s=t.slice();if(!i)return[ni,0];if(i==1){var o=new Ve(t[0].s+1);return o[t[0].s]=1,[o,1]}t.sort(function(b,M){return b.f-M.f}),t.push({s:-1,f:25001});var a=t[0],l=t[1],c=0,u=1,h=2;for(t[0]={s:-1,f:a.f+l.f,l:a,r:l};u!=i-1;)a=t[t[c].f<t[h].f?c++:h++],l=t[c!=u&&t[c].f<t[h].f?c++:h++],t[u++]={s:-1,f:a.f+l.f,l:a,r:l};for(var f=s[0].s,n=1;n<i;++n)s[n].s>f&&(f=s[n].s);var d=new Ct(f+1),p=Bl(t[u-1],d,0);if(p>e){var n=0,m=0,g=p-e,y=1<<g;for(s.sort(function(M,L){return d[L.s]-d[M.s]||M.f-L.f});n<i;++n){var v=s[n].s;if(d[v]>e)m+=y-(1<<p-d[v]),d[v]=e;else break}for(m>>>=g;m>0;){var _=s[n].s;d[_]<e?m-=1<<e-d[_]++-1:++n}for(;n>=0&&m;--n){var x=s[n].s;d[x]==e&&(--d[x],++m)}p=e}return[new Ve(d),p]},Bl=function(r,e,t){return r.s==-1?Math.max(Bl(r.l,e,t+1),Bl(r.r,e,t+1)):e[r.s]=t},ah=function(r){for(var e=r.length;e&&!r[--e];);for(var t=new Ct(++e),n=0,i=r[0],s=1,o=function(l){t[n++]=l},a=1;a<=e;++a)if(r[a]==i&&a!=e)++s;else{if(!i&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(i),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(i);s=1,i=r[a]}return[t.subarray(0,n),e]},os=function(r,e){for(var t=0,n=0;n<e.length;++n)t+=r[n]*e[n];return t},So=function(r,e,t){var n=t.length,i=oa(e+2);r[i]=n&255,r[i+1]=n>>>8,r[i+2]=r[i]^255,r[i+3]=r[i+1]^255;for(var s=0;s<n;++s)r[i+s+4]=t[s];return(i+4+n)*8},lh=function(r,e,t,n,i,s,o,a,l,c,u){Fn(e,u++,t),++i[256];for(var h=yl(i,15),f=h[0],d=h[1],p=yl(s,15),m=p[0],g=p[1],y=ah(f),v=y[0],_=y[1],x=ah(m),b=x[0],M=x[1],L=new Ct(19),w=0;w<v.length;++w)L[v[w]&31]++;for(var w=0;w<b.length;++w)L[b[w]&31]++;for(var T=yl(L,7),R=T[0],F=T[1],U=19;U>4&&!R[Uo[U-1]];--U);var X=c+5<<3,I=os(i,ui)+os(s,ks)+o,N=os(i,f)+os(s,m)+o+14+3*U+os(L,R)+(2*L[16]+3*L[17]+7*L[18]);if(X<=I&&X<=N)return So(e,u,r.subarray(l,l+c));var B,H,q,z;if(Fn(e,u,1+(N<I)),u+=2,N<I){B=fn(f,d,0),H=f,q=fn(m,g,0),z=m;var G=fn(R,F,0);Fn(e,u,_-257),Fn(e,u+5,M-1),Fn(e,u+10,U-4),u+=14;for(var w=0;w<U;++w)Fn(e,u+3*w,R[Uo[w]]);u+=3*U;for(var Q=[v,b],Y=0;Y<2;++Y)for(var re=Q[Y],w=0;w<re.length;++w){var fe=re[w]&31;Fn(e,u,G[fe]),u+=R[fe],fe>15&&(Fn(e,u,re[w]>>>5&127),u+=re[w]>>>12)}}else B=S0,H=ui,q=T0,z=ks;for(var w=0;w<a;++w)if(n[w]>255){var fe=n[w]>>>18&31;ss(e,u,B[fe+257]),u+=H[fe+257],fe>7&&(Fn(e,u,n[w]>>>23&31),u+=Js[fe]);var ye=n[w]&31;ss(e,u,q[ye]),u+=z[ye],ye>3&&(ss(e,u,n[w]>>>5&8191),u+=Ks[ye])}else ss(e,u,B[n[w]]),u+=H[n[w]];return ss(e,u,B[256]),u+H[256]},C0=new ci([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),ni=new Ve(0),L0=function(r,e,t,n,i,s){var o=r.length,a=new Ve(n+o+5*(1+Math.ceil(o/7e3))+i),l=a.subarray(n,a.length-i),c=0;if(!e||o<8)for(var u=0;u<=o;u+=65535){var h=u+65535;h<o?c=So(l,c,r.subarray(u,h)):(l[u]=s,c=So(l,c,r.subarray(u,o)))}else{for(var f=C0[e-1],d=f>>>13,p=f&8191,m=(1<<t)-1,g=new Ct(32768),y=new Ct(m+1),v=Math.ceil(t/3),_=2*v,x=function(ie){return(r[ie]^r[ie+1]<<v^r[ie+2]<<_)&m},b=new ci(25e3),M=new Ct(288),L=new Ct(32),w=0,T=0,u=0,R=0,F=0,U=0;u<o;++u){var X=x(u),I=u&32767,N=y[X];if(g[I]=N,y[X]=I,F<=u){var B=o-u;if((w>7e3||R>24576)&&B>423){c=lh(r,l,0,b,M,L,T,R,U,u-U,c),R=w=T=0,U=u;for(var H=0;H<286;++H)M[H]=0;for(var H=0;H<30;++H)L[H]=0}var q=2,z=0,G=p,Q=I-N&32767;if(B>2&&X==x(u-Q))for(var Y=Math.min(d,B)-1,re=Math.min(32767,u),fe=Math.min(258,B);Q<=re&&--G&&I!=N;){if(r[u+q]==r[u+q-Q]){for(var ye=0;ye<fe&&r[u+ye]==r[u+ye-Q];++ye);if(ye>q){if(q=ye,z=Q,ye>Y)break;for(var j=Math.min(Q,ye-2),ze=0,H=0;H<j;++H){var Se=u-Q+H+32768&32767,Re=g[Se],se=Se-Re+32768&32767;se>ze&&(ze=se,N=Se)}}}I=N,N=g[I],Q+=I-N+32768&32767}if(z){b[R++]=268435456|Fl[q]<<18|oh[z];var Ie=Fl[q]&31,Z=oh[z]&31;T+=Js[Ie]+Ks[Z],++M[257+Ie],++L[Z],F=u+q,++w}else b[R++]=r[u],++M[r[u]]}}c=lh(r,l,s,b,M,L,T,R,U,u-U,c),!s&&c&7&&(c=So(l,c+1,ni))}return dn(a,0,n+oa(c)+i)},P0=function(){for(var r=new ci(256),e=0;e<256;++e){for(var t=e,n=9;--n;)t=(t&1&&3988292384)^t>>>1;r[e]=t}return r}(),Qs=function(){var r=-1;return{p:function(e){for(var t=r,n=0;n<e.length;++n)t=P0[t&255^e[n]]^t>>>8;r=t},d:function(){return~r}}},Df=function(){var r=1,e=0;return{p:function(t){for(var n=r,i=e,s=t.length,o=0;o!=s;){for(var a=Math.min(o+2655,s);o<a;++o)i+=n+=t[o];n=(n&65535)+15*(n>>16),i=(i&65535)+15*(i>>16)}r=n,e=i},d:function(){return r%=65521,e%=65521,(r&255)<<24|r>>>8<<16|(e&255)<<8|e>>>8}}},Br=function(r,e,t,n,i){return L0(r,e.level==null?6:e.level,e.mem==null?Math.ceil(Math.max(8,Math.min(13,Math.log(r.length)))*1.5):12+e.mem,t,n,!i)},la=function(r,e){var t={};for(var n in r)t[n]=r[n];for(var n in e)t[n]=e[n];return t},nm=function(r,e,t){for(var n=r(),i=r.toString(),s=i.slice(i.indexOf("[")+1,i.lastIndexOf("]")).replace(/ /g,"").split(","),o=0;o<n.length;++o){var a=n[o],l=s[o];if(typeof a=="function"){e+=";"+l+"=";var c=a.toString();if(a.prototype)if(c.indexOf("[native code]")!=-1){var u=c.indexOf(" ",8)+1;e+=c.slice(u,c.indexOf("(",u))}else{e+=c;for(var h in a.prototype)e+=";"+l+".prototype."+h+"="+a.prototype[h].toString()}else e+=c}else t[l]=a}return[e,t]},nl=[],eT=function(r){var e=[];for(var t in r)(r[t]instanceof Ve||r[t]instanceof Ct||r[t]instanceof ci)&&e.push((r[t]=new r[t].constructor(r[t])).buffer);return e},R0=function(r,e,t,n){var i;if(!nl[t]){for(var s="",o={},a=r.length-1,l=0;l<a;++l)i=nm(r[l],s,o),s=i[0],o=i[1];nl[t]=nm(r[a],s,o)}var c=la({},nl[t][1]);return QE(nl[t][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",t,c,eT(c),n)},eo=function(){return[Ve,Ct,ci,Js,Ks,Uo,Rf,M0,E0,A0,ko,fn,ml,cn,gl,oa,dn,aa,ro,Gi,If]},to=function(){return[Ve,Ct,ci,Js,Ks,Uo,Fl,oh,S0,ui,T0,ks,ko,C0,ni,fn,Fn,ss,yl,Bl,ah,os,So,lh,oa,dn,L0,Br,ca,Gi]},D0=function(){return[Ff,Of,Je,Qs,P0]},I0=function(){return[Bf,O0]},F0=function(){return[zf,Je,Df]},B0=function(){return[z0]},Gi=function(r){return postMessage(r,[r.buffer])},If=function(r){return r&&r.size&&new Ve(r.size)},no=function(r,e,t,n,i,s){var o=R0(t,n,i,function(a,l){o.terminate(),s(a,l)});return o.postMessage([r,e],e.consume?[r.buffer]:[]),function(){o.terminate()}},mn=function(r){return r.ondata=function(e,t){return postMessage([e,t],[e.buffer])},function(e){return r.push(e.data[0],e.data[1])}},io=function(r,e,t,n,i){var s,o=R0(r,n,i,function(a,l){a?(o.terminate(),e.ondata.call(e,a)):(l[1]&&o.terminate(),e.ondata.call(e,a,l[0],l[1]))});o.postMessage(t),e.push=function(a,l){if(s)throw"stream finished";if(!e.ondata)throw"no stream handler";o.postMessage([a,s=l],[a.buffer])},e.terminate=function(){o.terminate()}},Ut=function(r,e){return r[e]|r[e+1]<<8},yt=function(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0},lu=function(r,e){return yt(r,e)+yt(r,e+4)*4294967296},Je=function(r,e,t){for(;t;++e)r[e]=t,t>>>=8},Ff=function(r,e){var t=e.filename;if(r[0]=31,r[1]=139,r[2]=8,r[8]=e.level<2?4:e.level==9?2:0,r[9]=3,e.mtime!=0&&Je(r,4,Math.floor(new Date(e.mtime||Date.now())/1e3)),t){r[3]=8;for(var n=0;n<=t.length;++n)r[n+10]=t.charCodeAt(n)}},Bf=function(r){if(r[0]!=31||r[1]!=139||r[2]!=8)throw"invalid gzip data";var e=r[3],t=10;e&4&&(t+=r[10]|(r[11]<<8)+2);for(var n=(e>>3&1)+(e>>4&1);n>0;n-=!r[t++]);return t+(e&2)},O0=function(r){var e=r.length;return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0},Of=function(r){return 10+(r.filename&&r.filename.length+1||0)},zf=function(r,e){var t=e.level,n=t==0?0:t<6?1:t==9?3:2;r[0]=120,r[1]=n<<6|(n?32-2*n:1)},z0=function(r){if((r[0]&15)!=8||r[0]>>>4>7||(r[0]<<8|r[1])%31)throw"invalid zlib data";if(r[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function Nf(r,e){return!e&&typeof r=="function"&&(e=r,r={}),this.ondata=e,r}var $n=function(){function r(e,t){!t&&typeof e=="function"&&(t=e,e={}),this.ondata=t,this.o=e||{}}return r.prototype.p=function(e,t){this.ondata(Br(e,this.o,0,0,!t),t)},r.prototype.push=function(e,t){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=t,this.p(e,t||!1)},r}(),N0=function(){function r(e,t){io([to,function(){return[mn,$n]}],this,Nf.call(this,e,t),function(n){var i=new $n(n.data);onmessage=mn(i)},6)}return r}();function U0(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return no(r,e,[to],function(n){return Gi(ca(n.data[0],n.data[1]))},0,t)}function ca(r,e){return Br(r,e||{},0,0)}var qt=function(){function r(e){this.s={},this.p=new Ve(0),this.ondata=e}return r.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var t=this.p.length,n=new Ve(t+e.length);n.set(this.p),n.set(e,t),this.p=n},r.prototype.c=function(e){this.d=this.s.i=e||!1;var t=this.s.b,n=aa(this.p,this.o,this.s);this.ondata(dn(n,t,this.s.b),this.d),this.o=dn(n,this.s.b-32768),this.s.b=this.o.length,this.p=dn(this.p,this.s.p/8|0),this.s.p&=7},r.prototype.push=function(e,t){this.e(e),this.c(t)},r}(),Uf=function(){function r(e){this.ondata=e,io([eo,function(){return[mn,qt]}],this,0,function(){var t=new qt;onmessage=mn(t)},7)}return r}();function kf(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return no(r,e,[eo],function(n){return Gi(ro(n.data[0],If(n.data[1])))},1,t)}function ro(r,e){return aa(r,e)}var Ol=function(){function r(e,t){this.c=Qs(),this.l=0,this.v=1,$n.call(this,e,t)}return r.prototype.push=function(e,t){$n.prototype.push.call(this,e,t)},r.prototype.p=function(e,t){this.c.p(e),this.l+=e.length;var n=Br(e,this.o,this.v&&Of(this.o),t&&8,!t);this.v&&(Ff(n,this.o),this.v=0),t&&(Je(n,n.length-8,this.c.d()),Je(n,n.length-4,this.l)),this.ondata(n,t)},r}(),im=function(){function r(e,t){io([to,D0,function(){return[mn,$n,Ol]}],this,Nf.call(this,e,t),function(n){var i=new Ol(n.data);onmessage=mn(i)},8)}return r}();function rm(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return no(r,e,[to,D0,function(){return[zl]}],function(n){return Gi(zl(n.data[0],n.data[1]))},2,t)}function zl(r,e){e||(e={});var t=Qs(),n=r.length;t.p(r);var i=Br(r,e,Of(e),8),s=i.length;return Ff(i,e),Je(i,s-8,t.d()),Je(i,s-4,n),i}var Nl=function(){function r(e){this.v=1,qt.call(this,e)}return r.prototype.push=function(e,t){if(qt.prototype.e.call(this,e),this.v){var n=this.p.length>3?Bf(this.p):4;if(n>=this.p.length&&!t)return;this.p=this.p.subarray(n),this.v=0}if(t){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}qt.prototype.c.call(this,t)},r}(),k0=function(){function r(e){this.ondata=e,io([eo,I0,function(){return[mn,qt,Nl]}],this,0,function(){var t=new Nl;onmessage=mn(t)},9)}return r}();function H0(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return no(r,e,[eo,I0,function(){return[Ul]}],function(n){return Gi(Ul(n.data[0]))},3,t)}function Ul(r,e){return aa(r.subarray(Bf(r),-8),e||new Ve(O0(r)))}var ch=function(){function r(e,t){this.c=Df(),this.v=1,$n.call(this,e,t)}return r.prototype.push=function(e,t){$n.prototype.push.call(this,e,t)},r.prototype.p=function(e,t){this.c.p(e);var n=Br(e,this.o,this.v&&2,t&&4,!t);this.v&&(zf(n,this.o),this.v=0),t&&Je(n,n.length-4,this.c.d()),this.ondata(n,t)},r}(),tT=function(){function r(e,t){io([to,F0,function(){return[mn,$n,ch]}],this,Nf.call(this,e,t),function(n){var i=new ch(n.data);onmessage=mn(i)},10)}return r}();function nT(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return no(r,e,[to,F0,function(){return[uh]}],function(n){return Gi(uh(n.data[0],n.data[1]))},4,t)}function uh(r,e){e||(e={});var t=Df();t.p(r);var n=Br(r,e,2,4);return zf(n,e),Je(n,n.length-4,t.d()),n}var kl=function(){function r(e){this.v=1,qt.call(this,e)}return r.prototype.push=function(e,t){if(qt.prototype.e.call(this,e),this.v){if(this.p.length<2&&!t)return;this.p=this.p.subarray(2),this.v=0}if(t){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}qt.prototype.c.call(this,t)},r}(),G0=function(){function r(e){this.ondata=e,io([eo,B0,function(){return[mn,qt,kl]}],this,0,function(){var t=new kl;onmessage=mn(t)},11)}return r}();function V0(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return no(r,e,[eo,B0,function(){return[Ho]}],function(n){return Gi(Ho(n.data[0],If(n.data[1])))},5,t)}function Ho(r,e){return aa((z0(r),r.subarray(2,-4)),e)}var W0=function(){function r(e){this.G=Nl,this.I=qt,this.Z=kl,this.ondata=e}return r.prototype.push=function(e,t){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,t);else{if(this.p&&this.p.length){var n=new Ve(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var i=this,s=function(){i.ondata.apply(i,arguments)};this.s=this.p[0]==31&&this.p[1]==139&&this.p[2]==8?new this.G(s):(this.p[0]&15)!=8||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(s):new this.Z(s),this.s.push(this.p,t),this.p=null}}},r}(),iT=function(){function r(e){this.G=k0,this.I=Uf,this.Z=G0,this.ondata=e}return r.prototype.push=function(e,t){W0.prototype.push.call(this,e,t)},r}();function rT(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return r[0]==31&&r[1]==139&&r[2]==8?H0(r,e,t):(r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31?kf(r,e,t):V0(r,e,t)}function sT(r,e){return r[0]==31&&r[1]==139&&r[2]==8?Ul(r,e):(r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31?ro(r,e):Ho(r,e)}var Hf=function(r,e,t,n){for(var i in r){var s=r[i],o=e+i;s instanceof Ve?t[o]=[s,n]:Array.isArray(s)?t[o]=[s[0],la(n,s[1])]:Hf(s,o+"/",t,n)}},sm=typeof TextEncoder!="undefined"&&new TextEncoder,hh=typeof TextDecoder!="undefined"&&new TextDecoder,$0=0;try{hh.decode(ni,{stream:!0}),$0=1}catch{}var q0=function(r){for(var e="",t=0;;){var n=r[t++],i=(n>127)+(n>223)+(n>239);if(t+i>r.length)return[e,dn(r,t-1)];i?i==3?(n=((n&15)<<18|(r[t++]&63)<<12|(r[t++]&63)<<6|r[t++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):i&1?e+=String.fromCharCode((n&31)<<6|r[t++]&63):e+=String.fromCharCode((n&15)<<12|(r[t++]&63)<<6|r[t++]&63):e+=String.fromCharCode(n)}},oT=function(){function r(e){this.ondata=e,$0?this.t=new TextDecoder:this.p=ni}return r.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(t=!!t,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),t),t){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}return}if(!this.p)throw"stream finished";var n=new Ve(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length);var i=q0(n),s=i[0],o=i[1];if(t){if(o.length)throw"invalid utf-8 data";this.p=null}else this.p=o;this.ondata(s,t)},r}(),aT=function(){function r(e){this.ondata=e}return r.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(Bi(e),this.d=t||!1)},r}();function Bi(r,e){if(e){for(var t=new Ve(r.length),n=0;n<r.length;++n)t[n]=r.charCodeAt(n);return t}if(sm)return sm.encode(r);for(var i=r.length,s=new Ve(r.length+(r.length>>1)),o=0,a=function(u){s[o++]=u},n=0;n<i;++n){if(o+5>s.length){var l=new Ve(o+8+(i-n<<1));l.set(s),s=l}var c=r.charCodeAt(n);c<128||e?a(c):c<2048?(a(192|c>>6),a(128|c&63)):c>55295&&c<57344?(c=65536+(c&1023<<10)|r.charCodeAt(++n)&1023,a(240|c>>18),a(128|c>>12&63),a(128|c>>6&63),a(128|c&63)):(a(224|c>>12),a(128|c>>6&63),a(128|c&63))}return dn(s,0,o)}function Gf(r,e){if(e){for(var t="",n=0;n<r.length;n+=16384)t+=String.fromCharCode.apply(null,r.subarray(n,n+16384));return t}else{if(hh)return hh.decode(r);var i=q0(r),s=i[0],o=i[1];if(o.length)throw"invalid utf-8 data";return s}}var X0=function(r){return r==1?3:r<6?2:r==9?1:0},j0=function(r,e){return e+30+Ut(r,e+26)+Ut(r,e+28)},Y0=function(r,e,t){var n=Ut(r,e+28),i=Gf(r.subarray(e+46,e+46+n),!(Ut(r,e+8)&2048)),s=e+46+n,o=yt(r,e+20),a=t&&o==4294967295?Z0(r,s):[o,yt(r,e+24),yt(r,e+42)],l=a[0],c=a[1],u=a[2];return[Ut(r,e+10),l,c,i,s+Ut(r,e+30)+Ut(r,e+32),u]},Z0=function(r,e){for(;Ut(r,e)!=1;e+=4+Ut(r,e+2));return[lu(r,e+12),lu(r,e+4),lu(r,e+20)]},Ai=function(r){var e=0;if(r)for(var t in r){var n=r[t].length;if(n>65535)throw"extra field too long";e+=n+4}return e},Hs=function(r,e,t,n,i,s,o,a){var l=n.length,c=t.extra,u=a&&a.length,h=Ai(c);Je(r,e,o!=null?33639248:67324752),e+=4,o!=null&&(r[e++]=20,r[e++]=t.os),r[e]=20,e+=2,r[e++]=t.flag<<1|(s==null&&8),r[e++]=i&&8,r[e++]=t.compression&255,r[e++]=t.compression>>8;var f=new Date(t.mtime==null?Date.now():t.mtime),d=f.getFullYear()-1980;if(d<0||d>119)throw"date not in range 1980-2099";if(Je(r,e,d<<25|f.getMonth()+1<<21|f.getDate()<<16|f.getHours()<<11|f.getMinutes()<<5|f.getSeconds()>>>1),e+=4,s!=null&&(Je(r,e,t.crc),Je(r,e+4,s),Je(r,e+8,t.size)),Je(r,e+12,l),Je(r,e+14,h),e+=16,o!=null&&(Je(r,e,u),Je(r,e+6,t.attrs),Je(r,e+10,o),e+=14),r.set(n,e),e+=l,h)for(var p in c){var m=c[p],g=m.length;Je(r,e,+p),Je(r,e+2,g),r.set(m,e+4),e+=4+g}return u&&(r.set(a,e),e+=u),e},Vf=function(r,e,t,n,i){Je(r,e,101010256),Je(r,e+8,t),Je(r,e+10,t),Je(r,e+12,n),Je(r,e+16,i)},Go=function(){function r(e){this.filename=e,this.c=Qs(),this.size=0,this.compression=0}return r.prototype.process=function(e,t){this.ondata(null,e,t)},r.prototype.push=function(e,t){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,t&&(this.crc=this.c.d()),this.process(e,t||!1)},r}(),lT=function(){function r(e,t){var n=this;t||(t={}),Go.call(this,e),this.d=new $n(t,function(i,s){n.ondata(null,i,s)}),this.compression=8,this.flag=X0(t.level)}return r.prototype.process=function(e,t){try{this.d.push(e,t)}catch(n){this.ondata(n,null,t)}},r.prototype.push=function(e,t){Go.prototype.push.call(this,e,t)},r}(),cT=function(){function r(e,t){var n=this;t||(t={}),Go.call(this,e),this.d=new N0(t,function(i,s,o){n.ondata(i,s,o)}),this.compression=8,this.flag=X0(t.level),this.terminate=this.d.terminate}return r.prototype.process=function(e,t){this.d.push(e,t)},r.prototype.push=function(e,t){Go.prototype.push.call(this,e,t)},r}(),uT=function(){function r(e){this.ondata=e,this.u=[],this.d=1}return r.prototype.add=function(e){var t=this;if(this.d&2)throw"stream finished";var n=Bi(e.filename),i=n.length,s=e.comment,o=s&&Bi(s),a=i!=e.filename.length||o&&s.length!=o.length,l=i+Ai(e.extra)+30;if(i>65535)throw"filename too long";var c=new Ve(l);Hs(c,0,e,n,a);var u=[c],h=function(){for(var g=0,y=u;g<y.length;g++){var v=y[g];t.ondata(null,v,!1)}u=[]},f=this.d;this.d=0;var d=this.u.length,p=la(e,{f:n,u:a,o,t:function(){e.terminate&&e.terminate()},r:function(){if(h(),f){var g=t.u[d+1];g?g.r():t.d=1}f=1}}),m=0;e.ondata=function(g,y,v){if(g)t.ondata(g,y,v),t.terminate();else if(m+=y.length,u.push(y),v){var _=new Ve(16);Je(_,0,134695760),Je(_,4,e.crc),Je(_,8,m),Je(_,12,e.size),u.push(_),p.c=m,p.b=l+m+16,p.crc=e.crc,p.size=e.size,f&&p.r(),f=1}else f&&h()},this.u.push(p)},r.prototype.end=function(){var e=this;if(this.d&2)throw this.d&1?"stream finishing":"stream finished";this.d?this.e():this.u.push({r:function(){!(e.d&1)||(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},r.prototype.e=function(){for(var e=0,t=0,n=0,i=0,s=this.u;i<s.length;i++){var o=s[i];n+=46+o.f.length+Ai(o.extra)+(o.o?o.o.length:0)}for(var a=new Ve(n+22),l=0,c=this.u;l<c.length;l++){var o=c[l];Hs(a,e,o,o.f,o.u,o.c,t,o.o),e+=46+o.f.length+Ai(o.extra)+(o.o?o.o.length:0),t+=o.b}Vf(a,e,this.u.length,n,t),this.ondata(null,a,!0),this.d=2},r.prototype.terminate=function(){for(var e=0,t=this.u;e<t.length;e++){var n=t[e];n.t()}this.d=2},r}();function hT(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";var n={};Hf(r,"",n,e);var i=Object.keys(n),s=i.length,o=0,a=0,l=s,c=new Array(s),u=[],h=function(){for(var m=0;m<u.length;++m)u[m]()},f=function(){var m=new Ve(a+22),g=o,y=a-o;a=0;for(var v=0;v<l;++v){var _=c[v];try{var x=_.c.length;Hs(m,a,_,_.f,_.u,x);var b=30+_.f.length+Ai(_.extra),M=a+b;m.set(_.c,M),Hs(m,o,_,_.f,_.u,x,a,_.m),o+=16+b+(_.m?_.m.length:0),a=M+x}catch(L){return t(L,null)}}Vf(m,o,c.length,y,g),t(null,m)};s||f();for(var d=function(m){var g=i[m],y=n[g],v=y[0],_=y[1],x=Qs(),b=v.length;x.p(v);var M=Bi(g),L=M.length,w=_.comment,T=w&&Bi(w),R=T&&T.length,F=Ai(_.extra),U=_.level==0?0:8,X=function(I,N){if(I)h(),t(I,null);else{var B=N.length;c[m]=la(_,{size:b,crc:x.d(),c:N,f:M,m:T,u:L!=g.length||T&&w.length!=R,compression:U}),o+=30+L+F+B,a+=76+2*(L+F)+(R||0)+B,--s||f()}};if(L>65535&&X("filename too long",null),!U)X(null,v);else if(b<16e4)try{X(null,ca(v,_))}catch(I){X(I,null)}else u.push(U0(v,_,X))},p=0;p<l;++p)d(p);return h}function fT(r,e){e||(e={});var t={},n=[];Hf(r,"",t,e);var i=0,s=0;for(var o in t){var a=t[o],l=a[0],c=a[1],u=c.level==0?0:8,h=Bi(o),f=h.length,d=c.comment,p=d&&Bi(d),m=p&&p.length,g=Ai(c.extra);if(f>65535)throw"filename too long";var y=u?ca(l,c):l,v=y.length,_=Qs();_.p(l),n.push(la(c,{size:l.length,crc:_.d(),c:y,f:h,m:p,u:f!=o.length||p&&d.length!=m,o:i,compression:u})),i+=30+f+g+v,s+=76+2*(f+g)+(m||0)+v}for(var x=new Ve(s+22),b=i,M=s-i,L=0;L<n.length;++L){var h=n[L];Hs(x,h.o,h,h.f,h.u,h.c.length);var w=30+h.f.length+Ai(h.extra);x.set(h.c,h.o+w),Hs(x,i,h,h.f,h.u,h.c.length,h.o,h.m),i+=16+w+(h.m?h.m.length:0)}return Vf(x,i,n.length,M,b),x}var J0=function(){function r(){}return r.prototype.push=function(e,t){this.ondata(null,e,t)},r.compression=0,r}(),dT=function(){function r(){var e=this;this.i=new qt(function(t,n){e.ondata(null,t,n)})}return r.prototype.push=function(e,t){try{this.i.push(e,t)}catch(n){this.ondata(n,e,t)}},r.compression=8,r}(),pT=function(){function r(e,t){var n=this;t<32e4?this.i=new qt(function(i,s){n.ondata(null,i,s)}):(this.i=new Uf(function(i,s,o){n.ondata(i,s,o)}),this.terminate=this.i.terminate)}return r.prototype.push=function(e,t){this.i.terminate&&(e=dn(e,0)),this.i.push(e,t)},r.compression=8,r}(),mT=function(){function r(e){this.onfile=e,this.k=[],this.o={0:J0},this.p=ni}return r.prototype.push=function(e,t){var n=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var i=Math.min(this.c,e.length),s=e.subarray(0,i);if(this.c-=i,this.d?this.d.push(s,!this.c):this.k[0].push(s),e=e.subarray(i),e.length)return this.push(e,t)}else{var o=0,a=0,l=void 0,c=void 0;this.p.length?e.length?(c=new Ve(this.p.length+e.length),c.set(this.p),c.set(e,this.p.length)):c=this.p:c=e;for(var u=c.length,h=this.c,f=h&&this.d,d=function(){var y,v=yt(c,a);if(v==67324752){o=1,l=a,p.d=null,p.c=0;var _=Ut(c,a+6),x=Ut(c,a+8),b=_&2048,M=_&8,L=Ut(c,a+26),w=Ut(c,a+28);if(u>a+30+L+w){var T=[];p.k.unshift(T),o=2;var R=yt(c,a+18),F=yt(c,a+22),U=Gf(c.subarray(a+30,a+=30+L),!b);R==4294967295?(y=M?[-2]:Z0(c,a),R=y[0],F=y[1]):M&&(R=-1),a+=w,p.c=R;var X,I={name:U,compression:x,start:function(){if(!I.ondata)throw"no callback";if(!R)I.ondata(null,ni,!0);else{var N=n.o[x];if(!N)throw"unknown compression type "+x;X=R<0?new N(U):new N(U,R,F),X.ondata=function(z,G,Q){I.ondata(z,G,Q)};for(var B=0,H=T;B<H.length;B++){var q=H[B];X.push(q,!1)}n.k[0]==T&&n.c?n.d=X:X.push(ni,!0)}},terminate:function(){X&&X.terminate&&X.terminate()}};R>=0&&(I.size=R,I.originalSize=F),p.onfile(I)}return"break"}else if(h){if(v==134695760)return l=a+=12+(h==-2&&8),o=3,p.c=0,"break";if(v==33639248)return l=a-=4,o=3,p.c=0,"break"}},p=this;a<u-4;++a){var m=d();if(m==="break")break}if(this.p=ni,h<0){var g=o?c.subarray(0,l-12-(h==-2&&8)-(yt(c,l-16)==134695760&&4)):c.subarray(0,a);f?f.push(g,!!o):this.k[+(o==2)].push(g)}if(o&2)return this.push(c.subarray(a),t);this.p=c.subarray(a)}if(t){if(this.c)throw"invalid zip file";this.p=null}},r.prototype.register=function(e){this.o[e.compression]=e},r}();function gT(r,e){if(typeof e!="function")throw"no callback";for(var t=[],n=function(){for(var f=0;f<t.length;++f)t[f]()},i={},s=r.length-22;yt(r,s)!=101010256;--s)if(!s||r.length-s>65558){e("invalid zip file",null);return}var o=Ut(r,s+8);o||e(null,{});var a=o,l=yt(r,s+16),c=l==4294967295;if(c){if(s=yt(r,s-12),yt(r,s)!=101075792){e("invalid zip file",null);return}a=o=yt(r,s+32),l=yt(r,s+48)}for(var u=function(f){var d=Y0(r,l,c),p=d[0],m=d[1],g=d[2],y=d[3],v=d[4],_=d[5],x=j0(r,_);l=v;var b=function(L,w){L?(n(),e(L,null)):(i[y]=w,--o||e(null,i))};if(!p)b(null,dn(r,x,x+m));else if(p==8){var M=r.subarray(x,x+m);if(m<32e4)try{b(null,ro(M,new Ve(g)))}catch(L){b(L,null)}else t.push(kf(M,{size:g},b))}else b("unknown compression type "+p,null)},h=0;h<a;++h)u();return n}function yT(r){for(var e={},t=r.length-22;yt(r,t)!=101010256;--t)if(!t||r.length-t>65558)throw"invalid zip file";var n=Ut(r,t+8);if(!n)return{};var i=yt(r,t+16),s=i==4294967295;if(s){if(t=yt(r,t-12),yt(r,t)!=101075792)throw"invalid zip file";n=yt(r,t+32),i=yt(r,t+48)}for(var o=0;o<n;++o){var a=Y0(r,i,s),l=a[0],c=a[1],u=a[2],h=a[3],f=a[4],d=a[5],p=j0(r,d);if(i=f,!l)e[h]=dn(r,p,p+c);else if(l==8)e[h]=ro(r.subarray(p,p+c),new Ve(u));else throw"unknown compression type "+l}return e}var vT=Object.freeze(Object.defineProperty({__proto__:null,Deflate:$n,AsyncDeflate:N0,deflate:U0,deflateSync:ca,Inflate:qt,AsyncInflate:Uf,inflate:kf,inflateSync:ro,Gzip:Ol,AsyncGzip:im,gzip:rm,gzipSync:zl,Gunzip:Nl,AsyncGunzip:k0,gunzip:H0,gunzipSync:Ul,Zlib:ch,AsyncZlib:tT,zlib:nT,zlibSync:uh,Unzlib:kl,AsyncUnzlib:G0,unzlib:V0,unzlibSync:Ho,compress:rm,AsyncCompress:im,compressSync:zl,Compress:Ol,Decompress:W0,AsyncDecompress:iT,decompress:rT,decompressSync:sT,DecodeUTF8:oT,EncodeUTF8:aT,strToU8:Bi,strFromU8:Gf,ZipPassThrough:Go,ZipDeflate:lT,AsyncZipDeflate:cT,Zip:uT,zip:hT,zipSync:fT,UnzipPassThrough:J0,UnzipInflate:dT,AsyncUnzipInflate:pT,Unzip:mT,unzip:gT,unzipSync:yT},Symbol.toStringTag,{value:"Module"}));function K0(r,e,t){const n=t.length-r-1;if(e>=t[n])return n-1;if(e<=t[r])return r;let i=r,s=n,o=Math.floor((i+s)/2);for(;e<t[o]||e>=t[o+1];)e<t[o]?s=o:i=o,o=Math.floor((i+s)/2);return o}function _T(r,e,t,n){const i=[],s=[],o=[];i[0]=1;for(let a=1;a<=t;++a){s[a]=e-n[r+1-a],o[a]=n[r+a]-e;let l=0;for(let c=0;c<a;++c){const u=o[c+1],h=s[a-c],f=i[c]/(u+h);i[c]=l+u*f,l=h*f}i[a]=l}return i}function xT(r,e,t,n){const i=K0(r,n,e),s=_T(i,n,r,e),o=new qe(0,0,0,0);for(let a=0;a<=r;++a){const l=t[i-r+a],c=s[a],u=l.w*c;o.x+=l.x*u,o.y+=l.y*u,o.z+=l.z*u,o.w+=l.w*c}return o}function wT(r,e,t,n,i){const s=[];for(let h=0;h<=t;++h)s[h]=0;const o=[];for(let h=0;h<=n;++h)o[h]=s.slice(0);const a=[];for(let h=0;h<=t;++h)a[h]=s.slice(0);a[0][0]=1;const l=s.slice(0),c=s.slice(0);for(let h=1;h<=t;++h){l[h]=e-i[r+1-h],c[h]=i[r+h]-e;let f=0;for(let d=0;d<h;++d){const p=c[d+1],m=l[h-d];a[h][d]=p+m;const g=a[d][h-1]/a[h][d];a[d][h]=f+p*g,f=m*g}a[h][h]=f}for(let h=0;h<=t;++h)o[0][h]=a[h][t];for(let h=0;h<=t;++h){let f=0,d=1;const p=[];for(let m=0;m<=t;++m)p[m]=s.slice(0);p[0][0]=1;for(let m=1;m<=n;++m){let g=0;const y=h-m,v=t-m;h>=m&&(p[d][0]=p[f][0]/a[v+1][y],g=p[d][0]*a[y][v]);const _=y>=-1?1:-y,x=h-1<=v?m-1:t-h;for(let M=_;M<=x;++M)p[d][M]=(p[f][M]-p[f][M-1])/a[v+1][y+M],g+=p[d][M]*a[y+M][v];h<=v&&(p[d][m]=-p[f][m-1]/a[v+1][h],g+=p[d][m]*a[h][v]),o[m][h]=g;const b=f;f=d,d=b}}let u=t;for(let h=1;h<=n;++h){for(let f=0;f<=t;++f)o[h][f]*=u;u*=t-h}return o}function bT(r,e,t,n,i){const s=i<r?i:r,o=[],a=K0(r,n,e),l=wT(a,n,r,s,e),c=[];for(let u=0;u<t.length;++u){const h=t[u].clone(),f=h.w;h.x*=f,h.y*=f,h.z*=f,c[u]=h}for(let u=0;u<=s;++u){const h=c[a-r].clone().multiplyScalar(l[u][0]);for(let f=1;f<=r;++f)h.add(c[a-r+f].clone().multiplyScalar(l[u][f]));o[u]=h}for(let u=s+1;u<=i+1;++u)o[u]=new qe(0,0,0);return o}function MT(r,e){let t=1;for(let i=2;i<=r;++i)t*=i;let n=1;for(let i=2;i<=e;++i)n*=i;for(let i=2;i<=r-e;++i)n*=i;return t/n}function ST(r){const e=r.length,t=[],n=[];for(let s=0;s<e;++s){const o=r[s];t[s]=new S(o.x,o.y,o.z),n[s]=o.w}const i=[];for(let s=0;s<e;++s){const o=t[s].clone();for(let a=1;a<=s;++a)o.sub(i[s-a].clone().multiplyScalar(MT(s,a)*n[a]));i[s]=o.divideScalar(n[0])}return i}function ET(r,e,t,n,i){const s=bT(r,e,t,n,i);return ST(s)}class om extends jt{constructor(e,t,n,i,s){super(),this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=i||0,this.endKnot=s||this.knots.length-1;for(let o=0;o<n.length;++o){const a=n[o];this.controlPoints[o]=new qe(a.x,a.y,a.z,a.w)}}getPoint(e,t=new S){const n=t,i=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),s=xT(this.degree,this.knots,this.controlPoints,i);return s.w!==1&&s.divideScalar(s.w),n.set(s.x,s.y,s.z)}getTangent(e,t=new S){const n=t,i=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),s=ET(this.degree,this.knots,this.controlPoints,i,1);return n.copy(s[1]).normalize(),n}}let ke,pt,Gt;class TT extends Ot{constructor(e){super(e)}load(e,t,n,i){const s=this,o=s.path===""?Ar.extractUrlBase(e):s.path,a=new Tn(this.manager);a.setPath(s.path),a.setResponseType("arraybuffer"),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(l){try{t(s.parse(l,o))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e,t){if(DT(e))ke=new RT().parse(e);else{const i=nv(e);if(!IT(i))throw new Error("THREE.FBXLoader: Unknown format.");if(lm(i)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+lm(i));ke=new PT().parse(i)}const n=new Hi(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new AT(n,this.manager).parse(ke)}}class AT{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){pt=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),n=this.parseMaterials(t),i=this.parseDeformers(),s=new CT().parse(i);return this.parseScene(i,s,n),Gt}parseConnections(){const e=new Map;return"Connections"in ke&&ke.Connections.connections.forEach(function(n){const i=n[0],s=n[1],o=n[2];e.has(i)||e.set(i,{parents:[],children:[]});const a={ID:s,relationship:o};e.get(i).parents.push(a),e.has(s)||e.set(s,{parents:[],children:[]});const l={ID:i,relationship:o};e.get(s).children.push(l)}),e}parseImages(){const e={},t={};if("Video"in ke.Objects){const n=ke.Objects.Video;for(const i in n){const s=n[i],o=parseInt(i);if(e[o]=s.RelativeFilename||s.Filename,"Content"in s){const a=s.Content instanceof ArrayBuffer&&s.Content.byteLength>0,l=typeof s.Content=="string"&&s.Content!=="";if(a||l){const c=this.parseImage(n[i]);t[s.RelativeFilename||s.Filename]=c}}}}for(const n in e){const i=e[n];t[i]!==void 0?e[n]=t[i]:e[n]=e[n].split("\\").pop()}return e}parseImage(e){const t=e.Content,n=e.RelativeFilename||e.Filename,i=n.slice(n.lastIndexOf(".")+1).toLowerCase();let s;switch(i){case"bmp":s="image/bmp";break;case"jpg":case"jpeg":s="image/jpeg";break;case"png":s="image/png";break;case"tif":s="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",n),s="image/tga";break;default:console.warn('FBXLoader: Image type "'+i+'" is not supported.');return}if(typeof t=="string")return"data:"+s+";base64,"+t;{const o=new Uint8Array(t);return window.URL.createObjectURL(new Blob([o],{type:s}))}}parseTextures(e){const t=new Map;if("Texture"in ke.Objects){const n=ke.Objects.Texture;for(const i in n){const s=this.parseTexture(n[i],e);t.set(parseInt(i),s)}}return t}parseTexture(e,t){const n=this.loadTexture(e,t);n.ID=e.id,n.name=e.attrName;const i=e.WrapModeU,s=e.WrapModeV,o=i!==void 0?i.value:0,a=s!==void 0?s.value:0;if(n.wrapS=o===0?yr:Pt,n.wrapT=a===0?yr:Pt,"Scaling"in e){const l=e.Scaling.value;n.repeat.x=l[0],n.repeat.y=l[1]}if("Translation"in e){const l=e.Translation.value;n.offset.x=l[0],n.offset.y=l[1]}return n}loadTexture(e,t){let n;const i=this.textureLoader.path,s=pt.get(e.id).children;s!==void 0&&s.length>0&&t[s[0].ID]!==void 0&&(n=t[s[0].ID],(n.indexOf("blob:")===0||n.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let o;const a=e.FileName.slice(-3).toLowerCase();if(a==="tga"){const l=this.manager.getHandler(".tga");l===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),o=new ft):(l.setPath(this.textureLoader.path),o=l.load(n))}else a==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),o=new ft):o=this.textureLoader.load(n);return this.textureLoader.setPath(i),o}parseMaterials(e){const t=new Map;if("Material"in ke.Objects){const n=ke.Objects.Material;for(const i in n){const s=this.parseMaterial(n[i],e);s!==null&&t.set(parseInt(i),s)}}return t}parseMaterial(e,t){const n=e.id,i=e.attrName;let s=e.ShadingModel;if(typeof s=="object"&&(s=s.value),!pt.has(n))return null;const o=this.parseParameters(e,t,n);let a;switch(s.toLowerCase()){case"phong":a=new ps;break;case"lambert":a=new lc;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',s),a=new ps;break}return a.setValues(o),a.name=i,a}parseParameters(e,t,n){const i={};e.BumpFactor&&(i.bumpScale=e.BumpFactor.value),e.Diffuse?i.color=new ne().fromArray(e.Diffuse.value):e.DiffuseColor&&(e.DiffuseColor.type==="Color"||e.DiffuseColor.type==="ColorRGB")&&(i.color=new ne().fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(i.displacementScale=e.DisplacementFactor.value),e.Emissive?i.emissive=new ne().fromArray(e.Emissive.value):e.EmissiveColor&&(e.EmissiveColor.type==="Color"||e.EmissiveColor.type==="ColorRGB")&&(i.emissive=new ne().fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(i.opacity=parseFloat(e.Opacity.value)),i.opacity<1&&(i.transparent=!0),e.ReflectionFactor&&(i.reflectivity=e.ReflectionFactor.value),e.Shininess&&(i.shininess=e.Shininess.value),e.Specular?i.specular=new ne().fromArray(e.Specular.value):e.SpecularColor&&e.SpecularColor.type==="Color"&&(i.specular=new ne().fromArray(e.SpecularColor.value));const s=this;return pt.get(n).children.forEach(function(o){const a=o.relationship;switch(a){case"Bump":i.bumpMap=s.getTexture(t,o.ID);break;case"Maya|TEX_ao_map":i.aoMap=s.getTexture(t,o.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":i.map=s.getTexture(t,o.ID),i.map!==void 0&&(i.map.encoding=He);break;case"DisplacementColor":i.displacementMap=s.getTexture(t,o.ID);break;case"EmissiveColor":i.emissiveMap=s.getTexture(t,o.ID),i.emissiveMap!==void 0&&(i.emissiveMap.encoding=He);break;case"NormalMap":case"Maya|TEX_normal_map":i.normalMap=s.getTexture(t,o.ID);break;case"ReflectionColor":i.envMap=s.getTexture(t,o.ID),i.envMap!==void 0&&(i.envMap.mapping=_s,i.envMap.encoding=He);break;case"SpecularColor":i.specularMap=s.getTexture(t,o.ID),i.specularMap!==void 0&&(i.specularMap.encoding=He);break;case"TransparentColor":case"TransparencyFactor":i.alphaMap=s.getTexture(t,o.ID),i.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",a);break}}),i}getTexture(e,t){return"LayeredTexture"in ke.Objects&&t in ke.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=pt.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in ke.Objects){const n=ke.Objects.Deformer;for(const i in n){const s=n[i],o=pt.get(parseInt(i));if(s.attrType==="Skin"){const a=this.parseSkeleton(o,n);a.ID=i,o.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),a.geometryID=o.parents[0].ID,e[i]=a}else if(s.attrType==="BlendShape"){const a={id:i};a.rawTargets=this.parseMorphTargets(o,n),a.id=i,o.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[i]=a}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const n=[];return e.children.forEach(function(i){const s=t[i.ID];if(s.attrType!=="Cluster")return;const o={ID:i.ID,indices:[],weights:[],transformLink:new ae().fromArray(s.TransformLink.a)};"Indexes"in s&&(o.indices=s.Indexes.a,o.weights=s.Weights.a),n.push(o)}),{rawBones:n,bones:[]}}parseMorphTargets(e,t){const n=[];for(let i=0;i<e.children.length;i++){const s=e.children[i],o=t[s.ID],a={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if(o.attrType!=="BlendShapeChannel")return;a.geoID=pt.get(parseInt(s.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,n.push(a)}return n}parseScene(e,t,n){Gt=new ti;const i=this.parseModels(e.skeletons,t,n),s=ke.Objects.Model,o=this;i.forEach(function(l){const c=s[l.ID];o.setLookAtProperties(l,c),pt.get(l.ID).parents.forEach(function(h){const f=i.get(h.ID);f!==void 0&&f.add(l)}),l.parent===null&&Gt.add(l)}),this.bindSkeleton(e.skeletons,t,i),this.createAmbientLight(),Gt.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);const c=ev(l.userData.transformData);l.applyMatrix4(c),l.updateWorldMatrix()}});const a=new LT().parse();Gt.children.length===1&&Gt.children[0].isGroup&&(Gt.children[0].animations=a,Gt=Gt.children[0]),Gt.animations=a}parseModels(e,t,n){const i=new Map,s=ke.Objects.Model;for(const o in s){const a=parseInt(o),l=s[o],c=pt.get(a);let u=this.buildSkeleton(c,e,a,l.attrName);if(!u){switch(l.attrType){case"Camera":u=this.createCamera(c);break;case"Light":u=this.createLight(c);break;case"Mesh":u=this.createMesh(c,t,n);break;case"NurbsCurve":u=this.createCurve(c,t);break;case"LimbNode":case"Root":u=new Es;break;case"Null":default:u=new ti;break}u.name=l.attrName?Ge.sanitizeNodeName(l.attrName):"",u.ID=a}this.getTransformData(u,l),i.set(a,u)}return i}buildSkeleton(e,t,n,i){let s=null;return e.parents.forEach(function(o){for(const a in t){const l=t[a];l.rawBones.forEach(function(c,u){if(c.ID===o.ID){const h=s;s=new Es,s.matrixWorld.copy(c.transformLink),s.name=i?Ge.sanitizeNodeName(i):"",s.ID=n,l.bones[u]=s,h!==null&&s.add(h)}})}}),s}createCamera(e){let t,n;if(e.children.forEach(function(i){const s=ke.Objects.NodeAttribute[i.ID];s!==void 0&&(n=s)}),n===void 0)t=new Be;else{let i=0;n.CameraProjectionType!==void 0&&n.CameraProjectionType.value===1&&(i=1);let s=1;n.NearPlane!==void 0&&(s=n.NearPlane.value/1e3);let o=1e3;n.FarPlane!==void 0&&(o=n.FarPlane.value/1e3);let a=window.innerWidth,l=window.innerHeight;n.AspectWidth!==void 0&&n.AspectHeight!==void 0&&(a=n.AspectWidth.value,l=n.AspectHeight.value);const c=a/l;let u=45;n.FieldOfView!==void 0&&(u=n.FieldOfView.value);const h=n.FocalLength?n.FocalLength.value:null;switch(i){case 0:t=new Mt(u,c,s,o),h!==null&&t.setFocalLength(h);break;case 1:t=new ki(-a/2,a/2,l/2,-l/2,s,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+i+"."),t=new Be;break}}return t}createLight(e){let t,n;if(e.children.forEach(function(i){const s=ke.Objects.NodeAttribute[i.ID];s!==void 0&&(n=s)}),n===void 0)t=new Be;else{let i;n.LightType===void 0?i=0:i=n.LightType.value;let s=16777215;n.Color!==void 0&&(s=new ne().fromArray(n.Color.value));let o=n.Intensity===void 0?1:n.Intensity.value/100;n.CastLightOnObject!==void 0&&n.CastLightOnObject.value===0&&(o=0);let a=0;n.FarAttenuationEnd!==void 0&&(n.EnableFarAttenuation!==void 0&&n.EnableFarAttenuation.value===0?a=0:a=n.FarAttenuationEnd.value);const l=1;switch(i){case 0:t=new Us(s,o,a,l);break;case 1:t=new ia(s,o);break;case 2:let c=Math.PI/3;n.InnerAngle!==void 0&&(c=un.degToRad(n.InnerAngle.value));let u=0;n.OuterAngle!==void 0&&(u=un.degToRad(n.OuterAngle.value),u=Math.max(u,1)),t=new cc(s,o,a,c,u,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),t=new Us(s,o);break}n.CastShadows!==void 0&&n.CastShadows.value===1&&(t.castShadow=!0)}return t}createMesh(e,t,n){let i,s=null,o=null;const a=[];return e.children.forEach(function(l){t.has(l.ID)&&(s=t.get(l.ID)),n.has(l.ID)&&a.push(n.get(l.ID))}),a.length>1?o=a:a.length>0?o=a[0]:(o=new ps({color:13421772}),a.push(o)),"color"in s.attributes&&a.forEach(function(l){l.vertexColors=!0}),s.FBX_Deformer?(i=new Qo(s,o),i.normalizeSkinWeights()):i=new ht(s,o),i}createCurve(e,t){const n=e.children.reduce(function(s,o){return t.has(o.ID)&&(s=t.get(o.ID)),s},null),i=new Tt({color:3342591,linewidth:1});return new Gn(n,i)}getTransformData(e,t){const n={};"InheritType"in t&&(n.inheritType=parseInt(t.InheritType.value)),"RotationOrder"in t?n.eulerOrder=tv(t.RotationOrder.value):n.eulerOrder="ZYX","Lcl_Translation"in t&&(n.translation=t.Lcl_Translation.value),"PreRotation"in t&&(n.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(n.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(n.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(n.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(n.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(n.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(n.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(n.rotationPivot=t.RotationPivot.value),e.userData.transformData=n}setLookAtProperties(e,t){"LookAtProperty"in t&&pt.get(e.ID).children.forEach(function(i){if(i.relationship==="LookAtProperty"){const s=ke.Objects.Model[i.ID];if("Lcl_Translation"in s){const o=s.Lcl_Translation.value;e.target!==void 0?(e.target.position.fromArray(o),Gt.add(e.target)):e.lookAt(new S().fromArray(o))}}})}bindSkeleton(e,t,n){const i=this.parsePoseNodes();for(const s in e){const o=e[s];pt.get(parseInt(o.ID)).parents.forEach(function(l){if(t.has(l.ID)){const c=l.ID;pt.get(c).parents.forEach(function(h){n.has(h.ID)&&n.get(h.ID).bind(new ea(o.bones),i[h.ID])})}})}}parsePoseNodes(){const e={};if("Pose"in ke.Objects){const t=ke.Objects.Pose;for(const n in t)if(t[n].attrType==="BindPose"&&t[n].NbPoseNodes>0){const i=t[n].PoseNode;Array.isArray(i)?i.forEach(function(s){e[s.Node]=new ae().fromArray(s.Matrix.a)}):e[i.Node]=new ae().fromArray(i.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in ke&&"AmbientColor"in ke.GlobalSettings){const e=ke.GlobalSettings.AmbientColor.value,t=e[0],n=e[1],i=e[2];if(t!==0||n!==0||i!==0){const s=new ne(t,n,i);Gt.add(new ra(s,1))}}}}class CT{parse(e){const t=new Map;if("Geometry"in ke.Objects){const n=ke.Objects.Geometry;for(const i in n){const s=pt.get(parseInt(i)),o=this.parseGeometry(s,n[i],e);t.set(parseInt(i),o)}}return t}parseGeometry(e,t,n){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,n);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,n){const i=n.skeletons,s=[],o=e.parents.map(function(h){return ke.Objects.Model[h.ID]});if(o.length===0)return;const a=e.children.reduce(function(h,f){return i[f.ID]!==void 0&&(h=i[f.ID]),h},null);e.children.forEach(function(h){n.morphTargets[h.ID]!==void 0&&s.push(n.morphTargets[h.ID])});const l=o[0],c={};"RotationOrder"in l&&(c.eulerOrder=tv(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);const u=ev(c);return this.genGeometry(t,a,s,u)}genGeometry(e,t,n,i){const s=new Me;e.attrName&&(s.name=e.attrName);const o=this.parseGeoNode(e,t),a=this.genBuffers(o),l=new ge(a.vertex,3);if(l.applyMatrix4(i),s.setAttribute("position",l),a.colors.length>0&&s.setAttribute("color",new ge(a.colors,3)),t&&(s.setAttribute("skinIndex",new qo(a.weightsIndices,4)),s.setAttribute("skinWeight",new ge(a.vertexWeights,4)),s.FBX_Deformer=t),a.normal.length>0){const c=new St().getNormalMatrix(i),u=new ge(a.normal,3);u.applyNormalMatrix(c),s.setAttribute("normal",u)}if(a.uvs.forEach(function(c,u){let h="uv"+(u+1).toString();u===0&&(h="uv"),s.setAttribute(h,new ge(a.uvs[u],2))}),o.material&&o.material.mappingType!=="AllSame"){let c=a.materialIndex[0],u=0;if(a.materialIndex.forEach(function(h,f){h!==c&&(s.addGroup(u,f-u,c),c=h,u=f)}),s.groups.length>0){const h=s.groups[s.groups.length-1],f=h.start+h.count;f!==a.materialIndex.length&&s.addGroup(f,a.materialIndex.length-f,c)}s.groups.length===0&&s.addGroup(0,a.materialIndex.length,a.materialIndex[0])}return this.addMorphTargets(s,e,n,i),s}parseGeoNode(e,t){const n={};if(n.vertexPositions=e.Vertices!==void 0?e.Vertices.a:[],n.vertexIndices=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(n.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(n.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(n.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){n.uv=[];let i=0;for(;e.LayerElementUV[i];)e.LayerElementUV[i].UV&&n.uv.push(this.parseUVs(e.LayerElementUV[i])),i++}return n.weightTable={},t!==null&&(n.skeleton=t,t.rawBones.forEach(function(i,s){i.indices.forEach(function(o,a){n.weightTable[o]===void 0&&(n.weightTable[o]=[]),n.weightTable[o].push({id:s,weight:i.weights[a]})})})),n}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let n=0,i=0,s=!1,o=[],a=[],l=[],c=[],u=[],h=[];const f=this;return e.vertexIndices.forEach(function(d,p){let m,g=!1;d<0&&(d=d^-1,g=!0);let y=[],v=[];if(o.push(d*3,d*3+1,d*3+2),e.color){const _=il(p,n,d,e.color);l.push(_[0],_[1],_[2])}if(e.skeleton){if(e.weightTable[d]!==void 0&&e.weightTable[d].forEach(function(_){v.push(_.weight),y.push(_.id)}),v.length>4){s||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),s=!0);const _=[0,0,0,0],x=[0,0,0,0];v.forEach(function(b,M){let L=b,w=y[M];x.forEach(function(T,R,F){if(L>T){F[R]=L,L=T;const U=_[R];_[R]=w,w=U}})}),y=_,v=x}for(;v.length<4;)v.push(0),y.push(0);for(let _=0;_<4;++_)u.push(v[_]),h.push(y[_])}if(e.normal){const _=il(p,n,d,e.normal);a.push(_[0],_[1],_[2])}e.material&&e.material.mappingType!=="AllSame"&&(m=il(p,n,d,e.material)[0]),e.uv&&e.uv.forEach(function(_,x){const b=il(p,n,d,_);c[x]===void 0&&(c[x]=[]),c[x].push(b[0]),c[x].push(b[1])}),i++,g&&(f.genFace(t,e,o,m,a,l,c,u,h,i),n++,i=0,o=[],a=[],l=[],c=[],u=[],h=[])}),t}genFace(e,t,n,i,s,o,a,l,c,u){for(let h=2;h<u;h++)e.vertex.push(t.vertexPositions[n[0]]),e.vertex.push(t.vertexPositions[n[1]]),e.vertex.push(t.vertexPositions[n[2]]),e.vertex.push(t.vertexPositions[n[(h-1)*3]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+1]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+2]]),e.vertex.push(t.vertexPositions[n[h*3]]),e.vertex.push(t.vertexPositions[n[h*3+1]]),e.vertex.push(t.vertexPositions[n[h*3+2]]),t.skeleton&&(e.vertexWeights.push(l[0]),e.vertexWeights.push(l[1]),e.vertexWeights.push(l[2]),e.vertexWeights.push(l[3]),e.vertexWeights.push(l[(h-1)*4]),e.vertexWeights.push(l[(h-1)*4+1]),e.vertexWeights.push(l[(h-1)*4+2]),e.vertexWeights.push(l[(h-1)*4+3]),e.vertexWeights.push(l[h*4]),e.vertexWeights.push(l[h*4+1]),e.vertexWeights.push(l[h*4+2]),e.vertexWeights.push(l[h*4+3]),e.weightsIndices.push(c[0]),e.weightsIndices.push(c[1]),e.weightsIndices.push(c[2]),e.weightsIndices.push(c[3]),e.weightsIndices.push(c[(h-1)*4]),e.weightsIndices.push(c[(h-1)*4+1]),e.weightsIndices.push(c[(h-1)*4+2]),e.weightsIndices.push(c[(h-1)*4+3]),e.weightsIndices.push(c[h*4]),e.weightsIndices.push(c[h*4+1]),e.weightsIndices.push(c[h*4+2]),e.weightsIndices.push(c[h*4+3])),t.color&&(e.colors.push(o[0]),e.colors.push(o[1]),e.colors.push(o[2]),e.colors.push(o[(h-1)*3]),e.colors.push(o[(h-1)*3+1]),e.colors.push(o[(h-1)*3+2]),e.colors.push(o[h*3]),e.colors.push(o[h*3+1]),e.colors.push(o[h*3+2])),t.material&&t.material.mappingType!=="AllSame"&&(e.materialIndex.push(i),e.materialIndex.push(i),e.materialIndex.push(i)),t.normal&&(e.normal.push(s[0]),e.normal.push(s[1]),e.normal.push(s[2]),e.normal.push(s[(h-1)*3]),e.normal.push(s[(h-1)*3+1]),e.normal.push(s[(h-1)*3+2]),e.normal.push(s[h*3]),e.normal.push(s[h*3+1]),e.normal.push(s[h*3+2])),t.uv&&t.uv.forEach(function(f,d){e.uvs[d]===void 0&&(e.uvs[d]=[]),e.uvs[d].push(a[d][0]),e.uvs[d].push(a[d][1]),e.uvs[d].push(a[d][(h-1)*2]),e.uvs[d].push(a[d][(h-1)*2+1]),e.uvs[d].push(a[d][h*2]),e.uvs[d].push(a[d][h*2+1])})}addMorphTargets(e,t,n,i){if(n.length===0)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const s=this;n.forEach(function(o){o.rawTargets.forEach(function(a){const l=ke.Objects.Geometry[a.geoID];l!==void 0&&s.genMorphGeometry(e,t,l,i,a.name)})})}genMorphGeometry(e,t,n,i,s){const o=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],a=n.Vertices!==void 0?n.Vertices.a:[],l=n.Indexes!==void 0?n.Indexes.a:[],c=e.attributes.position.count*3,u=new Float32Array(c);for(let p=0;p<l.length;p++){const m=l[p]*3;u[m]=a[p*3],u[m+1]=a[p*3+1],u[m+2]=a[p*3+2]}const h={vertexIndices:o,vertexPositions:u},f=this.genBuffers(h),d=new ge(f.vertex,3);d.name=s||n.attrName,d.applyMatrix4(i),e.morphAttributes.position.push(d)}parseNormals(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Normals.a;let s=[];return n==="IndexToDirect"&&("NormalIndex"in e?s=e.NormalIndex.a:"NormalsIndex"in e&&(s=e.NormalsIndex.a)),{dataSize:3,buffer:i,indices:s,mappingType:t,referenceType:n}}parseUVs(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.UV.a;let s=[];return n==="IndexToDirect"&&(s=e.UVIndex.a),{dataSize:2,buffer:i,indices:s,mappingType:t,referenceType:n}}parseVertexColors(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Colors.a;let s=[];return n==="IndexToDirect"&&(s=e.ColorIndex.a),{dataSize:4,buffer:i,indices:s,mappingType:t,referenceType:n}}parseMaterialIndices(e){const t=e.MappingInformationType,n=e.ReferenceInformationType;if(t==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};const i=e.Materials.a,s=[];for(let o=0;o<i.length;++o)s.push(o);return{dataSize:1,buffer:i,indices:s,mappingType:t,referenceType:n}}parseNurbsGeometry(e){if(om===void 0)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new Me;const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new Me;const n=t-1,i=e.KnotVector.a,s=[],o=e.Points.a;for(let h=0,f=o.length;h<f;h+=4)s.push(new qe().fromArray(o,h));let a,l;if(e.Form==="Closed")s.push(s[0]);else if(e.Form==="Periodic"){a=n,l=i.length-1-a;for(let h=0;h<n;++h)s.push(s[h])}const u=new om(n,i,s,a,l).getPoints(s.length*12);return new Me().setFromPoints(u)}}class LT{parse(){const e=[],t=this.parseClips();if(t!==void 0)for(const n in t){const i=t[n],s=this.addClip(i);e.push(s)}return e}parseClips(){if(ke.Objects.AnimationCurve===void 0)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=ke.Objects.AnimationCurveNode,t=new Map;for(const n in e){const i=e[n];if(i.attrName.match(/S|R|T|DeformPercent/)!==null){const s={id:i.id,attr:i.attrName,curves:{}};t.set(s.id,s)}}return t}parseAnimationCurves(e){const t=ke.Objects.AnimationCurve;for(const n in t){const i={id:t[n].id,times:t[n].KeyTime.a.map(FT),values:t[n].KeyValueFloat.a},s=pt.get(i.id);if(s!==void 0){const o=s.parents[0].ID,a=s.parents[0].relationship;a.match(/X/)?e.get(o).curves.x=i:a.match(/Y/)?e.get(o).curves.y=i:a.match(/Z/)?e.get(o).curves.z=i:a.match(/d|DeformPercent/)&&e.has(o)&&(e.get(o).curves.morph=i)}}}parseAnimationLayers(e){const t=ke.Objects.AnimationLayer,n=new Map;for(const i in t){const s=[],o=pt.get(parseInt(i));o!==void 0&&(o.children.forEach(function(l,c){if(e.has(l.ID)){const u=e.get(l.ID);if(u.curves.x!==void 0||u.curves.y!==void 0||u.curves.z!==void 0){if(s[c]===void 0){const h=pt.get(l.ID).parents.filter(function(f){return f.relationship!==void 0})[0].ID;if(h!==void 0){const f=ke.Objects.Model[h.toString()];if(f===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}const d={modelName:f.attrName?Ge.sanitizeNodeName(f.attrName):"",ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};Gt.traverse(function(p){p.ID===f.id&&(d.transform=p.matrix,p.userData.transformData&&(d.eulerOrder=p.userData.transformData.eulerOrder))}),d.transform||(d.transform=new ae),"PreRotation"in f&&(d.preRotation=f.PreRotation.value),"PostRotation"in f&&(d.postRotation=f.PostRotation.value),s[c]=d}}s[c]&&(s[c][u.attr]=u)}else if(u.curves.morph!==void 0){if(s[c]===void 0){const h=pt.get(l.ID).parents.filter(function(y){return y.relationship!==void 0})[0].ID,f=pt.get(h).parents[0].ID,d=pt.get(f).parents[0].ID,p=pt.get(d).parents[0].ID,m=ke.Objects.Model[p],g={modelName:m.attrName?Ge.sanitizeNodeName(m.attrName):"",morphName:ke.Objects.Deformer[h].attrName};s[c]=g}s[c][u.attr]=u}}}),n.set(parseInt(i),s))}return n}parseAnimStacks(e){const t=ke.Objects.AnimationStack,n={};for(const i in t){const s=pt.get(parseInt(i)).children;s.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const o=e.get(s[0].ID);n[i]={name:t[i].attrName,layer:o}}return n}addClip(e){let t=[];const n=this;return e.layer.forEach(function(i){t=t.concat(n.generateTracks(i))}),new Er(e.name,-1,t)}generateTracks(e){const t=[];let n=new S,i=new lt,s=new S;if(e.transform&&e.transform.decompose(n,i,s),n=n.toArray(),i=new en().setFromQuaternion(i,e.eulerOrder).toArray(),s=s.toArray(),e.T!==void 0&&Object.keys(e.T.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.T.curves,n,"position");o!==void 0&&t.push(o)}if(e.R!==void 0&&Object.keys(e.R.curves).length>0){const o=this.generateRotationTrack(e.modelName,e.R.curves,i,e.preRotation,e.postRotation,e.eulerOrder);o!==void 0&&t.push(o)}if(e.S!==void 0&&Object.keys(e.S.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.S.curves,s,"scale");o!==void 0&&t.push(o)}if(e.DeformPercent!==void 0){const o=this.generateMorphTrack(e);o!==void 0&&t.push(o)}return t}generateVectorTrack(e,t,n,i){const s=this.getTimesForAllAxes(t),o=this.getKeyframeTrackValues(s,t,n);return new Ns(e+"."+i,s,o)}generateRotationTrack(e,t,n,i,s,o){t.x!==void 0&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(un.degToRad)),t.y!==void 0&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(un.degToRad)),t.z!==void 0&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(un.degToRad));const a=this.getTimesForAllAxes(t),l=this.getKeyframeTrackValues(a,t,n);i!==void 0&&(i=i.map(un.degToRad),i.push(o),i=new en().fromArray(i),i=new lt().setFromEuler(i)),s!==void 0&&(s=s.map(un.degToRad),s.push(o),s=new en().fromArray(s),s=new lt().setFromEuler(s).invert());const c=new lt,u=new en,h=[];for(let f=0;f<l.length;f+=3)u.set(l[f],l[f+1],l[f+2],o),c.setFromEuler(u),i!==void 0&&c.premultiply(i),s!==void 0&&c.multiply(s),c.toArray(h,f/3*4);return new Ir(e+".quaternion",a,h)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,n=t.values.map(function(s){return s/100}),i=Gt.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new zs(e.modelName+".morphTargetInfluences["+i+"]",t.times,n)}getTimesForAllAxes(e){let t=[];if(e.x!==void 0&&(t=t.concat(e.x.times)),e.y!==void 0&&(t=t.concat(e.y.times)),e.z!==void 0&&(t=t.concat(e.z.times)),t=t.sort(function(n,i){return n-i}),t.length>1){let n=1,i=t[0];for(let s=1;s<t.length;s++){const o=t[s];o!==i&&(t[n]=o,i=o,n++)}t=t.slice(0,n)}return t}getKeyframeTrackValues(e,t,n){const i=n,s=[];let o=-1,a=-1,l=-1;return e.forEach(function(c){if(t.x&&(o=t.x.times.indexOf(c)),t.y&&(a=t.y.times.indexOf(c)),t.z&&(l=t.z.times.indexOf(c)),o!==-1){const u=t.x.values[o];s.push(u),i[0]=u}else s.push(i[0]);if(a!==-1){const u=t.y.values[a];s.push(u),i[1]=u}else s.push(i[1]);if(l!==-1){const u=t.z.values[l];s.push(u),i[2]=u}else s.push(i[2])}),s}interpolateRotations(e){for(let t=1;t<e.values.length;t++){const n=e.values[t-1],i=e.values[t]-n,s=Math.abs(i);if(s>=180){const o=s/180,a=i/o;let l=n+a;const c=e.times[t-1],h=(e.times[t]-c)/o;let f=c+h;const d=[],p=[];for(;f<e.times[t];)d.push(f),f+=h,p.push(l),l+=a;e.times=cm(e.times,t,d),e.values=cm(e.values,t,p)}}}}class PT{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new Q0,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,n=e.split(/[\r\n]+/);return n.forEach(function(i,s){const o=i.match(/^[\s\t]*;/),a=i.match(/^[\s\t]*$/);if(o||a)return;const l=i.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),c=i.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),u=i.match("^\\t{"+(t.currentIndent-1)+"}}");l?t.parseNodeBegin(i,l):c?t.parseNodeProperty(i,c,n[++s]):u?t.popStack():i.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(i)}),this.allNodes}parseNodeBegin(e,t){const n=t[1].trim().replace(/^"/,"").replace(/"$/,""),i=t[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),s={name:n},o=this.parseNodeAttr(i),a=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(n,s):n in a?(n==="PoseNode"?a.PoseNode.push(s):a[n].id!==void 0&&(a[n]={},a[n][a[n].id]=a[n]),o.id!==""&&(a[n][o.id]=s)):typeof o.id=="number"?(a[n]={},a[n][o.id]=s):n!=="Properties70"&&(n==="PoseNode"?a[n]=[s]:a[n]=s),typeof o.id=="number"&&(s.id=o.id),o.name!==""&&(s.attrName=o.name),o.type!==""&&(s.attrType=o.type),this.pushStack(s)}parseNodeAttr(e){let t=e[0];e[0]!==""&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let n="",i="";return e.length>1&&(n=e[1].replace(/^(\w+)::/,""),i=e[2]),{id:t,name:n,type:i}}parseNodeProperty(e,t,n){let i=t[1].replace(/^"/,"").replace(/"$/,"").trim(),s=t[2].replace(/^"/,"").replace(/"$/,"").trim();i==="Content"&&s===","&&(s=n.replace(/"/g,"").replace(/,$/,"").trim());const o=this.getCurrentNode();if(o.name==="Properties70"){this.parseNodeSpecialProperty(e,i,s);return}if(i==="C"){const l=s.split(",").slice(1),c=parseInt(l[0]),u=parseInt(l[1]);let h=s.split(",").slice(3);h=h.map(function(f){return f.trim().replace(/^"/,"")}),i="connections",s=[c,u],OT(s,h),o[i]===void 0&&(o[i]=[])}i==="Node"&&(o.id=s),i in o&&Array.isArray(o[i])?o[i].push(s):i!=="a"?o[i]=s:o.a=s,this.setCurrentProp(o,i),i==="a"&&s.slice(-1)!==","&&(o.a=uu(s))}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,e.slice(-1)!==","&&(t.a=uu(t.a))}parseNodeSpecialProperty(e,t,n){const i=n.split('",').map(function(u){return u.trim().replace(/^\"/,"").replace(/\s/,"_")}),s=i[0],o=i[1],a=i[2],l=i[3];let c=i[4];switch(o){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=uu(c);break}this.getPrevNode()[s]={type:o,type2:a,flag:l,value:c},this.setCurrentProp(this.getPrevNode(),s)}}class RT{parse(e){const t=new am(e);t.skip(23);const n=t.getUint32();if(n<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+n);const i=new Q0;for(;!this.endOfContent(t);){const s=this.parseNode(t,n);s!==null&&i.add(s.name,s)}return i}endOfContent(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const n={},i=t>=7500?e.getUint64():e.getUint32(),s=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const o=e.getUint8(),a=e.getString(o);if(i===0)return null;const l=[];for(let f=0;f<s;f++)l.push(this.parseProperty(e));const c=l.length>0?l[0]:"",u=l.length>1?l[1]:"",h=l.length>2?l[2]:"";for(n.singleProperty=s===1&&e.getOffset()===i;i>e.getOffset();){const f=this.parseNode(e,t);f!==null&&this.parseSubNode(a,n,f)}return n.propertyList=l,typeof c=="number"&&(n.id=c),u!==""&&(n.attrName=u),h!==""&&(n.attrType=h),a!==""&&(n.name=a),n}parseSubNode(e,t,n){if(n.singleProperty===!0){const i=n.propertyList[0];Array.isArray(i)?(t[n.name]=n,n.a=i):t[n.name]=i}else if(e==="Connections"&&n.name==="C"){const i=[];n.propertyList.forEach(function(s,o){o!==0&&i.push(s)}),t.connections===void 0&&(t.connections=[]),t.connections.push(i)}else if(n.name==="Properties70")Object.keys(n).forEach(function(s){t[s]=n[s]});else if(e==="Properties70"&&n.name==="P"){let i=n.propertyList[0],s=n.propertyList[1];const o=n.propertyList[2],a=n.propertyList[3];let l;i.indexOf("Lcl ")===0&&(i=i.replace("Lcl ","Lcl_")),s.indexOf("Lcl ")===0&&(s=s.replace("Lcl ","Lcl_")),s==="Color"||s==="ColorRGB"||s==="Vector"||s==="Vector3D"||s.indexOf("Lcl_")===0?l=[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:l=n.propertyList[4],t[i]={type:s,type2:o,flag:a,value:l}}else t[n.name]===void 0?typeof n.id=="number"?(t[n.name]={},t[n.name][n.id]=n):t[n.name]=n:n.name==="PoseNode"?(Array.isArray(t[n.name])||(t[n.name]=[t[n.name]]),t[n.name].push(n)):t[n.name][n.id]===void 0&&(t[n.name][n.id]=n)}parseProperty(e){const t=e.getString(1);let n;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return n=e.getUint32(),e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const i=e.getUint32(),s=e.getUint32(),o=e.getUint32();if(s===0)switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}typeof vT=="undefined"&&console.error("THREE.FBXLoader: External library fflate.min.js required.");const a=Ho(new Uint8Array(e.getArrayBuffer(o))),l=new am(a.buffer);switch(t){case"b":case"c":return l.getBooleanArray(i);case"d":return l.getFloat64Array(i);case"f":return l.getFloat32Array(i);case"i":return l.getInt32Array(i);case"l":return l.getInt64Array(i)}default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}class am{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=t!==void 0?t:!0}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(e){const t=[];for(let n=0;n<e;n++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t&2147483648?(t=~t&4294967295,e=~e&4294967295,e===4294967295&&(t=t+1&4294967295),e=e+1&4294967295,-(t*4294967296+e)):t*4294967296+e}getInt64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t*4294967296+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){let t=[];for(let i=0;i<e;i++)t[i]=this.getUint8();const n=t.indexOf(0);return n>=0&&(t=t.slice(0,n)),Ar.decodeText(new Uint8Array(t))}}class Q0{add(e,t){this[e]=t}}function DT(r){const e="Kaydara FBX Binary  \0";return r.byteLength>=e.length&&e===nv(r,0,e.length)}function IT(r){const e=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let t=0;function n(i){const s=r[i-1];return r=r.slice(t+i),t++,s}for(let i=0;i<e.length;++i)if(n(1)===e[i])return!1;return!0}function lm(r){const e=/FBXVersion: (\d+)/,t=r.match(e);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function FT(r){return r/46186158e3}const BT=[];function il(r,e,t,n){let i;switch(n.mappingType){case"ByPolygonVertex":i=r;break;case"ByPolygon":i=e;break;case"ByVertice":i=t;break;case"AllSame":i=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}n.referenceType==="IndexToDirect"&&(i=n.indices[i]);const s=i*n.dataSize,o=s+n.dataSize;return zT(BT,n.buffer,s,o)}const cu=new en,rs=new S;function ev(r){const e=new ae,t=new ae,n=new ae,i=new ae,s=new ae,o=new ae,a=new ae,l=new ae,c=new ae,u=new ae,h=new ae,f=new ae,d=r.inheritType?r.inheritType:0;if(r.translation&&e.setPosition(rs.fromArray(r.translation)),r.preRotation){const R=r.preRotation.map(un.degToRad);R.push(r.eulerOrder),t.makeRotationFromEuler(cu.fromArray(R))}if(r.rotation){const R=r.rotation.map(un.degToRad);R.push(r.eulerOrder),n.makeRotationFromEuler(cu.fromArray(R))}if(r.postRotation){const R=r.postRotation.map(un.degToRad);R.push(r.eulerOrder),i.makeRotationFromEuler(cu.fromArray(R)),i.invert()}r.scale&&s.scale(rs.fromArray(r.scale)),r.scalingOffset&&a.setPosition(rs.fromArray(r.scalingOffset)),r.scalingPivot&&o.setPosition(rs.fromArray(r.scalingPivot)),r.rotationOffset&&l.setPosition(rs.fromArray(r.rotationOffset)),r.rotationPivot&&c.setPosition(rs.fromArray(r.rotationPivot)),r.parentMatrixWorld&&(h.copy(r.parentMatrix),u.copy(r.parentMatrixWorld));const p=t.clone().multiply(n).multiply(i),m=new ae;m.extractRotation(u);const g=new ae;g.copyPosition(u);const y=g.clone().invert().multiply(u),v=m.clone().invert().multiply(y),_=s,x=new ae;if(d===0)x.copy(m).multiply(p).multiply(v).multiply(_);else if(d===1)x.copy(m).multiply(v).multiply(p).multiply(_);else{const F=new ae().scale(new S().setFromMatrixScale(h)).clone().invert(),U=v.clone().multiply(F);x.copy(m).multiply(p).multiply(U).multiply(_)}const b=c.clone().invert(),M=o.clone().invert();let L=e.clone().multiply(l).multiply(c).multiply(t).multiply(n).multiply(i).multiply(b).multiply(a).multiply(o).multiply(s).multiply(M);const w=new ae().copyPosition(L),T=u.clone().multiply(w);return f.copyPosition(T),L=f.clone().multiply(x),L.premultiply(u.invert()),L}function tv(r){r=r||0;const e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return r===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[r]}function uu(r){return r.split(",").map(function(t){return parseFloat(t)})}function nv(r,e,t){return e===void 0&&(e=0),t===void 0&&(t=r.byteLength),Ar.decodeText(new Uint8Array(r,e,t))}function OT(r,e){for(let t=0,n=r.length,i=e.length;t<i;t++,n++)r[n]=e[t]}function zT(r,e,t,n){for(let i=t,s=0;i<n;i++,s++)r[s]=e[i];return r}function cm(r,e,t){return r.slice(0,e).concat(t).concat(r.slice(e))}const iv=r=>r&&new Promise(e=>{new TT().load(r,e)}),rv=r=>r&&new Promise(e=>{new Hi().load(r,e)}),NT=["px.png","nx.png","py.png","ny.png","pz.png","nz.png"],UT=r=>r&&new Promise(e=>{new _f().setPath(`${r}/`).load(NT,e)}),kT=["c100007_01","c100007_05","c100007_09","c100034_01","c100035_01","c100036_01","c100037_01","c100041_01"],HT=async r=>await(await fetch(r)).json(),dc=async r=>(await HT(r)).data,GT=(...r)=>e=>r.reduce((t,n)=>n(t),e),VT=r=>[...new Set(r)],ii=r=>r==="false"?!1:!!r,sv=(r,e,t)=>{if(!e.length)return;const n=e.pop(),i=e.reduce((s,o)=>s==null?void 0:s[o],r);i&&(i[n]=t)};function Wf(r){return!!/[0-9A-Fa-f]{6}/.test(r)}function vl(r){return Wf(r)&&!r.startsWith("#")?new ne(`#${r}`):new ne(r)}async function WT(r=100){return await new Promise(e=>setTimeout(e,r))}function ov(r,e="="){const[t,...n]=r.split(e),i=n.join(e);return[t,i]}const $T=r=>r.startsWith("w302"),um=([r,...e])=>`${r.toUpperCase()}${e.join("")}`;function qT(r){var t;return r==="smith"?"dragon":r.endsWith("h")?"story":kT.includes(r)?"spAdventurer":(t={c:"adventurer",b:"boss",d:"dragon",e:"enemy",h:"high boss",o:"object",r:"raid boss",w:"weapon"}[r[0]])!=null?t:"other"}function XT(r=pA){const e=new Ke(r);return e.outputEncoding=He,e}function jT(r={}){const{fov:e,aspect:t,near:n,far:i}=tt(tt({},gA),r);return new Mt(e,t,n,i)}async function YT(r){if(r.startsWith("img:")){const e=r.replace("img:",""),t=await rv(e);return t.encoding=He,t.center.set(.5,0),t}if(r.startsWith("sky:")){const e=r.replace("sky:",""),t=await UT(e);return t.encoding=He,t}if(r==="transparent")return null;if(Wf(r)){const e=r.startsWith("#")?r:`#${r}`;return new ne(e)}}function ZT(r){var e,t,n,i;(t=(e=r.map)==null?void 0:e.dispose)==null||t.call(e),(i=(n=r.userData.backupMap)==null?void 0:n.dispose)==null||i.call(n),r.dispose()}const av=r=>{const e=new Hi().load(r);return e.encoding=He,e};function JT(r){const e=[],t=[];return r.traverse(n=>{n.isMesh&&e.push(n),n.isBone&&t.push(n)}),[e,t]}function KT(r){var t,n;if(!r)return;[r.material].flat().forEach(i=>{var s,o,a,l,c,u;(o=(s=i.map)==null?void 0:s.dispose)==null||o.call(s),(c=(l=(a=i.userData)==null?void 0:a.backupMap)==null?void 0:l.dispose)==null||c.call(l),(u=i.dispose)==null||u.call(i)}),(n=(t=r.geometry)==null?void 0:t.dispose)==null||n.call(t)}const QT=()=>{const r=new Date,e=r.toDateString().replaceAll(" ","_"),t=r.toLocaleTimeString().replaceAll(":","-").replaceAll(" ","");return`${e}_${t}`},lv=r=>r?r.split("/").reduce((t,n)=>{const[i,s]=n.split("=");return i&&s&&(t[i]=s),t},{}):{},eA=`
varying vec3 vViewPosition;

struct BlinnPhongMaterial {

	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;

};

void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;

}

void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong

#define Material_LightProbeLOD( material )	(0)
`,tA=`
#ifdef USE_MATCAP

	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks
	vec4 matcapColor = texture2D( matcap, uv );

	#ifdef MATCAP_BLENDING_MULTIPLY

		outgoingLight *= matcapColor.rgb;

	#elif defined( MATCAP_BLENDING_ADD )

		outgoingLight += matcapColor.rgb;

	#endif

#endif
`,rl={defines:{TOON:!0,MATCAP:!0,MATCAP_BLENDING_ADD:!0},uniforms:Xo.merge([Bt.toon.uniforms,Bt.phong.uniforms,Bt.matcap.uniforms]),vertexShader:Bt.phong.vertexShader,fragmentShader:Bt.phong.fragmentShader.replace("#include <common>",`
					#ifdef USE_MATCAP
						uniform sampler2D matcap;
					#endif

					#include <common>
				`).replace("#include <envmap_common_pars_fragment>",`
					#include <gradientmap_pars_fragment>
					#include <envmap_common_pars_fragment>
				`).replace("#include <lights_phong_pars_fragment>",eA).replace("#include <envmap_fragment>",`
					#include <envmap_fragment>
					${tA}
				`)};class cv extends It{constructor(e){super(),this._matcapCombine=Ll,this.emissiveIntensity=1,this.normalMapType=Oi,this.combine=gr,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.lights=!0,this.vertexShader=rl.vertexShader,this.fragmentShader=rl.fragmentShader,this.defines=Object.assign({},rl.defines),Object.defineProperty(this,"matcapCombine",{get:function(){return this._matcapCombine},set:function(n){switch(this._matcapCombine=n,n){case gr:this.defines.MATCAP_BLENDING_MULTIPLY=!0,delete this.defines.MATCAP_BLENDING_ADD;break;default:case Ll:this.defines.MATCAP_BLENDING_ADD=!0,delete this.defines.MATCAP_BLENDING_MULTIPLY;break}}}),this.uniforms=Xo.clone(rl.uniforms);const t=["specular","shininess","opacity","diffuse","map","matcap","gradientMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacemantBias","displacemantMap","displacemantScale","specularMap","alphaMap","envMap","reflectivity","refractionRatio"];for(const n of t)Object.defineProperty(this,n,{get:function(){return this.uniforms[n].value},set:function(i){this.uniforms[n].value=i}});Object.defineProperty(this,"color",Object.getOwnPropertyDescriptor(this,"diffuse")),this.setValues(e)}copy(e){return super.copy(e),this.matcapCombine=e.matcapCombine,this.emissiveIntensity=e.emissiveIntensity,this.normalMapType=e.normalMapType,this.combine=e.combine,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}cv.prototype.isMMDToonMaterial=!0;const nA=["color","emissive","specular"],iA=["wireframe","metalness","opacity","roughness","shininess","transparent","emissiveIntensity","transmission","thickness","ior"],uv=["type","flatShading","showTexture","gradientMap","matcap"],rA=[...nA,...iA,...uv],sA=["transparent","opacity","wireframe","showTexture","color"],oA={Basic:[],Toon:["emissive","emissiveIntensity","gradientMap"],Lambert:["emissive","emissiveIntensity"],Phong:["emissive","emissiveIntensity","specular","shininess","flatShading"],Standard:["emissive","emissiveIntensity","metalness","roughness","flatShading"],Physical:["emissive","emissiveIntensity","metalness","roughness","flatShading","transmission","thickness","ior"],Matcap:["flatShading","matcap"],MMDToon:["emissive","emissiveIntensity","specular","shininess","matcap","gradientMap","flatShading"]},Kt=r=>`${r}`,hu=r=>Wf(r)?`${r.startsWith("#")?"":"#"}${r}`:r,aA=r=>Array.isArray(r)?r.join(","):r,$f={wireframe:{name:"Wireframe",type:"boolean",default:!1,valueMap:ii,toString:Kt},showTexture:{name:"Texture",type:"boolean",default:!0,valueMap:ii,toString:Kt},transparent:{name:"Transparent",type:"boolean",default:!1,valueMap:ii,toString:Kt},flatShading:{name:"Flat Shading",type:"boolean",default:!1,valueMap:ii,toString:Kt},color:{name:"Color",type:"color",default:"#ffffff",valueMap:vl,toString:hu},emissive:{name:"Emissive",type:"color",default:"#000000",valueMap:vl,toString:hu},opacity:{name:"Opacity",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:Kt},emissiveIntensity:{name:"Emissive Intensity",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:Kt},specular:{name:"Specular",type:"color",default:"#111111",valueMap:vl,toString:hu},metalness:{name:"Metalness",type:"percentage",default:0,min:0,max:1,valueMap:parseFloat,toString:Kt},roughness:{name:"Roughness",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:Kt},shininess:{name:"Shininess",type:"number",default:30,min:1,max:100,valueMap:parseFloat,toString:Kt},gradientMap:{name:"Gradient Map",type:"select",default:"none",valueMap:hv,toString:aA},matcap:{name:"Matcap",type:"select",default:"matcap_fresnel.jpg",valueMap:fv,toString:Kt},transmission:{name:"Transmission",type:"number",default:1,min:0,max:1,valueMap:parseFloat,toString:Kt},thickness:{name:"Thickness",type:"number",default:.01,min:0,max:10,valueMap:parseFloat,toString:Kt},ior:{name:"Index-of-refraction",type:"number",default:1.5,min:1,max:2.333,valueMap:parseFloat,toString:Kt}},lA=Object.fromEntries(Object.entries($f).map(([r,{default:e}])=>[r,e])),nr=qn(tt({},lA),{type:"Basic"}),cA=Object.fromEntries(Object.entries($f).map(([r,{valueMap:e}])=>[r,e])),uA=Object.fromEntries(Object.entries($f).map(([r,{toString:e}])=>[r,e])),fu=r=>[...sA,...oA[r]],hA=(r,e={})=>{if(r==="MMDToon")return new cv(e);const t=`Mesh${r}Material`;return new g0[t](e)},hm=(r,{matType:e="Basic",texturePath:t="",force:n=!1}={})=>{r.forEach(i=>{const s=[i.material].flat(),o=Array.isArray(i.material);if(!n&&!t){const a=`isMesh${e}Material`;if(!s.some(c=>!c[a]))return}s.forEach((a,l)=>{var h,f,d,p;const c=t?new Hi().load(t):s[l].map;t&&(c.encoding=He);const u=hA(e);if(u.name=a.name,u.map=c,u.userData.backupMap=a.userData.backupMap,t&&((f=(h=a.map)==null?void 0:h.dispose)==null||f.call(h),(p=(d=a.userData.backupMap)==null?void 0:d.dispose)==null||p.call(d)),a.dispose(),o){i.material[l]=u;return}i.material=u})})},fA=r=>Array.isArray(r)?r:r.split(",").map(e=>parseInt(e));function hv(r){const e=fA(r),t=e.length;if(t<2)return null;const n=Uint8Array.from(e),i=new Ti(n,t,1,$h);return i.minFilter=i.magFilter=mt,i.generateMipmaps=!1,i}const dA=r=>r.includes("/")||r.includes(":")?r:`${KE}/${r}`;function fv(r){const e=dA(r);return e?av(e):null}const pA={alpha:!0,antialias:!0},mA="#cccccc",gA={type:"Perspective",fov:45,aspect:1,far:300,near:.01},yA="c100001_01",as={enabled:!0,size:5,color:"#000000",opacity:1},vA={noBackground:!0,fileName:"screenshot",frameRate:30},_A={frameRate:30,fileName:"ani",appendDate:!0},fm=1,fh=30,xA={directional:{color:"#ffffff",intensity:.8,position:[1,0,2]},ambient:{color:"#444444",intensity:1},point:{color:"#ffffff",intensity:1}},du={"No Mapping":Sn,Linear:kh,Reinhard:Hh,Cineon:Gh,"ACES Filmic":Vh},ua={addEventListener(r,e){var n,i;if(!e)return;(n=this._listeners)!=null||(this._listeners={});const t=this._listeners;return r=r.toLowerCase(),(i=t[r])!=null||(t[r]=[]),t[r].includes(e)||t[r].push(e),e},hasEventListener(r,e){var t,n;return r=r.toLowerCase(),!!((n=(t=this._listeners)==null?void 0:t[r])!=null&&n.includes(e))},removeEventListener(r,e){var i;r=r.toLowerCase();const t=(i=this._listeners)==null?void 0:i[r];if(!t)return;const n=t.indexOf(e);n!==-1&&t.splice(n,1)},dispatchEvent(r){var i,s;const e=(i=r.type)==null?void 0:i.toLowerCase(),t=(s=this._listeners)==null?void 0:s[e];if(!t)return;r.target=this,[...t].forEach(o=>o.call(this,r))},addCountedEventListener(r,e,t=1){const n=this;function i(s){e.call(n,s),t--,t===0&&n.removeEventListener(r,i)}this.addEventListener(r,i)}},wA={face1:[2,1],face2:[0,0],face3:[1,0],face4:[2,0],face5:[3,0],face6:[0,-1],face7:[1,-1],face8:[2,-1],face9:[3,-1]},dv={},bA=async()=>{const r=await dc(`${fc}/face-offset.json`);Object.assign(dv,r)},dm=r=>dv[r]||[0,0],dh={},MA=async()=>{const r=await dc(`${fc}/camera-position.json`);Object.assign(dh,r)},SA=r=>{var e;return(e=dh[r])!=null?e:dh[r[0]]},ph={},EA=async()=>{const r=await dc(`${fc}/control-position.json`);Object.assign(ph,r)},TA=r=>{var e;return(e=ph[r])!=null?e:ph[r[0]]},pm=r=>wA[`face${r}`],AA=(r,e)=>{const t={x:0,y:0};if(r!==e){const[n,i]=pm(e),[s,o]=pm(r);t.x=s-n,t.y=o-i}return[t.x,t.y]},CA=(r,e)=>{const t={x:0,y:0};if(r!==e){const[n,i]=dm(e),[s,o]=dm(r);t.x=s-n,t.y=o-i}return[t.x,t.y]},pc=r=>new Proxy(Object.assign(r,ua),{get(e,t){return e[t]},set(e,t,n){return e[t]=n,e.dispatchEvent({type:"change",propName:t,value:n}),!0}}),pv=/mEye_[0-9]/m,mv=/mMouth_[0-9]/m,LA=/[0-9]{2}/,gv=["eye","mouth"];function PA(r){const{type:e,meshes:t}=r;return e==="adventurer"?RA(r):t.some(({name:i})=>i.match(/mEye|mMouth/))?DA(r):r}function RA(r){const{meshes:e,id:t}=r,n=c=>`${y0}/${c}/${c}.png`,i=e.find(({name:c})=>c==="mBodyAll"),s={eyeIdx:2,eyeBaseIdx:2,mouthIdx:2,mouthBaseIdx:2,eyeTexture:t,mouthTexture:t},o={type:"uv",reset:function(){this.eyeIdx=this.eyeBaseIdx,this.mouthIdx=this.mouthBaseIdx}},a=c=>([u,h])=>{var v;if(!i)return;const f=`mt${um(c)}CH`,d=(v=i.geometry.groups)==null?void 0:v.find(_=>{var x;return((x=i.material[_.materialIndex])==null?void 0:x.name)===f});if(!d)return;const{start:p,count:m}=d,g=p+m,y=i.geometry.attributes.uv;for(let _=p;_<g;_++){const x=y.getX(_)+.25*u,b=y.getY(_)+.25*h;y.setXY(_,x,b)}y.needsUpdate=!0},l=c=>u=>{var p,m;if(!i)return;const h=`mt${um(c)}CH`,f=(m=(p=i.material).find)==null?void 0:m.call(p,({name:g})=>g===h);if(!f)return;const d=n(u);f.map.dispose(),f.map=av(d),f.needsUpdate=!0};return gv.forEach(c=>{Object.defineProperties(o,{[`${c}Idx`]:{get(){return s[`${c}Idx`]},set(u){const h=parseInt(u),f=this[`${c}Idx`];s[`${c}Idx`]=h;const d=AA(h,f);a(c)(d)}},[`${c}BaseIdx`]:{get(){return s[`${c}BaseIdx`]},set(u){s[`${c}BaseIdx`]=u,this[`${c}Idx`]=u}},[`${c}Texture`]:{get(){return s[`${c}Texture`]},set(u){const h=this[`${c}Texture`];s[`${c}Texture`]=u,l(c)(u);const f=CA(u,h);a(c)(f)}}})}),r.face=pc(o),r}function DA(r){const{meshes:e}=r,[t,n]=IA(e);[...t,...n].forEach(l=>l.frustumCulled=!1);const i={eye:t,mouth:n},s={eyeIdx:"",eyeBaseIdx:"",mouthIdx:"",mouthBaseIdx:""},o={eyeList:t,mouthList:n,type:"meshes",reset:function(){this.eyeIdx=this.eyeBaseIdx,this.mouthIdx=this.mouthBaseIdx}},a=l=>c=>{i[l].forEach(u=>{const{name:h}=u,f=LA.exec(h)[0];u.visible=parseInt(f)===c})};return gv.forEach(l=>Object.defineProperties(o,{[`${l}Idx`]:{get(){return s[`${l}Idx`]},set(c){const u=parseInt(c);a(l)(u),s[`${l}Idx`]=`${u}`}},[`${l}BaseIdx`]:{get(){return s[`${l}BaseIdx`]},set(c){s[`${l}BaseIdx`]=c,this[`${l}Idx`]=c}}})),o.eyeBaseIdx=fm,o.mouthBaseIdx=fm,r.face=pc(o),r}function IA(r){const e=r.filter(({name:n})=>n.match(pv)),t=r.filter(({name:n})=>n.match(mv));return[e,t]}function FA(r){const{model:e,uniqueId:t}=r,[n,i]=JT(e);return Object.defineProperty(i,"list",{value:VT(i.map(({name:s})=>s))}),Object.defineProperty(n,"visible",{get(){return this.filter(({visible:s})=>s)}}),i.forEach(s=>{s.name=`${t}|${s.name}`}),Object.defineProperties(r,{meshes:{get(){return n}},bones:{get(){return i}}})}const yv={},BA=async()=>{const r=await dc(`${fc}/model-parts.json`);Object.assign(yv,r)},OA=r=>yv[r],zA=/mParts([A-Za-z]+)/,mm=/mParts[A-Za-z]+_([A-Za-z]*)/;function NA(r){const{meshes:e,id:t}=r,n=OA(t),i=[],s=[];if(e.forEach(c=>{var h;let{name:u}=c;if(!!(u!=null&&u.match)){if((u.includes("Effect")||u.includes("Extension"))&&(c.visible=!1),(h=n==null?void 0:n.custom)!=null&&h[u]&&(u=c.name=n.custom[u]),u.match(/mParts/)){i.push(c);return}!u.match(pv)&&!u.match(mv)&&s.push(c)}}),!i.length&&s.length<2)return r;const o=Object.defineProperties({},{list:{get(){return Object.keys(this)},enumerable:!1},reset:{value:function(){this.list.forEach(c=>this[c].reset())},enumerable:!1},others:{get(){return s},enumerable:!1}});if(r.parts=o,!i.length)return r;const a=new Set(i.map(({name:c})=>{var u;return(u=zA.exec(c))==null?void 0:u[1]}).sort((c,u)=>c>u?1:-1)),l=c=>i.filter(({name:u})=>u.includes(`mParts${c}`)).sort((u,h)=>u.name>h.name?1:-1);return a.forEach(c=>{var g,y,v;const u=n==null?void 0:n[c],h=(y=(g=u==null?void 0:u.name)==null?void 0:g.replaceAll(" ","_"))!=null?y:c,f=u==null?void 0:u.options,d=l(c);d.forEach(_=>_.frustumCulled=!1);const p=d.map(({name:_})=>{var b,M,L;const x=(M=(b=mm.exec(_))==null?void 0:b[1])!=null?M:"default";return(L=f==null?void 0:f[x])!=null?L:x}),m=(v=u==null?void 0:u.default)!=null?v:p[0];o[h]={_meshes:d,list:p,default:m!=null?m:p[0]},Object.defineProperties(o[h],{current:{get(){var L,w,T;const _=d.filter(({visible:R})=>R).length;if(_===0)return"None";if(_!==1)return"custom";const b=(L=d.find(({visible:R})=>R).name.match(mm))==null?void 0:L[1];return(T=(w=f==null?void 0:f[b!=null?b:"default"])!=null?w:b)!=null?T:"default"},set(_){if(_.toLowerCase()==="none"){this._meshes.forEach((b,M)=>{b.visible=!1});return}if(!this.list.includes(_))return;const x=this.list.indexOf(_);this._meshes.forEach((b,M)=>{b.visible=M===x})}},index:{get(){return this.current==="custom"?NaN:this.list.indexOf(this.current)},set(_){this._meshes.forEach((x,b)=>{x.visible=b===Number(_)})}},reset:{value:function(){this.current=this.default}}})}),o.reset(),r.parts=o,r}const UA=r=>e=>{const t=e.meshes,n=tt(tt({},nr),r),{type:i}=n;hm(t,{force:!0,matType:i});let s={type:i,showTexture:!0},o=fu(i);const a={get code(){const{type:l,propList:c}=this,u=[];return l!==nr.type&&u.push(`type=${l}`),c.forEach(f=>{const d=uA[f],p=d(this[f]),m=d(nr[f]);p!==m&&u.push(`${f}=${p}`)}),u.join("/").replaceAll("#","")},set code(l){const c=Object.keys(nr),u=tt(tt({},nr),lv(l));c.forEach(h=>{this[h]=u[h]})},toString(){const{code:l}=this;return l?`mat=(${l})`:""},get list(){return t.flatMap(({material:l})=>l)},get propList(){return o},set type(l){if(this.type===l)return;o=fu(l),hm(t,{matType:l}),s.type=l;const c=tt({},s);s={showTexture:c.showTexture},o.forEach(u=>this[u]=c[u]),s=c},set flatShading(l){const c=ii(l);c!==this.flatShading&&(s.flatShading=c,this.propList.includes("flatShading")&&this.list.forEach(u=>{u.flatShading=c,u.needsUpdate=!0}))},set gradientMap(l){var h,f;if(l===this.gradientMap||(s.gradientMap=l,!this.propList.includes("gradientMap")))return;const c=(h=this.list[0])==null?void 0:h.gradientMap;(f=c==null?void 0:c.dispose)==null||f.call(c);const u=l==="none"?null:hv(l);this.list.forEach(d=>{d.gradientMap=u,d.needsUpdate=!0})},set showTexture(l){const c=ii(l);if(this.showTexture===c)return;s.showTexture=c;const u=c?h=>{h.map=h.userData.backupMap,h.userData.backupMap=null,h.needsUpdate=!0}:h=>{h.userData.backupMap=h.map,h.map=null,h.needsUpdate=!0};this.list.forEach(u)},set matcap(l){var h,f;if(s.matcap===l||(s.matcap=l,!this.propList.includes("matcap")))return;const c=(h=this.list[0])==null?void 0:h.matcap;(f=c==null?void 0:c.dispose)==null||f.call(c);const u=fv(l);this.list.forEach(d=>{d.matcap=u,d.needsUpdate=!0})}};return rA.forEach(l=>Object.defineProperty(a,l,tt({get(){return s[l]}},!uv.includes(l)&&{set(c){c!==this[l]&&(s[l]=c,this.propList.includes(l)&&this.list.forEach(u=>u[l]=cA[l](c)))}}))),fu(i).forEach(l=>a[l]=n[l]),s=tt(tt({},nr),s),e.material=pc(a),e};var kA=`uniform float opacity;\r
uniform vec3 color;\r
\r
void main() {\r
	gl_FragColor = vec4( color, opacity );\r
}\r
`,HA=`uniform float size;\r
\r
#include <skinning_pars_vertex>\r
\r
void main() {\r
	#include <skinbase_vertex>\r
	\r
    vec3 transformed = position + normal * 0.0005 * size;\r
        \r
	#include <skinning_vertex>\r
	#include <project_vertex>\r
}`;const GA=r=>new It({side:$t,transparent:!0,depthFunc:Uh,vertexShader:HA,fragmentShader:kA,uniforms:r});function VA(r,e){const{material:t}=r,n=Array.isArray(r.material);[t].flat().forEach(ZT),r.material=n?new Array(r.material.length).fill(e):e}function WA(r,e){const t=GA(e),n=[],i=["Eff","Extension"];return r.forEach(s=>{const{name:o}=s;if(i.some(l=>o.includes(l)))return;const a=s.clone();a.name=`outline-${s.name}`,VA(a,t),s.isSkinnedMesh&&a.bind(s.skeleton,s.bindMatrix),s.add(a),n.push(a)}),n}const $A={size:parseFloat,opacity:parseFloat,color:vl},qA=r=>e=>{const t=tt(tt({},as),r),n=e.meshes,i={size:{value:t.size},opacity:{value:t.opacity},color:{value:new ne(t.color)}},s=WA(n,i),o=qn(tt({},t),{enabled:!0}),a={get propList(){return["enabled","color","size","opacity"]},get enabled(){return o.enabled},set enabled(l){const c=ii(l);s.forEach(u=>u.visible=c),o.enabled=c},get code(){if(!this.enabled)return"none";const l=[];return Object.keys(as).forEach(c=>{const u=this[c];u!==as[c]&&l.push(`${c}=${u}`)}),l.join("/").replaceAll("#","")},set code(l){if(l==="none"){this.enabled=!1;return}const c=Object.keys(as),u=tt(tt({},as),lv(l));c.forEach(h=>{this[h]=u[h]})},toString(){const{code:l}=this;return l?`ol=(${l})`:""}};return["size","opacity","color"].forEach(l=>Object.defineProperty(a,l,{get(){return o[l]},set(c){c!==this[l]&&(o[l]=c,i[l].value=$A[l](c))}})),a.enabled=t.enabled,e.outline=pc(a),e},XA=["push","pop","shift","unshift","splice","reverse","sort"];class ri extends Array{constructor(...e){super(...e),Object.assign(this,ua),XA.forEach(t=>{Object.defineProperty(this,t,{value:(...n)=>{Array.prototype[t].call(this,...n),this.dispatchEvent({type:"change",method:t,args:n})},enumerable:!1})})}remove(e){const t=this.indexOf(e);t!==-1&&this.splice(t,1)}}const gm={chainName:"",chainCode:"",chainLength:0,aniIdx:0,clipDuration:0,clipTimeScale:1,action:null,aniAction:[],aniActionPointer:0};function vv(r){return r.split(">").map(jA)}function jA(r){const[e,...t]=r.split("&"),n=YA(t);return tt({aniName:e},n)}function YA(r){const e={},t=[],n={r:{name:"reps",map:parseInt},ts:{name:"timeScale",map:parseFloat},dur:{name:"duration",map:ZA}};return r.forEach(i=>{const[s,o]=ov(i);if(s.startsWith("@")){const c=JA(o.replace(/[()]/g,""));c.time=parseFloat(s.slice(1)),t.push(c);return}if(!n[s])return;const{name:a,map:l}=n[s];e[a]=l(o)}),e.aniAction=t.filter(({time:i})=>i<=100&&i>=0).sort((i,s)=>i.time-s.time),e}function ZA(r){if(!r)return[0,100];const e=r.split("-").slice(0,2).map(parseFloat),t=e.length===2?e:[0,e[0]];return t.some(n=>n>100||n<0)||t[0]>t[1]?[0,100]:t}function JA(r){return r.split("/").reduce((t,n)=>{const[i,s]=ov(n);return tt(tt({},t),KA(i,s))},{})}const ym={ei:{name:"face.eyeIdx",valueMap:parseInt},mi:{name:"face.mouthIdx",valueMap:parseInt},et:{name:"face.eyeTexture"},mt:{name:"face.mouthTexture"}};function KA(r,e){var i;if(r in ym){const{name:s,valueMap:o}=ym[r];return{[s]:(i=o==null?void 0:o(e))!=null?i:e}}let t=r,n=e;return r.startsWith("att")&&t.replace("att","attachment"),r.startsWith("parts")&&(t+="index",n=parseInt(e)),{[t]:n}}const QA=r=>`${v0}/${r}.json`;function eC(r,e){if(r.startsWith("fbx:"))return tC(r);if(r.startsWith("ex:")){const[,n]=r.split(":"),i=e==null?void 0:e.find(({uuid:s})=>n===s);return Promise.resolve(i.clone())}const t=QA(r);return new Promise(n=>fetch(t).then(i=>i.json()).then(i=>Er.parse(i)).then(n))}async function tC(r){const e=r.replace("fbx:",""),[t,n]=e.split("+"),{animations:i}=await iv(t);return n?i.find(({name:s})=>s===n):i[0]}function nC(r,e=null){return Promise.all(r.map(t=>eC(t,e)))}function iC(r,e=[]){return r.map((t,n)=>{const i=e[n];if(!i||i[0]===0&&i[1]===100)return t;const s=t.duration*fh,[o,a]=i.map(l=>Math.round(l*s/100));return it.subclip(t,t.name,o,a,fh)})}async function rC(r,e=null){const t=vv(r),n=t.map(({aniName:c})=>c),i=t.map(({duration:c})=>c),s=t.map(f=>{var d=f,{aniName:c,duration:u}=d,h=Ur(d,["aniName","duration"]);return tt({},h)}),o=await nC(n,e),a=iC(o,i);return{code:r,clips:a,mod:s,get duration(){return s.some(({timeScale:u})=>u===0)?1/0:a.map((u,h)=>{var f,d;return u.duration/Math.abs((f=s[h].timeScale)!=null?f:1)*((d=s[h].reps)!=null?d:1)}).reduce((u,h)=>u+h,0)}}}const sC=/[a-z][0-9]{6}/;function oC(r){var h;const{model:e,uniqueId:t,bones:n,id:i,viewer:s}=r,o=s.userData.ani,a=new Lf(e),l=(h=n==null?void 0:n.list)!=null?h:[],c=qn(tt({},ua),{mixer:a,chain:{},current:tt({},gm),toString(){var d;const f=(d=this.chain.default)==null?void 0:d.code;return f?`ani=${f}`:""},async addChain(f,{name:d="default",autoplay:p=!0}={}){var g;if(!f||((g=this.chain[d])==null?void 0:g.code)===f)return;a.stopAllAction();const m=await rC(f,o);m.clips.forEach(y=>{y.tracks=y.tracks.reduce((v,_)=>{let x=_.name.split(".")[0];return sC.test(x)&&(_.name.replace(x,i),x=i),l.includes(x)&&(_.name=`${t}|${_.name}`,v.push(_)),v},[])}),this.chain[d]=m,a.addEventListener("finished",u),p&&this.play(d)},play(f=this.current.chainName||"default"){const d=this.chain[f];!d||(this.current.chainName=f,this.current.chainCode=d.code,this.current.chainLength=d.clips.length,this.aniIdx=0)},pause(){this.current.action&&(this.current.action.paused=!0)},resume(){this.current.action&&(this.current.action.paused=!1)},stop(){a.stopAllAction()},reset(){const f=this.current.chainName;this.stop(),this.current=tt({},gm),this.chain[f]=void 0},update(f){var y;a.update(f);const{current:d}=this,{action:p,aniAction:m,clipDuration:g}=d;if(!(!m[d.aniActionPointer]||!p))for(;(p==null?void 0:p.time)>((y=m[d.aniActionPointer])==null?void 0:y.time)*g/100;)this.applyAniAction(m[d.aniActionPointer]),this.current.aniActionPointer++},applyAniAction(f){r.dispatchEvent({type:"aniAction",id:t,aniAction:f});const m=f,{time:d}=m,p=Ur(m,["time"]);Object.entries(p).forEach(([g,y])=>{const v=g.split(".");sv(r,v,y)})},nextFrame(f=1,d=fh){if(!this.isPaused)return;const{clipTimeScale:p,clipDuration:m,action:g}=this.current,y=f*p/d;if(g.time+=y,g.time>=m){const v=g.time-m;u(),this.pause(),this.current.action.time+=v*this.current.clipTimeScale}},setTime(f){const{clipDuration:d,action:p}=this.current;!d||f>d||(p.time=f)},get isPaused(){var f;return(f=this.current.action)==null?void 0:f.paused},get aniIdx(){return this.current.aniIdx},set aniIdx(f){if(f>=this.current.chainLength)return;this.current.aniIdx=f,this.current.aniActionPointer=0;const d={type:f===0?"chainStart":"chainMove",index:f,uniqueId:t,chainName:this.current.chainName};this.dispatchEvent(d),a.stopAllAction();const p=this.chain[this.current.chainName],m=p.mod[f],{timeScale:g,reps:y,aniAction:v}=m,_=p.clips[f],x=a.clipAction(_);x.timeScale=g!=null?g:1,x.setLoop(qh,y!=null?y:1),this.current.clipDuration=_.duration,this.current.action=x,this.current.aniAction=v,this.current.aniActionPointer=0,this.current.clipTimeScale=g!=null?g:1,x.play()}});function u(){const{aniIdx:f,chainLength:d}=c.current,p=(f+1)%d;if(p===0){c.dispatchEvent({type:"ChainFinished",chainName:c.current.chainName});const{face:m}=r;m&&(m.eyeIdx=m.eyeBaseIdx,m.mouthIdx=m.mouthBaseIdx)}c.aniIdx=p}return r.animation=c,r.addEventListener("TimeUpdated",({dt:f})=>c.update(f)),r}function aC(r){const{model:e,bones:t,uniqueId:n}=r,i={};return Object.defineProperty(i,"list",{get(){return Object.values(this).flat()}}),Object.defineProperty(i,"traverse",{value:function(u){this.list.forEach(h=>{var f,d;u(h),(d=(f=h.attachment)==null?void 0:f.traverse)==null||d.call(f,u)})}}),Object.assign(r,{attachment:i,parent:null,parentBone:"",attach:(u,h="root")=>{var d;i[h]=(d=i[h])!=null?d:new ri;const f=h==="root"?e:t.find(({name:p})=>p===`${n}|${h}`);!(f!=null&&f.add)||(u.detach(),f.add(u.model),i[h].push(u),u.parent=r,u.parentBone=h,r.dispatchEvent({type:"AttachmentChanged"}))},remove:(u,h="")=>{var d,p,m;const f=h||Object.keys(i).find(g=>i[g].indexOf(u)!==-1);!f||((p=(d=i[f]).remove)==null||p.call(d,u),(m=u.model.parent)==null||m.remove(u.model),r.dispatchEvent({type:"AttachmentChanged"}))},detach:()=>{var f;(f=e.parent)==null||f.remove(e);const{parent:u,parentBone:h}=r;!u||(u.remove(r,h),r.parent=r.parentBone=null)},attachTo:(u,h="root")=>{var f;r.detach(),(f=u==null?void 0:u.attach)==null||f.call(u,r,h)}})}function lC(r){const{material:e,id:t}=r,n=Eo.source.fbx,i=vm(t);$T(t)&&async function(){const l=a(i),c=new Hi().load(l);c.encoding=He,c.name=i,e.list.forEach(u=>{var h;return u.map=(h=u.map)!=null?h:c})}();let s=i;Object.defineProperty(r,"texture",{get(){return s},set(l){if(!l){this.texture=i;return}if(l===s)return;const c=a(l),[,u]=o(l),[,h]=o(this.texture),f=e.list.filter(d=>{var p,m,g,y;return((m=(p=d.map)==null?void 0:p.name)==null?void 0:m.includes(h))||((y=(g=d.userData.backupMap)==null?void 0:g.name)==null?void 0:y.includes(h))});!f.length||(async function(){const d=await rv(c);d.name=u,d.encoding=He,f.forEach(p=>{var m,g,y,v;p.map&&((g=(m=p.map).dispose)==null||g.call(m),p.map=d),p.userData.backupMap&&((v=(y=p.userData.backupMap).dispose)==null||v.call(y),p.userData.backupMap=d)})}(),s=l)}});function o(l){const[c,u]=l.split(">"),h=c||t,f=u||vm(h);return[h,f]}function a(l){const[c,u]=o(l);return`${n}/${c}/${u}.png`}return r}const vm=r=>r.match(/_[0-9]{2}/)||r.startsWith("h")?r:`>${r}_01`;var cC=`uniform float uTime;\r
uniform float uSpread;\r
uniform float uThreshold;\r
uniform float uSpeed;\r
uniform float uParticleSize;\r
uniform float uAuraSize;\r
\r
attribute float aRandom;\r
\r
varying float vIsParticle;\r
varying float vRandom;\r
\r
#include <skinning_pars_vertex>\r
void main() {\r
    #include <skinbase_vertex>\r
\r
    vec3 transformed = position + normal * 0.005 * uSpread;\r
\r
    #include <skinning_vertex>\r
\r
    vec3 objectNormal = normal;\r
\r
	#include <skinnormal_vertex>\r
    \r
    vec4 viewPosition = viewMatrix * modelMatrix * vec4(transformed, 1.0);\r
    float yDisplacement = fract( uTime * uSpeed + aRandom ) * 0.1;\r
    viewPosition.y += yDisplacement;\r
    viewPosition.x += sin( uTime * aRandom * uSpeed + aRandom ) * 0.02;\r
    \r
    gl_Position = projectionMatrix * viewPosition;\r
    \r
    objectNormal.z *= objectNormal.z > 0.7 ? -1.0 : 1.0;\r
    vIsParticle = objectNormal.z - uThreshold;\r
\r
    gl_PointSize = vIsParticle > 0.0 ? uParticleSize : uAuraSize;\r
    gl_PointSize /= -viewPosition.z;\r
\r
    vRandom = aRandom;\r
}\r
`,uC=`uniform sampler2D uTexture;\r
\r
uniform float uTime;\r
uniform float uParticleOpacity;\r
uniform float uAuraOpacity;\r
uniform vec3 uColor;\r
uniform vec3 uColor2;\r
\r
varying float vRandom;\r
varying float vIsParticle;\r
\r
void main(){\r
    vec4 textureColor = texture2D( uTexture, gl_PointCoord );\r
    textureColor.a = length( textureColor.rgb ) ;\r
    textureColor.a *= abs( 1.0 - fract( uTime + vRandom ) ) * 0.5;\r
    textureColor.rgb = mix( uColor, uColor2,  textureColor.a * 2.0 );\r
    textureColor.a *= vIsParticle > 0.0 ? uParticleOpacity * 4.0 : uAuraOpacity;\r
\r
    gl_FragColor = textureColor;\r
    gl_FragColor /= vIsParticle > 0.0 ? 2.0 : 4.0;\r
}\r
`;const _l=[{name:"time",uName:"uTime",defaultValue:0,valueMap:Number},{name:"speed",uName:"uSpeed",defaultValue:1,valueMap:Number},{name:"particleOpacity",uName:"uParticleOpacity",defaultValue:.3,valueMap:Number},{name:"auraOpacity",uName:"uAuraOpacity",defaultValue:.3,valueMap:Number},{name:"particleSize",uName:"uParticleSize",defaultValue:10,valueMap:Number},{name:"auraSize",uName:"uAuraSize",defaultValue:100,valueMap:Number},{name:"spread",uName:"uSpread",defaultValue:5,valueMap:Number},{name:"threshold",uName:"uThreshold",defaultValue:.3,valueMap:Number},{name:"texture",uName:"uTexture",defaultValue:"img/textures/particle/cloud.png",valueMap:r=>new Hi().load(r)},{name:"color",uName:"uColor",defaultValue:"#ffffff",valueMap:r=>new ne(r)},{name:"color2",uName:"uColor2",defaultValue:"#33ffff",valueMap:r=>new ne(r)}],hC={aura:["visible",..._l.slice(1).map(({name:r})=>r)]},fC=(r="aura")=>(e,t={})=>{if(!!(e!=null&&e.length)&&r==="aura")return pC(e,t)};function dC(r){return new It({vertexShader:cC,fragmentShader:uC,uniforms:r,transparent:!0,blending:Al,depthWrite:!1,side:Ci})}function pC(r,e){const t=_l.map(l=>{var d;const{uName:c,defaultValue:u,valueMap:h}=l,f=(d=h==null?void 0:h(u))!=null?d:u;return[c,{value:f}]}),n=Object.fromEntries(t),i=dC(n),s=[];r.forEach(l=>{const{name:c}=l.geometry;if(c.startsWith("mEye")||c.startsWith("mMouth"))return;const u=l.geometry.clone(),h=u.attributes.position.count,f=new Float32Array(h).fill(0).map(()=>Math.random()-.5);u.setAttribute("aRandom",new We(f,1)),u.deleteAttribute("color"),u.deleteAttribute("uv");const d=new js(u,i);d.name="aura",l.isSkinnedMesh&&(d.type="SkinnedMesh",d.isSkinnedMesh=!0,d.skeleton=l.skeleton,d.bindMatrix=l.bindMatrix,d.bindMatrixInverse=l.bindMatrixInverse,d.bindMode=l.bindMode,d.bind=l.bind,d.clone=l.clone,d.initBones=l.initBones,d.normalizeSkinWeights=l.normalizeSkinWeights,d.pose=l.pose,d.updateMatrixWorld=l.updateMatrixWorld),l.add(d),s.push(d)});const o={visible:!0},a={name:"aura",onDispose:()=>{},get list(){return s},get propList(){return hC.aura},get visible(){return o.visible},set visible(l){const c=ii(l);this.list.forEach(u=>u.visible=c),o.visible=c},dispose(){this.onDispose(),this.list.forEach(l=>{var c,u,h,f,d;(c=l.parent)==null||c.remove(l),(h=(u=l.material).dispose)==null||h.call(u),(d=(f=l.geometry).dispose)==null||d.call(f)})},set code(l){l.split("/").forEach(u=>{const[h,f]=u.split("=");!_l.map(({name:d})=>d).includes(h)||(this[h]=f)})}};return _l.forEach(l=>{const{name:c,uName:u,defaultValue:h,valueMap:f}=l;o[c]=h,Object.defineProperty(a,c,{get(){return o[c]},set(d){var p;o[c]=d,n[u].value=(p=f==null?void 0:f(d))!=null?p:d}})}),a.onTimeUpdate=({time:l})=>a.time=l,Object.entries(e).forEach(([l,c])=>a[l]=c),a}function mC(r){const{meshes:e}=r,t={list:new ri,dispose(){this.list.forEach(n=>{var i;return(i=n.dispose)==null?void 0:i.call(n)})},add(n="aura",i={}){const s=fC(n)(e,i);return s.onDispose=()=>this.list.remove(s),this.list.push(s),r.addEventListener("TimeUpdated",s.onTimeUpdate),s}};return r.particle=t,r}const gC=r=>{var a,l;if(r.dispatchEvent({type:"dispose"}),!r)return;const{model:e,meshes:t,outline:n,particle:i,viewer:s}=r;i==null||i.list.forEach(c=>c.dispose()),(a=e.parent)!=null&&a.isScene&&(e.parent.remove(e),s.loadedModel.remove(r)),(l=r.detach)==null||l.call(r),[t.reverse(),n==null?void 0:n.all].flat().forEach(KT)};function yC(r){const{x:e,y:t,z:n}=r;return[e,t,n].map(i=>i||"").join()}const vC={position:",,",rotation:",,",scale:"1,1,1"},_C={position:"pos",rotation:"rot",scale:"scl"};function xC(r){return Object.assign(r,qn(tt({},r.isDLModel&&{toString(){const{id:e,animation:t,outline:n,material:i}=this,s=Object.entries(vC).map(([o,a])=>{const l=yC(this[o]);return l===a?"":`${_C[o]}=${l}`});return[`id=${e}`,...s,t,n,i].filter(o=>`${o}`).join("/")}}),{dispose(){const{attachment:e,parent:t,parentBone:n}=this;e.list.forEach(i=>i.dispose()),t==null||t.remove(this,n),this.dispatchEvent({type:"dispose"}),gC(this)}}))}let qf=(r=21)=>crypto.getRandomValues(new Uint8Array(r)).reduce((e,t)=>(t&=63,t<36?e+=t.toString(36):t<62?e+=(t-26).toString(36).toUpperCase():t>62?e+="-":e+="_",e),"");function wC(r,e){const{id:t,material:n,outline:i,viewer:s}=e,o=[FA,NA,aC,qA(i),UA(n),lC,PA,oC,mC,xC],a=qn(tt({},ua),{isDLModel:!0,model:r,id:t,uniqueId:qf(),type:qT(t),viewer:s,userData:{},_time:0,update(l){var c;this._time+=l,(c=this.attachment)==null||c.list.forEach(u=>{var h;return(h=u.update)==null?void 0:h.call(u,l)}),this.dispatchEvent({type:"TimeUpdated",dt:l,time:this._time})},set scale(l){var u;if((u=l.includes)!=null&&u.call(l,",")){const[h,f,d]=l.split(",").map(p=>p?parseFloat(p):1);this.model.scale.set(h,f,d);return}const c=Number(l)||1;this.model.scale.set(c,c,c)},get scale(){const{scale:l}=this.model,{x:c,y:u,z:h}=l;return c===u&&c===h?c:[c,u,h].join(",")},set visible(l){this.model.visible=ii(l)}});return["position","rotation","visible"].forEach(l=>Object.defineProperty(a,l,{get(){return this.model[l]},enumerable:!0})),r.userData.container=a,GT(...o)(a)}const _m={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );
			gl_FragColor.a *= opacity;


		}`};class mc{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const bC=new ki(-1,1,1,-1,0,1),Xf=new Me;Xf.setAttribute("position",new ge([-1,3,0,-1,-1,0,3,-1,0],3));Xf.setAttribute("uv",new ge([0,2,0,0,2,0],2));class MC{constructor(e){this._mesh=new ht(Xf,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,bC)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class mh extends mc{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof It?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Xo.clone(e.uniforms),this.material=new It({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new MC(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}var _v=Object.freeze(Object.defineProperty({__proto__:null,ShaderPass:mh},Symbol.toStringTag,{value:"Module"}));class xm extends mc{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const i=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),s.buffers.stencil.setFunc(i.ALWAYS,o,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(i.EQUAL,1,4294967295),s.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),s.buffers.stencil.setLocked(!0)}}class SC extends mc{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class EC{constructor(e,t){if(this.renderer=e,t===void 0){const n=e.getSize(new $);this._pixelRatio=e.getPixelRatio(),this._width=n.width,this._height=n.height,t=new Dt(this._width*this._pixelRatio,this._height*this._pixelRatio),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],_m===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),mh===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new mh(_m),this.clock=new uc}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let i=0,s=this.passes.length;i<s;i++){const o=this.passes[i];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}xm!==void 0&&(o instanceof xm?n=!0:o instanceof SC&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new $);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new ki(-1,1,1,-1,0,1);const xv=new Me;xv.setAttribute("position",new ge([-1,3,0,-1,-1,0,3,-1,0],3));xv.setAttribute("uv",new ge([0,2,0,0,2,0],2));class TC extends mc{constructor(e,t,n,i,s){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=s!==void 0?s:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new ne}render(e,t,n){const i=e.autoClear;e.autoClear=!1;let s,o;this.overrideMaterial!==void 0&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,s),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=o),e.autoClear=i}}function wm({renderer:r,scene:e,camera:t}){const n=AC(),i=new EC(r,n),s=new TC(e,t);return i.addPass(s),i}const AC=()=>new Dt(800,600,{minFilter:ot,magFilter:ot,format:Wt,encoding:He}),pu={bloom:LC,pixel:RC,afterimage:OC,sobel:DC,halftone:IC,dotscreen:FC,bokeh:BC,smaa:PC};async function CC(r,e){var n;r=r.toLowerCase();const t=await((n=pu[r])==null?void 0:n.call(pu,e));return t.type=r,t.name=jf[r].name,t}function ha(r,e){Object.defineProperty(r,"propList",{value:e}),e.forEach(t=>{Object.defineProperty(r,t,{get(){return this.uniforms[t].value},set(n){this.uniforms[t].value=n}})})}async function LC({resolution:r=new $(800,600),strength:e=.3,radius:t=.5,threshold:n=.8}={}){const{UnrealBloomPass:i}=await st(()=>import("./UnrealBloomPass.d893689b.js"),[]),s=new i(r,e,t,n);return Object.defineProperty(s,"propList",{value:["radius","strength","threshold"],writable:!1}),s}async function PC({renderer:r}){const{SMAAPass:e}=await st(()=>import("./SMAAPass.cbf79357.js"),[]),t=new $;r.getSize(t);const n=new e(t.x,t.y);return Object.defineProperty(n,"propList",{value:[],writable:!1}),n}async function RC({renderer:r}){const{ShaderPass:e}=await st(()=>Promise.resolve().then(function(){return _v}),void 0),{PixelShader:t}=await st(()=>import("./PixelShader.ee1b9117.js"),[]),n=new e(t),i=new $;return r.getSize(i),i.multiplyScalar(window.devicePixelRatio),n.uniforms.resolution.value=i,ha(n,["pixelSize"]),n.pixelSize=10,n}async function DC({renderer:r}){const{ShaderPass:e}=await st(()=>Promise.resolve().then(function(){return _v}),void 0),{SobelOperatorShader:t}=await st(()=>import("./SobelOperatorShader.b2728e4c.js"),[]),n=new $;r.getSize(n),n.multiplyScalar(window.devicePixelRatio);const i=new e(t);return i.uniforms.resolution.value.x=n.x,i.uniforms.resolution.value.y=n.y,Object.defineProperty(i,"propList",{value:[],writable:!1}),i}async function IC({renderer:r}){const{HalftonePass:e}=await st(()=>import("./HalftonePass.5470ed6d.js"),[]),t=new $;r.getSize(t);const n=new e(t.x,t.y,{radius:4});return ha(n,["greyscale","radius","scatter","shape"]),n}async function FC(){const{DotScreenPass:r}=await st(()=>import("./DotScreenPass.e0216ee2.js"),[]),e=new r;return ha(e,["scale","center"]),e}async function BC({scene:r,camera:e}){const{BokehPass:t}=await st(()=>import("./BokehPass.883227a8.js"),[]),n=new t(r,e,{});return ha(n,["focus","aperture","aspect"]),n}async function OC(){const{AfterimagePass:r}=await st(()=>import("./AfterimagePass.02950233.js"),[]),e=new r(.7);return ha(e,["damp"]),e}function zC(r){var o;const{name:e,type:t}=r,n=(o=jf[t].propList)!=null?o:[],i={};return n.forEach(a=>{Object.defineProperty(i,a,{get(){return r[a]},set(l){r[a]=l},enumerable:!0})}),{target:r,name:e,type:t,params:i,id:qf()}}const jf={bloom:{name:"Bloom",propList:["enabled","radius","strength","threshold"]},pixel:{name:"Pixelate",propList:["enabled","pixelSize"]},afterimage:{name:"Afterimage",propList:["enabled","damp"]},sobel:{name:"Sobel",propList:["enabled"]},halftone:{name:"Halftone",propList:["enabled","greyscale","radius","scatter","shape"]},dotscreen:{name:"Dot Screen",propList:["enabled","scale"]},bokeh:{name:"Bokeh",propList:["enabled","focus","aperture","aspect"]},smaa:{name:"SMAA",propList:["enabled"]}};Object.entries(jf).map(([r,{name:e}])=>({value:r,label:e}));var ls=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function NC(r){if(r.__esModule)return r;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(r).forEach(function(t){var n=Object.getOwnPropertyDescriptor(r,t);Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:function(){return r[t]}})}),e}function KL(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var wv={exports:{}};(function(r,e){(function(t,n){r.exports=n()})(ls,function(){var t=function(){function n(d){return o.appendChild(d.dom),d}function i(d){for(var p=0;p<o.children.length;p++)o.children[p].style.display=p===d?"block":"none";s=d}var s=0,o=document.createElement("div");o.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",o.addEventListener("click",function(d){d.preventDefault(),i(++s%o.children.length)},!1);var a=(performance||Date).now(),l=a,c=0,u=n(new t.Panel("FPS","#0ff","#002")),h=n(new t.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=n(new t.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:o,addPanel:n,showPanel:i,begin:function(){a=(performance||Date).now()},end:function(){c++;var d=(performance||Date).now();if(h.update(d-a,200),d>l+1e3&&(u.update(1e3*c/(d-l),100),l=d,c=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return d},update:function(){a=this.end()},domElement:o,setMode:i}};return t.Panel=function(n,i,s){var o=1/0,a=0,l=Math.round,c=l(window.devicePixelRatio||1),u=80*c,h=48*c,f=3*c,d=2*c,p=3*c,m=15*c,g=74*c,y=30*c,v=document.createElement("canvas");v.width=u,v.height=h,v.style.cssText="width:80px;height:48px";var _=v.getContext("2d");return _.font="bold "+9*c+"px Helvetica,Arial,sans-serif",_.textBaseline="top",_.fillStyle=s,_.fillRect(0,0,u,h),_.fillStyle=i,_.fillText(n,f,d),_.fillRect(p,m,g,y),_.fillStyle=s,_.globalAlpha=.9,_.fillRect(p,m,g,y),{dom:v,update:function(x,b){o=Math.min(o,x),a=Math.max(a,x),_.fillStyle=s,_.globalAlpha=1,_.fillRect(0,0,u,m),_.fillStyle=i,_.fillText(l(x)+" "+n+" ("+l(o)+"-"+l(a)+")",f,d),_.drawImage(v,p+c,m,g-c,y,p,m,g-c,y),_.fillRect(p+g-c,m,c,y),_.fillStyle=s,_.globalAlpha=.9,_.fillRect(p+g-c,m,c,l((1-x/b)*y))}}},t})})(wv);var UC=wv.exports,gc={exports:{}};(function(r,e){(function(t,n){n()})(ls,function(){function t(c,u){return typeof u=="undefined"?u={autoBom:!1}:typeof u!="object"&&(console.warn("Deprecated: Expected third argument to be a object"),u={autoBom:!u}),u.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(c.type)?new Blob(["\uFEFF",c],{type:c.type}):c}function n(c,u,h){var f=new XMLHttpRequest;f.open("GET",c),f.responseType="blob",f.onload=function(){l(f.response,u,h)},f.onerror=function(){console.error("could not download file")},f.send()}function i(c){var u=new XMLHttpRequest;u.open("HEAD",c,!1);try{u.send()}catch{}return 200<=u.status&&299>=u.status}function s(c){try{c.dispatchEvent(new MouseEvent("click"))}catch{var u=document.createEvent("MouseEvents");u.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),c.dispatchEvent(u)}}var o=typeof window=="object"&&window.window===window?window:typeof self=="object"&&self.self===self?self:typeof ls=="object"&&ls.global===ls?ls:void 0,a=o.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),l=o.saveAs||(typeof window!="object"||window!==o?function(){}:"download"in HTMLAnchorElement.prototype&&!a?function(c,u,h){var f=o.URL||o.webkitURL,d=document.createElement("a");u=u||c.name||"download",d.download=u,d.rel="noopener",typeof c=="string"?(d.href=c,d.origin===location.origin?s(d):i(d.href)?n(c,u,h):s(d,d.target="_blank")):(d.href=f.createObjectURL(c),setTimeout(function(){f.revokeObjectURL(d.href)},4e4),setTimeout(function(){s(d)},0))}:"msSaveOrOpenBlob"in navigator?function(c,u,h){if(u=u||c.name||"download",typeof c!="string")navigator.msSaveOrOpenBlob(t(c,h),u);else if(i(c))n(c,u,h);else{var f=document.createElement("a");f.href=c,f.target="_blank",setTimeout(function(){s(f)})}}:function(c,u,h,f){if(f=f||open("","_blank"),f&&(f.document.title=f.document.body.innerText="downloading..."),typeof c=="string")return n(c,u,h);var d=c.type==="application/octet-stream",p=/constructor/i.test(o.HTMLElement)||o.safari,m=/CriOS\/[\d]+/.test(navigator.userAgent);if((m||d&&p||a)&&typeof FileReader!="undefined"){var g=new FileReader;g.onloadend=function(){var _=g.result;_=m?_:_.replace(/^data:[^;]*;/,"data:attachment/file;"),f?f.location.href=_:location=_,f=null},g.readAsDataURL(c)}else{var y=o.URL||o.webkitURL,v=y.createObjectURL(c);f?f.location=v:location.href=v,f=null,setTimeout(function(){y.revokeObjectURL(v)},4e4)}});o.saveAs=l.saveAs=l,r.exports=l})})(gc);const kC=["video/mp4;codecs=h264","video/webm;codecs=h264","video/webm;codecs=vp9","video/webm;codecs=vp8","video/webm"],sl=kC.filter(MediaRecorder.isTypeSupported);function HC(r){if(!sl.length)return;const e=[],t=sl[0],n={settings:qn(tt({},_A),{mimeType:t}),get supportedMimeTypes(){return sl},get mimeType(){return this.settings.mimeType},set mimeType(i){sl.includes(i)&&(this.settings.mimeType=i)},start(){if(this.recorder)return;const{fileName:i,frameRate:s,mimeType:o}=this.settings,a=r.captureStream(s||30),l=a.getTracks()[0],c=new MediaRecorder(a,{mimeType:o});c.onstart=()=>e.length=0,c.ondataavailable=({data:u})=>e.push(u),c.onstop=()=>{l.stop(),this.recorder=void 0;const u=this.settings.mimeType.includes("webm")?"webm":"mp4",h=new Blob(e,{type:`video/${u}`}),f=this.settings.appendDate?`_${QT()}`:"",d=`${i||"ani"}${f}.${u}`;gc.exports.saveAs(h,d)},c.start(),this.recorder=c},get state(){var i,s;return(s=(i=this.recorder)==null?void 0:i.state)!=null?s:"idle"}};return["pause","resume","stop"].forEach(i=>{Object.defineProperty(n,i,{value:()=>{var s;return(s=n.recorder)==null?void 0:s[i]()}})}),n}function GC(r){let e=1,t=!1,n=!1;const i=()=>{r.stats.begin(),r.controls.update();const c=t?-e:e,u=r.clock.getDelta()*c;n||r.update(u),r.render(),r.stats.end()};let s=!1;const o=()=>{s||(r.render(),s=!0,setTimeout(()=>s=!1,50))};let a="";return{start(){a!=="active"&&(r.renderer.setAnimationLoop(i),r.controls.removeEventListener("change",o),a="active")},stop(){a!=="inactive"&&(r.renderer.setAnimationLoop(null),r.controls.addEventListener("change",o),a="inactive")},pause(){n=!0},resume(){n=!1},get state(){return a},get timeScale(){return e},set timeScale(c){const u=parseFloat(c);e=isNaN(u)?1:Math.abs(u)},get reverse(){return t},set reverse(c){t=!!c},get paused(){return n},set paused(c){n=!!c}}}const VC=async r=>{const{zip:e}=await st(()=>import("./browser.83a5952f.js"),[]);return new Promise(t=>e(r,{},(n,i)=>t(new Blob([i]))))},WC=r=>{const e=r.indexOf(",");return r.slice(e+1,1/0)},$C=async r=>{if(r=await r,r instanceof Blob&&(r=await r.arrayBuffer()),r instanceof ArrayBuffer)return new Uint8Array(r);if(typeof r=="string"){const e=r.startsWith("data")?WC(r):r,t=window.atob(e);return Uint8Array.from(t,n=>n.charCodeAt(0))}};async function qC(r){const e=await Promise.all(r.map(({data:n})=>$C(n))),t=Object.fromEntries(r.map(({name:n},i)=>[n,[e[i],{level:0,consume:!0}]]));return VC(t)}async function XC(r,e){const t=r.length.toString().length,n=r.map((i,s)=>{const o=s.toString().padStart(t,"0");return{name:`${e||"ss"}_${o}.png`,data:i}});return qC(n)}function jC(r,e){const t=document.createElement("a");t.style.display="none",t.href=r,t.download=e,document.body.appendChild(t),t.click(),document.body.removeChild(t)}async function gh(r,e="frames"){const t=await XC(r,e);gc.exports.saveAs(t,`${e}.zip`)}function YC(r){const{canvas:e,scene:t}=r;return{settings:vA,downloadFrame(i=1){const{noBackground:s,fileName:o}=this.settings,a=s&&!r.postProcessing.enabled;let l=null;const c=()=>[t.background,l]=[l,t.background];if(r.loop.state==="inactive"||i===1){a&&c(),r.render();const d=e.toDataURL();a&&c(),jC(d,`${o}.png`),r.render();return}let u=0;const h=[];a&&r.addCountedEventListener("beforeRender",c);function f(){const d=e.toDataURL("image/png");h.push(d),++u===i&&(a&&r.addCountedEventListener("beforeRender",c),gh(h,o))}r.addCountedEventListener("afterRender",f,i)},getFrame(){let i;const{noBackground:s}=this.settings;if(s&&!r.postProcessing.enabled){let a=null;[t.background,a]=[a,t.background],r.render(),i=e.toDataURL("image/png"),[t.background,a]=[a,t.background],r.render()}else r.render(),i=e.toDataURL("image/png");return i},getAllFrames(i){var p,m;const s=i==null?void 0:i.animation.current.chainName;if(!s||i.animation.chain[s].duration===1/0)return;console.info("main thread locked");const a=r.loop.state;r.loop.stop(),(m=(p=i.face)==null?void 0:p.reset)==null||m.call(p),i.animation.stop();const l=[],{frameRate:c,noBackground:u}=this.settings,h=1/(c||30);let f=null,d=!0;for(u&&([t.background,f]=[f,t.background]),i.animation.addCountedEventListener("chainFinished",()=>d=!1),i.animation.play();d;){r.update(h);const g=e.toDataURL();l.push(g)}return console.info("main thread unlocked"),u&&([t.background,f]=[f,t.background]),a==="active"&&r.loop.start(),l},downloadAllFrames(i=0){const s=r.model[i],o=this.getAllFrames(s),{fileName:a}=this.settings;gh(o,a)},getAllFramesAsArrayBuffer(i){var _,x;const s=i==null?void 0:i.animation.current.chainName;if(!s||i.animation.chain[s].duration===1/0)return;console.info("main thread locked");const a=r.renderer.getContext(),l=r.loop.state;(x=(_=i.face)==null?void 0:_.reset)==null||x.call(_),r.loop.stop(),i.animation.stop();const c=[],{frameRate:u,noBackground:h}=this.settings,f=1/(u||30),{width:d,height:p}=e,g=d*p*4;let y=null,v=!0;for(h&&([t.background,y]=[y,t.background]),i.animation.addCountedEventListener("chainFinished",()=>v=!1),i.animation.play();v;){r.update(f);const b=new Uint8Array(g);a.readPixels(0,0,d,p,a.RGBA,a.UNSIGNED_BYTE,b);const M=ZC(b,{width:d,height:p});c.push(M.buffer)}return console.info("main thread unlocked"),h&&([t.background,y]=[y,t.background]),l==="active"&&r.loop.start(),c}}}function ZC(r,{width:e,height:t}){const n=t/2|0,i=e*4,s=new Uint8Array(e*4);for(let o=0;o<n;++o){const a=o*i,l=(t-o-1)*i;s.set(r.subarray(a,a+i)),r.copyWithin(a,l,l+i),r.set(s,l)}return r}const JC=()=>Promise.all([bA(),MA(),EA(),BA()]),KC={directional:ia,ambient:ra,point:Us},QC={directional:h0,point:c0},eL=r=>{var c,u;const e=KC[r];if(!e)return null;const l=xA[r],{color:n,intensity:i}=l,s=Ur(l,["color","intensity"]),o=new e(n,i);o.name=(u=(c=o.type)==null?void 0:c.replace)==null?void 0:u.call(c,"Light","");const a=QC[r];return a&&(o.helper=new a(o),Object.defineProperty(o,"showHelper",{get(){return o.helper.visible},set(h){o.helper.visible=!!h,o.helper.update()}}),o.showHelper=!1),Object.defineProperty(o,"colorCode",{get(){return"#"+this.color.getHexString()},set(h){var f,d;this.color=new ne(h),(d=(f=this.helper)==null?void 0:f.update)==null||d.call(f)}}),Object.entries(s).forEach(([h,f])=>{o[h].isVector3?o[h].set(...f):o[h]=f}),o};function tL(r){const e={list:new ri,add:t=>{const n=eL(t);if(!!n)return r.scene.add(n),n.helper&&(r.scene.add(n.helper),n.helper.update()),e.list.push(n),n.remove=()=>{var i,s,o,a,l;e.list.remove(n),n.helper&&((i=n.parent)==null||i.remove(n.helper),(o=(s=n.helper).dispose)==null||o.call(s)),(a=n.parent)==null||a.remove(n),(l=n.dispose)==null||l.call(n)},n}};return e}const bm={"<":">","(":")","[":"]","{":"}"},nL=r=>{let e="";const t=[],n=[];for(const i of r){if(t.length){e+=i;const s=t.at(-1);i===bm[s]&&t.pop();continue}if(i==="/"){e&&n.push(e),e="";continue}e+=i,i in bm&&t.push(i)}return e&&n.push(e),n},bv=r=>nL(r).reduce((t,n)=>{const[i,...s]=n.split("="),o=s==null?void 0:s.join("=");return i&&o&&t.push([i,o]),t},[]),iL={mat:{keys:["material","code"],valueMap:r=>r.slice(1,-1)},ol:{keys:["outline","code"],valueMap:r=>r.slice(1,-1)},ei:{keys:["face","eyeBaseIdx"]},et:{keys:["face","eyeTexture"]},mi:{keys:["face","mouthBaseIdx"]},mt:{keys:["face","mouthTexture"]},tx:{keys:["texture"]},scl:{keys:["scale"]}};async function rL(r){const e=bv(r),t=Object.fromEntries(e),{id:n}=t,i=await this.loadDLModel(n);return await sL(i,t),i}async function sL(r,e){const i=e,{ani:t}=i,n=Ur(i,["ani"]);Object.entries(n).forEach(([s,o])=>{var h;const a=iL[s];if(!a)return;const{keys:l,valueMap:c}=a,u=(h=c==null?void 0:c(o))!=null?h:o;sv(r,l,u)}),t&&await r.animation.addChain(t)}const Yf=class{constructor(){gn(this,"userData",{ani:new ri});gn(this,"dataLoaded",!1);gn(this,"initData",async()=>{await JC(),this.dataLoaded=!0,this.dispatchEvent({type:"dataLoaded"})});gn(this,"_background","");gn(this,"model",new ri);gn(this,"loadedModel",new ri);gn(this,"loadModelFromCode",rL);gn(this,"settings",{outline:as,material:nr});gn(this,"viewport",{width:0,height:0,set(e,t){this.width=e,this.height=t}});Object.assign(this,ua);const e=new Ko;this.scene=e,this.background=mA,this.clock=new uc;const t=jT();this.camera=t;const n=tL(this);n.add("directional"),n.add("ambient"),this.light=n;const i=XT();this.renderer=i,this.canvas=i.domElement,this.screenshot=YC(this),this.record=HC(this.canvas),this.controls=new JE(this.camera,this.canvas),this.postProcessing={enabled:!1,passes:new ri,composer:wm({renderer:i,scene:e,camera:t}),async addPass(s,o={}){const a=await CC(s,qn(tt({},o),{renderer:i,scene:e,camera:t}));this.composer.addPass(a);const l=zC(a),{passes:c}=this,u=this;return l.remove=()=>{c.remove(l),u.refresh()},c.push(l),a},async refresh(){this.composer=wm({renderer:i,scene:e,camera:t});const s=this.passes.map(({type:a,params:l})=>({type:a,params:Object.entries(l)}));this.passes.length=0;const{length:o}=s;for(let a=0;a<o;a++){const{type:l,params:c}=s[a],u=await this.addPass(l);c.forEach(([h,f])=>void(u[h]=f))}},updatePasses(s){this.passes.length=0,this.passes.splice(0,0,...s),this.refresh()}},this.stats=new UC,this.loop=GC(this),this.loop.start(),console.info("%cDragalia Lost Model Viewer","color:yellow;background-color:black;font-size:1.5rem;text-shadow: 0 0 0.5rem white")}get background(){return this._background}set background(e){var n,i;if(this._background===e)return;this._background="loading",(i=(n=this.scene.background)==null?void 0:n.dispose)==null||i.call(n);const t=this;(async function(){t.scene.background=await YT(e),t._background=e,e.startsWith("img:")&&t.updateBgAspectRatio()})()}get toneMapping(){var t,n;const{toneMapping:e}=this.renderer;return(n=(t=Object.entries(du).find(([,i])=>i===e))==null?void 0:t[0])!=null?n:"Unknown"}set toneMapping(e){const t=du[e]?e:"No Mapping";this.renderer.toneMapping=du[t]}get pixelRatio(){return this.renderer.getPixelRatio()}set pixelRatio(e){this.renderer.setPixelRatio(e),this.postProcessing.composer.setPixelRatio(e)}get unusedModel(){return this.loadedModel.filter(e=>!this.model.includes(e))}async loadDLModel(e=yA){this.dataLoaded||await new Promise(o=>this.addCountedEventListener("dataLoaded",o));const t=Yf.getModelPath(e),n=await iv(t);n.name=e;const i={id:e,outline:this.settings.outline,material:this.settings.material,viewer:this},s=wC(n,i);return this.loadedModel.push(s),s.addEventListener("dispose",()=>this.loadedModel.remove(s)),s}add(e){var t;(t=e.detach)==null||t.call(e),this.model.push(e),this.scene.add(e.model),e.parent=this}remove(e){this.model.remove(e),this.scene.remove(e.model)}disposeAllModels(){this.loadedModel.forEach(e=>{var t;return(t=e.dispose)==null?void 0:t.call(e)}),this.model.length=0}static getModelPath(e){return`${this.source.fbx}/${e}/${e}.fbx`}async setViewport(e,t){var o;await WT(200);const n=e!=null?e:window.innerWidth,i=t!=null?t:window.innerHeight;this.viewport.set(n,i),this.renderer.setSize(n,i);const s=n/i;return this.camera.aspect=s,this.camera.updateProjectionMatrix(),(o=this.postProcessing.composer)==null||o.setSize(n,i),this.background.startsWith("img:")&&this.updateBgAspectRatio(),this}updateBgAspectRatio(){if(!this.background.startsWith("img:"))return;const{width:e,height:t}=this.viewport,n=e/t,{background:i}=this.scene,{naturalWidth:s,naturalHeight:o}=i.image,a=s/o,l=n/a,c=n>a?[1,1/l]:[l,1];i.repeat.set(...c)}update(e){var t;(t=this.animation)==null||t.update(e),this.model.forEach(n=>{var i;return(i=n.update)==null?void 0:i.call(n,e)}),this.loop.state==="inactive"&&this.render(),this.dispatchEvent({type:"timeUpdate",dt:e})}stopAll(){this.model.forEach(e=>{var t,n;return(n=(t=e.animation)==null?void 0:t.stop)==null?void 0:n.call(t)})}playAll(){this.model.forEach(e=>{var t,n;return(n=(t=e.animation)==null?void 0:t.play)==null?void 0:n.call(t)})}render(){this.dispatchEvent({type:"beforeRender"}),this.postProcessing.enabled?this.postProcessing.composer.render():this.renderer.render(this.scene,this.camera),this.dispatchEvent({type:"afterRender"})}toString(){return"Dragalia Lost Model Viewer"}dispose(){var e,t,n;this.model.forEach(i=>i.dispose()),(t=(e=this.scene.background)==null?void 0:e.dispose)==null||t.call(e),(n=this.renderer.renderLists)==null||n.dispose(),this.renderer.dispose()}};let Eo=Yf;gn(Eo,"source",{fbx:y0,ani:v0});var Qt={fullscreenEnabled:0,fullscreenElement:1,requestFullscreen:2,exitFullscreen:3,fullscreenchange:4,fullscreenerror:5,fullscreen:6},Mm=["webkitFullscreenEnabled","webkitFullscreenElement","webkitRequestFullscreen","webkitExitFullscreen","webkitfullscreenchange","webkitfullscreenerror","-webkit-full-screen"],Sm=["mozFullScreenEnabled","mozFullScreenElement","mozRequestFullScreen","mozCancelFullScreen","mozfullscreenchange","mozfullscreenerror","-moz-full-screen"],Em=["msFullscreenEnabled","msFullscreenElement","msRequestFullscreen","msExitFullscreen","MSFullscreenChange","MSFullscreenError","-ms-fullscreen"],Vt=typeof window!="undefined"&&typeof window.document!="undefined"?window.document:{},an="fullscreenEnabled"in Vt&&Object.keys(Qt)||Mm[0]in Vt&&Mm||Sm[0]in Vt&&Sm||Em[0]in Vt&&Em||[],oL={requestFullscreen:function(r){return r[an[Qt.requestFullscreen]]()},requestFullscreenFunction:function(r){return r[an[Qt.requestFullscreen]]},get exitFullscreen(){return Vt[an[Qt.exitFullscreen]].bind(Vt)},get fullscreenPseudoClass(){return":"+an[Qt.fullscreen]},addEventListener:function(r,e,t){return Vt.addEventListener(an[Qt[r]],e,t)},removeEventListener:function(r,e,t){return Vt.removeEventListener(an[Qt[r]],e,t)},get fullscreenEnabled(){return Boolean(Vt[an[Qt.fullscreenEnabled]])},set fullscreenEnabled(r){},get fullscreenElement(){return Vt[an[Qt.fullscreenElement]]},set fullscreenElement(r){},get onfullscreenchange(){return Vt[("on"+an[Qt.fullscreenchange]).toLowerCase()]},set onfullscreenchange(r){return Vt[("on"+an[Qt.fullscreenchange]).toLowerCase()]=r},get onfullscreenerror(){return Vt[("on"+an[Qt.fullscreenerror]).toLowerCase()]},set onfullscreenerror(r){return Vt[("on"+an[Qt.fullscreenerror]).toLowerCase()]=r}},ol=oL;const _t=new Eo;_t.initData();_t.setViewport();_t.userData.specialCapture={frameRate:30,duration:5,program:"rotate"};window.addEventListener("resize",()=>_t.setViewport());_t.canvas.addEventListener("dblclick",aL);window.viewer=_t;window.model=_t.model;window.getFrame=_t.screenshot.getFrame;window.downloadFrames=gh;window.saveAs=gc.exports.saveAs;window.THREE=g0;window.makeGif=async r=>{const{makeGif:e}=await st(()=>import("./index.3a92bef7.js"),[]);return await e(r)};function aL(){!ol.fullscreenEnabled||(ol.fullscreenElement?ol.exitFullscreen():ol.requestFullscreen(_t.canvas))}function lL(){try{return window.self!==window.top}catch{return!0}}let Tm="";const Mv=lL(),cL=Mv?!1:!window.location.hash.includes("showSettings=false"),uL=Mv?!1:!window.location.hash.includes("showAC=false"),hL=r=>({showSettings:cL,toggleSettings:()=>r(e=>void(e.showSettings=!e.showSettings)),loadingMsg:"",setLoadingMsg:e=>r(t=>void(t.loadingMsg=e)),showTimeControl:uL,toggleTimeControl:()=>r(e=>void(e.showTimeControl=!e.showTimeControl)),showFrameRate:!1,toggleFrameRate:()=>r(e=>void(e.showFrameRate=!e.showFrameRate)),sidebar:{open:!0,toggle:()=>r(({sidebar:e})=>void(e.open=!e.open)),settings:{tab:"Model",setTab:e=>r(({sidebar:t})=>void(t.settings.tab=e))},modal:{mode:"",handleSelect:void 0,open:(e,t)=>{Tm=_t.loop.state,_t.loop.stop(),r(({sidebar:n})=>{const{modal:i}=n;i.mode=e,i.handleSelect=t})},close:()=>{Tm==="active"&&_t.loop.start(),r(({sidebar:e})=>{const{modal:t}=e;t.mode="",t.handleSelect=void 0})}},manageMode:"single",setManageMode:e=>r(({sidebar:t})=>void(t.manageMode=e))},chainMaker:{target:null,setTarget:e=>r(({chainMaker:t})=>void(t.target=e))},dock:{mode:"",handleSelect:void 0,open:(e="",t)=>r(({dock:n})=>{n.mode=e,n.handleSelect=t}),close:()=>r(({dock:e})=>{e.mode="",e.handleSelect=void 0})}});var fL=NC(Vv),Sv,Ev,Tv,yh=fL,dL=0;function Am(r,e,t,n,i){var s,o,a={};for(o in e)o=="ref"?s=e[o]:a[o]=e[o];var l={type:r,props:a,key:t,ref:s,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:--dL,__source:i,__self:n};if(typeof r=="function"&&(s=r.defaultProps))for(o in s)a[o]===void 0&&(a[o]=s[o]);return yh.options.vnode&&yh.options.vnode(l),l}Tv=yh.Fragment,Ev=Am,Sv=Am;const On=Ev,pL=Sv,mL=Tv,gL=Yt(()=>st(()=>import("./index.3971d774.js"),["assets/index.3971d774.js","assets/index.65db2bb4.css","assets/TabBar.5517193c.js","assets/ButtonBase.0e34e651.js","assets/Popover.bd5de177.js","assets/Gallery.b8a6b0ce.js","assets/createSvgIcon.affd3c75.js","assets/Box.3cbf81e2.js","assets/DialogTitle.c36b8d48.js","assets/ColorPicker.59d8a7c1.js","assets/ColorPicker.108f083b.css","assets/ColorButton.c571801d.js","assets/Button.b8bcd939.js","assets/file2dataURL.7b2bfe59.js"])),yL=Yt(()=>st(()=>import("./index.e4222468.js"),["assets/index.e4222468.js","assets/styles.5f21a777.css","assets/lists.cb2ffe28.js","assets/lists.6fff8870.css","assets/Gallery.b8a6b0ce.js","assets/ButtonBase.0e34e651.js","assets/Popover.bd5de177.js","assets/createSvgIcon.affd3c75.js","assets/Box.3cbf81e2.js","assets/DialogTitle.c36b8d48.js","assets/Close.e0c8837e.js","assets/filterConfig.af05ef45.js","assets/filterConfig.37d3f97f.css","assets/GlowToggle.9bc6036b.js","assets/GlowToggle.ada43627.css","assets/styles.435d038d.js","assets/styles.a7d845f9.css","assets/index.bb1df69f.js"])),vL=Yt(()=>st(()=>import("./index.bf2b8155.js"),["assets/index.bf2b8155.js","assets/index.35d687e7.css","assets/styles.5f21a777.css","assets/lists.cb2ffe28.js","assets/lists.6fff8870.css","assets/Gallery.b8a6b0ce.js","assets/ButtonBase.0e34e651.js","assets/Popover.bd5de177.js","assets/createSvgIcon.affd3c75.js","assets/Box.3cbf81e2.js","assets/DialogTitle.c36b8d48.js","assets/Close.e0c8837e.js","assets/Stretcher.bc60f3f6.js","assets/Stretcher.7165086b.css","assets/TabBar.5517193c.js","assets/Button.b8bcd939.js","assets/ModelIcon.089dc83e.js","assets/aniFunction.ba8c4ed5.js","assets/Selector.503c9126.js","assets/Selector.4835a2b1.css","assets/GlowToggle.9bc6036b.js","assets/GlowToggle.ada43627.css","assets/useKey.23ebf618.js","assets/file2dataURL.7b2bfe59.js","assets/useToggleState.6bea8f2c.js","assets/Check.707b6cec.js"])),_L=Yt(()=>st(()=>import("./index.06bb757e.js"),["assets/index.06bb757e.js","assets/styles.5f21a777.css","assets/AddWeapon.093d9841.js","assets/AddWeapon.b09a520b.css","assets/lists.cb2ffe28.js","assets/lists.6fff8870.css","assets/Gallery.b8a6b0ce.js","assets/ButtonBase.0e34e651.js","assets/Popover.bd5de177.js","assets/createSvgIcon.affd3c75.js","assets/Box.3cbf81e2.js","assets/DialogTitle.c36b8d48.js","assets/Close.e0c8837e.js","assets/filterConfig.af05ef45.js","assets/filterConfig.37d3f97f.css","assets/GlowToggle.9bc6036b.js","assets/GlowToggle.ada43627.css","assets/index.bb1df69f.js","assets/useToggleState.6bea8f2c.js","assets/ModelIcon.089dc83e.js"])),xL=Yt(()=>st(()=>import("./ColorSelect.5b2bb9f1.js"),["assets/ColorSelect.5b2bb9f1.js","assets/ColorPicker.59d8a7c1.js","assets/ColorPicker.108f083b.css","assets/ColorButton.c571801d.js","assets/Button.b8bcd939.js","assets/ButtonBase.0e34e651.js","assets/DialogTitle.c36b8d48.js"])),wL=Yt(()=>st(()=>import("./index.867a3c5c.js"),["assets/index.867a3c5c.js","assets/FaceSelect.aacc96fa.js","assets/FaceSelect.32c4ee29.css","assets/useKey.23ebf618.js","assets/FacePartSelector.3176ae38.js","assets/Selector.503c9126.js","assets/Selector.4835a2b1.css","assets/GlowToggle.9bc6036b.js","assets/GlowToggle.ada43627.css","assets/MeshMouthSelect.a2f3c902.js","assets/MeshMouthSelect.cfd3c0f0.css","assets/Box.3cbf81e2.js","assets/ButtonBase.0e34e651.js","assets/DialogTitle.c36b8d48.js","assets/Button.b8bcd939.js"])),bL=Yt(()=>st(()=>import("./index.038a7439.js"),["assets/index.038a7439.js","assets/styles.5f21a777.css","assets/FaceTexture.36bdcb4b.js","assets/useToggleState.6bea8f2c.js","assets/lists.cb2ffe28.js","assets/lists.6fff8870.css","assets/Gallery.b8a6b0ce.js","assets/ButtonBase.0e34e651.js","assets/Popover.bd5de177.js","assets/createSvgIcon.affd3c75.js","assets/Box.3cbf81e2.js","assets/DialogTitle.c36b8d48.js","assets/Close.e0c8837e.js","assets/FacePartSelector.3176ae38.js","assets/Selector.503c9126.js","assets/Selector.4835a2b1.css","assets/GlowToggle.9bc6036b.js","assets/GlowToggle.ada43627.css","assets/filterConfig.af05ef45.js","assets/filterConfig.37d3f97f.css","assets/styles.435d038d.js","assets/styles.a7d845f9.css"])),ML=Yt(()=>st(()=>import("./index.95ec569a.js"),["assets/index.95ec569a.js","assets/index.85d3b8bf.css","assets/styles.5f21a777.css","assets/useKey.23ebf618.js","assets/Stretcher.bc60f3f6.js","assets/Stretcher.7165086b.css","assets/BoneManager.ccc2bd2a.js","assets/BoneManager.61de214b.css","assets/ModelIcon.089dc83e.js","assets/Accordion.82bc825c.js","assets/Accordion.47f0dbde.css","assets/useToggleState.6bea8f2c.js","assets/createSvgIcon.affd3c75.js","assets/ButtonBase.0e34e651.js","assets/Gallery.b8a6b0ce.js","assets/Popover.bd5de177.js","assets/Box.3cbf81e2.js","assets/DialogTitle.c36b8d48.js","assets/filterConfig.af05ef45.js","assets/filterConfig.37d3f97f.css","assets/GlowToggle.9bc6036b.js","assets/GlowToggle.ada43627.css","assets/lists.cb2ffe28.js","assets/lists.6fff8870.css","assets/Close.e0c8837e.js","assets/ColorButton.c571801d.js","assets/Button.b8bcd939.js","assets/SkipPrevious.daaf7c29.js","assets/FaceSelect.aacc96fa.js","assets/FaceSelect.32c4ee29.css","assets/FacePartSelector.3176ae38.js","assets/Selector.503c9126.js","assets/Selector.4835a2b1.css","assets/MeshMouthSelect.a2f3c902.js","assets/MeshMouthSelect.cfd3c0f0.css","assets/FaceTexture.36bdcb4b.js","assets/styles.435d038d.js","assets/styles.a7d845f9.css","assets/AddWeapon.093d9841.js","assets/AddWeapon.b09a520b.css","assets/index.bb1df69f.js"])),Cm=Yt(()=>st(()=>import("./index.ba6e8fda.js"),["assets/index.ba6e8fda.js","assets/index.cecc6469.css","assets/MeshMouthSelect.a2f3c902.js","assets/MeshMouthSelect.cfd3c0f0.css","assets/Box.3cbf81e2.js","assets/ButtonBase.0e34e651.js","assets/DialogTitle.c36b8d48.js","assets/Button.b8bcd939.js"])),SL=Yt(()=>st(()=>import("./index.02d16fb9.js"),["assets/index.02d16fb9.js","assets/index.babf73a0.css","assets/styles.5f21a777.css","assets/useKey.23ebf618.js","assets/Accordion.82bc825c.js","assets/Accordion.47f0dbde.css","assets/useToggleState.6bea8f2c.js","assets/createSvgIcon.affd3c75.js","assets/ButtonBase.0e34e651.js","assets/ModelIcon.089dc83e.js","assets/Button.b8bcd939.js","assets/Check.707b6cec.js","assets/Box.3cbf81e2.js","assets/DialogTitle.c36b8d48.js"])),Lm={background:gL,model:yL,animation:vL,weapon:_L,color:xL,face:wL,faceTexture:bL,attachment:ML,target:SL,eye:({onSelect:r})=>On(Cm,{part:"eye",onSelect:r}),mouth:({onSelect:r})=>On(Cm,{part:"mouth",onSelect:r})},EL=(r,e)=>({Component:void 0,props:void 0,openModal:(t,n)=>r(i=>{i.props=n,i.Component=t}),close:()=>r(t=>t.Component=void 0),onClose:void 0,reset:()=>r(t=>{t.Component=t.props=t.onClose=void 0}),getInput:async t=>{if(!Lm[t])return null;const{close:n,reset:i}=e(),s=new Promise((o,a)=>{const l=(...c)=>o(c);r(c=>{c.onClose=()=>{a(),n()},c.props={onSelect:l,onAfterSelect:n},c.Component=Lm[t]})});try{return await s}catch{return null}finally{i()}},inputModel:()=>e().getInput("model"),inputAni:()=>e().getInput("animation"),inputColor:async()=>{const t=await e().getInput("color");return t==null?void 0:t[0]},inputTarget:()=>e().getInput("target"),inputEye:()=>e().getInput("eye"),inputMouth:()=>e().getInput("mouth")}),TL=r=>({activeModel:void 0,setActiveModel:e=>r({activeModel:e})}),AL=r=>({open:!1,toggle:()=>r(e=>e.open=!e.open),target:null,setTarget:e=>r(t=>{!e||(e.userData.chain||(e.userData.chain=new ri),t.target=e)})}),CL=r=>(e,t,n)=>r(i=>e(b_(i)),t,n),fa=r=>Ah(CL(r)),vh=fa(hL),QL=Ah(TL),e2=Ah(AL),t2=fa(gg),n2=fa(gg),LL=fa(M_),i2=fa(EL);function PL(){return new Worker("/dl-model/assets/fetchWorker.5c8aea3f.js",{type:"module"})}const RL=r=>{const e=new PL;return new Promise(t=>{e.addEventListener("message",n=>{e.terminate(),t(n.data)}),e.postMessage(r)})};function Av(){return new Worker("/dl-model/assets/dbWorker.764fcab9.js",{type:"module"})}const Cv=(r,e)=>{const t=new Av;return new Promise(n=>{t.addEventListener("message",()=>{n(),t.terminate()}),t.postMessage({type:"put",store:e,value:r})})};function DL(){return new Worker("/dl-model/assets/searchWorker.9de88212.js",{type:"module"})}async function IL(r,e="",t=["name"]){if(!e||!t.length)return r;const n=new DL;return new Promise(i=>{n.addEventListener("message",s=>{n.terminate(),i(s.data)}),n.postMessage({fullList:r,query:e,keys:t})})}const r2=async r=>{const e=Object.values(r).flat();await Cv(e,"model"),console.info("Model DB Initialized")},s2=r=>yc({type:"get",store:"model",value:r}),o2=r=>yc({type:"search",store:"model",index:"name",value:r}),a2=async r=>{const t=(await yc({type:"getByKeyRange",store:"model",value:"c100000_00-c199999_99"})).filter(({id:n})=>!n.endsWith("h"));return IL(t,r)},FL=()=>yc({type:"getMap",store:"model",index:"name"}),yc=r=>{const e=new Av;return new Promise(t=>{e.addEventListener("message",n=>{e.terminate(),t(n.data)}),e.postMessage(r)})},Vo={},BL=async()=>{if(Object.keys(Vo).length)return;const r="ani-personal",e=(await RL([r]))[r];Object.assign(Vo,e)},Lv=BL(),l2=r=>Vo[r],OL=r=>{var e,t;return(t=(e=Vo[r])==null?void 0:e[0])!=null?t:r.startsWith("c")?{name:"Bob",code:"CMN_MWM_03"}:null},c2=async()=>{const r=await FL();await Lv;const e=Object.entries(Vo).flatMap(([t,n])=>{const i=r.get(t);return n.map(s=>qn(tt({},s),{user:t,fullName:`${i} ${s.name}`}))});await Cv(e,"animation")},zL="cccccc",NL="c100001_01",Pm=(r,e="Unknown")=>{const t=vv(r),{length:n}=t,i=t.map((s,o)=>{const{aniName:a,reps:l=1,timeScale:c=1,duration:u=[0,100],aniAction:h}=s,f=n>1?e+` #${o+1}`:e;return{id:qf(),name:f,aniName:a,reps:l,timeScale:c,duration:u,aniAction:h}});return ri.from(i)},Rm={ts:{key:"timeScale",defaultValue:1},r:{key:"reps",defaultValue:1}},UL={"face.eyeIdx":"ei","face.mouthIdx":"mi"},u2=r=>r.map(kL).join(">"),kL=r=>{const{aniName:e}=r,t=HL(r),n=GL(r),i=VL(r);return`${e}${t}${n}${i}`},HL=r=>{const e=[];return Object.keys(Rm).forEach(t=>{const{key:n,defaultValue:i}=Rm[t];r[n]&&r[n]!==i&&e.push(`&${t}=${r[n]}`)}),e.join("")},GL=r=>{const{duration:e=[0,100]}=r,[t,n]=e;return t!==0?`&dur=${t}-${n}`:n===100?"":`&dur=${n}`},VL=r=>{const{aniAction:e}=r;if(!e.length)return"";const t=e.map(n=>{const a=n,{time:i}=a,s=Ur(a,["time"]),o=Object.entries(s).map(([l,c])=>{var u;return`${(u=UL[l])!=null?u:l}=${c}`});return`@${i}=(${o.join("/")})`});return"&"+t.join("&")};function WL(r){if(!(r!=null&&r.userData))return;const{type:e,id:t}=r,{name:n}=r.userData;r.userData.aniSelectState={category:e==="adventurer"?"Adv":"Personal",personalAni:{source:t,sourceName:n}}}function mu(){const r=decodeURI(window.location.hash),e=bv(r),t=Object.fromEntries(e);$L(t),qL(r)}function $L(r){const{bg:e=zL,showAC:t="true",showSettings:n="true"}=r;_t.background=e,vh.setState({showTimeControl:Cd(t)}),vh.setState({showSettings:Cd(n)})}async function qL(r){_t.disposeAllModels(),setTimeout(async()=>{var o;const e=r.includes("id=")?r:r+`/id=${NL}`,t=await _t.loadModelFromCode(e);_t.add(t);const n=t.type==="adventurer"?"Adv":"Personal";LL.getState().setCategory(n),WL(t);const{id:i}=t;if(!r.includes("camPos=")){const a=SA(i);_t.camera.position.set(...a)}const s=TA(i);if(_t.controls.target.set(...s),r.includes("ani=")){const a=(o=t.animation.current.chainCode)!=null?o:"";a&&(t.userData.chain=Pm(a,"init"))}else{const a=OL(i);if(a){const{code:l,name:c}=a;t.animation.addChain(l),t.userData.chain=Pm(l,c)}}})}const XL=Yt(()=>st(()=>import("./index.87472b7d.js"),["assets/index.87472b7d.js","assets/index.a7e8db71.css","assets/styles.5f21a777.css","assets/createSvgIcon.affd3c75.js","assets/ButtonBase.0e34e651.js","assets/BoneManager.ccc2bd2a.js","assets/BoneManager.61de214b.css","assets/ModelIcon.089dc83e.js","assets/Accordion.82bc825c.js","assets/Accordion.47f0dbde.css","assets/useToggleState.6bea8f2c.js","assets/Gallery.b8a6b0ce.js","assets/Popover.bd5de177.js","assets/Box.3cbf81e2.js","assets/DialogTitle.c36b8d48.js","assets/filterConfig.af05ef45.js","assets/filterConfig.37d3f97f.css","assets/GlowToggle.9bc6036b.js","assets/GlowToggle.ada43627.css","assets/lists.cb2ffe28.js","assets/lists.6fff8870.css","assets/Close.e0c8837e.js","assets/ColorButton.c571801d.js","assets/Button.b8bcd939.js","assets/SkipPrevious.daaf7c29.js","assets/useKey.23ebf618.js","assets/FaceSelect.aacc96fa.js","assets/FaceSelect.32c4ee29.css","assets/FacePartSelector.3176ae38.js","assets/Selector.503c9126.js","assets/Selector.4835a2b1.css","assets/MeshMouthSelect.a2f3c902.js","assets/MeshMouthSelect.cfd3c0f0.css","assets/FaceTexture.36bdcb4b.js","assets/styles.435d038d.js","assets/styles.a7d845f9.css","assets/AddWeapon.093d9841.js","assets/AddWeapon.b09a520b.css","assets/index.bb1df69f.js","assets/TabBar.5517193c.js","assets/aniFunction.ba8c4ed5.js"])),jL=Yt(()=>st(()=>import("./index.9358257e.js"),["assets/index.9358257e.js","assets/index.691abef7.css","assets/useToggleState.6bea8f2c.js","assets/GlowToggle.9bc6036b.js","assets/GlowToggle.ada43627.css","assets/Button.b8bcd939.js","assets/ButtonBase.0e34e651.js","assets/Popover.bd5de177.js","assets/SkipPrevious.daaf7c29.js","assets/createSvgIcon.affd3c75.js","assets/Close.e0c8837e.js"]));function YL(){const r=a_(),e=bn(),t=bn(),{loadingMsg:n,showTimeControl:i,showSettings:s,showFrameRate:o}=vh();return ys(()=>(r&&Lv.then(mu),window.addEventListener("hashchange",mu),()=>window.removeEventListener("hashchange",mu))),ys(()=>{e.current.appendChild(_t.canvas),_t.stats.dom.style.position="",t.current.appendChild(_t.stats.dom)},[]),pL(mL,{children:[s&&On(lr,{fallback:null,children:On(XL,{})}),On("div",{className:"mount",ref:a=>e.current=a}),On("div",{className:"stats",style:{display:o?"unset":"none"},ref:a=>t.current=a}),n&&On("div",{className:"loading-msg",children:n}),i&&On(lr,{fallback:null,children:On(jL,{})})]})}dr(On(YL,{}),document.getElementById("app"));export{Xm as $,jm as A,gc as B,st as C,um as D,KL as E,mL as F,XC as G,qC as H,i2 as I,u2 as J,qf as K,lr as L,RL as M,r2 as N,Lv as O,gA as P,c2 as Q,o_ as R,a_ as S,JL as T,En as U,VT as V,ng as W,Th as X,bh as Y,eg as Z,Vl as _,pL as a,Ah as a0,Cv as a1,yc as a2,pn as a3,Km as a4,b_ as a5,dm as a6,y0 as a7,vm as a8,a2 as a9,We as aA,un as aB,Ge as aC,Po as aD,ae as aE,Ko as aF,Ro as aG,Pl as aH,Rl as aI,Wh as aJ,Lr as aK,Pt as aL,yr as aM,Lo as aN,ls as aO,NC as aP,Ml as aQ,hn as aR,o2 as aa,IL as ab,n2 as ac,Yt as ad,TT as ae,l2 as af,ne as ag,mc as ah,$ as ai,Dt as aj,Xo as ak,It as al,S as am,_m as an,Al as ao,fi as ap,MC as aq,ft as ar,ot as as,mt as at,Kl as au,sy as av,si as aw,ar as ax,Wt as ay,Ci as az,QL as b,Pm as c,Lm as d,SA as e,TA as f,OL as g,bn as h,WL as i,On as j,LL as k,t2 as l,Mh as m,s2 as n,e2 as o,Gl as p,Ym as q,cg as r,Hl as s,du as t,vh as u,_t as v,fg as w,Qm as x,ys as y,jf as z};
