import{ak as G,av as W,aw as X,ax as J,ay as q,az as F,aA as Z,aB as U,aC as $,aD as Q,aE as B,aF as ee,ar as se,aG as te,aH as ne,aq as ie,aI as re,aJ as oe,aK as ae,aL as ce,aM as le,aN as ue}from"./index.a7d2b569.js";class j{constructor(){this.pluginCallbacks=[],this.register(function(e){return new Me(e)}),this.register(function(e){return new Ee(e)}),this.register(function(e){return new we(e)}),this.register(function(e){return new Ae(e)}),this.register(function(e){return new Re(e)}),this.register(function(e){return new ye(e)}),this.register(function(e){return new Ie(e)})}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,i,s){const r=new me,n=[];for(let o=0,a=this.pluginCallbacks.length;o<a;o++)n.push(this.pluginCallbacks[o](r));r.setPlugins(n),r.write(e,t,s).catch(i)}parseAsync(e,t){const i=this;return new Promise(function(s,r){i.parse(e,s,r,t)})}}const x={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,FLOAT:5126,UNSIGNED_INT:5125,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},A={};A[se]=x.NEAREST;A[te]=x.NEAREST_MIPMAP_NEAREST;A[ne]=x.NEAREST_MIPMAP_LINEAR;A[ie]=x.LINEAR;A[re]=x.LINEAR_MIPMAP_NEAREST;A[oe]=x.LINEAR_MIPMAP_LINEAR;A[ae]=x.CLAMP_TO_EDGE;A[ce]=x.REPEAT;A[le]=x.MIRRORED_REPEAT;const P={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},k=12,fe=1179937895,he=2,z=8,pe=1313821514,de=5130562;function L(c,e){return c.length===e.length&&c.every(function(t,i){return t===e[i]})}function ge(c){return new TextEncoder().encode(c).buffer}function xe(c){return L(c.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function Te(c,e,t){const i={min:new Array(c.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(c.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let s=e;s<e+t;s++)for(let r=0;r<c.itemSize;r++){let n;c.itemSize>4?n=c.array[s*c.itemSize+r]:r===0?n=c.getX(s):r===1?n=c.getY(s):r===2?n=c.getZ(s):r===3&&(n=c.getW(s)),i.min[r]=Math.min(i.min[r],n),i.max[r]=Math.max(i.max[r],n)}return i}function Y(c){return Math.ceil(c/4)*4}function C(c,e=0){const t=Y(c.byteLength);if(t!==c.byteLength){const i=new Uint8Array(t);if(i.set(new Uint8Array(c)),e!==0)for(let s=c.byteLength;s<t;s++)i[s]=e;return i.buffer}return c}function V(){return typeof document>"u"&&typeof OffscreenCanvas<"u"?new OffscreenCanvas(1,1):document.createElement("canvas")}function H(c,e){if(c.toBlob!==void 0)return new Promise(i=>c.toBlob(i,e));let t;return e==="image/jpeg"?t=.92:e==="image/webp"&&(t=.8),c.convertToBlob({type:e,quality:t})}class me{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter"}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,t,i){this.options=Object.assign({},{binary:!1,trs:!1,onlyVisible:!0,truncateDrawRange:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},i),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);const s=this,r=s.buffers,n=s.json;i=s.options;const o=s.extensionsUsed,a=new Blob(r,{type:"application/octet-stream"}),l=Object.keys(o);if(l.length>0&&(n.extensionsUsed=l),n.buffers&&n.buffers.length>0&&(n.buffers[0].byteLength=a.size),i.binary===!0){const p=new FileReader;p.readAsArrayBuffer(a),p.onloadend=function(){const u=C(p.result),T=new DataView(new ArrayBuffer(z));T.setUint32(0,u.byteLength,!0),T.setUint32(4,de,!0);const f=C(ge(JSON.stringify(n)),32),h=new DataView(new ArrayBuffer(z));h.setUint32(0,f.byteLength,!0),h.setUint32(4,pe,!0);const d=new ArrayBuffer(k),M=new DataView(d);M.setUint32(0,fe,!0),M.setUint32(4,he,!0);const m=k+h.byteLength+f.byteLength+T.byteLength+u.byteLength;M.setUint32(8,m,!0);const S=new Blob([d,h,f,T,u],{type:"application/octet-stream"}),g=new FileReader;g.readAsArrayBuffer(S),g.onloadend=function(){t(g.result)}}}else if(n.buffers&&n.buffers.length>0){const p=new FileReader;p.readAsDataURL(a),p.onloadend=function(){const u=p.result;n.buffers[0].uri=u,t(n)}}else t(n)}serializeUserData(e,t){if(Object.keys(e.userData).length===0)return;const i=this.options,s=this.extensionsUsed;try{const r=JSON.parse(JSON.stringify(e.userData));if(i.includeCustomExtensions&&r.gltfExtensions){t.extensions===void 0&&(t.extensions={});for(const n in r.gltfExtensions)t.extensions[n]=r.gltfExtensions[n],s[n]=!0;delete r.gltfExtensions}Object.keys(r).length>0&&(t.extras=r)}catch(r){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+r.message)}}getUID(e,t=!1){if(this.uids.has(e)===!1){const s=new Map;s.set(!0,this.uid++),s.set(!1,this.uid++),this.uids.set(e,s)}return this.uids.get(e).get(t)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;const i=new G;for(let s=0,r=e.count;s<r;s++)if(Math.abs(i.fromBufferAttribute(e,s).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){const t=this.cache;if(t.attributesNormalized.has(e))return t.attributesNormalized.get(e);const i=e.clone(),s=new G;for(let r=0,n=i.count;r<n;r++)s.fromBufferAttribute(i,r),s.x===0&&s.y===0&&s.z===0?s.setX(1):s.normalize(),i.setXYZ(r,s.x,s.y,s.z);return t.attributesNormalized.set(e,i),i}applyTextureTransform(e,t){let i=!1;const s={};(t.offset.x!==0||t.offset.y!==0)&&(s.offset=t.offset.toArray(),i=!0),t.rotation!==0&&(s.rotation=t.rotation,i=!0),(t.repeat.x!==1||t.repeat.y!==1)&&(s.scale=t.repeat.toArray(),i=!0),i&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=s,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,t){if(e===t)return e;function i(f){return f.encoding===ue?function(d){return d<.04045?d*.0773993808:Math.pow(d*.9478672986+.0521327014,2.4)}:function(d){return d}}console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures.");const s=e==null?void 0:e.image,r=t==null?void 0:t.image,n=Math.max((s==null?void 0:s.width)||0,(r==null?void 0:r.width)||0),o=Math.max((s==null?void 0:s.height)||0,(r==null?void 0:r.height)||0),a=V();a.width=n,a.height=o;const l=a.getContext("2d");l.fillStyle="#00ffff",l.fillRect(0,0,n,o);const p=l.getImageData(0,0,n,o);if(s){l.drawImage(s,0,0,n,o);const f=i(e),h=l.getImageData(0,0,n,o).data;for(let d=2;d<h.length;d+=4)p.data[d]=f(h[d]/256)*256}if(r){l.drawImage(r,0,0,n,o);const f=i(t),h=l.getImageData(0,0,n,o).data;for(let d=1;d<h.length;d+=4)p.data[d]=f(h[d]/256)*256}l.putImageData(p,0,0);const T=(e||t).clone();return T.source=new W(a),T.encoding=X,T}processBuffer(e){const t=this.json,i=this.buffers;return t.buffers||(t.buffers=[{byteLength:0}]),i.push(e),0}processBufferView(e,t,i,s,r){const n=this.json;n.bufferViews||(n.bufferViews=[]);let o;t===x.UNSIGNED_BYTE?o=1:t===x.UNSIGNED_SHORT?o=2:o=4;const a=Y(s*e.itemSize*o),l=new DataView(new ArrayBuffer(a));let p=0;for(let f=i;f<i+s;f++)for(let h=0;h<e.itemSize;h++){let d;e.itemSize>4?d=e.array[f*e.itemSize+h]:h===0?d=e.getX(f):h===1?d=e.getY(f):h===2?d=e.getZ(f):h===3&&(d=e.getW(f)),t===x.FLOAT?l.setFloat32(p,d,!0):t===x.UNSIGNED_INT?l.setUint32(p,d,!0):t===x.UNSIGNED_SHORT?l.setUint16(p,d,!0):t===x.UNSIGNED_BYTE&&l.setUint8(p,d),p+=o}const u={buffer:this.processBuffer(l.buffer),byteOffset:this.byteOffset,byteLength:a};return r!==void 0&&(u.target=r),r===x.ARRAY_BUFFER&&(u.byteStride=e.itemSize*o),this.byteOffset+=a,n.bufferViews.push(u),{id:n.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){const t=this,i=t.json;return i.bufferViews||(i.bufferViews=[]),new Promise(function(s){const r=new FileReader;r.readAsArrayBuffer(e),r.onloadend=function(){const n=C(r.result),o={buffer:t.processBuffer(n),byteOffset:t.byteOffset,byteLength:n.byteLength};t.byteOffset+=n.byteLength,s(i.bufferViews.push(o)-1)}})}processAccessor(e,t,i,s){const r=this.options,n=this.json,o={1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",16:"MAT4"};let a;if(e.array.constructor===Float32Array)a=x.FLOAT;else if(e.array.constructor===Uint32Array)a=x.UNSIGNED_INT;else if(e.array.constructor===Uint16Array)a=x.UNSIGNED_SHORT;else if(e.array.constructor===Uint8Array)a=x.UNSIGNED_BYTE;else throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type.");if(i===void 0&&(i=0),s===void 0&&(s=e.count),r.truncateDrawRange&&t!==void 0&&t.index===null){const f=i+s,h=t.drawRange.count===1/0?e.count:t.drawRange.start+t.drawRange.count;i=Math.max(i,t.drawRange.start),s=Math.min(f,h)-i,s<0&&(s=0)}if(s===0)return null;const l=Te(e,i,s);let p;t!==void 0&&(p=e===t.index?x.ELEMENT_ARRAY_BUFFER:x.ARRAY_BUFFER);const u=this.processBufferView(e,a,i,s,p),T={bufferView:u.id,byteOffset:u.byteOffset,componentType:a,count:s,max:l.max,min:l.min,type:o[e.itemSize]};return e.normalized===!0&&(T.normalized=!0),n.accessors||(n.accessors=[]),n.accessors.push(T)-1}processImage(e,t,i,s="image/png"){const r=this,n=r.cache,o=r.json,a=r.options,l=r.pending;n.images.has(e)||n.images.set(e,{});const p=n.images.get(e),u=s+":flipY/"+i.toString();if(p[u]!==void 0)return p[u];o.images||(o.images=[]);const T={mimeType:s},f=V();f.width=Math.min(e.width,a.maxTextureSize),f.height=Math.min(e.height,a.maxTextureSize);const h=f.getContext("2d");if(i===!0&&(h.translate(0,f.height),h.scale(1,-1)),e.data!==void 0){t!==J&&console.error("GLTFExporter: Only RGBAFormat is supported."),(e.width>a.maxTextureSize||e.height>a.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);const M=new Uint8ClampedArray(e.height*e.width*4);for(let m=0;m<M.length;m+=4)M[m+0]=e.data[m+0],M[m+1]=e.data[m+1],M[m+2]=e.data[m+2],M[m+3]=e.data[m+3];h.putImageData(new ImageData(M,e.width,e.height),0,0)}else h.drawImage(e,0,0,f.width,f.height);a.binary===!0?l.push(H(f,s).then(M=>r.processBufferViewImage(M)).then(M=>{T.bufferView=M})):f.toDataURL!==void 0?T.uri=f.toDataURL(s):l.push(H(f,s).then(M=>new FileReader().readAsDataURL(M)).then(M=>{T.uri=M}));const d=o.images.push(T)-1;return p[u]=d,d}processSampler(e){const t=this.json;t.samplers||(t.samplers=[]);const i={magFilter:A[e.magFilter],minFilter:A[e.minFilter],wrapS:A[e.wrapS],wrapT:A[e.wrapT]};return t.samplers.push(i)-1}processTexture(e){const t=this.cache,i=this.json;if(t.textures.has(e))return t.textures.get(e);i.textures||(i.textures=[]);let s=e.userData.mimeType;s==="image/webp"&&(s="image/png");const r={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY,s)};e.name&&(r.name=e.name),this._invokeAll(function(o){o.writeTexture&&o.writeTexture(e,r)});const n=i.textures.push(r)-1;return t.textures.set(e,n),n}processMaterial(e){const t=this.cache,i=this.json;if(t.materials.has(e))return t.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;i.materials||(i.materials=[]);const s={pbrMetallicRoughness:{}};e.isMeshStandardMaterial!==!0&&e.isMeshBasicMaterial!==!0&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const r=e.color.toArray().concat([e.opacity]);if(L(r,[1,1,1,1])||(s.pbrMetallicRoughness.baseColorFactor=r),e.isMeshStandardMaterial?(s.pbrMetallicRoughness.metallicFactor=e.metalness,s.pbrMetallicRoughness.roughnessFactor=e.roughness):(s.pbrMetallicRoughness.metallicFactor=.5,s.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){const o=this.buildMetalRoughTexture(e.metalnessMap,e.roughnessMap),a={index:this.processTexture(o)};this.applyTextureTransform(a,o),s.pbrMetallicRoughness.metallicRoughnessTexture=a}if(e.map){const o={index:this.processTexture(e.map)};this.applyTextureTransform(o,e.map),s.pbrMetallicRoughness.baseColorTexture=o}if(e.emissive){const o=e.emissive.clone().multiplyScalar(e.emissiveIntensity),a=Math.max(o.r,o.g,o.b);if(a>1&&(o.multiplyScalar(1/a),console.warn("THREE.GLTFExporter: Some emissive components exceed 1; emissive has been limited")),a>0&&(s.emissiveFactor=o.toArray()),e.emissiveMap){const l={index:this.processTexture(e.emissiveMap)};this.applyTextureTransform(l,e.emissiveMap),s.emissiveTexture=l}}if(e.normalMap){const o={index:this.processTexture(e.normalMap)};e.normalScale&&e.normalScale.x!==1&&(o.scale=e.normalScale.x),this.applyTextureTransform(o,e.normalMap),s.normalTexture=o}if(e.aoMap){const o={index:this.processTexture(e.aoMap),texCoord:1};e.aoMapIntensity!==1&&(o.strength=e.aoMapIntensity),this.applyTextureTransform(o,e.aoMap),s.occlusionTexture=o}e.transparent?s.alphaMode="BLEND":e.alphaTest>0&&(s.alphaMode="MASK",s.alphaCutoff=e.alphaTest),e.side===q&&(s.doubleSided=!0),e.name!==""&&(s.name=e.name),this.serializeUserData(e,s),this._invokeAll(function(o){o.writeMaterial&&o.writeMaterial(e,s)});const n=i.materials.push(s)-1;return t.materials.set(e,n),n}processMesh(e){const t=this.cache,i=this.json,s=[e.geometry.uuid];if(Array.isArray(e.material))for(let g=0,E=e.material.length;g<E;g++)s.push(e.material[g].uuid);else s.push(e.material.uuid);const r=s.join(":");if(t.meshes.has(r))return t.meshes.get(r);const n=e.geometry;let o;e.isLineSegments?o=x.LINES:e.isLineLoop?o=x.LINE_LOOP:e.isLine?o=x.LINE_STRIP:e.isPoints?o=x.POINTS:o=e.material.wireframe?x.LINES:x.TRIANGLES;const a={},l={},p=[],u=[],T={uv:"TEXCOORD_0",uv2:"TEXCOORD_1",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},f=n.getAttribute("normal");f!==void 0&&!this.isNormalizedNormalAttribute(f)&&(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),n.setAttribute("normal",this.createNormalizedNormalAttribute(f)));let h=null;for(let g in n.attributes){if(g.slice(0,5)==="morph")continue;const E=n.attributes[g];if(g=T[g]||g.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(g)||(g="_"+g),t.attributes.has(this.getUID(E))){l[g]=t.attributes.get(this.getUID(E));continue}h=null;const w=E.array;g==="JOINTS_0"&&!(w instanceof Uint16Array)&&!(w instanceof Uint8Array)&&(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),h=new F(new Uint16Array(w),E.itemSize,E.normalized));const I=this.processAccessor(h||E,n);I!==null&&(l[g]=I,t.attributes.set(this.getUID(E),I))}if(f!==void 0&&n.setAttribute("normal",f),Object.keys(l).length===0)return null;if(e.morphTargetInfluences!==void 0&&e.morphTargetInfluences.length>0){const g=[],E=[],y={};if(e.morphTargetDictionary!==void 0)for(const w in e.morphTargetDictionary)y[e.morphTargetDictionary[w]]=w;for(let w=0;w<e.morphTargetInfluences.length;++w){const I={};let O=!1;for(const b in n.morphAttributes){if(b!=="position"&&b!=="normal"){O||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),O=!0);continue}const N=n.morphAttributes[b][w],v=b.toUpperCase(),_=n.attributes[b];if(t.attributes.has(this.getUID(N,!0))){I[v]=t.attributes.get(this.getUID(N,!0));continue}const D=N.clone();if(!n.morphTargetsRelative)for(let R=0,K=N.count;R<K;R++)D.setXYZ(R,N.getX(R)-_.getX(R),N.getY(R)-_.getY(R),N.getZ(R)-_.getZ(R));I[v]=this.processAccessor(D,n),t.attributes.set(this.getUID(_,!0),I[v])}u.push(I),g.push(e.morphTargetInfluences[w]),e.morphTargetDictionary!==void 0&&E.push(y[w])}a.weights=g,E.length>0&&(a.extras={},a.extras.targetNames=E)}const d=Array.isArray(e.material);if(d&&n.groups.length===0)return null;const M=d?e.material:[e.material],m=d?n.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let g=0,E=m.length;g<E;g++){const y={mode:o,attributes:l};if(this.serializeUserData(n,y),u.length>0&&(y.targets=u),n.index!==null){let I=this.getUID(n.index);(m[g].start!==void 0||m[g].count!==void 0)&&(I+=":"+m[g].start+":"+m[g].count),t.attributes.has(I)?y.indices=t.attributes.get(I):(y.indices=this.processAccessor(n.index,n,m[g].start,m[g].count),t.attributes.set(I,y.indices)),y.indices===null&&delete y.indices}const w=this.processMaterial(M[m[g].materialIndex]);w!==null&&(y.material=w),p.push(y)}a.primitives=p,i.meshes||(i.meshes=[]),this._invokeAll(function(g){g.writeMesh&&g.writeMesh(e,a)});const S=i.meshes.push(a)-1;return t.meshes.set(r,S),S}processCamera(e){const t=this.json;t.cameras||(t.cameras=[]);const i=e.isOrthographicCamera,s={type:i?"orthographic":"perspective"};return i?s.orthographic={xmag:e.right*2,ymag:e.top*2,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:s.perspective={aspectRatio:e.aspect,yfov:Z.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},e.name!==""&&(s.name=e.type),t.cameras.push(s)-1}processAnimation(e,t){const i=this.json,s=this.nodeMap;i.animations||(i.animations=[]),e=j.Utils.mergeMorphTargetTracks(e.clone(),t);const r=e.tracks,n=[],o=[];for(let a=0;a<r.length;++a){const l=r[a],p=U.parseTrackName(l.name);let u=U.findNode(t,p.nodeName);const T=P[p.propertyName];if(p.objectName==="bones"&&(u.isSkinnedMesh===!0?u=u.skeleton.getBoneByName(p.objectIndex):u=void 0),!u||!T)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',l.name),null;const f=1;let h=l.values.length/l.times.length;T===P.morphTargetInfluences&&(h/=u.morphTargetInfluences.length);let d;l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline===!0?(d="CUBICSPLINE",h/=3):l.getInterpolation()===$?d="STEP":d="LINEAR",o.push({input:this.processAccessor(new F(l.times,f)),output:this.processAccessor(new F(l.values,h)),interpolation:d}),n.push({sampler:o.length-1,target:{node:s.get(u),path:T}})}return i.animations.push({name:e.name||"clip_"+i.animations.length,samplers:o,channels:n}),i.animations.length-1}processSkin(e){const t=this.json,i=this.nodeMap,s=t.nodes[i.get(e)],r=e.skeleton;if(r===void 0)return null;const n=e.skeleton.bones[0];if(n===void 0)return null;const o=[],a=new Float32Array(r.bones.length*16),l=new Q;for(let u=0;u<r.bones.length;++u)o.push(i.get(r.bones[u])),l.copy(r.boneInverses[u]),l.multiply(e.bindMatrix).toArray(a,u*16);return t.skins===void 0&&(t.skins=[]),t.skins.push({inverseBindMatrices:this.processAccessor(new F(a,16)),joints:o,skeleton:i.get(n)}),s.skin=t.skins.length-1}processNode(e){const t=this.json,i=this.options,s=this.nodeMap;t.nodes||(t.nodes=[]);const r={};if(i.trs){const o=e.quaternion.toArray(),a=e.position.toArray(),l=e.scale.toArray();L(o,[0,0,0,1])||(r.rotation=o),L(a,[0,0,0])||(r.translation=a),L(l,[1,1,1])||(r.scale=l)}else e.matrixAutoUpdate&&e.updateMatrix(),xe(e.matrix)===!1&&(r.matrix=e.matrix.elements);if(e.name!==""&&(r.name=String(e.name)),this.serializeUserData(e,r),e.isMesh||e.isLine||e.isPoints){const o=this.processMesh(e);o!==null&&(r.mesh=o)}else e.isCamera&&(r.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){const o=[];for(let a=0,l=e.children.length;a<l;a++){const p=e.children[a];if(p.visible||i.onlyVisible===!1){const u=this.processNode(p);u!==null&&o.push(u)}}o.length>0&&(r.children=o)}this._invokeAll(function(o){o.writeNode&&o.writeNode(e,r)});const n=t.nodes.push(r)-1;return s.set(e,n),n}processScene(e){const t=this.json,i=this.options;t.scenes||(t.scenes=[],t.scene=0);const s={};e.name!==""&&(s.name=e.name),t.scenes.push(s);const r=[];for(let n=0,o=e.children.length;n<o;n++){const a=e.children[n];if(a.visible||i.onlyVisible===!1){const l=this.processNode(a);l!==null&&r.push(l)}}r.length>0&&(s.nodes=r),this.serializeUserData(e,s)}processObjects(e){const t=new B;t.name="AuxScene";for(let i=0;i<e.length;i++)t.children.push(e[i]);this.processScene(t)}processInput(e){const t=this.options;e=e instanceof Array?e:[e],this._invokeAll(function(s){s.beforeParse&&s.beforeParse(e)});const i=[];for(let s=0;s<e.length;s++)e[s]instanceof B?this.processScene(e[s]):i.push(e[s]);i.length>0&&this.processObjects(i);for(let s=0;s<this.skins.length;++s)this.processSkin(this.skins[s]);for(let s=0;s<t.animations.length;++s)this.processAnimation(t.animations[s],e[0]);this._invokeAll(function(s){s.afterParse&&s.afterParse(e)})}_invokeAll(e){for(let t=0,i=this.plugins.length;t<i;t++)e(this.plugins[t])}}class Me{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,t){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return}const i=this.writer,s=i.json,r=i.extensionsUsed,n={};e.name&&(n.name=e.name),n.color=e.color.toArray(),n.intensity=e.intensity,e.isDirectionalLight?n.type="directional":e.isPointLight?(n.type="point",e.distance>0&&(n.range=e.distance)):e.isSpotLight&&(n.type="spot",e.distance>0&&(n.range=e.distance),n.spot={},n.spot.innerConeAngle=(e.penumbra-1)*e.angle*-1,n.spot.outerConeAngle=e.angle),e.decay!==void 0&&e.decay!==2&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),e.target&&(e.target.parent!==e||e.target.position.x!==0||e.target.position.y!==0||e.target.position.z!==-1)&&console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),r[this.name]||(s.extensions=s.extensions||{},s.extensions[this.name]={lights:[]},r[this.name]=!0);const o=s.extensions[this.name].lights;o.push(n),t.extensions=t.extensions||{},t.extensions[this.name]={light:o.length-1}}}class Ee{constructor(e){this.writer=e,this.name="KHR_materials_unlit"}writeMaterial(e,t){if(!e.isMeshBasicMaterial)return;const s=this.writer.extensionsUsed;t.extensions=t.extensions||{},t.extensions[this.name]={},s[this.name]=!0,t.pbrMetallicRoughness.metallicFactor=0,t.pbrMetallicRoughness.roughnessFactor=.9}}class we{constructor(e){this.writer=e,this.name="KHR_materials_pbrSpecularGlossiness"}writeMaterial(e,t){if(!e.isGLTFSpecularGlossinessMaterial)return;const i=this.writer,s=i.extensionsUsed,r={};t.pbrMetallicRoughness.baseColorFactor&&(r.diffuseFactor=t.pbrMetallicRoughness.baseColorFactor);const n=[1,1,1];if(e.specular.toArray(n,0),r.specularFactor=n,r.glossinessFactor=e.glossiness,t.pbrMetallicRoughness.baseColorTexture&&(r.diffuseTexture=t.pbrMetallicRoughness.baseColorTexture),e.specularMap){const o={index:i.processTexture(e.specularMap)};i.applyTextureTransform(o,e.specularMap),r.specularGlossinessTexture=o}t.extensions=t.extensions||{},t.extensions[this.name]=r,s[this.name]=!0}}class ye{constructor(e){this.writer=e,this.name="KHR_materials_clearcoat"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial)return;const i=this.writer,s=i.extensionsUsed,r={};if(r.clearcoatFactor=e.clearcoat,e.clearcoatMap){const n={index:i.processTexture(e.clearcoatMap)};i.applyTextureTransform(n,e.clearcoatMap),r.clearcoatTexture=n}if(r.clearcoatRoughnessFactor=e.clearcoatRoughness,e.clearcoatRoughnessMap){const n={index:i.processTexture(e.clearcoatRoughnessMap)};i.applyTextureTransform(n,e.clearcoatRoughnessMap),r.clearcoatRoughnessTexture=n}if(e.clearcoatNormalMap){const n={index:i.processTexture(e.clearcoatNormalMap)};i.applyTextureTransform(n,e.clearcoatNormalMap),r.clearcoatNormalTexture=n}t.extensions=t.extensions||{},t.extensions[this.name]=r,s[this.name]=!0}}class Ie{constructor(e){this.writer=e,this.name="KHR_materials_iridescence"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial)return;const i=this.writer,s=i.extensionsUsed,r={};if(r.iridescenceFactor=e.iridescence,e.iridescenceMap){const n={index:i.processTexture(e.iridescenceMap)};i.applyTextureTransform(n,e.iridescenceMap),r.iridescenceTexture=n}if(r.iridescenceIor=e.iridescenceIOR,r.iridescenceThicknessMinimum=e.iridescenceThicknessRange[0],r.iridescenceThicknessMaximum=e.iridescenceThicknessRange[1],e.iridescenceThicknessMap){const n={index:i.processTexture(e.iridescenceThicknessMap)};i.applyTextureTransform(n,e.iridescenceThicknessMap),r.iridescenceThicknessTexture=n}t.extensions=t.extensions||{},t.extensions[this.name]=r,s[this.name]=!0}}class Ae{constructor(e){this.writer=e,this.name="KHR_materials_transmission"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const i=this.writer,s=i.extensionsUsed,r={};if(r.transmissionFactor=e.transmission,e.transmissionMap){const n={index:i.processTexture(e.transmissionMap)};i.applyTextureTransform(n,e.transmissionMap),r.transmissionTexture=n}t.extensions=t.extensions||{},t.extensions[this.name]=r,s[this.name]=!0}}class Re{constructor(e){this.writer=e,this.name="KHR_materials_volume"}writeMaterial(e,t){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const i=this.writer,s=i.extensionsUsed,r={};if(r.thicknessFactor=e.thickness,e.thicknessMap){const n={index:i.processTexture(e.thicknessMap)};i.applyTextureTransform(n,e.thicknessMap),r.thicknessTexture=n}r.attenuationDistance=e.attenuationDistance,r.attenuationColor=e.attenuationColor.toArray(),t.extensions=t.extensions||{},t.extensions[this.name]=r,s[this.name]=!0}}j.Utils={insertKeyframe:function(c,e){const i=c.getValueSize(),s=new c.TimeBufferType(c.times.length+1),r=new c.ValueBufferType(c.values.length+i),n=c.createInterpolant(new c.ValueBufferType(i));let o;if(c.times.length===0){s[0]=e;for(let a=0;a<i;a++)r[a]=0;o=0}else if(e<c.times[0]){if(Math.abs(c.times[0]-e)<.001)return 0;s[0]=e,s.set(c.times,1),r.set(n.evaluate(e),0),r.set(c.values,i),o=0}else if(e>c.times[c.times.length-1]){if(Math.abs(c.times[c.times.length-1]-e)<.001)return c.times.length-1;s[s.length-1]=e,s.set(c.times,0),r.set(c.values,0),r.set(n.evaluate(e),c.values.length),o=s.length-1}else for(let a=0;a<c.times.length;a++){if(Math.abs(c.times[a]-e)<.001)return a;if(c.times[a]<e&&c.times[a+1]>e){s.set(c.times.slice(0,a+1),0),s[a+1]=e,s.set(c.times.slice(a+1),a+2),r.set(c.values.slice(0,(a+1)*i),0),r.set(n.evaluate(e),(a+1)*i),r.set(c.values.slice((a+1)*i),(a+2)*i),o=a+1;break}}return c.times=s,c.values=r,o},mergeMorphTargetTracks:function(c,e){const t=[],i={},s=c.tracks;for(let r=0;r<s.length;++r){let n=s[r];const o=U.parseTrackName(n.name),a=U.findNode(e,o.nodeName);if(o.propertyName!=="morphTargetInfluences"||o.propertyIndex===void 0){t.push(n);continue}if(n.createInterpolant!==n.InterpolantFactoryMethodDiscrete&&n.createInterpolant!==n.InterpolantFactoryMethodLinear){if(n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),n=n.clone(),n.setInterpolation(ee)}const l=a.morphTargetInfluences.length,p=a.morphTargetDictionary[o.propertyIndex];if(p===void 0)throw new Error("THREE.GLTFExporter: Morph target name not found: "+o.propertyIndex);let u;if(i[a.uuid]===void 0){u=n.clone();const f=new u.ValueBufferType(l*u.times.length);for(let h=0;h<u.times.length;h++)f[h*l+p]=u.values[h];u.name=(o.nodeName||"")+".morphTargetInfluences",u.values=f,i[a.uuid]=u,t.push(u);continue}const T=n.createInterpolant(new n.ValueBufferType(1));u=i[a.uuid];for(let f=0;f<u.times.length;f++)u.values[f*l+p]=T.evaluate(u.times[f]);for(let f=0;f<n.times.length;f++){const h=this.insertKeyframe(u,n.times[f]);u.values[h*l+p]=n.values[f]}}return c.tracks=t,c}};export{j as GLTFExporter};
