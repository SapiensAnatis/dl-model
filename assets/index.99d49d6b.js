var Y_=Object.defineProperty;var Z_=(r,e,t)=>e in r?Y_(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var pn=(r,e,t)=>(Z_(r,typeof e!="symbol"?e+"":e,t),t);const J_=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerpolicy&&(s.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?s.credentials="include":i.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}};J_();var Ro,Me,Kp,to,wf,Qp,Qa={},em=[],K_=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function $n(r,e){for(var t in e)r[t]=e[t];return r}function tm(r){var e=r.parentNode;e&&e.removeChild(r)}function Rn(r,e,t){var n,i,s,o={};for(s in e)s=="key"?n=e[s]:s=="ref"?i=e[s]:o[s]=e[s];if(arguments.length>2&&(o.children=arguments.length>3?Ro.call(arguments,2):t),typeof r=="function"&&r.defaultProps!=null)for(s in r.defaultProps)o[s]===void 0&&(o[s]=r.defaultProps[s]);return no(r,o,n,i,null)}function no(r,e,t,n,i){var s={type:r,props:e,key:t,ref:n,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:i==null?++Kp:i};return i==null&&Me.vnode!=null&&Me.vnode(s),s}function nm(){return{current:null}}function An(r){return r.children}function Mn(r,e){this.props=r,this.context=e}function rs(r,e){if(e==null)return r.__?rs(r.__,r.__.__k.indexOf(r)+1):null;for(var t;e<r.__k.length;e++)if((t=r.__k[e])!=null&&t.__e!=null)return t.__e;return typeof r.type=="function"?rs(r):null}function im(r){var e,t;if((r=r.__)!=null&&r.__c!=null){for(r.__e=r.__c.base=null,e=0;e<r.__k.length;e++)if((t=r.__k[e])!=null&&t.__e!=null){r.__e=r.__c.base=t.__e;break}return im(r)}}function jc(r){(!r.__d&&(r.__d=!0)&&to.push(r)&&!el.__r++||wf!==Me.debounceRendering)&&((wf=Me.debounceRendering)||setTimeout)(el)}function el(){for(var r;el.__r=to.length;)r=to.sort(function(e,t){return e.__v.__b-t.__v.__b}),to=[],r.some(function(e){var t,n,i,s,o,a;e.__d&&(o=(s=(t=e).__v).__e,(a=t.__P)&&(n=[],(i=$n({},s)).__v=s.__v+1,Ju(a,s,i,t.__n,a.ownerSVGElement!==void 0,s.__h!=null?[o]:null,n,o==null?rs(s):o,s.__h),am(n,s),s.__e!=o&&im(s)))})}function rm(r,e,t,n,i,s,o,a,l,c){var u,h,f,d,p,m,g,v=n&&n.__k||em,_=v.length;for(t.__k=[],u=0;u<e.length;u++)if((d=t.__k[u]=(d=e[u])==null||typeof d=="boolean"?null:typeof d=="string"||typeof d=="number"||typeof d=="bigint"?no(null,d,null,null,d):Array.isArray(d)?no(An,{children:d},null,null,null):d.__b>0?no(d.type,d.props,d.key,null,d.__v):d)!=null){if(d.__=t,d.__b=t.__b+1,(f=v[u])===null||f&&d.key==f.key&&d.type===f.type)v[u]=void 0;else for(h=0;h<_;h++){if((f=v[h])&&d.key==f.key&&d.type===f.type){v[h]=void 0;break}f=null}Ju(r,d,f=f||Qa,i,s,o,a,l,c),p=d.__e,(h=d.ref)&&f.ref!=h&&(g||(g=[]),f.ref&&g.push(f.ref,null,d),g.push(h,d.__c||p,d)),p!=null?(m==null&&(m=p),typeof d.type=="function"&&d.__k===f.__k?d.__d=l=sm(d,l,r):l=om(r,d,f,v,p,l),typeof t.type=="function"&&(t.__d=l)):l&&f.__e==l&&l.parentNode!=r&&(l=rs(f))}for(t.__e=m,u=_;u--;)v[u]!=null&&(typeof t.type=="function"&&v[u].__e!=null&&v[u].__e==t.__d&&(t.__d=rs(n,u+1)),cm(v[u],v[u]));if(g)for(u=0;u<g.length;u++)lm(g[u],g[++u],g[++u])}function sm(r,e,t){for(var n,i=r.__k,s=0;i&&s<i.length;s++)(n=i[s])&&(n.__=r,e=typeof n.type=="function"?sm(n,e,t):om(t,n,n,i,n.__e,e));return e}function Jn(r,e){return e=e||[],r==null||typeof r=="boolean"||(Array.isArray(r)?r.some(function(t){Jn(t,e)}):e.push(r)),e}function om(r,e,t,n,i,s){var o,a,l;if(e.__d!==void 0)o=e.__d,e.__d=void 0;else if(t==null||i!=s||i.parentNode==null)e:if(s==null||s.parentNode!==r)r.appendChild(i),o=null;else{for(a=s,l=0;(a=a.nextSibling)&&l<n.length;l+=2)if(a==i)break e;r.insertBefore(i,s),o=s}return o!==void 0?o:i.nextSibling}function Q_(r,e,t,n,i){var s;for(s in t)s==="children"||s==="key"||s in e||tl(r,s,null,t[s],n);for(s in e)i&&typeof e[s]!="function"||s==="children"||s==="key"||s==="value"||s==="checked"||t[s]===e[s]||tl(r,s,e[s],t[s],n)}function Mf(r,e,t){e[0]==="-"?r.setProperty(e,t):r[e]=t==null?"":typeof t!="number"||K_.test(e)?t:t+"px"}function tl(r,e,t,n,i){var s;e:if(e==="style")if(typeof t=="string")r.style.cssText=t;else{if(typeof n=="string"&&(r.style.cssText=n=""),n)for(e in n)t&&e in t||Mf(r.style,e,"");if(t)for(e in t)n&&t[e]===n[e]||Mf(r.style,e,t[e])}else if(e[0]==="o"&&e[1]==="n")s=e!==(e=e.replace(/Capture$/,"")),e=e.toLowerCase()in r?e.toLowerCase().slice(2):e.slice(2),r.l||(r.l={}),r.l[e+s]=t,t?n||r.addEventListener(e,s?Af:Sf,s):r.removeEventListener(e,s?Af:Sf,s);else if(e!=="dangerouslySetInnerHTML"){if(i)e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(e!=="href"&&e!=="list"&&e!=="form"&&e!=="tabIndex"&&e!=="download"&&e in r)try{r[e]=t==null?"":t;break e}catch{}typeof t=="function"||(t!=null&&(t!==!1||e[0]==="a"&&e[1]==="r")?r.setAttribute(e,t):r.removeAttribute(e))}}function Sf(r){this.l[r.type+!1](Me.event?Me.event(r):r)}function Af(r){this.l[r.type+!0](Me.event?Me.event(r):r)}function Ju(r,e,t,n,i,s,o,a,l){var c,u,h,f,d,p,m,g,v,_,y,x,w,M=e.type;if(e.constructor!==void 0)return null;t.__h!=null&&(l=t.__h,a=e.__e=t.__e,e.__h=null,s=[a]),(c=Me.__b)&&c(e);try{e:if(typeof M=="function"){if(g=e.props,v=(c=M.contextType)&&n[c.__c],_=c?v?v.props.value:c.__:n,t.__c?m=(u=e.__c=t.__c).__=u.__E:("prototype"in M&&M.prototype.render?e.__c=u=new M(g,_):(e.__c=u=new Mn(g,_),u.constructor=M,u.render=tv),v&&v.sub(u),u.props=g,u.state||(u.state={}),u.context=_,u.__n=n,h=u.__d=!0,u.__h=[]),u.__s==null&&(u.__s=u.state),M.getDerivedStateFromProps!=null&&(u.__s==u.state&&(u.__s=$n({},u.__s)),$n(u.__s,M.getDerivedStateFromProps(g,u.__s))),f=u.props,d=u.state,h)M.getDerivedStateFromProps==null&&u.componentWillMount!=null&&u.componentWillMount(),u.componentDidMount!=null&&u.__h.push(u.componentDidMount);else{if(M.getDerivedStateFromProps==null&&g!==f&&u.componentWillReceiveProps!=null&&u.componentWillReceiveProps(g,_),!u.__e&&u.shouldComponentUpdate!=null&&u.shouldComponentUpdate(g,u.__s,_)===!1||e.__v===t.__v){u.props=g,u.state=u.__s,e.__v!==t.__v&&(u.__d=!1),u.__v=e,e.__e=t.__e,e.__k=t.__k,e.__k.forEach(function(P){P&&(P.__=e)}),u.__h.length&&o.push(u);break e}u.componentWillUpdate!=null&&u.componentWillUpdate(g,u.__s,_),u.componentDidUpdate!=null&&u.__h.push(function(){u.componentDidUpdate(f,d,p)})}if(u.context=_,u.props=g,u.__v=e,u.__P=r,y=Me.__r,x=0,"prototype"in M&&M.prototype.render)u.state=u.__s,u.__d=!1,y&&y(e),c=u.render(u.props,u.state,u.context);else do u.__d=!1,y&&y(e),c=u.render(u.props,u.state,u.context),u.state=u.__s;while(u.__d&&++x<25);u.state=u.__s,u.getChildContext!=null&&(n=$n($n({},n),u.getChildContext())),h||u.getSnapshotBeforeUpdate==null||(p=u.getSnapshotBeforeUpdate(f,d)),w=c!=null&&c.type===An&&c.key==null?c.props.children:c,rm(r,Array.isArray(w)?w:[w],e,t,n,i,s,o,a,l),u.base=e.__e,e.__h=null,u.__h.length&&o.push(u),m&&(u.__E=u.__=null),u.__e=!1}else s==null&&e.__v===t.__v?(e.__k=t.__k,e.__e=t.__e):e.__e=ev(t.__e,e,t,n,i,s,o,l);(c=Me.diffed)&&c(e)}catch(P){e.__v=null,(l||s!=null)&&(e.__e=a,e.__h=!!l,s[s.indexOf(a)]=null),Me.__e(P,e,t)}}function am(r,e){Me.__c&&Me.__c(e,r),r.some(function(t){try{r=t.__h,t.__h=[],r.some(function(n){n.call(t)})}catch(n){Me.__e(n,t.__v)}})}function ev(r,e,t,n,i,s,o,a){var l,c,u,h=t.props,f=e.props,d=e.type,p=0;if(d==="svg"&&(i=!0),s!=null){for(;p<s.length;p++)if((l=s[p])&&"setAttribute"in l==!!d&&(d?l.localName===d:l.nodeType===3)){r=l,s[p]=null;break}}if(r==null){if(d===null)return document.createTextNode(f);r=i?document.createElementNS("http://www.w3.org/2000/svg",d):document.createElement(d,f.is&&f),s=null,a=!1}if(d===null)h===f||a&&r.data===f||(r.data=f);else{if(s=s&&Ro.call(r.childNodes),c=(h=t.props||Qa).dangerouslySetInnerHTML,u=f.dangerouslySetInnerHTML,!a){if(s!=null)for(h={},p=0;p<r.attributes.length;p++)h[r.attributes[p].name]=r.attributes[p].value;(u||c)&&(u&&(c&&u.__html==c.__html||u.__html===r.innerHTML)||(r.innerHTML=u&&u.__html||""))}if(Q_(r,f,h,i,a),u)e.__k=[];else if(p=e.props.children,rm(r,Array.isArray(p)?p:[p],e,t,n,i&&d!=="foreignObject",s,o,s?s[0]:t.__k&&rs(t,0),a),s!=null)for(p=s.length;p--;)s[p]!=null&&tm(s[p]);a||("value"in f&&(p=f.value)!==void 0&&(p!==r.value||d==="progress"&&!p||d==="option"&&p!==h.value)&&tl(r,"value",p,h.value,!1),"checked"in f&&(p=f.checked)!==void 0&&p!==r.checked&&tl(r,"checked",p,h.checked,!1))}return r}function lm(r,e,t){try{typeof r=="function"?r(e):r.current=e}catch(n){Me.__e(n,t)}}function cm(r,e,t){var n,i;if(Me.unmount&&Me.unmount(r),(n=r.ref)&&(n.current&&n.current!==r.__e||lm(n,null,e)),(n=r.__c)!=null){if(n.componentWillUnmount)try{n.componentWillUnmount()}catch(s){Me.__e(s,e)}n.base=n.__P=null}if(n=r.__k)for(i=0;i<n.length;i++)n[i]&&cm(n[i],e,typeof r.type!="function");t||r.__e==null||tm(r.__e),r.__e=r.__d=void 0}function tv(r,e,t){return this.constructor(r,t)}function ss(r,e,t){var n,i,s;Me.__&&Me.__(r,e),i=(n=typeof t=="function")?null:t&&t.__k||e.__k,s=[],Ju(e,r=(!n&&t||e).__k=Rn(An,null,[r]),i||Qa,Qa,e.ownerSVGElement!==void 0,!n&&t?[t]:i?null:e.firstChild?Ro.call(e.childNodes):null,s,!n&&t?t:i?i.__e:e.firstChild,n),am(s,r)}function um(r,e){ss(r,e,um)}function nv(r,e,t){var n,i,s,o=$n({},r.props);for(s in e)s=="key"?n=e[s]:s=="ref"?i=e[s]:o[s]=e[s];return arguments.length>2&&(o.children=arguments.length>3?Ro.call(arguments,2):t),no(r.type,o,n||r.key,i||r.ref,null)}function hm(r,e){var t={__c:e="__cC"+Qp++,__:r,Consumer:function(n,i){return n.children(i)},Provider:function(n){var i,s;return this.getChildContext||(i=[],(s={})[e]=this,this.getChildContext=function(){return s},this.shouldComponentUpdate=function(o){this.props.value!==o.value&&i.some(jc)},this.sub=function(o){i.push(o);var a=o.componentWillUnmount;o.componentWillUnmount=function(){i.splice(i.indexOf(o),1),a&&a.call(o)}}),n.children}};return t.Provider.__=t.Consumer.contextType=t}Ro=em.slice,Me={__e:function(r,e,t,n){for(var i,s,o;e=e.__;)if((i=e.__c)&&!i.__)try{if((s=i.constructor)&&s.getDerivedStateFromError!=null&&(i.setState(s.getDerivedStateFromError(r)),o=i.__d),i.componentDidCatch!=null&&(i.componentDidCatch(r,n||{}),o=i.__d),o)return i.__E=i}catch(a){r=a}throw r}},Kp=0,Mn.prototype.setState=function(r,e){var t;t=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=$n({},this.state),typeof r=="function"&&(r=r($n({},t),this.props)),r&&$n(t,r),r!=null&&this.__v&&(e&&this.__h.push(e),jc(this))},Mn.prototype.forceUpdate=function(r){this.__v&&(this.__e=!0,r&&this.__h.push(r),jc(this))},Mn.prototype.render=An,to=[],el.__r=0,Qp=0;const iv="modulepreload",rv=function(r){return"/dl-model/"+r},Tf={},nt=function(e,t,n){return!t||t.length===0?e():Promise.all(t.map(i=>{if(i=rv(i),i in Tf)return;Tf[i]=!0;const s=i.endsWith(".css"),o=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${i}"]${o}`))return;const a=document.createElement("link");if(a.rel=s?"stylesheet":iv,s||(a.as="script",a.crossOrigin=""),a.href=i,document.head.appendChild(a),s)return new Promise((l,c)=>{a.addEventListener("load",l),a.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${i}`)))})})).then(()=>e())};var _r,vt,Ql,Ef,os=0,fm=[],za=[],Cf=Me.__b,Pf=Me.__r,Lf=Me.diffed,If=Me.__c,Rf=Me.unmount;function Is(r,e){Me.__h&&Me.__h(vt,r,os||e),os=0;var t=vt.__H||(vt.__H={__:[],__h:[]});return r>=t.__.length&&t.__.push({__V:za}),t.__[r]}function xl(r){return os=1,bl(gm,r)}function bl(r,e,t){var n=Is(_r++,2);if(n.t=r,!n.__c&&(n.__=[t?t(e):gm(void 0,e),function(s){var o=n.__N?n.__N[0]:n.__[0],a=n.t(o,s);o!==a&&(n.__N=[a,n.__[1]],n.__c.setState({}))}],n.__c=vt,!n.__c.u)){n.__c.__H.u=!0;var i=n.__c.shouldComponentUpdate;n.__c.shouldComponentUpdate=function(s,o,a){var l=n.__c.__H.__.filter(function(c){return c.__c});return(l.every(function(c){return!c.__N})||!l.every(function(c){if(!c.__N)return!0;var u=c.__[0];return c.__=c.__N,c.__N=void 0,u===c.__[0]}))&&(!i||i(s,o,a))}}return n.__N||n.__}function sr(r,e){var t=Is(_r++,3);!Me.__s&&Qu(t.__H,e)&&(t.__=r,t.o=e,vt.__H.__h.push(t))}function as(r,e){var t=Is(_r++,4);!Me.__s&&Qu(t.__H,e)&&(t.__=r,t.o=e,vt.__h.push(t))}function yn(r){return os=5,wl(function(){return{current:r}},[])}function dm(r,e,t){os=6,as(function(){return typeof r=="function"?(r(e()),function(){return r(null)}):r?(r.current=e(),function(){return r.current=null}):void 0},t==null?t:t.concat(r))}function wl(r,e){var t=Is(_r++,7);return Qu(t.__H,e)?(t.__V=r(),t.o=e,t.__h=r,t.__V):t.__}function pm(r,e){return os=8,wl(function(){return r},e)}function mm(r){var e=vt.context[r.__c],t=Is(_r++,9);return t.c=r,e?(t.__==null&&(t.__=!0,e.sub(vt)),e.props.value):r.__}function Ku(r,e){Me.useDebugValue&&Me.useDebugValue(e?e(r):r)}function sv(r){var e=Is(_r++,10),t=xl();return e.__=r,vt.componentDidCatch||(vt.componentDidCatch=function(n){e.__&&e.__(n),t[1](n)}),[t[0],function(){t[1](void 0)}]}function ov(){for(var r;r=fm.shift();)if(r.__P&&r.__H)try{r.__H.__h.forEach(Ba),r.__H.__h.forEach(Yc),r.__H.__h=[]}catch(e){r.__H.__h=[],Me.__e(e,r.__v)}}Me.__b=function(r){vt=null,Cf&&Cf(r)},Me.__r=function(r){Pf&&Pf(r),_r=0;var e=(vt=r.__c).__H;e&&(Ql===vt?(e.__h=[],vt.__h=[],e.__.forEach(function(t){t.__N&&(t.__=t.__N),t.__V=za,t.__N=t.o=void 0})):(e.__h.forEach(Ba),e.__h.forEach(Yc),e.__h=[])),Ql=vt},Me.diffed=function(r){Lf&&Lf(r);var e=r.__c;e&&e.__H&&(e.__H.__h.length&&(fm.push(e)!==1&&Ef===Me.requestAnimationFrame||((Ef=Me.requestAnimationFrame)||function(t){var n,i=function(){clearTimeout(s),Df&&cancelAnimationFrame(n),setTimeout(t)},s=setTimeout(i,100);Df&&(n=requestAnimationFrame(i))})(ov)),e.__H.__.forEach(function(t){t.o&&(t.__H=t.o),t.__V!==za&&(t.__=t.__V),t.o=void 0,t.__V=za})),Ql=vt=null},Me.__c=function(r,e){e.some(function(t){try{t.__h.forEach(Ba),t.__h=t.__h.filter(function(n){return!n.__||Yc(n)})}catch(n){e.some(function(i){i.__h&&(i.__h=[])}),e=[],Me.__e(n,t.__v)}}),If&&If(r,e)},Me.unmount=function(r){Rf&&Rf(r);var e,t=r.__c;t&&t.__H&&(t.__H.__.forEach(function(n){try{Ba(n)}catch(i){e=i}}),e&&Me.__e(e,t.__v))};var Df=typeof requestAnimationFrame=="function";function Ba(r){var e=vt,t=r.__c;typeof t=="function"&&(r.__c=void 0,t()),vt=e}function Yc(r){var e=vt;r.__c=r.__(),vt=e}function Qu(r,e){return!r||r.length!==e.length||e.some(function(t,n){return t!==r[n]})}function gm(r,e){return typeof e=="function"?e(r):e}function _m(r,e){for(var t in e)r[t]=e[t];return r}function Zc(r,e){for(var t in r)if(t!=="__source"&&!(t in e))return!0;for(var n in e)if(n!=="__source"&&r[n]!==e[n])return!0;return!1}function nl(r){this.props=r}function vm(r,e){function t(i){var s=this.props.ref,o=s==i.ref;return!o&&s&&(s.call?s(null):s.current=null),e?!e(this.props,i)||!o:Zc(this.props,i)}function n(i){return this.shouldComponentUpdate=t,Rn(r,i)}return n.displayName="Memo("+(r.displayName||r.name)+")",n.prototype.isReactComponent=!0,n.__f=!0,n}(nl.prototype=new Mn).isPureReactComponent=!0,nl.prototype.shouldComponentUpdate=function(r,e){return Zc(this.props,r)||Zc(this.state,e)};var Ff=Me.__b;Me.__b=function(r){r.type&&r.type.__f&&r.ref&&(r.props.ref=r.ref,r.ref=null),Ff&&Ff(r)};var av=typeof Symbol<"u"&&Symbol.for&&Symbol.for("react.forward_ref")||3911;function ym(r){function e(t){var n=_m({},t);return delete n.ref,r(n,t.ref||null)}return e.$$typeof=av,e.render=e,e.prototype.isReactComponent=e.__f=!0,e.displayName="ForwardRef("+(r.displayName||r.name)+")",e}var Of=function(r,e){return r==null?null:Jn(Jn(r).map(e))},xm={map:Of,forEach:Of,count:function(r){return r?Jn(r).length:0},only:function(r){var e=Jn(r);if(e.length!==1)throw"Children.only";return e[0]},toArray:Jn},lv=Me.__e;Me.__e=function(r,e,t,n){if(r.then){for(var i,s=e;s=s.__;)if((i=s.__c)&&i.__c)return e.__e==null&&(e.__e=t.__e,e.__k=t.__k),i.__c(r,e)}lv(r,e,t,n)};var Nf=Me.unmount;function Ki(){this.__u=0,this.t=null,this.__b=null}function bm(r){var e=r.__.__c;return e&&e.__a&&e.__a(r)}function Ht(r){var e,t,n;function i(s){if(e||(e=r()).then(function(o){t=o.default||o},function(o){n=o}),n)throw n;if(!t)throw e;return Rn(t,s)}return i.displayName="Lazy",i.__f=!0,i}function Qr(){this.u=null,this.o=null}Me.unmount=function(r){var e=r.__c;e&&e.__R&&e.__R(),e&&r.__h===!0&&(r.type=null),Nf&&Nf(r)},(Ki.prototype=new Mn).__c=function(r,e){var t=e.__c,n=this;n.t==null&&(n.t=[]),n.t.push(t);var i=bm(n.__v),s=!1,o=function(){s||(s=!0,t.__R=null,i?i(a):a())};t.__R=o;var a=function(){if(!--n.__u){if(n.state.__a){var c=n.state.__a;n.__v.__k[0]=function h(f,d,p){return f&&(f.__v=null,f.__k=f.__k&&f.__k.map(function(m){return h(m,d,p)}),f.__c&&f.__c.__P===d&&(f.__e&&p.insertBefore(f.__e,f.__d),f.__c.__e=!0,f.__c.__P=p)),f}(c,c.__c.__P,c.__c.__O)}var u;for(n.setState({__a:n.__b=null});u=n.t.pop();)u.forceUpdate()}},l=e.__h===!0;n.__u++||l||n.setState({__a:n.__b=n.__v.__k[0]}),r.then(o,o)},Ki.prototype.componentWillUnmount=function(){this.t=[]},Ki.prototype.render=function(r,e){if(this.__b){if(this.__v.__k){var t=document.createElement("div"),n=this.__v.__k[0].__c;this.__v.__k[0]=function s(o,a,l){return o&&(o.__c&&o.__c.__H&&(o.__c.__H.__.forEach(function(c){typeof c.__c=="function"&&c.__c()}),o.__c.__H=null),(o=_m({},o)).__c!=null&&(o.__c.__P===l&&(o.__c.__P=a),o.__c=null),o.__k=o.__k&&o.__k.map(function(c){return s(c,a,l)})),o}(this.__b,t,n.__O=n.__P)}this.__b=null}var i=e.__a&&Rn(An,null,r.fallback);return i&&(i.__h=null),[Rn(An,null,e.__a?null:r.children),i]};var kf=function(r,e,t){if(++t[1]===t[0]&&r.o.delete(e),r.props.revealOrder&&(r.props.revealOrder[0]!=="t"||!r.o.size))for(t=r.u;t;){for(;t.length>3;)t.pop()();if(t[1]<t[0])break;r.u=t=t[2]}};function cv(r){return this.getChildContext=function(){return r.context},r.children}function uv(r){var e=this,t=r.i;e.componentWillUnmount=function(){ss(null,e.l),e.l=null,e.i=null},e.i&&e.i!==t&&e.componentWillUnmount(),r.__v?(e.l||(e.i=t,e.l={nodeType:1,parentNode:t,childNodes:[],appendChild:function(n){this.childNodes.push(n),e.i.appendChild(n)},insertBefore:function(n,i){this.childNodes.push(n),e.i.appendChild(n)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),e.i.removeChild(n)}}),ss(Rn(cv,{context:e.context},r.__v),e.l)):e.l&&e.componentWillUnmount()}function wm(r,e){var t=Rn(uv,{__v:r,i:e});return t.containerInfo=e,t}(Qr.prototype=new Mn).__a=function(r){var e=this,t=bm(e.__v),n=e.o.get(r);return n[0]++,function(i){var s=function(){e.props.revealOrder?(n.push(i),kf(e,r,n)):i()};t?t(s):s()}},Qr.prototype.render=function(r){this.u=null,this.o=new Map;var e=Jn(r.children);r.revealOrder&&r.revealOrder[0]==="b"&&e.reverse();for(var t=e.length;t--;)this.o.set(e[t],this.u=[1,0,this.u]);return r.children},Qr.prototype.componentDidUpdate=Qr.prototype.componentDidMount=function(){var r=this;this.o.forEach(function(e,t){kf(r,t,e)})};var Mm=typeof Symbol<"u"&&Symbol.for&&Symbol.for("react.element")||60103,hv=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,fv=typeof document<"u",dv=function(r){return(typeof Symbol<"u"&&typeof Symbol()=="symbol"?/fil|che|rad/i:/fil|che|ra/i).test(r)};function Sm(r,e,t){return e.__k==null&&(e.textContent=""),ss(r,e),typeof t=="function"&&t(),r?r.__c:null}function Am(r,e,t){return um(r,e),typeof t=="function"&&t(),r?r.__c:null}Mn.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach(function(r){Object.defineProperty(Mn.prototype,r,{configurable:!0,get:function(){return this["UNSAFE_"+r]},set:function(e){Object.defineProperty(this,r,{configurable:!0,writable:!0,value:e})}})});var zf=Me.event;function pv(){}function mv(){return this.cancelBubble}function gv(){return this.defaultPrevented}Me.event=function(r){return zf&&(r=zf(r)),r.persist=pv,r.isPropagationStopped=mv,r.isDefaultPrevented=gv,r.nativeEvent=r};var Tm,Bf={configurable:!0,get:function(){return this.class}},Uf=Me.vnode;Me.vnode=function(r){var e=r.type,t=r.props,n=t;if(typeof e=="string"){var i=e.indexOf("-")===-1;for(var s in n={},t){var o=t[s];fv&&s==="children"&&e==="noscript"||s==="value"&&"defaultValue"in t&&o==null||(s==="defaultValue"&&"value"in t&&t.value==null?s="value":s==="download"&&o===!0?o="":/ondoubleclick/i.test(s)?s="ondblclick":/^onchange(textarea|input)/i.test(s+e)&&!dv(t.type)?s="oninput":/^onfocus$/i.test(s)?s="onfocusin":/^onblur$/i.test(s)?s="onfocusout":/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(s)?s=s.toLowerCase():i&&hv.test(s)?s=s.replace(/[A-Z0-9]/g,"-$&").toLowerCase():o===null&&(o=void 0),/^oninput$/i.test(s)&&(s=s.toLowerCase(),n[s]&&(s="oninputCapture")),n[s]=o)}e=="select"&&n.multiple&&Array.isArray(n.value)&&(n.value=Jn(t.children).forEach(function(a){a.props.selected=n.value.indexOf(a.props.value)!=-1})),e=="select"&&n.defaultValue!=null&&(n.value=Jn(t.children).forEach(function(a){a.props.selected=n.multiple?n.defaultValue.indexOf(a.props.value)!=-1:n.defaultValue==a.props.value})),r.props=n,t.class!=t.className&&(Bf.enumerable="className"in t,t.className!=null&&(n.class=t.className),Object.defineProperty(n,"className",Bf))}r.$$typeof=Mm,Uf&&Uf(r)};var Vf=Me.__r;Me.__r=function(r){Vf&&Vf(r),Tm=r.__c};var Em={ReactCurrentDispatcher:{current:{readContext:function(r){return Tm.__n[r.__c].props.value}}}},_v="17.0.2";function Cm(r){return Rn.bind(null,r)}function eh(r){return!!r&&r.$$typeof===Mm}function Pm(r){return eh(r)?nv.apply(null,arguments):r}function Lm(r){return!!r.__k&&(ss(null,r),!0)}function Im(r){return r&&(r.base||r.nodeType===1&&r)||null}var Rm=function(r,e){return r(e)},Dm=function(r,e){return r(e)},vv=An;function th(r){r()}function Fm(r){return r}function Om(){return[!1,th]}var yv=as;function Nm(r,e){var t=xl(e),n=t[0],i=t[1];return sr(function(){return r(function(){i(function(){return e()})})},[r,e]),n}const xv={useState:xl,useReducer:bl,useEffect:sr,useLayoutEffect:as,useInsertionEffect:as,useTransition:Om,useDeferredValue:Fm,useSyncExternalStore:Nm,startTransition:th,useRef:yn,useImperativeHandle:dm,useMemo:wl,useCallback:pm,useContext:mm,useDebugValue:Ku,version:"17.0.2",Children:xm,render:Sm,hydrate:Am,unmountComponentAtNode:Lm,createPortal:wm,createElement:Rn,createContext:hm,createFactory:Cm,cloneElement:Pm,createRef:nm,Fragment:An,isValidElement:eh,findDOMNode:Im,Component:Mn,PureComponent:nl,memo:vm,forwardRef:ym,flushSync:Dm,unstable_batchedUpdates:Rm,StrictMode:An,Suspense:Ki,SuspenseList:Qr,lazy:Ht,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:Em},yC=Object.freeze(Object.defineProperty({__proto__:null,default:xv,startTransition:th,useDeferredValue:Fm,useTransition:Om,useInsertionEffect:yv,useSyncExternalStore:Nm,version:_v,Children:xm,render:Sm,hydrate:Am,unmountComponentAtNode:Lm,createPortal:wm,createFactory:Cm,cloneElement:Pm,isValidElement:eh,findDOMNode:Im,PureComponent:nl,memo:vm,forwardRef:ym,flushSync:Dm,unstable_batchedUpdates:Rm,StrictMode:vv,Suspense:Ki,SuspenseList:Qr,lazy:Ht,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:Em,createElement:Rn,createContext:hm,createRef:nm,Fragment:An,Component:Mn,useState:xl,useReducer:bl,useEffect:sr,useLayoutEffect:as,useRef:yn,useImperativeHandle:dm,useMemo:wl,useCallback:pm,useContext:mm,useDebugValue:Ku,useErrorBoundary:sv},Symbol.toStringTag,{value:"Module"})),bv=()=>{const r=yn(!0);return sr(()=>{r.current=!1},[]),r.current};function wv(r){let e;const t=new Set,n=(c,u)=>{const h=typeof c=="function"?c(e):c;if(h!==e){const f=e;e=u?h:Object.assign({},e,h),t.forEach(d=>d(e,f))}},i=()=>e,s=(c,u=i,h=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let f=u(e);function d(){const p=u(e);if(!h(f,p)){const m=f;c(f=p,m)}}return t.add(d),()=>t.delete(d)},l={setState:n,getState:i,subscribe:(c,u,h)=>u||h?s(c,u,h):(t.add(c),()=>t.delete(c)),destroy:()=>t.clear()};return e=r(n,i,l),l}const Mv=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),Gf=Mv?sr:as;function nh(r){const e=typeof r=="function"?wv(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=bl(g=>g+1,0),o=e.getState(),a=yn(o),l=yn(n),c=yn(i),u=yn(!1),h=yn();h.current===void 0&&(h.current=n(o));let f,d=!1;(a.current!==o||l.current!==n||c.current!==i||u.current)&&(f=n(o),d=!i(h.current,f)),Gf(()=>{d&&(h.current=f),a.current=o,l.current=n,c.current=i,u.current=!1});const p=yn(o);Gf(()=>{const g=()=>{try{const _=e.getState(),y=l.current(_);c.current(h.current,y)||(a.current=_,h.current=y,s())}catch{u.current=!0,s()}},v=e.subscribe(g);return e.getState()!==p.current&&g(),v},[]);const m=d?f:h.current;return Ku(m),m};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}function xn(r){for(var e=arguments.length,t=Array(e>1?e-1:0),n=1;n<e;n++)t[n-1]=arguments[n];throw Error("[Immer] minified error nr: "+r+(t.length?" "+t.map(function(i){return"'"+i+"'"}).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function ls(r){return!!r&&!!r[Qt]}function or(r){return!!r&&(function(e){if(!e||typeof e!="object")return!1;var t=Object.getPrototypeOf(e);if(t===null)return!0;var n=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return n===Object||typeof n=="function"&&Function.toString.call(n)===Iv}(r)||Array.isArray(r)||!!r[Zf]||!!r.constructor[Zf]||ih(r)||rh(r))}function co(r,e,t){t===void 0&&(t=!1),Rs(r)===0?(t?Object.keys:ch)(r).forEach(function(n){t&&typeof n=="symbol"||e(n,r[n],r)}):r.forEach(function(n,i){return e(i,n,r)})}function Rs(r){var e=r[Qt];return e?e.i>3?e.i-4:e.i:Array.isArray(r)?1:ih(r)?2:rh(r)?3:0}function Jc(r,e){return Rs(r)===2?r.has(e):Object.prototype.hasOwnProperty.call(r,e)}function Sv(r,e){return Rs(r)===2?r.get(e):r[e]}function km(r,e,t){var n=Rs(r);n===2?r.set(e,t):n===3?(r.delete(e),r.add(t)):r[e]=t}function Av(r,e){return r===e?r!==0||1/r==1/e:r!=r&&e!=e}function ih(r){return Pv&&r instanceof Map}function rh(r){return Lv&&r instanceof Set}function Vi(r){return r.o||r.t}function sh(r){if(Array.isArray(r))return Array.prototype.slice.call(r);var e=Rv(r);delete e[Qt];for(var t=ch(e),n=0;n<t.length;n++){var i=t[n],s=e[i];s.writable===!1&&(s.writable=!0,s.configurable=!0),(s.get||s.set)&&(e[i]={configurable:!0,writable:!0,enumerable:s.enumerable,value:r[i]})}return Object.create(Object.getPrototypeOf(r),e)}function oh(r,e){return e===void 0&&(e=!1),ah(r)||ls(r)||!or(r)||(Rs(r)>1&&(r.set=r.add=r.clear=r.delete=Tv),Object.freeze(r),e&&co(r,function(t,n){return oh(n,!0)},!0)),r}function Tv(){xn(2)}function ah(r){return r==null||typeof r!="object"||Object.isFrozen(r)}function Ln(r){var e=Dv[r];return e||xn(18,r),e}function Hf(){return uo}function ec(r,e){e&&(Ln("Patches"),r.u=[],r.s=[],r.v=e)}function il(r){Kc(r),r.p.forEach(Ev),r.p=null}function Kc(r){r===uo&&(uo=r.l)}function Wf(r){return uo={p:[],l:uo,h:r,m:!0,_:0}}function Ev(r){var e=r[Qt];e.i===0||e.i===1?e.j():e.O=!0}function tc(r,e){e._=e.p.length;var t=e.p[0],n=r!==void 0&&r!==t;return e.h.g||Ln("ES5").S(e,r,n),n?(t[Qt].P&&(il(e),xn(4)),or(r)&&(r=rl(e,r),e.l||sl(e,r)),e.u&&Ln("Patches").M(t[Qt].t,r,e.u,e.s)):r=rl(e,t,[]),il(e),e.u&&e.v(e.u,e.s),r!==zm?r:void 0}function rl(r,e,t){if(ah(e))return e;var n=e[Qt];if(!n)return co(e,function(s,o){return Xf(r,n,e,s,o,t)},!0),e;if(n.A!==r)return e;if(!n.P)return sl(r,n.t,!0),n.t;if(!n.I){n.I=!0,n.A._--;var i=n.i===4||n.i===5?n.o=sh(n.k):n.o;co(n.i===3?new Set(i):i,function(s,o){return Xf(r,n,i,s,o,t)}),sl(r,i,!1),t&&r.u&&Ln("Patches").R(n,t,r.u,r.s)}return n.o}function Xf(r,e,t,n,i,s){if(ls(i)){var o=rl(r,i,s&&e&&e.i!==3&&!Jc(e.D,n)?s.concat(n):void 0);if(km(t,n,o),!ls(o))return;r.m=!1}if(or(i)&&!ah(i)){if(!r.h.F&&r._<1)return;rl(r,i),e&&e.A.l||sl(r,i)}}function sl(r,e,t){t===void 0&&(t=!1),r.h.F&&r.m&&oh(e,t)}function nc(r,e){var t=r[Qt];return(t?Vi(t):r)[e]}function $f(r,e){if(e in r)for(var t=Object.getPrototypeOf(r);t;){var n=Object.getOwnPropertyDescriptor(t,e);if(n)return n;t=Object.getPrototypeOf(t)}}function Qc(r){r.P||(r.P=!0,r.l&&Qc(r.l))}function ic(r){r.o||(r.o=sh(r.t))}function eu(r,e,t){var n=ih(e)?Ln("MapSet").N(e,t):rh(e)?Ln("MapSet").T(e,t):r.g?function(i,s){var o=Array.isArray(i),a={i:o?1:0,A:s?s.A:Hf(),P:!1,I:!1,D:{},l:s,t:i,k:null,o:null,j:null,C:!1},l=a,c=tu;o&&(l=[a],c=Qs);var u=Proxy.revocable(l,c),h=u.revoke,f=u.proxy;return a.k=f,a.j=h,f}(e,t):Ln("ES5").J(e,t);return(t?t.A:Hf()).p.push(n),n}function Cv(r){return ls(r)||xn(22,r),function e(t){if(!or(t))return t;var n,i=t[Qt],s=Rs(t);if(i){if(!i.P&&(i.i<4||!Ln("ES5").K(i)))return i.t;i.I=!0,n=qf(t,s),i.I=!1}else n=qf(t,s);return co(n,function(o,a){i&&Sv(i.t,o)===a||km(n,o,e(a))}),s===3?new Set(n):n}(r)}function qf(r,e){switch(e){case 2:return new Map(r);case 3:return Array.from(r)}return sh(r)}var jf,uo,lh=typeof Symbol<"u"&&typeof Symbol("x")=="symbol",Pv=typeof Map<"u",Lv=typeof Set<"u",Yf=typeof Proxy<"u"&&Proxy.revocable!==void 0&&typeof Reflect<"u",zm=lh?Symbol.for("immer-nothing"):((jf={})["immer-nothing"]=!0,jf),Zf=lh?Symbol.for("immer-draftable"):"__$immer_draftable",Qt=lh?Symbol.for("immer-state"):"__$immer_state",Iv=""+Object.prototype.constructor,ch=typeof Reflect<"u"&&Reflect.ownKeys?Reflect.ownKeys:Object.getOwnPropertySymbols!==void 0?function(r){return Object.getOwnPropertyNames(r).concat(Object.getOwnPropertySymbols(r))}:Object.getOwnPropertyNames,Rv=Object.getOwnPropertyDescriptors||function(r){var e={};return ch(r).forEach(function(t){e[t]=Object.getOwnPropertyDescriptor(r,t)}),e},Dv={},tu={get:function(r,e){if(e===Qt)return r;var t=Vi(r);if(!Jc(t,e))return function(i,s,o){var a,l=$f(s,o);return l?"value"in l?l.value:(a=l.get)===null||a===void 0?void 0:a.call(i.k):void 0}(r,t,e);var n=t[e];return r.I||!or(n)?n:n===nc(r.t,e)?(ic(r),r.o[e]=eu(r.A.h,n,r)):n},has:function(r,e){return e in Vi(r)},ownKeys:function(r){return Reflect.ownKeys(Vi(r))},set:function(r,e,t){var n=$f(Vi(r),e);if(n!=null&&n.set)return n.set.call(r.k,t),!0;if(!r.P){var i=nc(Vi(r),e),s=i==null?void 0:i[Qt];if(s&&s.t===t)return r.o[e]=t,r.D[e]=!1,!0;if(Av(t,i)&&(t!==void 0||Jc(r.t,e)))return!0;ic(r),Qc(r)}return r.o[e]===t&&typeof t!="number"&&(t!==void 0||e in r.o)||(r.o[e]=t,r.D[e]=!0,!0)},deleteProperty:function(r,e){return nc(r.t,e)!==void 0||e in r.t?(r.D[e]=!1,ic(r),Qc(r)):delete r.D[e],r.o&&delete r.o[e],!0},getOwnPropertyDescriptor:function(r,e){var t=Vi(r),n=Reflect.getOwnPropertyDescriptor(t,e);return n&&{writable:!0,configurable:r.i!==1||e!=="length",enumerable:n.enumerable,value:t[e]}},defineProperty:function(){xn(11)},getPrototypeOf:function(r){return Object.getPrototypeOf(r.t)},setPrototypeOf:function(){xn(12)}},Qs={};co(tu,function(r,e){Qs[r]=function(){return arguments[0]=arguments[0][0],e.apply(this,arguments)}}),Qs.deleteProperty=function(r,e){return Qs.set.call(this,r,e,void 0)},Qs.set=function(r,e,t){return tu.set.call(this,r[0],e,t,r[0])};var Fv=function(){function r(t){var n=this;this.g=Yf,this.F=!0,this.produce=function(i,s,o){if(typeof i=="function"&&typeof s!="function"){var a=s;s=i;var l=n;return function(m){var g=this;m===void 0&&(m=a);for(var v=arguments.length,_=Array(v>1?v-1:0),y=1;y<v;y++)_[y-1]=arguments[y];return l.produce(m,function(x){var w;return(w=s).call.apply(w,[g,x].concat(_))})}}var c;if(typeof s!="function"&&xn(6),o!==void 0&&typeof o!="function"&&xn(7),or(i)){var u=Wf(n),h=eu(n,i,void 0),f=!0;try{c=s(h),f=!1}finally{f?il(u):Kc(u)}return typeof Promise<"u"&&c instanceof Promise?c.then(function(m){return ec(u,o),tc(m,u)},function(m){throw il(u),m}):(ec(u,o),tc(c,u))}if(!i||typeof i!="object"){if((c=s(i))===void 0&&(c=i),c===zm&&(c=void 0),n.F&&oh(c,!0),o){var d=[],p=[];Ln("Patches").M(i,c,d,p),o(d,p)}return c}xn(21,i)},this.produceWithPatches=function(i,s){if(typeof i=="function")return function(c){for(var u=arguments.length,h=Array(u>1?u-1:0),f=1;f<u;f++)h[f-1]=arguments[f];return n.produceWithPatches(c,function(d){return i.apply(void 0,[d].concat(h))})};var o,a,l=n.produce(i,s,function(c,u){o=c,a=u});return typeof Promise<"u"&&l instanceof Promise?l.then(function(c){return[c,o,a]}):[l,o,a]},typeof(t==null?void 0:t.useProxies)=="boolean"&&this.setUseProxies(t.useProxies),typeof(t==null?void 0:t.autoFreeze)=="boolean"&&this.setAutoFreeze(t.autoFreeze)}var e=r.prototype;return e.createDraft=function(t){or(t)||xn(8),ls(t)&&(t=Cv(t));var n=Wf(this),i=eu(this,t,void 0);return i[Qt].C=!0,Kc(n),i},e.finishDraft=function(t,n){var i=t&&t[Qt],s=i.A;return ec(s,n),tc(void 0,s)},e.setAutoFreeze=function(t){this.F=t},e.setUseProxies=function(t){t&&!Yf&&xn(20),this.g=t},e.applyPatches=function(t,n){var i;for(i=n.length-1;i>=0;i--){var s=n[i];if(s.path.length===0&&s.op==="replace"){t=s.value;break}}i>-1&&(n=n.slice(i+1));var o=Ln("Patches").$;return ls(t)?o(t,n):this.produce(t,function(a){return o(a,n)})},r}(),en=new Fv,Ov=en.produce;en.produceWithPatches.bind(en);en.setAutoFreeze.bind(en);en.setUseProxies.bind(en);en.applyPatches.bind(en);en.createDraft.bind(en);en.finishDraft.bind(en);const Nv=Ov,Bm=r=>({indices:[0,0],_indicesCache:{},setIndex:(e,t)=>{r(n=>{var h,f;const{indices:i,_indicesCache:s}=n;i[e]=t;const o=i.slice(0,e+1).join(),a=(h=s[o])!=null?h:[],{length:l}=i;for(let d=0;e+1+d<l;d++)i[e+1+d]=(f=a[d])!=null?f:0;const c=i.slice(e),u=i.slice(0,e).join();u&&(s[u]=c)})},showFilter:!1,toggleFilter:()=>r(e=>{e.showFilter=!e.showFilter}),searchAll:!1,toggleSearchAll:()=>r(e=>{e.searchAll=!e.searchAll})}),Jf=r=>r==="true";function Um(r,e){return r&&e&&Object.keys(e).forEach(t=>{const n=e[t];typeof n=="object"?(r[t]||(r[t]={}),Um(r[t],n)):r[t]=n}),r}const kv=(r,e)=>({category:"Adv",setCategory:t=>r(n=>{n.category=t}),advAni:{category:"home",setCategory:t=>r(n=>{n.advAni.category=t}),home:{gender:"Male",setGender:t=>r(n=>{n.advAni.home.gender=t})},weapon:{type:"Sword",setType:t=>r(n=>{n.advAni.weapon.type=t}),gunMode:"Long",setGunMode:t=>r(n=>{n.advAni.weapon.gunMode=t})},genericSkill:{type:"Sword",setType:t=>r(n=>{n.advAni.genericSkill.type=t})},groupByWeapon:{setGroupWeaponType:(t,n)=>r(i=>{i.advAni.groupByWeapon[t]=n})},uniqueOther:{type:"Sword",setType:t=>r(n=>{n.advAni.uniqueOther.type=t}),selected:"",setSelected:t=>r(n=>{n.advAni.uniqueOther.selected=t})}},extraAni:{category:"Dance",setCategory:t=>r(n=>{n.extraAni.category=t})},personalAni:{source:"",setSource:t=>r(n=>{n.personalAni.source=t}),sourceName:"",setSourceName:t=>r(n=>{n.personalAni.sourceName=t})},getCurrentState:()=>{const t=e();return JSON.parse(JSON.stringify(t))},loadState:(t={})=>{r(n=>Um(n,t))}});/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ml="143",Gi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Hi={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Vm=0,nu=1,Gm=2,zv=3,Bv=0,uh=1,Hm=2,es=3,cs=0,Jt=1,xi=2,Wm=1,Uv=2,Kn=0,Qi=1,ol=2,iu=3,ru=4,Xm=5,$i=100,$m=101,qm=102,su=103,ou=104,jm=200,Ym=201,Zm=202,Jm=203,hh=204,fh=205,Km=206,Qm=207,eg=208,tg=209,ng=210,ig=0,rg=1,dh=2,al=3,sg=4,og=5,ag=6,lg=7,ar=0,cg=1,ll=2,Sn=0,ph=1,mh=2,gh=3,_h=4,ug=5,Sl=300,bi=301,wi=302,us=303,ho=304,Ds=306,lr=1e3,Tt=1001,fo=1002,ht=1003,cl=1004,Vv=1004,ul=1005,Gv=1005,it=1006,vh=1007,Hv=1007,vr=1008,Wv=1008,Mi=1009,hg=1010,fg=1011,yh=1012,dg=1013,mi=1014,qn=1015,hs=1016,pg=1017,mg=1018,er=1020,gg=1021,_g=1022,Zt=1023,xh=1024,vg=1025,vi=1026,cr=1027,yg=1028,xg=1029,bg=1030,wg=1031,Mg=1033,Ua=33776,Va=33777,Ga=33778,Ha=33779,au=35840,lu=35841,cu=35842,uu=35843,Sg=36196,hu=37492,fu=37496,du=37808,pu=37809,mu=37810,gu=37811,_u=37812,vu=37813,yu=37814,xu=37815,bu=37816,wu=37817,Mu=37818,Su=37819,Au=37820,Tu=37821,Eu=36492,Ag=2200,bh=2201,Tg=2202,po=2300,mo=2301,Wa=2302,ji=2400,Yi=2401,go=2402,Al=2500,wh=2501,Xv=0,$v=1,qv=2,Si=3e3,Ge=3001,Eg=3200,Cg=3201,Ci=0,Pg=1,jv="",Pn="srgb",gi="srgb-linear",Yv=0,Xa=7680,Zv=7681,Jv=7682,Kv=7683,Qv=34055,ey=34056,ty=5386,ny=512,iy=513,ry=514,sy=515,oy=516,ay=517,ly=518,Lg=519,_o=35044,cy=35048,uy=35040,hy=35045,fy=35049,dy=35041,py=35046,my=35050,gy=35042,_y="100",Cu="300 es",hl=1035;class Nn{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const Et=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Kf=1234567;const tr=Math.PI/180,vo=180/Math.PI;function Kt(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Et[r&255]+Et[r>>8&255]+Et[r>>16&255]+Et[r>>24&255]+"-"+Et[e&255]+Et[e>>8&255]+"-"+Et[e>>16&15|64]+Et[e>>24&255]+"-"+Et[t&63|128]+Et[t>>8&255]+"-"+Et[t>>16&255]+Et[t>>24&255]+Et[n&255]+Et[n>>8&255]+Et[n>>16&255]+Et[n>>24&255]).toLowerCase()}function ft(r,e,t){return Math.max(e,Math.min(t,r))}function Mh(r,e){return(r%e+e)%e}function vy(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function yy(r,e,t){return r!==e?(t-r)/(e-r):0}function io(r,e,t){return(1-t)*r+t*e}function xy(r,e,t,n){return io(r,e,1-Math.exp(-t*n))}function by(r,e=1){return e-Math.abs(Mh(r,e*2)-e)}function wy(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function My(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function Sy(r,e){return r+Math.floor(Math.random()*(e-r+1))}function Ay(r,e){return r+Math.random()*(e-r)}function Ty(r){return r*(.5-Math.random())}function Ey(r){r!==void 0&&(Kf=r);let e=Kf+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Cy(r){return r*tr}function Py(r){return r*vo}function Pu(r){return(r&r-1)===0&&r!==0}function Ig(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function fl(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Ly(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+n)/2),u=o((e+n)/2),h=s((e-n)/2),f=o((e-n)/2),d=s((n-e)/2),p=o((n-e)/2);switch(i){case"XYX":r.set(a*u,l*h,l*f,a*c);break;case"YZY":r.set(l*f,a*u,l*h,a*c);break;case"ZXZ":r.set(l*h,l*f,a*u,a*c);break;case"XZX":r.set(a*u,l*p,l*d,a*c);break;case"YXY":r.set(l*d,a*u,l*p,a*c);break;case"ZYZ":r.set(l*p,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Iy(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Ry(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var bn=Object.freeze({__proto__:null,DEG2RAD:tr,RAD2DEG:vo,generateUUID:Kt,clamp:ft,euclideanModulo:Mh,mapLinear:vy,inverseLerp:yy,lerp:io,damp:xy,pingpong:by,smoothstep:wy,smootherstep:My,randInt:Sy,randFloat:Ay,randFloatSpread:Ty,seededRandom:Ey,degToRad:Cy,radToDeg:Py,isPowerOfTwo:Pu,ceilPowerOfTwo:Ig,floorPowerOfTwo:fl,setQuaternionFromProperEuler:Ly,normalize:Ry,denormalize:Iy});class q{constructor(e=0,t=0){q.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ot{constructor(){Ot.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],m=i[0],g=i[3],v=i[6],_=i[1],y=i[4],x=i[7],w=i[2],M=i[5],P=i[8];return s[0]=o*m+a*_+l*w,s[3]=o*g+a*y+l*M,s[6]=o*v+a*x+l*P,s[1]=c*m+u*_+h*w,s[4]=c*g+u*y+h*M,s[7]=c*v+u*x+h*P,s[2]=f*m+d*_+p*w,s[5]=f*g+d*y+p*M,s[8]=f*v+d*x+p*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+i*s*c-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*s,d=c*s-o*l,p=t*h+n*f+i*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=h*m,e[1]=(i*c-u*n)*m,e[2]=(a*n-i*o)*m,e[3]=f*m,e[4]=(u*t-i*l)*m,e[5]=(i*s-a*t)*m,e[6]=d*m,e[7]=(n*l-c*t)*m,e[8]=(o*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-i*c,i*l,-i*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=t*s+n*l,i[3]=t*o+n*c,i[6]=t*a+n*u,i[1]=-n*s+t*l,i[4]=-n*o+t*c,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function Rg(r){for(let e=r.length-1;e>=0;--e)if(r[e]>65535)return!0;return!1}const Dy={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ts(r,e){return new Dy[r](e)}function yo(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function nr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function $a(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const rc={[Pn]:{[gi]:nr},[gi]:{[Pn]:$a}},on={legacyMode:!0,get workingColorSpace(){return gi},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(rc[e]&&rc[e][t]!==void 0){const n=rc[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},Dg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},xt={r:0,g:0,b:0},mn={h:0,s:0,l:0},$o={h:0,s:0,l:0};function sc(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function qo(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class ae{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Pn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,on.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=gi){return this.r=e,this.g=t,this.b=n,on.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=gi){if(e=Mh(e,1),t=ft(t,0,1),n=ft(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=sc(o,s,e+1/3),this.g=sc(o,s,e),this.b=sc(o,s,e-1/3)}return on.toWorkingColorSpace(this,i),this}setStyle(e,t=Pn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,on.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,on.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,c=parseInt(s[2],10)/100,u=parseInt(s[3],10)/100;return n(s[4]),this.setHSL(l,c,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,on.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,on.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Pn){const n=Dg[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=nr(e.r),this.g=nr(e.g),this.b=nr(e.b),this}copyLinearToSRGB(e){return this.r=$a(e.r),this.g=$a(e.g),this.b=$a(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Pn){return on.fromWorkingColorSpace(qo(this,xt),e),ft(xt.r*255,0,255)<<16^ft(xt.g*255,0,255)<<8^ft(xt.b*255,0,255)<<0}getHexString(e=Pn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=gi){on.fromWorkingColorSpace(qo(this,xt),t);const n=xt.r,i=xt.g,s=xt.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-s)/h+(i<s?6:0);break;case i:l=(s-n)/h+2;break;case s:l=(n-i)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=gi){return on.fromWorkingColorSpace(qo(this,xt),t),e.r=xt.r,e.g=xt.g,e.b=xt.b,e}getStyle(e=Pn){return on.fromWorkingColorSpace(qo(this,xt),e),e!==Pn?`color(${e} ${xt.r} ${xt.g} ${xt.b})`:`rgb(${xt.r*255|0},${xt.g*255|0},${xt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(mn),mn.h+=e,mn.s+=t,mn.l+=n,this.setHSL(mn.h,mn.s,mn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(mn),e.getHSL($o);const n=io(mn.h,$o.h,t),i=io(mn.s,$o.s,t),s=io(mn.l,$o.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}ae.NAMES=Dg;let Lr;class Sh{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Lr===void 0&&(Lr=yo("canvas")),Lr.width=e.width,Lr.height=e.height;const n=Lr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Lr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=yo("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=nr(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(nr(t[n]/255)*255):t[n]=nr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Zi{constructor(e=null){this.isSource=!0,this.uuid=Kt(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(oc(i[o].image)):s.push(oc(i[o]))}else s=oc(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function oc(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Sh.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Fy=0;class mt extends Nn{constructor(e=mt.DEFAULT_IMAGE,t=mt.DEFAULT_MAPPING,n=Tt,i=Tt,s=it,o=vr,a=Zt,l=Mi,c=1,u=Si){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Fy++}),this.uuid=Kt(),this.name="",this.source=new Zi(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new q(0,0),this.repeat=new q(1,1),this.center=new q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ot,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Sl)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case lr:e.x=e.x-Math.floor(e.x);break;case Tt:e.x=e.x<0?0:1;break;case fo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case lr:e.y=e.y-Math.floor(e.y);break;case Tt:e.y=e.y<0?0:1;break;case fo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}mt.DEFAULT_IMAGE=null;mt.DEFAULT_MAPPING=Sl;class He{constructor(e=0,t=0,n=0,i=1){He.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],m=l[2],g=l[6],v=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-m)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+m)<.1&&Math.abs(p+g)<.1&&Math.abs(c+d+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,x=(d+1)/2,w=(v+1)/2,M=(u+f)/4,P=(h+m)/4,b=(p+g)/4;return y>x&&y>w?y<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(y),i=M/n,s=P/n):x>w?x<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(x),n=M/i,s=b/i):w<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(w),n=P/s,i=b/s),this.set(n,i,s,t),this}let _=Math.sqrt((g-p)*(g-p)+(h-m)*(h-m)+(f-u)*(f-u));return Math.abs(_)<.001&&(_=1),this.x=(g-p)/_,this.y=(h-m)/_,this.z=(f-u)/_,this.w=Math.acos((c+d+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Gt extends Nn{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new He(0,0,e,t),this.scissorTest=!1,this.viewport=new He(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new mt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:it,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Zi(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Do extends mt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ht,this.minFilter=ht,this.wrapR=Tt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Oy extends Gt{constructor(e,t,n){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Do(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Tl extends mt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ht,this.minFilter=ht,this.wrapR=Tt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ny extends Gt{constructor(e,t,n){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Tl(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class ky extends Gt{constructor(e,t,n,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class yt{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const f=s[o+0],d=s[o+1],p=s[o+2],m=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=m;return}if(h!==m||l!==f||c!==d||u!==p){let g=1-a;const v=l*f+c*d+u*p+h*m,_=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){const w=Math.sqrt(y),M=Math.atan2(w,v*_);g=Math.sin(g*M)/w,a=Math.sin(a*M)/w}const x=a*_;if(l=l*g+f*x,c=c*g+d*x,u=u*g+p*x,h=h*g+m*x,g===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=s[o],f=s[o+1],d=s[o+2],p=s[o+3];return e[t]=a*p+u*h+l*d-c*f,e[t+1]=l*p+u*f+c*h-a*d,e[t+2]=c*p+u*d+a*f-l*h,e[t+3]=u*p-a*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(s/2),f=l(n/2),d=l(i/2),p=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=n+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-i)*d}else if(n>a&&n>h){const d=2*Math.sqrt(1+n-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(i+o)/d,this._z=(s+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-n-h);this._w=(s-c)/d,this._x=(i+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-a);this._w=(o-i)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ft(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+i*c-s*l,this._y=i*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*n+t*this._x,this._y=d*i+t*this._y,this._z=d*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=o*h+this._w*f,this._x=n*h+this._x*f,this._y=i*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class A{constructor(e=0,t=0,n=0){A.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Qf.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Qf.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*i-a*n,u=l*n+a*t-s*i,h=l*i+s*n-o*t,f=-s*t-o*n-a*i;return this.x=c*l+f*-s+u*-a-h*-o,this.y=u*l+f*-o+h*-s-c*-a,this.z=h*l+f*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return ac.copy(this).projectOnVector(e),this.sub(ac)}reflect(e){return this.sub(ac.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ft(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ac=new A,Qf=new yt;class yr{constructor(e=new A(1/0,1/0,1/0),t=new A(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],f=e[l+2];u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),f=e.getZ(l);u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Di.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Di.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Di)}else n.boundingBox===null&&n.computeBoundingBox(),lc.copy(n.boundingBox),lc.applyMatrix4(e.matrixWorld),this.union(lc);const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Di),Di.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Xs),jo.subVectors(this.max,Xs),Ir.subVectors(e.a,Xs),Rr.subVectors(e.b,Xs),Dr.subVectors(e.c,Xs),si.subVectors(Rr,Ir),oi.subVectors(Dr,Rr),Fi.subVectors(Ir,Dr);let t=[0,-si.z,si.y,0,-oi.z,oi.y,0,-Fi.z,Fi.y,si.z,0,-si.x,oi.z,0,-oi.x,Fi.z,0,-Fi.x,-si.y,si.x,0,-oi.y,oi.x,0,-Fi.y,Fi.x,0];return!cc(t,Ir,Rr,Dr,jo)||(t=[1,0,0,0,1,0,0,0,1],!cc(t,Ir,Rr,Dr,jo))?!1:(Yo.crossVectors(si,oi),t=[Yo.x,Yo.y,Yo.z],cc(t,Ir,Rr,Dr,jo))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Di.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Di).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Bn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Bn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Bn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Bn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Bn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Bn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Bn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Bn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Bn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Bn=[new A,new A,new A,new A,new A,new A,new A,new A],Di=new A,lc=new yr,Ir=new A,Rr=new A,Dr=new A,si=new A,oi=new A,Fi=new A,Xs=new A,jo=new A,Yo=new A,Oi=new A;function cc(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){Oi.fromArray(r,s);const a=i.x*Math.abs(Oi.x)+i.y*Math.abs(Oi.y)+i.z*Math.abs(Oi.z),l=e.dot(Oi),c=t.dot(Oi),u=n.dot(Oi);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const zy=new yr,ed=new A,Zo=new A,uc=new A;class xr{constructor(e=new A,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):zy.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){uc.subVectors(e,this.center);const t=uc.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(uc.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?Zo.set(0,0,1).multiplyScalar(e.radius):Zo.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(ed.copy(e.center).add(Zo)),this.expandByPoint(ed.copy(e.center).sub(Zo)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Un=new A,hc=new A,Jo=new A,ai=new A,fc=new A,Ko=new A,dc=new A;class Fo{constructor(e=new A,t=new A(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Un)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Un.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Un.copy(this.direction).multiplyScalar(t).add(this.origin),Un.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){hc.copy(e).add(t).multiplyScalar(.5),Jo.copy(t).sub(e).normalize(),ai.copy(this.origin).sub(hc);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Jo),a=ai.dot(this.direction),l=-ai.dot(Jo),c=ai.lengthSq(),u=Math.abs(1-o*o);let h,f,d,p;if(u>0)if(h=o*l-a,f=o*a-l,p=s*u,h>=0)if(f>=-p)if(f<=p){const m=1/u;h*=m,f*=m,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Jo).multiplyScalar(f).add(hc),d}intersectSphere(e,t){Un.subVectors(e.center,this.origin);const n=Un.dot(this.direction),i=Un.dot(Un)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,i=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,i=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||s>i||((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Un)!==null}intersectTriangle(e,t,n,i,s){fc.subVectors(t,e),Ko.subVectors(n,e),dc.crossVectors(fc,Ko);let o=this.direction.dot(dc),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ai.subVectors(this.origin,e);const l=a*this.direction.dot(Ko.crossVectors(ai,Ko));if(l<0)return null;const c=a*this.direction.dot(fc.cross(ai));if(c<0||l+c>o)return null;const u=-a*ai.dot(dc);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class be{constructor(){be.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,s,o,a,l,c,u,h,f,d,p,m,g){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=o,v[9]=a,v[13]=l,v[2]=c,v[6]=u,v[10]=h,v[14]=f,v[3]=d,v[7]=p,v[11]=m,v[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new be().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Fr.setFromMatrixColumn(e,0).length(),s=1/Fr.setFromMatrixColumn(e,1).length(),o=1/Fr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,d=o*h,p=a*u,m=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+p*c,t[5]=f-m*c,t[9]=-a*l,t[2]=m-f*c,t[6]=p+d*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,m=c*h;t[0]=f+m*a,t[4]=p*a-d,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=m+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,m=c*h;t[0]=f-m*a,t[4]=-o*h,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=m-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,d=o*h,p=a*u,m=a*h;t[0]=l*u,t[4]=p*c-d,t[8]=f*c+m,t[1]=l*h,t[5]=m*c+f,t[9]=d*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,d=o*c,p=a*l,m=a*c;t[0]=l*u,t[4]=m-f*h,t[8]=p*h+d,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*h+p,t[10]=f-m*h}else if(e.order==="XZY"){const f=o*l,d=o*c,p=a*l,m=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+m,t[5]=o*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=a*u,t[10]=m*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(By,e,Uy)}lookAt(e,t,n){const i=this.elements;return $t.subVectors(e,t),$t.lengthSq()===0&&($t.z=1),$t.normalize(),li.crossVectors(n,$t),li.lengthSq()===0&&(Math.abs(n.z)===1?$t.x+=1e-4:$t.z+=1e-4,$t.normalize(),li.crossVectors(n,$t)),li.normalize(),Qo.crossVectors($t,li),i[0]=li.x,i[4]=Qo.x,i[8]=$t.x,i[1]=li.y,i[5]=Qo.y,i[9]=$t.y,i[2]=li.z,i[6]=Qo.z,i[10]=$t.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],m=n[6],g=n[10],v=n[14],_=n[3],y=n[7],x=n[11],w=n[15],M=i[0],P=i[4],b=i[8],T=i[12],I=i[1],D=i[5],V=i[9],X=i[13],R=i[2],U=i[6],O=i[10],H=i[14],$=i[3],N=i[7],B=i[11],te=i[15];return s[0]=o*M+a*I+l*R+c*$,s[4]=o*P+a*D+l*U+c*N,s[8]=o*b+a*V+l*O+c*B,s[12]=o*T+a*X+l*H+c*te,s[1]=u*M+h*I+f*R+d*$,s[5]=u*P+h*D+f*U+d*N,s[9]=u*b+h*V+f*O+d*B,s[13]=u*T+h*X+f*H+d*te,s[2]=p*M+m*I+g*R+v*$,s[6]=p*P+m*D+g*U+v*N,s[10]=p*b+m*V+g*O+v*B,s[14]=p*T+m*X+g*H+v*te,s[3]=_*M+y*I+x*R+w*$,s[7]=_*P+y*D+x*U+w*N,s[11]=_*b+y*V+x*O+w*B,s[15]=_*T+y*X+x*H+w*te,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],m=e[7],g=e[11],v=e[15];return p*(+s*l*h-i*c*h-s*a*f+n*c*f+i*a*d-n*l*d)+m*(+t*l*d-t*c*f+s*o*f-i*o*d+i*c*u-s*l*u)+g*(+t*c*h-t*a*d-s*o*h+n*o*d+s*a*u-n*c*u)+v*(-i*a*u-t*l*h+t*a*f+i*o*h-n*o*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],m=e[13],g=e[14],v=e[15],_=h*g*c-m*f*c+m*l*d-a*g*d-h*l*v+a*f*v,y=p*f*c-u*g*c-p*l*d+o*g*d+u*l*v-o*f*v,x=u*m*c-p*h*c+p*a*d-o*m*d-u*a*v+o*h*v,w=p*h*l-u*m*l-p*a*f+o*m*f+u*a*g-o*h*g,M=t*_+n*y+i*x+s*w;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/M;return e[0]=_*P,e[1]=(m*f*s-h*g*s-m*i*d+n*g*d+h*i*v-n*f*v)*P,e[2]=(a*g*s-m*l*s+m*i*c-n*g*c-a*i*v+n*l*v)*P,e[3]=(h*l*s-a*f*s-h*i*c+n*f*c+a*i*d-n*l*d)*P,e[4]=y*P,e[5]=(u*g*s-p*f*s+p*i*d-t*g*d-u*i*v+t*f*v)*P,e[6]=(p*l*s-o*g*s-p*i*c+t*g*c+o*i*v-t*l*v)*P,e[7]=(o*f*s-u*l*s+u*i*c-t*f*c-o*i*d+t*l*d)*P,e[8]=x*P,e[9]=(p*h*s-u*m*s-p*n*d+t*m*d+u*n*v-t*h*v)*P,e[10]=(o*m*s-p*a*s+p*n*c-t*m*c-o*n*v+t*a*v)*P,e[11]=(u*a*s-o*h*s-u*n*c+t*h*c+o*n*d-t*a*d)*P,e[12]=w*P,e[13]=(u*m*i-p*h*i+p*n*f-t*m*f-u*n*g+t*h*g)*P,e[14]=(p*a*i-o*m*i-p*n*l+t*m*l+o*n*g-t*a*g)*P,e[15]=(o*h*i-u*a*i+u*n*l-t*h*l-o*n*f+t*a*f)*P,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,f=s*c,d=s*u,p=s*h,m=o*u,g=o*h,v=a*h,_=l*c,y=l*u,x=l*h,w=n.x,M=n.y,P=n.z;return i[0]=(1-(m+v))*w,i[1]=(d+x)*w,i[2]=(p-y)*w,i[3]=0,i[4]=(d-x)*M,i[5]=(1-(f+v))*M,i[6]=(g+_)*M,i[7]=0,i[8]=(p+y)*P,i[9]=(g-_)*P,i[10]=(1-(f+m))*P,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Fr.set(i[0],i[1],i[2]).length();const o=Fr.set(i[4],i[5],i[6]).length(),a=Fr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],gn.copy(this);const c=1/s,u=1/o,h=1/a;return gn.elements[0]*=c,gn.elements[1]*=c,gn.elements[2]*=c,gn.elements[4]*=u,gn.elements[5]*=u,gn.elements[6]*=u,gn.elements[8]*=h,gn.elements[9]*=h,gn.elements[10]*=h,t.setFromRotationMatrix(gn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){const a=this.elements,l=2*s/(t-e),c=2*s/(n-i),u=(t+e)/(t-e),h=(n+i)/(n-i),f=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,l=1/(t-e),c=1/(n-i),u=1/(o-s),h=(t+e)*l,f=(n+i)*c,d=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Fr=new A,gn=new be,By=new A(0,0,0),Uy=new A(1,1,1),li=new A,Qo=new A,$t=new A,td=new be,nd=new yt;class wn{constructor(e=0,t=0,n=0,i=wn.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],f=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(ft(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ft(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(ft(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-ft(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(ft(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-ft(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return td.makeRotationFromQuaternion(e),this.setFromRotationMatrix(td,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return nd.setFromEuler(this),this.setFromQuaternion(nd,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}wn.DefaultOrder="XYZ";wn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class El{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Vy=0;const id=new A,Or=new yt,Vn=new be,ea=new A,$s=new A,Gy=new A,Hy=new yt,rd=new A(1,0,0),sd=new A(0,1,0),od=new A(0,0,1),Wy={type:"added"},ad={type:"removed"};class Xe extends Nn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Vy++}),this.uuid=Kt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Xe.DefaultUp.clone();const e=new A,t=new wn,n=new yt,i=new A(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new be},normalMatrix:{value:new Ot}}),this.matrix=new be,this.matrixWorld=new be,this.matrixAutoUpdate=Xe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new El,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Or.setFromAxisAngle(e,t),this.quaternion.multiply(Or),this}rotateOnWorldAxis(e,t){return Or.setFromAxisAngle(e,t),this.quaternion.premultiply(Or),this}rotateX(e){return this.rotateOnAxis(rd,e)}rotateY(e){return this.rotateOnAxis(sd,e)}rotateZ(e){return this.rotateOnAxis(od,e)}translateOnAxis(e,t){return id.copy(e).applyQuaternion(this.quaternion),this.position.add(id.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(rd,e)}translateY(e){return this.translateOnAxis(sd,e)}translateZ(e){return this.translateOnAxis(od,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Vn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ea.copy(e):ea.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),$s.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Vn.lookAt($s,ea,this.up):Vn.lookAt(ea,$s,this.up),this.quaternion.setFromRotationMatrix(Vn),i&&(Vn.extractRotation(i.matrixWorld),Or.setFromRotationMatrix(Vn),this.quaternion.premultiply(Or.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Wy)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(ad)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(ad)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Vn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Vn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Vn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($s,e,Gy),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($s,Hy,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),d=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Xe.DefaultUp=new A(0,1,0);Xe.DefaultMatrixAutoUpdate=!0;const _n=new A,Gn=new A,pc=new A,Hn=new A,Nr=new A,kr=new A,ld=new A,mc=new A,gc=new A,_c=new A;class cn{constructor(e=new A,t=new A,n=new A){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),_n.subVectors(e,t),i.cross(_n);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){_n.subVectors(i,t),Gn.subVectors(n,t),pc.subVectors(e,t);const o=_n.dot(_n),a=_n.dot(Gn),l=_n.dot(pc),c=Gn.dot(Gn),u=Gn.dot(pc),h=o*c-a*a;if(h===0)return s.set(-2,-1,-1);const f=1/h,d=(c*l-a*u)*f,p=(o*u-a*l)*f;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Hn),Hn.x>=0&&Hn.y>=0&&Hn.x+Hn.y<=1}static getUV(e,t,n,i,s,o,a,l){return this.getBarycoord(e,t,n,i,Hn),l.set(0,0),l.addScaledVector(s,Hn.x),l.addScaledVector(o,Hn.y),l.addScaledVector(a,Hn.z),l}static isFrontFacing(e,t,n,i){return _n.subVectors(n,t),Gn.subVectors(e,t),_n.cross(Gn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return _n.subVectors(this.c,this.b),Gn.subVectors(this.a,this.b),_n.cross(Gn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return cn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return cn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return cn.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return cn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return cn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,a;Nr.subVectors(i,n),kr.subVectors(s,n),mc.subVectors(e,n);const l=Nr.dot(mc),c=kr.dot(mc);if(l<=0&&c<=0)return t.copy(n);gc.subVectors(e,i);const u=Nr.dot(gc),h=kr.dot(gc);if(u>=0&&h<=u)return t.copy(i);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(Nr,o);_c.subVectors(e,s);const d=Nr.dot(_c),p=kr.dot(_c);if(p>=0&&d<=p)return t.copy(s);const m=d*c-l*p;if(m<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(kr,a);const g=u*p-d*h;if(g<=0&&h-u>=0&&d-p>=0)return ld.subVectors(s,i),a=(h-u)/(h-u+(d-p)),t.copy(i).addScaledVector(ld,a);const v=1/(g+m+f);return o=m*v,a=f*v,t.copy(n).addScaledVector(Nr,o).addScaledVector(kr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Xy=0;class Lt extends Nn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Xy++}),this.uuid=Kt(),this.name="",this.type="Material",this.blending=Qi,this.side=cs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=hh,this.blendDst=fh,this.blendEquation=$i,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=al,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Lg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Xa,this.stencilZFail=Xa,this.stencilZPass=Xa,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Wm;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Qi&&(n.blending=this.blending),this.side!==cs&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Pi extends Lt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ar,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const _t=new A,ta=new q;class Qe{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=_o,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new ae),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new q),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new A),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new He),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ta.fromBufferAttribute(this,t),ta.applyMatrix3(e),this.setXY(t,ta.x,ta.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)_t.fromBufferAttribute(this,t),_t.applyMatrix3(e),this.setXYZ(t,_t.x,_t.y,_t.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)_t.fromBufferAttribute(this,t),_t.applyMatrix4(e),this.setXYZ(t,_t.x,_t.y,_t.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)_t.fromBufferAttribute(this,t),_t.applyNormalMatrix(e),this.setXYZ(t,_t.x,_t.y,_t.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)_t.fromBufferAttribute(this,t),_t.transformDirection(e),this.setXYZ(t,_t.x,_t.y,_t.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==_o&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class $y extends Qe{constructor(e,t,n){super(new Int8Array(e),t,n)}}class qy extends Qe{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class jy extends Qe{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Yy extends Qe{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Cl extends Qe{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Zy extends Qe{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Ah extends Qe{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Jy extends Qe{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}}class ge extends Qe{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Ky extends Qe{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Qy=0;const rn=new be,vc=new Xe,zr=new A,qt=new yr,qs=new yr,St=new A;class Ce extends Nn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Qy++}),this.uuid=Kt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Rg(e)?Ah:Cl)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Ot().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return rn.makeRotationFromQuaternion(e),this.applyMatrix4(rn),this}rotateX(e){return rn.makeRotationX(e),this.applyMatrix4(rn),this}rotateY(e){return rn.makeRotationY(e),this.applyMatrix4(rn),this}rotateZ(e){return rn.makeRotationZ(e),this.applyMatrix4(rn),this}translate(e,t,n){return rn.makeTranslation(e,t,n),this.applyMatrix4(rn),this}scale(e,t,n){return rn.makeScale(e,t,n),this.applyMatrix4(rn),this}lookAt(e){return vc.lookAt(e),vc.updateMatrix(),this.applyMatrix4(vc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(zr).negate(),this.translate(zr.x,zr.y,zr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ge(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new yr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new A(-1/0,-1/0,-1/0),new A(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];qt.setFromBufferAttribute(s),this.morphTargetsRelative?(St.addVectors(this.boundingBox.min,qt.min),this.boundingBox.expandByPoint(St),St.addVectors(this.boundingBox.max,qt.max),this.boundingBox.expandByPoint(St)):(this.boundingBox.expandByPoint(qt.min),this.boundingBox.expandByPoint(qt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new xr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new A,1/0);return}if(e){const n=this.boundingSphere.center;if(qt.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];qs.setFromBufferAttribute(a),this.morphTargetsRelative?(St.addVectors(qt.min,qs.min),qt.expandByPoint(St),St.addVectors(qt.max,qs.max),qt.expandByPoint(St)):(qt.expandByPoint(qs.min),qt.expandByPoint(qs.max))}qt.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)St.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(St));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)St.fromBufferAttribute(a,c),l&&(zr.fromBufferAttribute(e,c),St.add(zr)),i=Math.max(i,n.distanceToSquared(St))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Qe(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let I=0;I<a;I++)c[I]=new A,u[I]=new A;const h=new A,f=new A,d=new A,p=new q,m=new q,g=new q,v=new A,_=new A;function y(I,D,V){h.fromArray(i,I*3),f.fromArray(i,D*3),d.fromArray(i,V*3),p.fromArray(o,I*2),m.fromArray(o,D*2),g.fromArray(o,V*2),f.sub(h),d.sub(h),m.sub(p),g.sub(p);const X=1/(m.x*g.y-g.x*m.y);!isFinite(X)||(v.copy(f).multiplyScalar(g.y).addScaledVector(d,-m.y).multiplyScalar(X),_.copy(d).multiplyScalar(m.x).addScaledVector(f,-g.x).multiplyScalar(X),c[I].add(v),c[D].add(v),c[V].add(v),u[I].add(_),u[D].add(_),u[V].add(_))}let x=this.groups;x.length===0&&(x=[{start:0,count:n.length}]);for(let I=0,D=x.length;I<D;++I){const V=x[I],X=V.start,R=V.count;for(let U=X,O=X+R;U<O;U+=3)y(n[U+0],n[U+1],n[U+2])}const w=new A,M=new A,P=new A,b=new A;function T(I){P.fromArray(s,I*3),b.copy(P);const D=c[I];w.copy(D),w.sub(P.multiplyScalar(P.dot(D))).normalize(),M.crossVectors(b,D);const X=M.dot(u[I])<0?-1:1;l[I*4]=w.x,l[I*4+1]=w.y,l[I*4+2]=w.z,l[I*4+3]=X}for(let I=0,D=x.length;I<D;++I){const V=x[I],X=V.start,R=V.count;for(let U=X,O=X+R;U<O;U+=3)T(n[U+0]),T(n[U+1]),T(n[U+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Qe(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const i=new A,s=new A,o=new A,a=new A,l=new A,c=new A,u=new A,h=new A;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),m=e.getX(f+1),g=e.getX(f+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),o.fromBufferAttribute(t,g),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),c.fromBufferAttribute(n,g),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(g,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)i.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const o=n[i].array,a=e.attributes[i],l=a.array,c=a.itemSize*t,u=Math.min(l.length,o.length-c);for(let h=0,f=c;h<u;h++,f++)o[f]=l[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)St.fromBufferAttribute(e,t),St.normalize(),e.setXYZ(t,St.x,St.y,St.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let m=0,g=l.length;m<g;m++){a.isInterleavedBufferAttribute?d=l[m]*a.data.stride+a.offset:d=l[m]*u;for(let v=0;v<u;v++)f[p++]=c[d++]}return new Qe(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ce,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,n);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(i[l]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const cd=new be,Br=new Fo,yc=new xr,ci=new A,ui=new A,hi=new A,xc=new A,bc=new A,wc=new A,na=new A,ia=new A,ra=new A,sa=new q,oa=new q,aa=new q,Mc=new A,la=new A;class wt extends Xe{constructor(e=new Ce,t=new Pi){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),yc.copy(n.boundingSphere),yc.applyMatrix4(s),e.ray.intersectsSphere(yc)===!1)||(cd.copy(s).invert(),Br.copy(e.ray).applyMatrix4(cd),n.boundingBox!==null&&Br.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,f=n.attributes.uv2,d=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(i))for(let m=0,g=d.length;m<g;m++){const v=d[m],_=i[v.materialIndex],y=Math.max(v.start,p.start),x=Math.min(a.count,Math.min(v.start+v.count,p.start+p.count));for(let w=y,M=x;w<M;w+=3){const P=a.getX(w),b=a.getX(w+1),T=a.getX(w+2);o=ca(this,_,e,Br,l,c,u,h,f,P,b,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const m=Math.max(0,p.start),g=Math.min(a.count,p.start+p.count);for(let v=m,_=g;v<_;v+=3){const y=a.getX(v),x=a.getX(v+1),w=a.getX(v+2);o=ca(this,i,e,Br,l,c,u,h,f,y,x,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(i))for(let m=0,g=d.length;m<g;m++){const v=d[m],_=i[v.materialIndex],y=Math.max(v.start,p.start),x=Math.min(l.count,Math.min(v.start+v.count,p.start+p.count));for(let w=y,M=x;w<M;w+=3){const P=w,b=w+1,T=w+2;o=ca(this,_,e,Br,l,c,u,h,f,P,b,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const m=Math.max(0,p.start),g=Math.min(l.count,p.start+p.count);for(let v=m,_=g;v<_;v+=3){const y=v,x=v+1,w=v+2;o=ca(this,i,e,Br,l,c,u,h,f,y,x,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}}}function ex(r,e,t,n,i,s,o,a){let l;if(e.side===Jt?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,e.side!==xi,a),l===null)return null;la.copy(a),la.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(la);return c<t.near||c>t.far?null:{distance:c,point:la.clone(),object:r}}function ca(r,e,t,n,i,s,o,a,l,c,u,h){ci.fromBufferAttribute(i,c),ui.fromBufferAttribute(i,u),hi.fromBufferAttribute(i,h);const f=r.morphTargetInfluences;if(s&&f){na.set(0,0,0),ia.set(0,0,0),ra.set(0,0,0);for(let p=0,m=s.length;p<m;p++){const g=f[p],v=s[p];g!==0&&(xc.fromBufferAttribute(v,c),bc.fromBufferAttribute(v,u),wc.fromBufferAttribute(v,h),o?(na.addScaledVector(xc,g),ia.addScaledVector(bc,g),ra.addScaledVector(wc,g)):(na.addScaledVector(xc.sub(ci),g),ia.addScaledVector(bc.sub(ui),g),ra.addScaledVector(wc.sub(hi),g)))}ci.add(na),ui.add(ia),hi.add(ra)}r.isSkinnedMesh&&(r.boneTransform(c,ci),r.boneTransform(u,ui),r.boneTransform(h,hi));const d=ex(r,e,t,n,ci,ui,hi,Mc);if(d){a&&(sa.fromBufferAttribute(a,c),oa.fromBufferAttribute(a,u),aa.fromBufferAttribute(a,h),d.uv=cn.getUV(Mc,ci,ui,hi,sa,oa,aa,new q)),l&&(sa.fromBufferAttribute(l,c),oa.fromBufferAttribute(l,u),aa.fromBufferAttribute(l,h),d.uv2=cn.getUV(Mc,ci,ui,hi,sa,oa,aa,new q));const p={a:c,b:u,c:h,normal:new A,materialIndex:0};cn.getNormal(ci,ui,hi,p.normal),d.face=p}return d}class Qn extends Ce{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,o,s,0),p("z","y","x",1,-1,n,t,-e,o,s,1),p("x","z","y",1,1,e,n,t,i,o,2),p("x","z","y",1,-1,e,n,-t,i,o,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new ge(c,3)),this.setAttribute("normal",new ge(u,3)),this.setAttribute("uv",new ge(h,2));function p(m,g,v,_,y,x,w,M,P,b,T){const I=x/P,D=w/b,V=x/2,X=w/2,R=M/2,U=P+1,O=b+1;let H=0,$=0;const N=new A;for(let B=0;B<O;B++){const te=B*D-X;for(let K=0;K<U;K++){const ie=K*I-V;N[m]=ie*_,N[g]=te*y,N[v]=R,c.push(N.x,N.y,N.z),N[m]=0,N[g]=0,N[v]=M>0?1:-1,u.push(N.x,N.y,N.z),h.push(K/P),h.push(1-B/b),H+=1}}for(let B=0;B<b;B++)for(let te=0;te<P;te++){const K=f+te+U*B,ie=f+te+U*(B+1),le=f+(te+1)+U*(B+1),ye=f+(te+1)+U*B;l.push(K,ie,ye),l.push(ie,le,ye),$+=6}a.addGroup(d,$,T),d+=$,f+=H}}static fromJSON(e){return new Qn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function fs(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Ct(r){const e={};for(let t=0;t<r.length;t++){const n=fs(r[t]);for(const i in n)e[i]=n[i]}return e}function tx(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}const Oo={clone:fs,merge:Ct};var nx=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,ix=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Nt extends Lt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=nx,this.fragmentShader=ix,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=fs(e.uniforms),this.uniformsGroups=tx(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Pl extends Xe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new be,this.projectionMatrix=new be,this.projectionMatrixInverse=new be}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class bt extends Pl{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=vo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(tr*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return vo*2*Math.atan(Math.tan(tr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(tr*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*i/l,t-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Ur=90,Vr=1;class Fg extends Xe{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new bt(Ur,Vr,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new A(1,0,0)),this.add(i);const s=new bt(Ur,Vr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new A(-1,0,0)),this.add(s);const o=new bt(Ur,Vr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new A(0,1,0)),this.add(o);const a=new bt(Ur,Vr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new A(0,-1,0)),this.add(a);const l=new bt(Ur,Vr,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new A(0,0,1)),this.add(l);const c=new bt(Ur,Vr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new A(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,l,c]=this.children,u=e.getRenderTarget(),h=e.toneMapping,f=e.xr.enabled;e.toneMapping=Sn,e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=h,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class No extends mt{constructor(e,t,n,i,s,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:bi,super(e,t,n,i,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Og extends Gt{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new No(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:it}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Qn(5,5,5),s=new Nt({name:"CubemapFromEquirect",uniforms:fs(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Jt,blending:Kn});s.uniforms.tEquirect.value=t;const o=new wt(i,s),a=t.minFilter;return t.minFilter===vr&&(t.minFilter=it),new Fg(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}const Sc=new A,rx=new A,sx=new Ot;class pi{constructor(e=new A(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Sc.subVectors(n,t).cross(rx.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Sc),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||sx.getNormalMatrix(e),i=this.coplanarPoint(Sc).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Gr=new xr,ua=new A;class Ll{constructor(e=new pi,t=new pi,n=new pi,i=new pi,s=new pi,o=new pi){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],f=n[8],d=n[9],p=n[10],m=n[11],g=n[12],v=n[13],_=n[14],y=n[15];return t[0].setComponents(a-i,h-l,m-f,y-g).normalize(),t[1].setComponents(a+i,h+l,m+f,y+g).normalize(),t[2].setComponents(a+s,h+c,m+d,y+v).normalize(),t[3].setComponents(a-s,h-c,m-d,y-v).normalize(),t[4].setComponents(a-o,h-u,m-p,y-_).normalize(),t[5].setComponents(a+o,h+u,m+p,y+_).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Gr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Gr)}intersectsSprite(e){return Gr.center.set(0,0,0),Gr.radius=.7071067811865476,Gr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Gr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(ua.x=i.normal.x>0?e.max.x:e.min.x,ua.y=i.normal.y>0?e.max.y:e.min.y,ua.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(ua)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Ng(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function ox(r,e){const t=e.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,f=c.usage,d=r.createBuffer();r.bindBuffer(u,d),r.bufferData(u,h,f),c.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,h){const f=u.array,d=u.updateRange;r.bindBuffer(h,c),d.count===-1?r.bufferSubData(h,0,f):(t?r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(r.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(s(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class ur extends Ce{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=e/a,f=t/l,d=[],p=[],m=[],g=[];for(let v=0;v<u;v++){const _=v*f-o;for(let y=0;y<c;y++){const x=y*h-s;p.push(x,-_,0),m.push(0,0,1),g.push(y/a),g.push(1-v/l)}}for(let v=0;v<l;v++)for(let _=0;_<a;_++){const y=_+c*v,x=_+c*(v+1),w=_+1+c*(v+1),M=_+1+c*v;d.push(y,x,M),d.push(x,w,M)}this.setIndex(d),this.setAttribute("position",new ge(p,3)),this.setAttribute("normal",new ge(m,3)),this.setAttribute("uv",new ge(g,2))}static fromJSON(e){return new ur(e.width,e.height,e.widthSegments,e.heightSegments)}}var ax=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,lx=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,cx=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,ux=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,hx=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,fx=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,dx="vec3 transformed = vec3( position );",px=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,mx=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,gx=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,_x=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,vx=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,yx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,xx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,bx=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,wx=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Mx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Sx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Ax=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Tx=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Ex=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Cx=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Px=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Lx=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Ix=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Rx=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Dx="gl_FragColor = linearToOutputTexel( gl_FragColor );",Fx=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Ox=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Nx=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,kx=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,zx=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Bx=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Ux=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Vx=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Gx=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Hx=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Wx=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,Xx=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,$x=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,qx=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,jx=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Yx=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Zx=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Jx=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Kx=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Qx=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,eb=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,tb=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,nb=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,ib=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,rb=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,sb=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ob=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,ab=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,lb=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,cb=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,ub=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,hb=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,fb=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,db=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,pb=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,mb=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,gb=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,_b=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,vb=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,yb=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,xb=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,bb=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,wb=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Mb=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Sb=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Ab=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Tb=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Eb=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Cb=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Pb=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Lb=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Ib=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Rb=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Db=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Fb=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Ob=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Nb=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,kb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,zb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Bb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Ub=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Vb=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Gb=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,Hb=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Wb=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Xb=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,$b=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,qb=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,jb=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Yb=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,Zb=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Jb=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Kb=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Qb=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,ew=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,tw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,nw=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,iw=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const rw=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,sw=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ow=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,aw=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,lw=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,cw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,uw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,hw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,fw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,dw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,pw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,mw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,gw=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,_w=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vw=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,yw=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,bw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ww=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Mw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Sw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Aw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Ew=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Cw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Pw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Iw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Rw=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Dw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Fw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ow=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ke={alphamap_fragment:ax,alphamap_pars_fragment:lx,alphatest_fragment:cx,alphatest_pars_fragment:ux,aomap_fragment:hx,aomap_pars_fragment:fx,begin_vertex:dx,beginnormal_vertex:px,bsdfs:mx,iridescence_fragment:gx,bumpmap_pars_fragment:_x,clipping_planes_fragment:vx,clipping_planes_pars_fragment:yx,clipping_planes_pars_vertex:xx,clipping_planes_vertex:bx,color_fragment:wx,color_pars_fragment:Mx,color_pars_vertex:Sx,color_vertex:Ax,common:Tx,cube_uv_reflection_fragment:Ex,defaultnormal_vertex:Cx,displacementmap_pars_vertex:Px,displacementmap_vertex:Lx,emissivemap_fragment:Ix,emissivemap_pars_fragment:Rx,encodings_fragment:Dx,encodings_pars_fragment:Fx,envmap_fragment:Ox,envmap_common_pars_fragment:Nx,envmap_pars_fragment:kx,envmap_pars_vertex:zx,envmap_physical_pars_fragment:Yx,envmap_vertex:Bx,fog_vertex:Ux,fog_pars_vertex:Vx,fog_fragment:Gx,fog_pars_fragment:Hx,gradientmap_pars_fragment:Wx,lightmap_fragment:Xx,lightmap_pars_fragment:$x,lights_lambert_vertex:qx,lights_pars_begin:jx,lights_toon_fragment:Zx,lights_toon_pars_fragment:Jx,lights_phong_fragment:Kx,lights_phong_pars_fragment:Qx,lights_physical_fragment:eb,lights_physical_pars_fragment:tb,lights_fragment_begin:nb,lights_fragment_maps:ib,lights_fragment_end:rb,logdepthbuf_fragment:sb,logdepthbuf_pars_fragment:ob,logdepthbuf_pars_vertex:ab,logdepthbuf_vertex:lb,map_fragment:cb,map_pars_fragment:ub,map_particle_fragment:hb,map_particle_pars_fragment:fb,metalnessmap_fragment:db,metalnessmap_pars_fragment:pb,morphcolor_vertex:mb,morphnormal_vertex:gb,morphtarget_pars_vertex:_b,morphtarget_vertex:vb,normal_fragment_begin:yb,normal_fragment_maps:xb,normal_pars_fragment:bb,normal_pars_vertex:wb,normal_vertex:Mb,normalmap_pars_fragment:Sb,clearcoat_normal_fragment_begin:Ab,clearcoat_normal_fragment_maps:Tb,clearcoat_pars_fragment:Eb,iridescence_pars_fragment:Cb,output_fragment:Pb,packing:Lb,premultiplied_alpha_fragment:Ib,project_vertex:Rb,dithering_fragment:Db,dithering_pars_fragment:Fb,roughnessmap_fragment:Ob,roughnessmap_pars_fragment:Nb,shadowmap_pars_fragment:kb,shadowmap_pars_vertex:zb,shadowmap_vertex:Bb,shadowmask_pars_fragment:Ub,skinbase_vertex:Vb,skinning_pars_vertex:Gb,skinning_vertex:Hb,skinnormal_vertex:Wb,specularmap_fragment:Xb,specularmap_pars_fragment:$b,tonemapping_fragment:qb,tonemapping_pars_fragment:jb,transmission_fragment:Yb,transmission_pars_fragment:Zb,uv_pars_fragment:Jb,uv_pars_vertex:Kb,uv_vertex:Qb,uv2_pars_fragment:ew,uv2_pars_vertex:tw,uv2_vertex:nw,worldpos_vertex:iw,background_vert:rw,background_frag:sw,cube_vert:ow,cube_frag:aw,depth_vert:lw,depth_frag:cw,distanceRGBA_vert:uw,distanceRGBA_frag:hw,equirect_vert:fw,equirect_frag:dw,linedashed_vert:pw,linedashed_frag:mw,meshbasic_vert:gw,meshbasic_frag:_w,meshlambert_vert:vw,meshlambert_frag:yw,meshmatcap_vert:xw,meshmatcap_frag:bw,meshnormal_vert:ww,meshnormal_frag:Mw,meshphong_vert:Sw,meshphong_frag:Aw,meshphysical_vert:Tw,meshphysical_frag:Ew,meshtoon_vert:Cw,meshtoon_frag:Pw,points_vert:Lw,points_frag:Iw,shadow_vert:Rw,shadow_frag:Dw,sprite_vert:Fw,sprite_frag:Ow},fe={common:{diffuse:{value:new ae(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Ot},uv2Transform:{value:new Ot},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new q(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ae(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ot}},sprite:{diffuse:{value:new ae(16777215)},opacity:{value:1},center:{value:new q(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ot}}},Pt={basic:{uniforms:Ct([fe.common,fe.specularmap,fe.envmap,fe.aomap,fe.lightmap,fe.fog]),vertexShader:ke.meshbasic_vert,fragmentShader:ke.meshbasic_frag},lambert:{uniforms:Ct([fe.common,fe.specularmap,fe.envmap,fe.aomap,fe.lightmap,fe.emissivemap,fe.fog,fe.lights,{emissive:{value:new ae(0)}}]),vertexShader:ke.meshlambert_vert,fragmentShader:ke.meshlambert_frag},phong:{uniforms:Ct([fe.common,fe.specularmap,fe.envmap,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.fog,fe.lights,{emissive:{value:new ae(0)},specular:{value:new ae(1118481)},shininess:{value:30}}]),vertexShader:ke.meshphong_vert,fragmentShader:ke.meshphong_frag},standard:{uniforms:Ct([fe.common,fe.envmap,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.roughnessmap,fe.metalnessmap,fe.fog,fe.lights,{emissive:{value:new ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ke.meshphysical_vert,fragmentShader:ke.meshphysical_frag},toon:{uniforms:Ct([fe.common,fe.aomap,fe.lightmap,fe.emissivemap,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.gradientmap,fe.fog,fe.lights,{emissive:{value:new ae(0)}}]),vertexShader:ke.meshtoon_vert,fragmentShader:ke.meshtoon_frag},matcap:{uniforms:Ct([fe.common,fe.bumpmap,fe.normalmap,fe.displacementmap,fe.fog,{matcap:{value:null}}]),vertexShader:ke.meshmatcap_vert,fragmentShader:ke.meshmatcap_frag},points:{uniforms:Ct([fe.points,fe.fog]),vertexShader:ke.points_vert,fragmentShader:ke.points_frag},dashed:{uniforms:Ct([fe.common,fe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ke.linedashed_vert,fragmentShader:ke.linedashed_frag},depth:{uniforms:Ct([fe.common,fe.displacementmap]),vertexShader:ke.depth_vert,fragmentShader:ke.depth_frag},normal:{uniforms:Ct([fe.common,fe.bumpmap,fe.normalmap,fe.displacementmap,{opacity:{value:1}}]),vertexShader:ke.meshnormal_vert,fragmentShader:ke.meshnormal_frag},sprite:{uniforms:Ct([fe.sprite,fe.fog]),vertexShader:ke.sprite_vert,fragmentShader:ke.sprite_frag},background:{uniforms:{uvTransform:{value:new Ot},t2D:{value:null}},vertexShader:ke.background_vert,fragmentShader:ke.background_frag},cube:{uniforms:Ct([fe.envmap,{opacity:{value:1}}]),vertexShader:ke.cube_vert,fragmentShader:ke.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ke.equirect_vert,fragmentShader:ke.equirect_frag},distanceRGBA:{uniforms:Ct([fe.common,fe.displacementmap,{referencePosition:{value:new A},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ke.distanceRGBA_vert,fragmentShader:ke.distanceRGBA_frag},shadow:{uniforms:Ct([fe.lights,fe.fog,{color:{value:new ae(0)},opacity:{value:1}}]),vertexShader:ke.shadow_vert,fragmentShader:ke.shadow_frag}};Pt.physical={uniforms:Ct([Pt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new q(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new ae(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new q},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new ae(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new ae(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ke.meshphysical_vert,fragmentShader:ke.meshphysical_frag};function Nw(r,e,t,n,i,s){const o=new ae(0);let a=i===!0?0:1,l,c,u=null,h=0,f=null;function d(m,g){let v=!1,_=g.isScene===!0?g.background:null;_&&_.isTexture&&(_=e.get(_));const y=r.xr,x=y.getSession&&y.getSession();x&&x.environmentBlendMode==="additive"&&(_=null),_===null?p(o,a):_&&_.isColor&&(p(_,1),v=!0),(r.autoClear||v)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),_&&(_.isCubeTexture||_.mapping===Ds)?(c===void 0&&(c=new wt(new Qn(1,1,1),new Nt({name:"BackgroundCubeMaterial",uniforms:fs(Pt.cube.uniforms),vertexShader:Pt.cube.vertexShader,fragmentShader:Pt.cube.fragmentShader,side:Jt,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(w,M,P){this.matrixWorld.copyPosition(P.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=_,c.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,(u!==_||h!==_.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,u=_,h=_.version,f=r.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null)):_&&_.isTexture&&(l===void 0&&(l=new wt(new ur(2,2),new Nt({name:"BackgroundMaterial",uniforms:fs(Pt.background.uniforms),vertexShader:Pt.background.vertexShader,fragmentShader:Pt.background.fragmentShader,side:cs,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=_,_.matrixAutoUpdate===!0&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),(u!==_||h!==_.version||f!==r.toneMapping)&&(l.material.needsUpdate=!0,u=_,h=_.version,f=r.toneMapping),l.layers.enableAll(),m.unshift(l,l.geometry,l.material,0,0,null))}function p(m,g){t.buffers.color.setClear(m.r,m.g,m.b,g,s)}return{getClearColor:function(){return o},setClearColor:function(m,g=1){o.set(m),a=g,p(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(m){a=m,p(o,a)},render:d}}function kw(r,e,t,n){const i=r.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=g(null);let c=l,u=!1;function h(R,U,O,H,$){let N=!1;if(o){const B=m(H,O,U);c!==B&&(c=B,d(c.object)),N=v(R,H,O,$),N&&_(R,H,O,$)}else{const B=U.wireframe===!0;(c.geometry!==H.id||c.program!==O.id||c.wireframe!==B)&&(c.geometry=H.id,c.program=O.id,c.wireframe=B,N=!0)}$!==null&&t.update($,34963),(N||u)&&(u=!1,b(R,U,O,H),$!==null&&r.bindBuffer(34963,t.get($).buffer))}function f(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function d(R){return n.isWebGL2?r.bindVertexArray(R):s.bindVertexArrayOES(R)}function p(R){return n.isWebGL2?r.deleteVertexArray(R):s.deleteVertexArrayOES(R)}function m(R,U,O){const H=O.wireframe===!0;let $=a[R.id];$===void 0&&($={},a[R.id]=$);let N=$[U.id];N===void 0&&(N={},$[U.id]=N);let B=N[H];return B===void 0&&(B=g(f()),N[H]=B),B}function g(R){const U=[],O=[],H=[];for(let $=0;$<i;$++)U[$]=0,O[$]=0,H[$]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:U,enabledAttributes:O,attributeDivisors:H,object:R,attributes:{},index:null}}function v(R,U,O,H){const $=c.attributes,N=U.attributes;let B=0;const te=O.getAttributes();for(const K in te)if(te[K].location>=0){const le=$[K];let ye=N[K];if(ye===void 0&&(K==="instanceMatrix"&&R.instanceMatrix&&(ye=R.instanceMatrix),K==="instanceColor"&&R.instanceColor&&(ye=R.instanceColor)),le===void 0||le.attribute!==ye||ye&&le.data!==ye.data)return!0;B++}return c.attributesNum!==B||c.index!==H}function _(R,U,O,H){const $={},N=U.attributes;let B=0;const te=O.getAttributes();for(const K in te)if(te[K].location>=0){let le=N[K];le===void 0&&(K==="instanceMatrix"&&R.instanceMatrix&&(le=R.instanceMatrix),K==="instanceColor"&&R.instanceColor&&(le=R.instanceColor));const ye={};ye.attribute=le,le&&le.data&&(ye.data=le.data),$[K]=ye,B++}c.attributes=$,c.attributesNum=B,c.index=H}function y(){const R=c.newAttributes;for(let U=0,O=R.length;U<O;U++)R[U]=0}function x(R){w(R,0)}function w(R,U){const O=c.newAttributes,H=c.enabledAttributes,$=c.attributeDivisors;O[R]=1,H[R]===0&&(r.enableVertexAttribArray(R),H[R]=1),$[R]!==U&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](R,U),$[R]=U)}function M(){const R=c.newAttributes,U=c.enabledAttributes;for(let O=0,H=U.length;O<H;O++)U[O]!==R[O]&&(r.disableVertexAttribArray(O),U[O]=0)}function P(R,U,O,H,$,N){n.isWebGL2===!0&&(O===5124||O===5125)?r.vertexAttribIPointer(R,U,O,$,N):r.vertexAttribPointer(R,U,O,H,$,N)}function b(R,U,O,H){if(n.isWebGL2===!1&&(R.isInstancedMesh||H.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const $=H.attributes,N=O.getAttributes(),B=U.defaultAttributeValues;for(const te in N){const K=N[te];if(K.location>=0){let ie=$[te];if(ie===void 0&&(te==="instanceMatrix"&&R.instanceMatrix&&(ie=R.instanceMatrix),te==="instanceColor"&&R.instanceColor&&(ie=R.instanceColor)),ie!==void 0){const le=ie.normalized,ye=ie.itemSize,Y=t.get(ie);if(Y===void 0)continue;const Pe=Y.buffer,we=Y.type,Ae=Y.bytesPerElement;if(ie.isInterleavedBufferAttribute){const ce=ie.data,De=ce.stride,J=ie.offset;if(ce.isInstancedInterleavedBuffer){for(let Z=0;Z<K.locationSize;Z++)w(K.location+Z,ce.meshPerAttribute);R.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=ce.meshPerAttribute*ce.count)}else for(let Z=0;Z<K.locationSize;Z++)x(K.location+Z);r.bindBuffer(34962,Pe);for(let Z=0;Z<K.locationSize;Z++)P(K.location+Z,ye/K.locationSize,we,le,De*Ae,(J+ye/K.locationSize*Z)*Ae)}else{if(ie.isInstancedBufferAttribute){for(let ce=0;ce<K.locationSize;ce++)w(K.location+ce,ie.meshPerAttribute);R.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=ie.meshPerAttribute*ie.count)}else for(let ce=0;ce<K.locationSize;ce++)x(K.location+ce);r.bindBuffer(34962,Pe);for(let ce=0;ce<K.locationSize;ce++)P(K.location+ce,ye/K.locationSize,we,le,ye*Ae,ye/K.locationSize*ce*Ae)}}else if(B!==void 0){const le=B[te];if(le!==void 0)switch(le.length){case 2:r.vertexAttrib2fv(K.location,le);break;case 3:r.vertexAttrib3fv(K.location,le);break;case 4:r.vertexAttrib4fv(K.location,le);break;default:r.vertexAttrib1fv(K.location,le)}}}}M()}function T(){V();for(const R in a){const U=a[R];for(const O in U){const H=U[O];for(const $ in H)p(H[$].object),delete H[$];delete U[O]}delete a[R]}}function I(R){if(a[R.id]===void 0)return;const U=a[R.id];for(const O in U){const H=U[O];for(const $ in H)p(H[$].object),delete H[$];delete U[O]}delete a[R.id]}function D(R){for(const U in a){const O=a[U];if(O[R.id]===void 0)continue;const H=O[R.id];for(const $ in H)p(H[$].object),delete H[$];delete O[R.id]}}function V(){X(),u=!0,c!==l&&(c=l,d(c.object))}function X(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:V,resetDefaultState:X,dispose:T,releaseStatesOfGeometry:I,releaseStatesOfProgram:D,initAttributes:y,enableAttribute:x,disableUnusedAttributes:M}}function zw(r,e,t,n){const i=n.isWebGL2;let s;function o(c){s=c}function a(c,u){r.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,h){if(h===0)return;let f,d;if(i)f=r,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,c,u,h),t.update(u,s,h)}this.setMode=o,this.render=a,this.renderInstances=l}function Bw(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const P=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(P){if(P==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";P="mediump"}return P==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&r instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=r.getParameter(34930),f=r.getParameter(35660),d=r.getParameter(3379),p=r.getParameter(34076),m=r.getParameter(34921),g=r.getParameter(36347),v=r.getParameter(36348),_=r.getParameter(36349),y=f>0,x=o||e.has("OES_texture_float"),w=y&&x,M=o?r.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:g,maxVaryings:v,maxFragmentUniforms:_,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:w,maxSamples:M}}function Uw(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new pi,a=new Ot,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,d){const p=h.length!==0||f||n!==0||i;return i=f,t=u(h,d,0),n=h.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(h,f,d){const p=h.clippingPlanes,m=h.clipIntersection,g=h.clipShadows,v=r.get(h);if(!i||p===null||p.length===0||s&&!g)s?u(null):c();else{const _=s?0:n,y=_*4;let x=v.clippingState||null;l.value=x,x=u(p,f,y,d);for(let w=0;w!==y;++w)x[w]=t[w];v.clippingState=x,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=_}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,f,d,p){const m=h!==null?h.length:0;let g=null;if(m!==0){if(g=l.value,p!==!0||g===null){const v=d+m*4,_=f.matrixWorldInverse;a.getNormalMatrix(_),(g===null||g.length<v)&&(g=new Float32Array(v));for(let y=0,x=d;y!==m;++y,x+=4)o.copy(h[y]).applyMatrix4(_,a),o.normal.toArray(g,x),g[x+3]=o.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,g}}function Vw(r){let e=new WeakMap;function t(o,a){return a===us?o.mapping=bi:a===ho&&(o.mapping=wi),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===us||a===ho)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Og(l.height/2);return c.fromEquirectangularTexture(r,o),e.set(o,c),o.addEventListener("dispose",i),t(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class br extends Pl{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const ns=4,ud=[.125,.215,.35,.446,.526,.582],qi=20,Ac=new br,hd=new ae;let Tc=null;const Wi=(1+Math.sqrt(5))/2,Hr=1/Wi,fd=[new A(1,1,1),new A(-1,1,1),new A(1,1,-1),new A(-1,1,-1),new A(0,Wi,Hr),new A(0,Wi,-Hr),new A(Hr,0,Wi),new A(-Hr,0,Wi),new A(Wi,Hr,0),new A(-Wi,Hr,0)];class Lu{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Tc=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=md(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=pd(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Tc),e.scissorTest=!1,ha(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===bi||e.mapping===wi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Tc=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:it,minFilter:it,generateMipmaps:!1,type:hs,format:Zt,encoding:Si,depthBuffer:!1},i=dd(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=dd(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Gw(s)),this._blurMaterial=Hw(s,e,t)}return i}_compileMaterial(e){const t=new wt(this._lodPlanes[0],e);this._renderer.compile(t,Ac)}_sceneToCubeUV(e,t,n,i){const a=new bt(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(hd),u.toneMapping=Sn,u.autoClear=!1;const d=new Pi({name:"PMREM.Background",side:Jt,depthWrite:!1,depthTest:!1}),p=new wt(new Qn,d);let m=!1;const g=e.background;g?g.isColor&&(d.color.copy(g),e.background=null,m=!0):(d.color.copy(hd),m=!0);for(let v=0;v<6;v++){const _=v%3;_===0?(a.up.set(0,l[v],0),a.lookAt(c[v],0,0)):_===1?(a.up.set(0,0,l[v]),a.lookAt(0,c[v],0)):(a.up.set(0,l[v],0),a.lookAt(0,0,c[v]));const y=this._cubeSize;ha(i,_*y,v>2?y:0,y,y),u.setRenderTarget(i),m&&u.render(p,a),u.render(e,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=f,u.autoClear=h,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===bi||e.mapping===wi;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=md()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=pd());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new wt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;ha(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,Ac)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=fd[(i-1)%fd.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new wt(this._lodPlanes[i],c),f=c.uniforms,d=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*qi-1),m=s/p,g=isFinite(s)?1+Math.floor(u*m):qi;g>qi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${qi}`);const v=[];let _=0;for(let P=0;P<qi;++P){const b=P/m,T=Math.exp(-b*b/2);v.push(T),P===0?_+=T:P<g&&(_+=2*T)}for(let P=0;P<v.length;P++)v[P]=v[P]/_;f.envMap.value=e.texture,f.samples.value=g,f.weights.value=v,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:y}=this;f.dTheta.value=p,f.mipInt.value=y-n;const x=this._sizeLods[i],w=3*x*(i>y-ns?i-y+ns:0),M=4*(this._cubeSize-x);ha(t,w,M,3*x,2*x),l.setRenderTarget(t),l.render(h,Ac)}}function Gw(r){const e=[],t=[],n=[];let i=r;const s=r-ns+1+ud.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);t.push(a);let l=1/a;o>r-ns?l=ud[o-r+ns-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,p=6,m=3,g=2,v=1,_=new Float32Array(m*p*d),y=new Float32Array(g*p*d),x=new Float32Array(v*p*d);for(let M=0;M<d;M++){const P=M%3*2/3-1,b=M>2?0:-1,T=[P,b,0,P+2/3,b,0,P+2/3,b+1,0,P,b,0,P+2/3,b+1,0,P,b+1,0];_.set(T,m*p*M),y.set(f,g*p*M);const I=[M,M,M,M,M,M];x.set(I,v*p*M)}const w=new Ce;w.setAttribute("position",new Qe(_,m)),w.setAttribute("uv",new Qe(y,g)),w.setAttribute("faceIndex",new Qe(x,v)),e.push(w),i>ns&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function dd(r,e,t){const n=new Gt(r,e,t);return n.texture.mapping=Ds,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ha(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Hw(r,e,t){const n=new Float32Array(qi),i=new A(0,1,0);return new Nt({name:"SphericalGaussianBlur",defines:{n:qi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Th(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Kn,depthTest:!1,depthWrite:!1})}function pd(){return new Nt({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Th(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Kn,depthTest:!1,depthWrite:!1})}function md(){return new Nt({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Th(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Kn,depthTest:!1,depthWrite:!1})}function Th(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ww(r){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===us||l===ho,u=l===bi||l===wi;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=e.get(a);return t===null&&(t=new Lu(r)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),e.set(a,h),h.texture}else{if(e.has(a))return e.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){t===null&&(t=new Lu(r));const f=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",s),f.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Xw(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function $w(r,e,t,n){const i={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete i[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return i[f.id]===!0||(f.addEventListener("dispose",o),i[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const p in f)e.update(f[p],34962);const d=h.morphAttributes;for(const p in d){const m=d[p];for(let g=0,v=m.length;g<v;g++)e.update(m[g],34962)}}function c(h){const f=[],d=h.index,p=h.attributes.position;let m=0;if(d!==null){const _=d.array;m=d.version;for(let y=0,x=_.length;y<x;y+=3){const w=_[y+0],M=_[y+1],P=_[y+2];f.push(w,M,M,P,P,w)}}else{const _=p.array;m=p.version;for(let y=0,x=_.length/3-1;y<x;y+=3){const w=y+0,M=y+1,P=y+2;f.push(w,M,M,P,P,w)}}const g=new(Rg(f)?Ah:Cl)(f,1);g.version=m;const v=s.get(h);v&&e.remove(v),s.set(h,g)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function qw(r,e,t,n){const i=n.isWebGL2;let s;function o(f){s=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function u(f,d){r.drawElements(s,d,a,f*l),t.update(d,s,1)}function h(f,d,p){if(p===0)return;let m,g;if(i)m=r,g="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](s,d,a,f*l,p),t.update(d,s,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function jw(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Yw(r,e){return r[0]-e[0]}function Zw(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Ec(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Uint8Array?t=255:n instanceof Uint16Array?t=65535:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function Jw(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new He,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,f){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=p!==void 0?p.length:0;let g=s.get(u);if(g===void 0||g.count!==m){let U=function(){X.dispose(),s.delete(u),u.removeEventListener("dispose",U)};g!==void 0&&g.texture.dispose();const y=u.morphAttributes.position!==void 0,x=u.morphAttributes.normal!==void 0,w=u.morphAttributes.color!==void 0,M=u.morphAttributes.position||[],P=u.morphAttributes.normal||[],b=u.morphAttributes.color||[];let T=0;y===!0&&(T=1),x===!0&&(T=2),w===!0&&(T=3);let I=u.attributes.position.count*T,D=1;I>e.maxTextureSize&&(D=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const V=new Float32Array(I*D*4*m),X=new Do(V,I,D,m);X.type=qn,X.needsUpdate=!0;const R=T*4;for(let O=0;O<m;O++){const H=M[O],$=P[O],N=b[O],B=I*D*4*O;for(let te=0;te<H.count;te++){const K=te*R;y===!0&&(o.fromBufferAttribute(H,te),H.normalized===!0&&Ec(o,H),V[B+K+0]=o.x,V[B+K+1]=o.y,V[B+K+2]=o.z,V[B+K+3]=0),x===!0&&(o.fromBufferAttribute($,te),$.normalized===!0&&Ec(o,$),V[B+K+4]=o.x,V[B+K+5]=o.y,V[B+K+6]=o.z,V[B+K+7]=0),w===!0&&(o.fromBufferAttribute(N,te),N.normalized===!0&&Ec(o,N),V[B+K+8]=o.x,V[B+K+9]=o.y,V[B+K+10]=o.z,V[B+K+11]=N.itemSize===4?o.w:1)}}g={count:m,texture:X,size:new q(I,D)},s.set(u,g),u.addEventListener("dispose",U)}let v=0;for(let y=0;y<d.length;y++)v+=d[y];const _=u.morphTargetsRelative?1:1-v;f.getUniforms().setValue(r,"morphTargetBaseInfluence",_),f.getUniforms().setValue(r,"morphTargetInfluences",d),f.getUniforms().setValue(r,"morphTargetsTexture",g.texture,t),f.getUniforms().setValue(r,"morphTargetsTextureSize",g.size)}else{const p=d===void 0?0:d.length;let m=n[u.id];if(m===void 0||m.length!==p){m=[];for(let x=0;x<p;x++)m[x]=[x,0];n[u.id]=m}for(let x=0;x<p;x++){const w=m[x];w[0]=x,w[1]=d[x]}m.sort(Zw);for(let x=0;x<8;x++)x<p&&m[x][1]?(a[x][0]=m[x][0],a[x][1]=m[x][1]):(a[x][0]=Number.MAX_SAFE_INTEGER,a[x][1]=0);a.sort(Yw);const g=u.morphAttributes.position,v=u.morphAttributes.normal;let _=0;for(let x=0;x<8;x++){const w=a[x],M=w[0],P=w[1];M!==Number.MAX_SAFE_INTEGER&&P?(g&&u.getAttribute("morphTarget"+x)!==g[M]&&u.setAttribute("morphTarget"+x,g[M]),v&&u.getAttribute("morphNormal"+x)!==v[M]&&u.setAttribute("morphNormal"+x,v[M]),i[x]=P,_+=P):(g&&u.hasAttribute("morphTarget"+x)===!0&&u.deleteAttribute("morphTarget"+x),v&&u.hasAttribute("morphNormal"+x)===!0&&u.deleteAttribute("morphNormal"+x),i[x]=0)}const y=u.morphTargetsRelative?1:1-_;f.getUniforms().setValue(r,"morphTargetBaseInfluence",y),f.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function Kw(r,e,t,n){let i=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=e.get(l,u);return i.get(h)!==c&&(e.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const kg=new mt,zg=new Do,Bg=new Tl,Ug=new No,gd=[],_d=[],vd=new Float32Array(16),yd=new Float32Array(9),xd=new Float32Array(4);function Fs(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=gd[i];if(s===void 0&&(s=new Float32Array(i),gd[i]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function kt(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function zt(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Il(r,e){let t=_d[e];t===void 0&&(t=new Int32Array(e),_d[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Qw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function eM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(kt(t,e))return;r.uniform2fv(this.addr,e),zt(t,e)}}function tM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(kt(t,e))return;r.uniform3fv(this.addr,e),zt(t,e)}}function nM(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(kt(t,e))return;r.uniform4fv(this.addr,e),zt(t,e)}}function iM(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(kt(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),zt(t,e)}else{if(kt(t,n))return;xd.set(n),r.uniformMatrix2fv(this.addr,!1,xd),zt(t,n)}}function rM(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(kt(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),zt(t,e)}else{if(kt(t,n))return;yd.set(n),r.uniformMatrix3fv(this.addr,!1,yd),zt(t,n)}}function sM(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(kt(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),zt(t,e)}else{if(kt(t,n))return;vd.set(n),r.uniformMatrix4fv(this.addr,!1,vd),zt(t,n)}}function oM(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function aM(r,e){const t=this.cache;kt(t,e)||(r.uniform2iv(this.addr,e),zt(t,e))}function lM(r,e){const t=this.cache;kt(t,e)||(r.uniform3iv(this.addr,e),zt(t,e))}function cM(r,e){const t=this.cache;kt(t,e)||(r.uniform4iv(this.addr,e),zt(t,e))}function uM(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function hM(r,e){const t=this.cache;kt(t,e)||(r.uniform2uiv(this.addr,e),zt(t,e))}function fM(r,e){const t=this.cache;kt(t,e)||(r.uniform3uiv(this.addr,e),zt(t,e))}function dM(r,e){const t=this.cache;kt(t,e)||(r.uniform4uiv(this.addr,e),zt(t,e))}function pM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||kg,i)}function mM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Bg,i)}function gM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Ug,i)}function _M(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||zg,i)}function vM(r){switch(r){case 5126:return Qw;case 35664:return eM;case 35665:return tM;case 35666:return nM;case 35674:return iM;case 35675:return rM;case 35676:return sM;case 5124:case 35670:return oM;case 35667:case 35671:return aM;case 35668:case 35672:return lM;case 35669:case 35673:return cM;case 5125:return uM;case 36294:return hM;case 36295:return fM;case 36296:return dM;case 35678:case 36198:case 36298:case 36306:case 35682:return pM;case 35679:case 36299:case 36307:return mM;case 35680:case 36300:case 36308:case 36293:return gM;case 36289:case 36303:case 36311:case 36292:return _M}}function yM(r,e){r.uniform1fv(this.addr,e)}function xM(r,e){const t=Fs(e,this.size,2);r.uniform2fv(this.addr,t)}function bM(r,e){const t=Fs(e,this.size,3);r.uniform3fv(this.addr,t)}function wM(r,e){const t=Fs(e,this.size,4);r.uniform4fv(this.addr,t)}function MM(r,e){const t=Fs(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function SM(r,e){const t=Fs(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function AM(r,e){const t=Fs(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function TM(r,e){r.uniform1iv(this.addr,e)}function EM(r,e){r.uniform2iv(this.addr,e)}function CM(r,e){r.uniform3iv(this.addr,e)}function PM(r,e){r.uniform4iv(this.addr,e)}function LM(r,e){r.uniform1uiv(this.addr,e)}function IM(r,e){r.uniform2uiv(this.addr,e)}function RM(r,e){r.uniform3uiv(this.addr,e)}function DM(r,e){r.uniform4uiv(this.addr,e)}function FM(r,e,t){const n=e.length,i=Il(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||kg,i[s])}function OM(r,e,t){const n=e.length,i=Il(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Bg,i[s])}function NM(r,e,t){const n=e.length,i=Il(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Ug,i[s])}function kM(r,e,t){const n=e.length,i=Il(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||zg,i[s])}function zM(r){switch(r){case 5126:return yM;case 35664:return xM;case 35665:return bM;case 35666:return wM;case 35674:return MM;case 35675:return SM;case 35676:return AM;case 5124:case 35670:return TM;case 35667:case 35671:return EM;case 35668:case 35672:return CM;case 35669:case 35673:return PM;case 5125:return LM;case 36294:return IM;case 36295:return RM;case 36296:return DM;case 35678:case 36198:case 36298:case 36306:case 35682:return FM;case 35679:case 36299:case 36307:return OM;case 35680:case 36300:case 36308:case 36293:return NM;case 36289:case 36303:case 36311:case 36292:return kM}}class BM{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=vM(t.type)}}class UM{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=zM(t.type)}}class VM{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const a=i[s];a.setValue(e,t[a.id],n)}}}const Cc=/(\w+)(\])?(\[|\.)?/g;function bd(r,e){r.seq.push(e),r.map[e.id]=e}function GM(r,e,t){const n=r.name,i=n.length;for(Cc.lastIndex=0;;){const s=Cc.exec(n),o=Cc.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){bd(t,c===void 0?new BM(a,r,e):new UM(a,r,e));break}else{let h=t.map[a];h===void 0&&(h=new VM(a),bd(t,h)),t=h}}}class qa{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),o=e.getUniformLocation(t,s.name);GM(s,o,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function wd(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let HM=0;function WM(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function XM(r){switch(r){case Si:return["Linear","( value )"];case Ge:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Md(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+WM(r.getShaderSource(e),o)}else return i}function $M(r,e){const t=XM(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function qM(r,e){let t;switch(e){case ph:t="Linear";break;case mh:t="Reinhard";break;case gh:t="OptimizedCineon";break;case _h:t="ACESFilmic";break;case ug:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function jM(r){return[r.extensionDerivatives||!!r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(eo).join(`
`)}function YM(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function ZM(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function eo(r){return r!==""}function Sd(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Ad(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const JM=/^[ \t]*#include +<([\w\d./]+)>/gm;function Iu(r){return r.replace(JM,KM)}function KM(r,e){const t=ke[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Iu(t)}const QM=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,e1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Td(r){return r.replace(e1,Vg).replace(QM,t1)}function t1(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Vg(r,e,t,n)}function Vg(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Ed(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function n1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===uh?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Hm?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===es&&(e="SHADOWMAP_TYPE_VSM"),e}function i1(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case bi:case wi:e="ENVMAP_TYPE_CUBE";break;case Ds:e="ENVMAP_TYPE_CUBE_UV";break}return e}function r1(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case wi:e="ENVMAP_MODE_REFRACTION";break}return e}function s1(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case ar:e="ENVMAP_BLENDING_MULTIPLY";break;case cg:e="ENVMAP_BLENDING_MIX";break;case ll:e="ENVMAP_BLENDING_ADD";break}return e}function o1(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function a1(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=n1(t),c=i1(t),u=r1(t),h=s1(t),f=o1(t),d=t.isWebGL2?"":jM(t),p=YM(s),m=i.createProgram();let g,v,_=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=[p].filter(eo).join(`
`),g.length>0&&(g+=`
`),v=[d,p].filter(eo).join(`
`),v.length>0&&(v+=`
`)):(g=[Ed(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(eo).join(`
`),v=[d,Ed(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Sn?"#define TONE_MAPPING":"",t.toneMapping!==Sn?ke.tonemapping_pars_fragment:"",t.toneMapping!==Sn?qM("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ke.encodings_pars_fragment,$M("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(eo).join(`
`)),o=Iu(o),o=Sd(o,t),o=Ad(o,t),a=Iu(a),a=Sd(a,t),a=Ad(a,t),o=Td(o),a=Td(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,v=["#define varying in",t.glslVersion===Cu?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Cu?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const y=_+g+o,x=_+v+a,w=wd(i,35633,y),M=wd(i,35632,x);if(i.attachShader(m,w),i.attachShader(m,M),t.index0AttributeName!==void 0?i.bindAttribLocation(m,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),r.debug.checkShaderErrors){const T=i.getProgramInfoLog(m).trim(),I=i.getShaderInfoLog(w).trim(),D=i.getShaderInfoLog(M).trim();let V=!0,X=!0;if(i.getProgramParameter(m,35714)===!1){V=!1;const R=Md(i,w,"vertex"),U=Md(i,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,35715)+`

Program Info Log: `+T+`
`+R+`
`+U)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(I===""||D==="")&&(X=!1);X&&(this.diagnostics={runnable:V,programLog:T,vertexShader:{log:I,prefix:g},fragmentShader:{log:D,prefix:v}})}i.deleteShader(w),i.deleteShader(M);let P;this.getUniforms=function(){return P===void 0&&(P=new qa(i,m)),P};let b;return this.getAttributes=function(){return b===void 0&&(b=ZM(i,m)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=t.shaderName,this.id=HM++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=w,this.fragmentShader=M,this}let l1=0;class c1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new u1(e);t.set(e,n)}return t.get(e)}}class u1{constructor(e){this.id=l1++,this.code=e,this.usedTimes=0}}function h1(r,e,t,n,i,s,o){const a=new El,l=new c1,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,f=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(b,T,I,D,V){const X=D.fog,R=V.geometry,U=b.isMeshStandardMaterial?D.environment:null,O=(b.isMeshStandardMaterial?t:e).get(b.envMap||U),H=!!O&&O.mapping===Ds?O.image.height:null,$=p[b.type];b.precision!==null&&(d=i.getMaxPrecision(b.precision),d!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",d,"instead."));const N=R.morphAttributes.position||R.morphAttributes.normal||R.morphAttributes.color,B=N!==void 0?N.length:0;let te=0;R.morphAttributes.position!==void 0&&(te=1),R.morphAttributes.normal!==void 0&&(te=2),R.morphAttributes.color!==void 0&&(te=3);let K,ie,le,ye;if($){const De=Pt[$];K=De.vertexShader,ie=De.fragmentShader}else K=b.vertexShader,ie=b.fragmentShader,l.update(b),le=l.getVertexShaderID(b),ye=l.getFragmentShaderID(b);const Y=r.getRenderTarget(),Pe=b.alphaTest>0,we=b.clearcoat>0,Ae=b.iridescence>0;return{isWebGL2:u,shaderID:$,shaderName:b.type,vertexShader:K,fragmentShader:ie,defines:b.defines,customVertexShaderID:le,customFragmentShaderID:ye,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:d,instancing:V.isInstancedMesh===!0,instancingColor:V.isInstancedMesh===!0&&V.instanceColor!==null,supportsVertexTextures:f,outputEncoding:Y===null?r.outputEncoding:Y.isXRRenderTarget===!0?Y.texture.encoding:Si,map:!!b.map,matcap:!!b.matcap,envMap:!!O,envMapMode:O&&O.mapping,envMapCubeUVHeight:H,lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===Pg,tangentSpaceNormalMap:b.normalMapType===Ci,decodeVideoTexture:!!b.map&&b.map.isVideoTexture===!0&&b.map.encoding===Ge,clearcoat:we,clearcoatMap:we&&!!b.clearcoatMap,clearcoatRoughnessMap:we&&!!b.clearcoatRoughnessMap,clearcoatNormalMap:we&&!!b.clearcoatNormalMap,iridescence:Ae,iridescenceMap:Ae&&!!b.iridescenceMap,iridescenceThicknessMap:Ae&&!!b.iridescenceThicknessMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,specularIntensityMap:!!b.specularIntensityMap,specularColorMap:!!b.specularColorMap,opaque:b.transparent===!1&&b.blending===Qi,alphaMap:!!b.alphaMap,alphaTest:Pe,gradientMap:!!b.gradientMap,sheen:b.sheen>0,sheenColorMap:!!b.sheenColorMap,sheenRoughnessMap:!!b.sheenRoughnessMap,transmission:b.transmission>0,transmissionMap:!!b.transmissionMap,thicknessMap:!!b.thicknessMap,combine:b.combine,vertexTangents:!!b.normalMap&&!!R.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!R.attributes.color&&R.attributes.color.itemSize===4,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||!!b.displacementMap||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||!!b.sheenColorMap||!!b.sheenRoughnessMap,uvsVertexOnly:!(!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||b.transmission>0||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||b.sheen>0||!!b.sheenColorMap||!!b.sheenRoughnessMap)&&!!b.displacementMap,fog:!!X,useFog:b.fog===!0,fogExp2:X&&X.isFogExp2,flatShading:!!b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:h,skinning:V.isSkinnedMesh===!0,morphTargets:R.morphAttributes.position!==void 0,morphNormals:R.morphAttributes.normal!==void 0,morphColors:R.morphAttributes.color!==void 0,morphTargetsCount:B,morphTextureStride:te,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&I.length>0,shadowMapType:r.shadowMap.type,toneMapping:b.toneMapped?r.toneMapping:Sn,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===xi,flipSided:b.side===Jt,useDepthPacking:!!b.depthPacking,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function g(b){const T=[];if(b.shaderID?T.push(b.shaderID):(T.push(b.customVertexShaderID),T.push(b.customFragmentShaderID)),b.defines!==void 0)for(const I in b.defines)T.push(I),T.push(b.defines[I]);return b.isRawShaderMaterial===!1&&(v(T,b),_(T,b),T.push(r.outputEncoding)),T.push(b.customProgramCacheKey),T.join()}function v(b,T){b.push(T.precision),b.push(T.outputEncoding),b.push(T.envMapMode),b.push(T.envMapCubeUVHeight),b.push(T.combine),b.push(T.vertexUvs),b.push(T.fogExp2),b.push(T.sizeAttenuation),b.push(T.morphTargetsCount),b.push(T.morphAttributeCount),b.push(T.numDirLights),b.push(T.numPointLights),b.push(T.numSpotLights),b.push(T.numHemiLights),b.push(T.numRectAreaLights),b.push(T.numDirLightShadows),b.push(T.numPointLightShadows),b.push(T.numSpotLightShadows),b.push(T.shadowMapType),b.push(T.toneMapping),b.push(T.numClippingPlanes),b.push(T.numClipIntersection),b.push(T.depthPacking)}function _(b,T){a.disableAll(),T.isWebGL2&&a.enable(0),T.supportsVertexTextures&&a.enable(1),T.instancing&&a.enable(2),T.instancingColor&&a.enable(3),T.map&&a.enable(4),T.matcap&&a.enable(5),T.envMap&&a.enable(6),T.lightMap&&a.enable(7),T.aoMap&&a.enable(8),T.emissiveMap&&a.enable(9),T.bumpMap&&a.enable(10),T.normalMap&&a.enable(11),T.objectSpaceNormalMap&&a.enable(12),T.tangentSpaceNormalMap&&a.enable(13),T.clearcoat&&a.enable(14),T.clearcoatMap&&a.enable(15),T.clearcoatRoughnessMap&&a.enable(16),T.clearcoatNormalMap&&a.enable(17),T.iridescence&&a.enable(18),T.iridescenceMap&&a.enable(19),T.iridescenceThicknessMap&&a.enable(20),T.displacementMap&&a.enable(21),T.specularMap&&a.enable(22),T.roughnessMap&&a.enable(23),T.metalnessMap&&a.enable(24),T.gradientMap&&a.enable(25),T.alphaMap&&a.enable(26),T.alphaTest&&a.enable(27),T.vertexColors&&a.enable(28),T.vertexAlphas&&a.enable(29),T.vertexUvs&&a.enable(30),T.vertexTangents&&a.enable(31),T.uvsVertexOnly&&a.enable(32),T.fog&&a.enable(33),b.push(a.mask),a.disableAll(),T.useFog&&a.enable(0),T.flatShading&&a.enable(1),T.logarithmicDepthBuffer&&a.enable(2),T.skinning&&a.enable(3),T.morphTargets&&a.enable(4),T.morphNormals&&a.enable(5),T.morphColors&&a.enable(6),T.premultipliedAlpha&&a.enable(7),T.shadowMapEnabled&&a.enable(8),T.physicallyCorrectLights&&a.enable(9),T.doubleSided&&a.enable(10),T.flipSided&&a.enable(11),T.useDepthPacking&&a.enable(12),T.dithering&&a.enable(13),T.specularIntensityMap&&a.enable(14),T.specularColorMap&&a.enable(15),T.transmission&&a.enable(16),T.transmissionMap&&a.enable(17),T.thicknessMap&&a.enable(18),T.sheen&&a.enable(19),T.sheenColorMap&&a.enable(20),T.sheenRoughnessMap&&a.enable(21),T.decodeVideoTexture&&a.enable(22),T.opaque&&a.enable(23),b.push(a.mask)}function y(b){const T=p[b.type];let I;if(T){const D=Pt[T];I=Oo.clone(D.uniforms)}else I=b.uniforms;return I}function x(b,T){let I;for(let D=0,V=c.length;D<V;D++){const X=c[D];if(X.cacheKey===T){I=X,++I.usedTimes;break}}return I===void 0&&(I=new a1(r,T,b,s),c.push(I)),I}function w(b){if(--b.usedTimes===0){const T=c.indexOf(b);c[T]=c[c.length-1],c.pop(),b.destroy()}}function M(b){l.remove(b)}function P(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:y,acquireProgram:x,releaseProgram:w,releaseShaderCache:M,programs:c,dispose:P}}function f1(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function d1(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Cd(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Pd(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(h,f,d,p,m,g){let v=r[e];return v===void 0?(v={id:h.id,object:h,geometry:f,material:d,groupOrder:p,renderOrder:h.renderOrder,z:m,group:g},r[e]=v):(v.id=h.id,v.object=h,v.geometry=f,v.material=d,v.groupOrder=p,v.renderOrder=h.renderOrder,v.z=m,v.group=g),e++,v}function a(h,f,d,p,m,g){const v=o(h,f,d,p,m,g);d.transmission>0?n.push(v):d.transparent===!0?i.push(v):t.push(v)}function l(h,f,d,p,m,g){const v=o(h,f,d,p,m,g);d.transmission>0?n.unshift(v):d.transparent===!0?i.unshift(v):t.unshift(v)}function c(h,f){t.length>1&&t.sort(h||d1),n.length>1&&n.sort(f||Cd),i.length>1&&i.sort(f||Cd)}function u(){for(let h=e,f=r.length;h<f;h++){const d=r[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:u,sort:c}}function p1(){let r=new WeakMap;function e(n,i){let s;return r.has(n)===!1?(s=new Pd,r.set(n,[s])):i>=r.get(n).length?(s=new Pd,r.get(n).push(s)):s=r.get(n)[i],s}function t(){r=new WeakMap}return{get:e,dispose:t}}function m1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new A,color:new ae};break;case"SpotLight":t={position:new A,direction:new A,color:new ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new A,color:new ae,distance:0,decay:0};break;case"HemisphereLight":t={direction:new A,skyColor:new ae,groundColor:new ae};break;case"RectAreaLight":t={color:new ae,position:new A,halfWidth:new A,halfHeight:new A};break}return r[e.id]=t,t}}}function g1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let _1=0;function v1(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function y1(r,e){const t=new m1,n=g1(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new A);const s=new A,o=new be,a=new be;function l(u,h){let f=0,d=0,p=0;for(let T=0;T<9;T++)i.probe[T].set(0,0,0);let m=0,g=0,v=0,_=0,y=0,x=0,w=0,M=0;u.sort(v1);const P=h!==!0?Math.PI:1;for(let T=0,I=u.length;T<I;T++){const D=u[T],V=D.color,X=D.intensity,R=D.distance,U=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)f+=V.r*X*P,d+=V.g*X*P,p+=V.b*X*P;else if(D.isLightProbe)for(let O=0;O<9;O++)i.probe[O].addScaledVector(D.sh.coefficients[O],X);else if(D.isDirectionalLight){const O=t.get(D);if(O.color.copy(D.color).multiplyScalar(D.intensity*P),D.castShadow){const H=D.shadow,$=n.get(D);$.shadowBias=H.bias,$.shadowNormalBias=H.normalBias,$.shadowRadius=H.radius,$.shadowMapSize=H.mapSize,i.directionalShadow[m]=$,i.directionalShadowMap[m]=U,i.directionalShadowMatrix[m]=D.shadow.matrix,x++}i.directional[m]=O,m++}else if(D.isSpotLight){const O=t.get(D);if(O.position.setFromMatrixPosition(D.matrixWorld),O.color.copy(V).multiplyScalar(X*P),O.distance=R,O.coneCos=Math.cos(D.angle),O.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),O.decay=D.decay,D.castShadow){const H=D.shadow,$=n.get(D);$.shadowBias=H.bias,$.shadowNormalBias=H.normalBias,$.shadowRadius=H.radius,$.shadowMapSize=H.mapSize,i.spotShadow[v]=$,i.spotShadowMap[v]=U,i.spotShadowMatrix[v]=D.shadow.matrix,M++}i.spot[v]=O,v++}else if(D.isRectAreaLight){const O=t.get(D);O.color.copy(V).multiplyScalar(X),O.halfWidth.set(D.width*.5,0,0),O.halfHeight.set(0,D.height*.5,0),i.rectArea[_]=O,_++}else if(D.isPointLight){const O=t.get(D);if(O.color.copy(D.color).multiplyScalar(D.intensity*P),O.distance=D.distance,O.decay=D.decay,D.castShadow){const H=D.shadow,$=n.get(D);$.shadowBias=H.bias,$.shadowNormalBias=H.normalBias,$.shadowRadius=H.radius,$.shadowMapSize=H.mapSize,$.shadowCameraNear=H.camera.near,$.shadowCameraFar=H.camera.far,i.pointShadow[g]=$,i.pointShadowMap[g]=U,i.pointShadowMatrix[g]=D.shadow.matrix,w++}i.point[g]=O,g++}else if(D.isHemisphereLight){const O=t.get(D);O.skyColor.copy(D.color).multiplyScalar(X*P),O.groundColor.copy(D.groundColor).multiplyScalar(X*P),i.hemi[y]=O,y++}}_>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=fe.LTC_FLOAT_1,i.rectAreaLTC2=fe.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=fe.LTC_HALF_1,i.rectAreaLTC2=fe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=d,i.ambient[2]=p;const b=i.hash;(b.directionalLength!==m||b.pointLength!==g||b.spotLength!==v||b.rectAreaLength!==_||b.hemiLength!==y||b.numDirectionalShadows!==x||b.numPointShadows!==w||b.numSpotShadows!==M)&&(i.directional.length=m,i.spot.length=v,i.rectArea.length=_,i.point.length=g,i.hemi.length=y,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=M,i.spotShadowMap.length=M,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=w,i.spotShadowMatrix.length=M,b.directionalLength=m,b.pointLength=g,b.spotLength=v,b.rectAreaLength=_,b.hemiLength=y,b.numDirectionalShadows=x,b.numPointShadows=w,b.numSpotShadows=M,i.version=_1++)}function c(u,h){let f=0,d=0,p=0,m=0,g=0;const v=h.matrixWorldInverse;for(let _=0,y=u.length;_<y;_++){const x=u[_];if(x.isDirectionalLight){const w=i.directional[f];w.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(v),f++}else if(x.isSpotLight){const w=i.spot[p];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(v),w.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(v),p++}else if(x.isRectAreaLight){const w=i.rectArea[m];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(v),a.identity(),o.copy(x.matrixWorld),o.premultiply(v),a.extractRotation(o),w.halfWidth.set(x.width*.5,0,0),w.halfHeight.set(0,x.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),m++}else if(x.isPointLight){const w=i.point[d];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(v),d++}else if(x.isHemisphereLight){const w=i.hemi[g];w.direction.setFromMatrixPosition(x.matrixWorld),w.direction.transformDirection(v),g++}}}return{setup:l,setupView:c,state:i}}function Ld(r,e){const t=new y1(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){t.setup(n,h)}function c(h){t.setupView(n,h)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function x1(r,e){let t=new WeakMap;function n(s,o=0){let a;return t.has(s)===!1?(a=new Ld(r,e),t.set(s,[a])):o>=t.get(s).length?(a=new Ld(r,e),t.get(s).push(a)):a=t.get(s)[o],a}function i(){t=new WeakMap}return{get:n,dispose:i}}class Eh extends Lt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Eg,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Ch extends Lt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new A,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const b1=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,w1=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function M1(r,e,t){let n=new Ll;const i=new q,s=new q,o=new He,a=new Eh({depthPacking:Cg}),l=new Ch,c={},u=t.maxTextureSize,h={0:Jt,1:cs,2:xi},f=new Nt({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new q},radius:{value:4}},vertexShader:b1,fragmentShader:w1}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new Ce;p.setAttribute("position",new Qe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new wt(p,f),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=uh,this.render=function(x,w,M){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||x.length===0)return;const P=r.getRenderTarget(),b=r.getActiveCubeFace(),T=r.getActiveMipmapLevel(),I=r.state;I.setBlending(Kn),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);for(let D=0,V=x.length;D<V;D++){const X=x[D],R=X.shadow;if(R===void 0){console.warn("THREE.WebGLShadowMap:",X,"has no shadow.");continue}if(R.autoUpdate===!1&&R.needsUpdate===!1)continue;i.copy(R.mapSize);const U=R.getFrameExtents();if(i.multiply(U),s.copy(R.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/U.x),i.x=s.x*U.x,R.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/U.y),i.y=s.y*U.y,R.mapSize.y=s.y)),R.map===null){const H=this.type!==es?{minFilter:ht,magFilter:ht}:{};R.map=new Gt(i.x,i.y,H),R.map.texture.name=X.name+".shadowMap",R.camera.updateProjectionMatrix()}r.setRenderTarget(R.map),r.clear();const O=R.getViewportCount();for(let H=0;H<O;H++){const $=R.getViewport(H);o.set(s.x*$.x,s.y*$.y,s.x*$.z,s.y*$.w),I.viewport(o),R.updateMatrices(X,H),n=R.getFrustum(),y(w,M,R.camera,X,this.type)}R.isPointLightShadow!==!0&&this.type===es&&v(R,M),R.needsUpdate=!1}g.needsUpdate=!1,r.setRenderTarget(P,b,T)};function v(x,w){const M=e.update(m);f.defines.VSM_SAMPLES!==x.blurSamples&&(f.defines.VSM_SAMPLES=x.blurSamples,d.defines.VSM_SAMPLES=x.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),x.mapPass===null&&(x.mapPass=new Gt(i.x,i.y)),f.uniforms.shadow_pass.value=x.map.texture,f.uniforms.resolution.value=x.mapSize,f.uniforms.radius.value=x.radius,r.setRenderTarget(x.mapPass),r.clear(),r.renderBufferDirect(w,null,M,f,m,null),d.uniforms.shadow_pass.value=x.mapPass.texture,d.uniforms.resolution.value=x.mapSize,d.uniforms.radius.value=x.radius,r.setRenderTarget(x.map),r.clear(),r.renderBufferDirect(w,null,M,d,m,null)}function _(x,w,M,P,b,T){let I=null;const D=M.isPointLight===!0?x.customDistanceMaterial:x.customDepthMaterial;if(D!==void 0?I=D:I=M.isPointLight===!0?l:a,r.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0){const V=I.uuid,X=w.uuid;let R=c[V];R===void 0&&(R={},c[V]=R);let U=R[X];U===void 0&&(U=I.clone(),R[X]=U),I=U}return I.visible=w.visible,I.wireframe=w.wireframe,T===es?I.side=w.shadowSide!==null?w.shadowSide:w.side:I.side=w.shadowSide!==null?w.shadowSide:h[w.side],I.alphaMap=w.alphaMap,I.alphaTest=w.alphaTest,I.clipShadows=w.clipShadows,I.clippingPlanes=w.clippingPlanes,I.clipIntersection=w.clipIntersection,I.displacementMap=w.displacementMap,I.displacementScale=w.displacementScale,I.displacementBias=w.displacementBias,I.wireframeLinewidth=w.wireframeLinewidth,I.linewidth=w.linewidth,M.isPointLight===!0&&I.isMeshDistanceMaterial===!0&&(I.referencePosition.setFromMatrixPosition(M.matrixWorld),I.nearDistance=P,I.farDistance=b),I}function y(x,w,M,P,b){if(x.visible===!1)return;if(x.layers.test(w.layers)&&(x.isMesh||x.isLine||x.isPoints)&&(x.castShadow||x.receiveShadow&&b===es)&&(!x.frustumCulled||n.intersectsObject(x))){x.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,x.matrixWorld);const D=e.update(x),V=x.material;if(Array.isArray(V)){const X=D.groups;for(let R=0,U=X.length;R<U;R++){const O=X[R],H=V[O.materialIndex];if(H&&H.visible){const $=_(x,H,P,M.near,M.far,b);r.renderBufferDirect(M,null,D,$,x,O)}}}else if(V.visible){const X=_(x,V,P,M.near,M.far,b);r.renderBufferDirect(M,null,D,X,x,null)}}const I=x.children;for(let D=0,V=I.length;D<V;D++)y(I[D],w,M,P,b)}}function S1(r,e,t){const n=t.isWebGL2;function i(){let F=!1;const he=new He;let j=null;const ve=new He(0,0,0,0);return{setMask:function(_e){j!==_e&&!F&&(r.colorMask(_e,_e,_e,_e),j=_e)},setLocked:function(_e){F=_e},setClear:function(_e,$e,Mt,lt,ii){ii===!0&&(_e*=lt,$e*=lt,Mt*=lt),he.set(_e,$e,Mt,lt),ve.equals(he)===!1&&(r.clearColor(_e,$e,Mt,lt),ve.copy(he))},reset:function(){F=!1,j=null,ve.set(-1,0,0,0)}}}function s(){let F=!1,he=null,j=null,ve=null;return{setTest:function(_e){_e?Pe(2929):we(2929)},setMask:function(_e){he!==_e&&!F&&(r.depthMask(_e),he=_e)},setFunc:function(_e){if(j!==_e){if(_e)switch(_e){case ig:r.depthFunc(512);break;case rg:r.depthFunc(519);break;case dh:r.depthFunc(513);break;case al:r.depthFunc(515);break;case sg:r.depthFunc(514);break;case og:r.depthFunc(518);break;case ag:r.depthFunc(516);break;case lg:r.depthFunc(517);break;default:r.depthFunc(515)}else r.depthFunc(515);j=_e}},setLocked:function(_e){F=_e},setClear:function(_e){ve!==_e&&(r.clearDepth(_e),ve=_e)},reset:function(){F=!1,he=null,j=null,ve=null}}}function o(){let F=!1,he=null,j=null,ve=null,_e=null,$e=null,Mt=null,lt=null,ii=null;return{setTest:function(st){F||(st?Pe(2960):we(2960))},setMask:function(st){he!==st&&!F&&(r.stencilMask(st),he=st)},setFunc:function(st,zn,tn){(j!==st||ve!==zn||_e!==tn)&&(r.stencilFunc(st,zn,tn),j=st,ve=zn,_e=tn)},setOp:function(st,zn,tn){($e!==st||Mt!==zn||lt!==tn)&&(r.stencilOp(st,zn,tn),$e=st,Mt=zn,lt=tn)},setLocked:function(st){F=st},setClear:function(st){ii!==st&&(r.clearStencil(st),ii=st)},reset:function(){F=!1,he=null,j=null,ve=null,_e=null,$e=null,Mt=null,lt=null,ii=null}}}const a=new i,l=new s,c=new o,u=new WeakMap,h=new WeakMap;let f={},d={},p=new WeakMap,m=[],g=null,v=!1,_=null,y=null,x=null,w=null,M=null,P=null,b=null,T=!1,I=null,D=null,V=null,X=null,R=null;const U=r.getParameter(35661);let O=!1,H=0;const $=r.getParameter(7938);$.indexOf("WebGL")!==-1?(H=parseFloat(/^WebGL (\d)/.exec($)[1]),O=H>=1):$.indexOf("OpenGL ES")!==-1&&(H=parseFloat(/^OpenGL ES (\d)/.exec($)[1]),O=H>=2);let N=null,B={};const te=r.getParameter(3088),K=r.getParameter(2978),ie=new He().fromArray(te),le=new He().fromArray(K);function ye(F,he,j){const ve=new Uint8Array(4),_e=r.createTexture();r.bindTexture(F,_e),r.texParameteri(F,10241,9728),r.texParameteri(F,10240,9728);for(let $e=0;$e<j;$e++)r.texImage2D(he+$e,0,6408,1,1,0,6408,5121,ve);return _e}const Y={};Y[3553]=ye(3553,3553,1),Y[34067]=ye(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Pe(2929),l.setFunc(al),ue(!1),Re(nu),Pe(2884),re(Kn);function Pe(F){f[F]!==!0&&(r.enable(F),f[F]=!0)}function we(F){f[F]!==!1&&(r.disable(F),f[F]=!1)}function Ae(F,he){return d[F]!==he?(r.bindFramebuffer(F,he),d[F]=he,n&&(F===36009&&(d[36160]=he),F===36160&&(d[36009]=he)),!0):!1}function ce(F,he){let j=m,ve=!1;if(F)if(j=p.get(he),j===void 0&&(j=[],p.set(he,j)),F.isWebGLMultipleRenderTargets){const _e=F.texture;if(j.length!==_e.length||j[0]!==36064){for(let $e=0,Mt=_e.length;$e<Mt;$e++)j[$e]=36064+$e;j.length=_e.length,ve=!0}}else j[0]!==36064&&(j[0]=36064,ve=!0);else j[0]!==1029&&(j[0]=1029,ve=!0);ve&&(t.isWebGL2?r.drawBuffers(j):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(j))}function De(F){return g!==F?(r.useProgram(F),g=F,!0):!1}const J={[$i]:32774,[$m]:32778,[qm]:32779};if(n)J[su]=32775,J[ou]=32776;else{const F=e.get("EXT_blend_minmax");F!==null&&(J[su]=F.MIN_EXT,J[ou]=F.MAX_EXT)}const Z={[jm]:0,[Ym]:1,[Zm]:768,[hh]:770,[ng]:776,[eg]:774,[Km]:772,[Jm]:769,[fh]:771,[tg]:775,[Qm]:773};function re(F,he,j,ve,_e,$e,Mt,lt){if(F===Kn){v===!0&&(we(3042),v=!1);return}if(v===!1&&(Pe(3042),v=!0),F!==Xm){if(F!==_||lt!==T){if((y!==$i||M!==$i)&&(r.blendEquation(32774),y=$i,M=$i),lt)switch(F){case Qi:r.blendFuncSeparate(1,771,1,771);break;case ol:r.blendFunc(1,1);break;case iu:r.blendFuncSeparate(0,769,0,1);break;case ru:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}else switch(F){case Qi:r.blendFuncSeparate(770,771,1,771);break;case ol:r.blendFunc(770,1);break;case iu:r.blendFuncSeparate(0,769,0,1);break;case ru:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}x=null,w=null,P=null,b=null,_=F,T=lt}return}_e=_e||he,$e=$e||j,Mt=Mt||ve,(he!==y||_e!==M)&&(r.blendEquationSeparate(J[he],J[_e]),y=he,M=_e),(j!==x||ve!==w||$e!==P||Mt!==b)&&(r.blendFuncSeparate(Z[j],Z[ve],Z[$e],Z[Mt]),x=j,w=ve,P=$e,b=Mt),_=F,T=null}function xe(F,he){F.side===xi?we(2884):Pe(2884);let j=F.side===Jt;he&&(j=!j),ue(j),F.blending===Qi&&F.transparent===!1?re(Kn):re(F.blending,F.blendEquation,F.blendSrc,F.blendDst,F.blendEquationAlpha,F.blendSrcAlpha,F.blendDstAlpha,F.premultipliedAlpha),l.setFunc(F.depthFunc),l.setTest(F.depthTest),l.setMask(F.depthWrite),a.setMask(F.colorWrite);const ve=F.stencilWrite;c.setTest(ve),ve&&(c.setMask(F.stencilWriteMask),c.setFunc(F.stencilFunc,F.stencilRef,F.stencilFuncMask),c.setOp(F.stencilFail,F.stencilZFail,F.stencilZPass)),Se(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),F.alphaToCoverage===!0?Pe(32926):we(32926)}function ue(F){I!==F&&(F?r.frontFace(2304):r.frontFace(2305),I=F)}function Re(F){F!==Vm?(Pe(2884),F!==D&&(F===nu?r.cullFace(1029):F===Gm?r.cullFace(1028):r.cullFace(1032))):we(2884),D=F}function Te(F){F!==V&&(O&&r.lineWidth(F),V=F)}function Se(F,he,j){F?(Pe(32823),(X!==he||R!==j)&&(r.polygonOffset(he,j),X=he,R=j)):we(32823)}function Ke(F){F?Pe(3089):we(3089)}function je(F){F===void 0&&(F=33984+U-1),N!==F&&(r.activeTexture(F),N=F)}function L(F,he){N===null&&je();let j=B[N];j===void 0&&(j={type:void 0,texture:void 0},B[N]=j),(j.type!==F||j.texture!==he)&&(r.bindTexture(F,he||Y[F]),j.type=F,j.texture=he)}function S(){const F=B[N];F!==void 0&&F.type!==void 0&&(r.bindTexture(F.type,null),F.type=void 0,F.texture=void 0)}function G(){try{r.compressedTexImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ne(){try{r.texSubImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function se(){try{r.texSubImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function de(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Ee(){try{r.texStorage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function E(){try{r.texStorage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ee(){try{r.texImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function oe(){try{r.texImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function me(F){ie.equals(F)===!1&&(r.scissor(F.x,F.y,F.z,F.w),ie.copy(F))}function pe(F){le.equals(F)===!1&&(r.viewport(F.x,F.y,F.z,F.w),le.copy(F))}function Le(F,he){let j=h.get(he);j===void 0&&(j=new WeakMap,h.set(he,j));let ve=j.get(F);ve===void 0&&(ve=r.getUniformBlockIndex(he,F.name),j.set(F,ve))}function Ve(F,he){const ve=h.get(he).get(F);u.get(F)!==ve&&(r.uniformBlockBinding(he,ve,F.__bindingPointIndex),u.set(F,ve))}function tt(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),f={},N=null,B={},d={},p=new WeakMap,m=[],g=null,v=!1,_=null,y=null,x=null,w=null,M=null,P=null,b=null,T=!1,I=null,D=null,V=null,X=null,R=null,ie.set(0,0,r.canvas.width,r.canvas.height),le.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:Pe,disable:we,bindFramebuffer:Ae,drawBuffers:ce,useProgram:De,setBlending:re,setMaterial:xe,setFlipSided:ue,setCullFace:Re,setLineWidth:Te,setPolygonOffset:Se,setScissorTest:Ke,activeTexture:je,bindTexture:L,unbindTexture:S,compressedTexImage2D:G,texImage2D:ee,texImage3D:oe,updateUBOMapping:Le,uniformBlockBinding:Ve,texStorage2D:Ee,texStorage3D:E,texSubImage2D:ne,texSubImage3D:se,compressedTexSubImage2D:de,scissor:me,viewport:pe,reset:tt}}function A1(r,e,t,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(L,S){return v?new OffscreenCanvas(L,S):yo("canvas")}function y(L,S,G,ne){let se=1;if((L.width>ne||L.height>ne)&&(se=ne/Math.max(L.width,L.height)),se<1||S===!0)if(typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&L instanceof ImageBitmap){const de=S?fl:Math.floor,Ee=de(se*L.width),E=de(se*L.height);m===void 0&&(m=_(Ee,E));const ee=G?_(Ee,E):m;return ee.width=Ee,ee.height=E,ee.getContext("2d").drawImage(L,0,0,Ee,E),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+L.width+"x"+L.height+") to ("+Ee+"x"+E+")."),ee}else return"data"in L&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+L.width+"x"+L.height+")."),L;return L}function x(L){return Pu(L.width)&&Pu(L.height)}function w(L){return a?!1:L.wrapS!==Tt||L.wrapT!==Tt||L.minFilter!==ht&&L.minFilter!==it}function M(L,S){return L.generateMipmaps&&S&&L.minFilter!==ht&&L.minFilter!==it}function P(L){r.generateMipmap(L)}function b(L,S,G,ne,se=!1){if(a===!1)return S;if(L!==null){if(r[L]!==void 0)return r[L];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'")}let de=S;return S===6403&&(G===5126&&(de=33326),G===5131&&(de=33325),G===5121&&(de=33321)),S===33319&&(G===5126&&(de=33328),G===5131&&(de=33327),G===5121&&(de=33323)),S===6408&&(G===5126&&(de=34836),G===5131&&(de=34842),G===5121&&(de=ne===Ge&&se===!1?35907:32856),G===32819&&(de=32854),G===32820&&(de=32855)),(de===33325||de===33326||de===33327||de===33328||de===34842||de===34836)&&e.get("EXT_color_buffer_float"),de}function T(L,S,G){return M(L,G)===!0||L.isFramebufferTexture&&L.minFilter!==ht&&L.minFilter!==it?Math.log2(Math.max(S.width,S.height))+1:L.mipmaps!==void 0&&L.mipmaps.length>0?L.mipmaps.length:L.isCompressedTexture&&Array.isArray(L.image)?S.mipmaps.length:1}function I(L){return L===ht||L===cl||L===ul?9728:9729}function D(L){const S=L.target;S.removeEventListener("dispose",D),X(S),S.isVideoTexture&&p.delete(S)}function V(L){const S=L.target;S.removeEventListener("dispose",V),U(S)}function X(L){const S=n.get(L);if(S.__webglInit===void 0)return;const G=L.source,ne=g.get(G);if(ne){const se=ne[S.__cacheKey];se.usedTimes--,se.usedTimes===0&&R(L),Object.keys(ne).length===0&&g.delete(G)}n.remove(L)}function R(L){const S=n.get(L);r.deleteTexture(S.__webglTexture);const G=L.source,ne=g.get(G);delete ne[S.__cacheKey],o.memory.textures--}function U(L){const S=L.texture,G=n.get(L),ne=n.get(S);if(ne.__webglTexture!==void 0&&(r.deleteTexture(ne.__webglTexture),o.memory.textures--),L.depthTexture&&L.depthTexture.dispose(),L.isWebGLCubeRenderTarget)for(let se=0;se<6;se++)r.deleteFramebuffer(G.__webglFramebuffer[se]),G.__webglDepthbuffer&&r.deleteRenderbuffer(G.__webglDepthbuffer[se]);else{if(r.deleteFramebuffer(G.__webglFramebuffer),G.__webglDepthbuffer&&r.deleteRenderbuffer(G.__webglDepthbuffer),G.__webglMultisampledFramebuffer&&r.deleteFramebuffer(G.__webglMultisampledFramebuffer),G.__webglColorRenderbuffer)for(let se=0;se<G.__webglColorRenderbuffer.length;se++)G.__webglColorRenderbuffer[se]&&r.deleteRenderbuffer(G.__webglColorRenderbuffer[se]);G.__webglDepthRenderbuffer&&r.deleteRenderbuffer(G.__webglDepthRenderbuffer)}if(L.isWebGLMultipleRenderTargets)for(let se=0,de=S.length;se<de;se++){const Ee=n.get(S[se]);Ee.__webglTexture&&(r.deleteTexture(Ee.__webglTexture),o.memory.textures--),n.remove(S[se])}n.remove(S),n.remove(L)}let O=0;function H(){O=0}function $(){const L=O;return L>=l&&console.warn("THREE.WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+l),O+=1,L}function N(L){const S=[];return S.push(L.wrapS),S.push(L.wrapT),S.push(L.magFilter),S.push(L.minFilter),S.push(L.anisotropy),S.push(L.internalFormat),S.push(L.format),S.push(L.type),S.push(L.generateMipmaps),S.push(L.premultiplyAlpha),S.push(L.flipY),S.push(L.unpackAlignment),S.push(L.encoding),S.join()}function B(L,S){const G=n.get(L);if(L.isVideoTexture&&Ke(L),L.isRenderTargetTexture===!1&&L.version>0&&G.__version!==L.version){const ne=L.image;if(ne===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ne.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{we(G,L,S);return}}t.activeTexture(33984+S),t.bindTexture(3553,G.__webglTexture)}function te(L,S){const G=n.get(L);if(L.version>0&&G.__version!==L.version){we(G,L,S);return}t.activeTexture(33984+S),t.bindTexture(35866,G.__webglTexture)}function K(L,S){const G=n.get(L);if(L.version>0&&G.__version!==L.version){we(G,L,S);return}t.activeTexture(33984+S),t.bindTexture(32879,G.__webglTexture)}function ie(L,S){const G=n.get(L);if(L.version>0&&G.__version!==L.version){Ae(G,L,S);return}t.activeTexture(33984+S),t.bindTexture(34067,G.__webglTexture)}const le={[lr]:10497,[Tt]:33071,[fo]:33648},ye={[ht]:9728,[cl]:9984,[ul]:9986,[it]:9729,[vh]:9985,[vr]:9987};function Y(L,S,G){if(G?(r.texParameteri(L,10242,le[S.wrapS]),r.texParameteri(L,10243,le[S.wrapT]),(L===32879||L===35866)&&r.texParameteri(L,32882,le[S.wrapR]),r.texParameteri(L,10240,ye[S.magFilter]),r.texParameteri(L,10241,ye[S.minFilter])):(r.texParameteri(L,10242,33071),r.texParameteri(L,10243,33071),(L===32879||L===35866)&&r.texParameteri(L,32882,33071),(S.wrapS!==Tt||S.wrapT!==Tt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(L,10240,I(S.magFilter)),r.texParameteri(L,10241,I(S.minFilter)),S.minFilter!==ht&&S.minFilter!==it&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ne=e.get("EXT_texture_filter_anisotropic");if(S.type===qn&&e.has("OES_texture_float_linear")===!1||a===!1&&S.type===hs&&e.has("OES_texture_half_float_linear")===!1)return;(S.anisotropy>1||n.get(S).__currentAnisotropy)&&(r.texParameterf(L,ne.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,i.getMaxAnisotropy())),n.get(S).__currentAnisotropy=S.anisotropy)}}function Pe(L,S){let G=!1;L.__webglInit===void 0&&(L.__webglInit=!0,S.addEventListener("dispose",D));const ne=S.source;let se=g.get(ne);se===void 0&&(se={},g.set(ne,se));const de=N(S);if(de!==L.__cacheKey){se[de]===void 0&&(se[de]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,G=!0),se[de].usedTimes++;const Ee=se[L.__cacheKey];Ee!==void 0&&(se[L.__cacheKey].usedTimes--,Ee.usedTimes===0&&R(S)),L.__cacheKey=de,L.__webglTexture=se[de].texture}return G}function we(L,S,G){let ne=3553;S.isDataArrayTexture&&(ne=35866),S.isData3DTexture&&(ne=32879);const se=Pe(L,S),de=S.source;if(t.activeTexture(33984+G),t.bindTexture(ne,L.__webglTexture),de.version!==de.__currentVersion||se===!0){r.pixelStorei(37440,S.flipY),r.pixelStorei(37441,S.premultiplyAlpha),r.pixelStorei(3317,S.unpackAlignment),r.pixelStorei(37443,0);const Ee=w(S)&&x(S.image)===!1;let E=y(S.image,Ee,!1,u);E=je(S,E);const ee=x(E)||a,oe=s.convert(S.format,S.encoding);let me=s.convert(S.type),pe=b(S.internalFormat,oe,me,S.encoding,S.isVideoTexture);Y(ne,S,ee);let Le;const Ve=S.mipmaps,tt=a&&S.isVideoTexture!==!0,F=de.__currentVersion===void 0||se===!0,he=T(S,E,ee);if(S.isDepthTexture)pe=6402,a?S.type===qn?pe=36012:S.type===mi?pe=33190:S.type===er?pe=35056:pe=33189:S.type===qn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),S.format===vi&&pe===6402&&S.type!==yh&&S.type!==mi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),S.type=mi,me=s.convert(S.type)),S.format===cr&&pe===6402&&(pe=34041,S.type!==er&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),S.type=er,me=s.convert(S.type))),F&&(tt?t.texStorage2D(3553,1,pe,E.width,E.height):t.texImage2D(3553,0,pe,E.width,E.height,0,oe,me,null));else if(S.isDataTexture)if(Ve.length>0&&ee){tt&&F&&t.texStorage2D(3553,he,pe,Ve[0].width,Ve[0].height);for(let j=0,ve=Ve.length;j<ve;j++)Le=Ve[j],tt?t.texSubImage2D(3553,j,0,0,Le.width,Le.height,oe,me,Le.data):t.texImage2D(3553,j,pe,Le.width,Le.height,0,oe,me,Le.data);S.generateMipmaps=!1}else tt?(F&&t.texStorage2D(3553,he,pe,E.width,E.height),t.texSubImage2D(3553,0,0,0,E.width,E.height,oe,me,E.data)):t.texImage2D(3553,0,pe,E.width,E.height,0,oe,me,E.data);else if(S.isCompressedTexture){tt&&F&&t.texStorage2D(3553,he,pe,Ve[0].width,Ve[0].height);for(let j=0,ve=Ve.length;j<ve;j++)Le=Ve[j],S.format!==Zt?oe!==null?tt?t.compressedTexSubImage2D(3553,j,0,0,Le.width,Le.height,oe,Le.data):t.compressedTexImage2D(3553,j,pe,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):tt?t.texSubImage2D(3553,j,0,0,Le.width,Le.height,oe,me,Le.data):t.texImage2D(3553,j,pe,Le.width,Le.height,0,oe,me,Le.data)}else if(S.isDataArrayTexture)tt?(F&&t.texStorage3D(35866,he,pe,E.width,E.height,E.depth),t.texSubImage3D(35866,0,0,0,0,E.width,E.height,E.depth,oe,me,E.data)):t.texImage3D(35866,0,pe,E.width,E.height,E.depth,0,oe,me,E.data);else if(S.isData3DTexture)tt?(F&&t.texStorage3D(32879,he,pe,E.width,E.height,E.depth),t.texSubImage3D(32879,0,0,0,0,E.width,E.height,E.depth,oe,me,E.data)):t.texImage3D(32879,0,pe,E.width,E.height,E.depth,0,oe,me,E.data);else if(S.isFramebufferTexture){if(F)if(tt)t.texStorage2D(3553,he,pe,E.width,E.height);else{let j=E.width,ve=E.height;for(let _e=0;_e<he;_e++)t.texImage2D(3553,_e,pe,j,ve,0,oe,me,null),j>>=1,ve>>=1}}else if(Ve.length>0&&ee){tt&&F&&t.texStorage2D(3553,he,pe,Ve[0].width,Ve[0].height);for(let j=0,ve=Ve.length;j<ve;j++)Le=Ve[j],tt?t.texSubImage2D(3553,j,0,0,oe,me,Le):t.texImage2D(3553,j,pe,oe,me,Le);S.generateMipmaps=!1}else tt?(F&&t.texStorage2D(3553,he,pe,E.width,E.height),t.texSubImage2D(3553,0,0,0,oe,me,E)):t.texImage2D(3553,0,pe,oe,me,E);M(S,ee)&&P(ne),de.__currentVersion=de.version,S.onUpdate&&S.onUpdate(S)}L.__version=S.version}function Ae(L,S,G){if(S.image.length!==6)return;const ne=Pe(L,S),se=S.source;if(t.activeTexture(33984+G),t.bindTexture(34067,L.__webglTexture),se.version!==se.__currentVersion||ne===!0){r.pixelStorei(37440,S.flipY),r.pixelStorei(37441,S.premultiplyAlpha),r.pixelStorei(3317,S.unpackAlignment),r.pixelStorei(37443,0);const de=S.isCompressedTexture||S.image[0].isCompressedTexture,Ee=S.image[0]&&S.image[0].isDataTexture,E=[];for(let j=0;j<6;j++)!de&&!Ee?E[j]=y(S.image[j],!1,!0,c):E[j]=Ee?S.image[j].image:S.image[j],E[j]=je(S,E[j]);const ee=E[0],oe=x(ee)||a,me=s.convert(S.format,S.encoding),pe=s.convert(S.type),Le=b(S.internalFormat,me,pe,S.encoding),Ve=a&&S.isVideoTexture!==!0,tt=se.__currentVersion===void 0||ne===!0;let F=T(S,ee,oe);Y(34067,S,oe);let he;if(de){Ve&&tt&&t.texStorage2D(34067,F,Le,ee.width,ee.height);for(let j=0;j<6;j++){he=E[j].mipmaps;for(let ve=0;ve<he.length;ve++){const _e=he[ve];S.format!==Zt?me!==null?Ve?t.compressedTexSubImage2D(34069+j,ve,0,0,_e.width,_e.height,me,_e.data):t.compressedTexImage2D(34069+j,ve,Le,_e.width,_e.height,0,_e.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ve?t.texSubImage2D(34069+j,ve,0,0,_e.width,_e.height,me,pe,_e.data):t.texImage2D(34069+j,ve,Le,_e.width,_e.height,0,me,pe,_e.data)}}}else{he=S.mipmaps,Ve&&tt&&(he.length>0&&F++,t.texStorage2D(34067,F,Le,E[0].width,E[0].height));for(let j=0;j<6;j++)if(Ee){Ve?t.texSubImage2D(34069+j,0,0,0,E[j].width,E[j].height,me,pe,E[j].data):t.texImage2D(34069+j,0,Le,E[j].width,E[j].height,0,me,pe,E[j].data);for(let ve=0;ve<he.length;ve++){const $e=he[ve].image[j].image;Ve?t.texSubImage2D(34069+j,ve+1,0,0,$e.width,$e.height,me,pe,$e.data):t.texImage2D(34069+j,ve+1,Le,$e.width,$e.height,0,me,pe,$e.data)}}else{Ve?t.texSubImage2D(34069+j,0,0,0,me,pe,E[j]):t.texImage2D(34069+j,0,Le,me,pe,E[j]);for(let ve=0;ve<he.length;ve++){const _e=he[ve];Ve?t.texSubImage2D(34069+j,ve+1,0,0,me,pe,_e.image[j]):t.texImage2D(34069+j,ve+1,Le,me,pe,_e.image[j])}}}M(S,oe)&&P(34067),se.__currentVersion=se.version,S.onUpdate&&S.onUpdate(S)}L.__version=S.version}function ce(L,S,G,ne,se){const de=s.convert(G.format,G.encoding),Ee=s.convert(G.type),E=b(G.internalFormat,de,Ee,G.encoding);n.get(S).__hasExternalTextures||(se===32879||se===35866?t.texImage3D(se,0,E,S.width,S.height,S.depth,0,de,Ee,null):t.texImage2D(se,0,E,S.width,S.height,0,de,Ee,null)),t.bindFramebuffer(36160,L),Se(S)?f.framebufferTexture2DMultisampleEXT(36160,ne,se,n.get(G).__webglTexture,0,Te(S)):r.framebufferTexture2D(36160,ne,se,n.get(G).__webglTexture,0),t.bindFramebuffer(36160,null)}function De(L,S,G){if(r.bindRenderbuffer(36161,L),S.depthBuffer&&!S.stencilBuffer){let ne=33189;if(G||Se(S)){const se=S.depthTexture;se&&se.isDepthTexture&&(se.type===qn?ne=36012:se.type===mi&&(ne=33190));const de=Te(S);Se(S)?f.renderbufferStorageMultisampleEXT(36161,de,ne,S.width,S.height):r.renderbufferStorageMultisample(36161,de,ne,S.width,S.height)}else r.renderbufferStorage(36161,ne,S.width,S.height);r.framebufferRenderbuffer(36160,36096,36161,L)}else if(S.depthBuffer&&S.stencilBuffer){const ne=Te(S);G&&Se(S)===!1?r.renderbufferStorageMultisample(36161,ne,35056,S.width,S.height):Se(S)?f.renderbufferStorageMultisampleEXT(36161,ne,35056,S.width,S.height):r.renderbufferStorage(36161,34041,S.width,S.height),r.framebufferRenderbuffer(36160,33306,36161,L)}else{const ne=S.isWebGLMultipleRenderTargets===!0?S.texture:[S.texture];for(let se=0;se<ne.length;se++){const de=ne[se],Ee=s.convert(de.format,de.encoding),E=s.convert(de.type),ee=b(de.internalFormat,Ee,E,de.encoding),oe=Te(S);G&&Se(S)===!1?r.renderbufferStorageMultisample(36161,oe,ee,S.width,S.height):Se(S)?f.renderbufferStorageMultisampleEXT(36161,oe,ee,S.width,S.height):r.renderbufferStorage(36161,ee,S.width,S.height)}}r.bindRenderbuffer(36161,null)}function J(L,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,L),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(S.depthTexture).__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),B(S.depthTexture,0);const ne=n.get(S.depthTexture).__webglTexture,se=Te(S);if(S.depthTexture.format===vi)Se(S)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,ne,0,se):r.framebufferTexture2D(36160,36096,3553,ne,0);else if(S.depthTexture.format===cr)Se(S)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,ne,0,se):r.framebufferTexture2D(36160,33306,3553,ne,0);else throw new Error("Unknown depthTexture format")}function Z(L){const S=n.get(L),G=L.isWebGLCubeRenderTarget===!0;if(L.depthTexture&&!S.__autoAllocateDepthBuffer){if(G)throw new Error("target.depthTexture not supported in Cube render targets");J(S.__webglFramebuffer,L)}else if(G){S.__webglDepthbuffer=[];for(let ne=0;ne<6;ne++)t.bindFramebuffer(36160,S.__webglFramebuffer[ne]),S.__webglDepthbuffer[ne]=r.createRenderbuffer(),De(S.__webglDepthbuffer[ne],L,!1)}else t.bindFramebuffer(36160,S.__webglFramebuffer),S.__webglDepthbuffer=r.createRenderbuffer(),De(S.__webglDepthbuffer,L,!1);t.bindFramebuffer(36160,null)}function re(L,S,G){const ne=n.get(L);S!==void 0&&ce(ne.__webglFramebuffer,L,L.texture,36064,3553),G!==void 0&&Z(L)}function xe(L){const S=L.texture,G=n.get(L),ne=n.get(S);L.addEventListener("dispose",V),L.isWebGLMultipleRenderTargets!==!0&&(ne.__webglTexture===void 0&&(ne.__webglTexture=r.createTexture()),ne.__version=S.version,o.memory.textures++);const se=L.isWebGLCubeRenderTarget===!0,de=L.isWebGLMultipleRenderTargets===!0,Ee=x(L)||a;if(se){G.__webglFramebuffer=[];for(let E=0;E<6;E++)G.__webglFramebuffer[E]=r.createFramebuffer()}else{if(G.__webglFramebuffer=r.createFramebuffer(),de)if(i.drawBuffers){const E=L.texture;for(let ee=0,oe=E.length;ee<oe;ee++){const me=n.get(E[ee]);me.__webglTexture===void 0&&(me.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&L.samples>0&&Se(L)===!1){const E=de?S:[S];G.__webglMultisampledFramebuffer=r.createFramebuffer(),G.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,G.__webglMultisampledFramebuffer);for(let ee=0;ee<E.length;ee++){const oe=E[ee];G.__webglColorRenderbuffer[ee]=r.createRenderbuffer(),r.bindRenderbuffer(36161,G.__webglColorRenderbuffer[ee]);const me=s.convert(oe.format,oe.encoding),pe=s.convert(oe.type),Le=b(oe.internalFormat,me,pe,oe.encoding),Ve=Te(L);r.renderbufferStorageMultisample(36161,Ve,Le,L.width,L.height),r.framebufferRenderbuffer(36160,36064+ee,36161,G.__webglColorRenderbuffer[ee])}r.bindRenderbuffer(36161,null),L.depthBuffer&&(G.__webglDepthRenderbuffer=r.createRenderbuffer(),De(G.__webglDepthRenderbuffer,L,!0)),t.bindFramebuffer(36160,null)}}if(se){t.bindTexture(34067,ne.__webglTexture),Y(34067,S,Ee);for(let E=0;E<6;E++)ce(G.__webglFramebuffer[E],L,S,36064,34069+E);M(S,Ee)&&P(34067),t.unbindTexture()}else if(de){const E=L.texture;for(let ee=0,oe=E.length;ee<oe;ee++){const me=E[ee],pe=n.get(me);t.bindTexture(3553,pe.__webglTexture),Y(3553,me,Ee),ce(G.__webglFramebuffer,L,me,36064+ee,3553),M(me,Ee)&&P(3553)}t.unbindTexture()}else{let E=3553;(L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(a?E=L.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(E,ne.__webglTexture),Y(E,S,Ee),ce(G.__webglFramebuffer,L,S,36064,E),M(S,Ee)&&P(E),t.unbindTexture()}L.depthBuffer&&Z(L)}function ue(L){const S=x(L)||a,G=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let ne=0,se=G.length;ne<se;ne++){const de=G[ne];if(M(de,S)){const Ee=L.isWebGLCubeRenderTarget?34067:3553,E=n.get(de).__webglTexture;t.bindTexture(Ee,E),P(Ee),t.unbindTexture()}}}function Re(L){if(a&&L.samples>0&&Se(L)===!1){const S=L.isWebGLMultipleRenderTargets?L.texture:[L.texture],G=L.width,ne=L.height;let se=16384;const de=[],Ee=L.stencilBuffer?33306:36096,E=n.get(L),ee=L.isWebGLMultipleRenderTargets===!0;if(ee)for(let oe=0;oe<S.length;oe++)t.bindFramebuffer(36160,E.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+oe,36161,null),t.bindFramebuffer(36160,E.__webglFramebuffer),r.framebufferTexture2D(36009,36064+oe,3553,null,0);t.bindFramebuffer(36008,E.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,E.__webglFramebuffer);for(let oe=0;oe<S.length;oe++){de.push(36064+oe),L.depthBuffer&&de.push(Ee);const me=E.__ignoreDepthValues!==void 0?E.__ignoreDepthValues:!1;if(me===!1&&(L.depthBuffer&&(se|=256),L.stencilBuffer&&(se|=1024)),ee&&r.framebufferRenderbuffer(36008,36064,36161,E.__webglColorRenderbuffer[oe]),me===!0&&(r.invalidateFramebuffer(36008,[Ee]),r.invalidateFramebuffer(36009,[Ee])),ee){const pe=n.get(S[oe]).__webglTexture;r.framebufferTexture2D(36009,36064,3553,pe,0)}r.blitFramebuffer(0,0,G,ne,0,0,G,ne,se,9728),d&&r.invalidateFramebuffer(36008,de)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),ee)for(let oe=0;oe<S.length;oe++){t.bindFramebuffer(36160,E.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+oe,36161,E.__webglColorRenderbuffer[oe]);const me=n.get(S[oe]).__webglTexture;t.bindFramebuffer(36160,E.__webglFramebuffer),r.framebufferTexture2D(36009,36064+oe,3553,me,0)}t.bindFramebuffer(36009,E.__webglMultisampledFramebuffer)}}function Te(L){return Math.min(h,L.samples)}function Se(L){const S=n.get(L);return a&&L.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&S.__useRenderToTexture!==!1}function Ke(L){const S=o.render.frame;p.get(L)!==S&&(p.set(L,S),L.update())}function je(L,S){const G=L.encoding,ne=L.format,se=L.type;return L.isCompressedTexture===!0||L.isVideoTexture===!0||L.format===hl||G!==Si&&(G===Ge?a===!1?e.has("EXT_sRGB")===!0&&ne===Zt?(L.format=hl,L.minFilter=it,L.generateMipmaps=!1):S=Sh.sRGBToLinear(S):(ne!==Zt||se!==Mi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",G)),S}this.allocateTextureUnit=$,this.resetTextureUnits=H,this.setTexture2D=B,this.setTexture2DArray=te,this.setTexture3D=K,this.setTextureCube=ie,this.rebindTextures=re,this.setupRenderTarget=xe,this.updateRenderTargetMipmap=ue,this.updateMultisampleRenderTarget=Re,this.setupDepthRenderbuffer=Z,this.setupFrameBufferTexture=ce,this.useMultisampledRTT=Se}function Gg(r,e,t){const n=t.isWebGL2;function i(s,o=null){let a;if(s===Mi)return 5121;if(s===pg)return 32819;if(s===mg)return 32820;if(s===hg)return 5120;if(s===fg)return 5122;if(s===yh)return 5123;if(s===dg)return 5124;if(s===mi)return 5125;if(s===qn)return 5126;if(s===hs)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===gg)return 6406;if(s===Zt)return 6408;if(s===xh)return 6409;if(s===vg)return 6410;if(s===vi)return 6402;if(s===cr)return 34041;if(s===yg)return 6403;if(s===_g)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===hl)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===xg)return 36244;if(s===bg)return 33319;if(s===wg)return 33320;if(s===Mg)return 36249;if(s===Ua||s===Va||s===Ga||s===Ha)if(o===Ge)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Ua)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Va)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ga)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Ha)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Ua)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Va)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ga)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Ha)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===au||s===lu||s===cu||s===uu)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===au)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===lu)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===cu)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===uu)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Sg)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===hu||s===fu)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===hu)return o===Ge?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===fu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===du||s===pu||s===mu||s===gu||s===_u||s===vu||s===yu||s===xu||s===bu||s===wu||s===Mu||s===Su||s===Au||s===Tu)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===du)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===pu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===mu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===gu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===_u)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===vu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===yu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===xu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===bu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===wu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Mu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Su)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Au)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Tu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Eu)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===Eu)return o===Ge?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===er?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class Hg extends bt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class _i extends Xe{constructor(){super(),this.isGroup=!0,this.type="Group"}}const T1={type:"move"};class Pc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new _i,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new _i,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new A,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new A),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new _i,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new A,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new A),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const m of e.hand.values()){const g=t.getJointPose(m,n);if(c.joints[m.jointName]===void 0){const _=new _i;_.matrixAutoUpdate=!1,_.visible=!1,c.joints[m.jointName]=_,c.add(_)}const v=c.joints[m.jointName];g!==null&&(v.matrix.fromArray(g.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=g.radius),v.visible=g!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(T1)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}}class Wg extends mt{constructor(e,t,n,i,s,o,a,l,c,u){if(u=u!==void 0?u:vi,u!==vi&&u!==cr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===vi&&(n=mi),n===void 0&&u===cr&&(n=er),super(null,i,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:ht,this.minFilter=l!==void 0?l:ht,this.flipY=!1,this.generateMipmaps=!1}}class E1 extends Nn{constructor(e,t){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=null,c=null,u=null,h=null,f=null,d=null;const p=t.getContextAttributes();let m=null,g=null;const v=[],_=[],y=new bt;y.layers.enable(1),y.viewport=new He;const x=new bt;x.layers.enable(2),x.viewport=new He;const w=[y,x],M=new Hg;M.layers.enable(1),M.layers.enable(2);let P=null,b=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(N){let B=v[N];return B===void 0&&(B=new Pc,v[N]=B),B.getTargetRaySpace()},this.getControllerGrip=function(N){let B=v[N];return B===void 0&&(B=new Pc,v[N]=B),B.getGripSpace()},this.getHand=function(N){let B=v[N];return B===void 0&&(B=new Pc,v[N]=B),B.getHandSpace()};function T(N){const B=_.indexOf(N.inputSource);if(B===-1)return;const te=v[B];te!==void 0&&te.dispatchEvent({type:N.type,data:N.inputSource})}function I(){i.removeEventListener("select",T),i.removeEventListener("selectstart",T),i.removeEventListener("selectend",T),i.removeEventListener("squeeze",T),i.removeEventListener("squeezestart",T),i.removeEventListener("squeezeend",T),i.removeEventListener("end",I),i.removeEventListener("inputsourceschange",D);for(let N=0;N<v.length;N++){const B=_[N];B!==null&&(_[N]=null,v[N].disconnect(B))}P=null,b=null,e.setRenderTarget(m),f=null,h=null,u=null,i=null,g=null,$.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(N){s=N,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(N){a=N,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(N){l=N},this.getBaseLayer=function(){return h!==null?h:f},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(N){if(i=N,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",T),i.addEventListener("selectstart",T),i.addEventListener("selectend",T),i.addEventListener("squeeze",T),i.addEventListener("squeezestart",T),i.addEventListener("squeezeend",T),i.addEventListener("end",I),i.addEventListener("inputsourceschange",D),p.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const B={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,B),i.updateRenderState({baseLayer:f}),g=new Gt(f.framebufferWidth,f.framebufferHeight,{format:Zt,type:Mi,encoding:e.outputEncoding})}else{let B=null,te=null,K=null;p.depth&&(K=p.stencil?35056:33190,B=p.stencil?cr:vi,te=p.stencil?er:mi);const ie={colorFormat:32856,depthFormat:K,scaleFactor:s};u=new XRWebGLBinding(i,t),h=u.createProjectionLayer(ie),i.updateRenderState({layers:[h]}),g=new Gt(h.textureWidth,h.textureHeight,{format:Zt,type:Mi,depthTexture:new Wg(h.textureWidth,h.textureHeight,te,void 0,void 0,void 0,void 0,void 0,void 0,B),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const le=e.properties.get(g);le.__ignoreDepthValues=h.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await i.requestReferenceSpace(a),$.setContext(i),$.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function D(N){for(let B=0;B<N.removed.length;B++){const te=N.removed[B],K=_.indexOf(te);K>=0&&(_[K]=null,v[K].dispatchEvent({type:"disconnected",data:te}))}for(let B=0;B<N.added.length;B++){const te=N.added[B];let K=_.indexOf(te);if(K===-1){for(let le=0;le<v.length;le++)if(le>=_.length){_.push(te),K=le;break}else if(_[le]===null){_[le]=te,K=le;break}if(K===-1)break}const ie=v[K];ie&&ie.dispatchEvent({type:"connected",data:te})}}const V=new A,X=new A;function R(N,B,te){V.setFromMatrixPosition(B.matrixWorld),X.setFromMatrixPosition(te.matrixWorld);const K=V.distanceTo(X),ie=B.projectionMatrix.elements,le=te.projectionMatrix.elements,ye=ie[14]/(ie[10]-1),Y=ie[14]/(ie[10]+1),Pe=(ie[9]+1)/ie[5],we=(ie[9]-1)/ie[5],Ae=(ie[8]-1)/ie[0],ce=(le[8]+1)/le[0],De=ye*Ae,J=ye*ce,Z=K/(-Ae+ce),re=Z*-Ae;B.matrixWorld.decompose(N.position,N.quaternion,N.scale),N.translateX(re),N.translateZ(Z),N.matrixWorld.compose(N.position,N.quaternion,N.scale),N.matrixWorldInverse.copy(N.matrixWorld).invert();const xe=ye+Z,ue=Y+Z,Re=De-re,Te=J+(K-re),Se=Pe*Y/ue*xe,Ke=we*Y/ue*xe;N.projectionMatrix.makePerspective(Re,Te,Se,Ke,xe,ue)}function U(N,B){B===null?N.matrixWorld.copy(N.matrix):N.matrixWorld.multiplyMatrices(B.matrixWorld,N.matrix),N.matrixWorldInverse.copy(N.matrixWorld).invert()}this.updateCamera=function(N){if(i===null)return;M.near=x.near=y.near=N.near,M.far=x.far=y.far=N.far,(P!==M.near||b!==M.far)&&(i.updateRenderState({depthNear:M.near,depthFar:M.far}),P=M.near,b=M.far);const B=N.parent,te=M.cameras;U(M,B);for(let ie=0;ie<te.length;ie++)U(te[ie],B);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),N.position.copy(M.position),N.quaternion.copy(M.quaternion),N.scale.copy(M.scale),N.matrix.copy(M.matrix),N.matrixWorld.copy(M.matrixWorld);const K=N.children;for(let ie=0,le=K.length;ie<le;ie++)K[ie].updateMatrixWorld(!0);te.length===2?R(M,y,x):M.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(N){h!==null&&(h.fixedFoveation=N),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=N)};let O=null;function H(N,B){if(c=B.getViewerPose(l||o),d=B,c!==null){const te=c.views;f!==null&&(e.setRenderTargetFramebuffer(g,f.framebuffer),e.setRenderTarget(g));let K=!1;te.length!==M.cameras.length&&(M.cameras.length=0,K=!0);for(let ie=0;ie<te.length;ie++){const le=te[ie];let ye=null;if(f!==null)ye=f.getViewport(le);else{const Pe=u.getViewSubImage(h,le);ye=Pe.viewport,ie===0&&(e.setRenderTargetTextures(g,Pe.colorTexture,h.ignoreDepthValues?void 0:Pe.depthStencilTexture),e.setRenderTarget(g))}let Y=w[ie];Y===void 0&&(Y=new bt,Y.layers.enable(ie),Y.viewport=new He,w[ie]=Y),Y.matrix.fromArray(le.transform.matrix),Y.projectionMatrix.fromArray(le.projectionMatrix),Y.viewport.set(ye.x,ye.y,ye.width,ye.height),ie===0&&M.matrix.copy(Y.matrix),K===!0&&M.cameras.push(Y)}}for(let te=0;te<v.length;te++){const K=_[te],ie=v[te];K!==null&&ie!==void 0&&ie.update(K,B,l||o)}O&&O(N,B),d=null}const $=new Ng;$.setAnimationLoop(H),this.setAnimationLoop=function(N){O=N},this.dispose=function(){}}}function C1(r,e){function t(m,g){m.fogColor.value.copy(g.color),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function n(m,g,v,_,y){g.isMeshBasicMaterial||g.isMeshLambertMaterial?i(m,g):g.isMeshToonMaterial?(i(m,g),u(m,g)):g.isMeshPhongMaterial?(i(m,g),c(m,g)):g.isMeshStandardMaterial?(i(m,g),h(m,g),g.isMeshPhysicalMaterial&&f(m,g,y)):g.isMeshMatcapMaterial?(i(m,g),d(m,g)):g.isMeshDepthMaterial?i(m,g):g.isMeshDistanceMaterial?(i(m,g),p(m,g)):g.isMeshNormalMaterial?i(m,g):g.isLineBasicMaterial?(s(m,g),g.isLineDashedMaterial&&o(m,g)):g.isPointsMaterial?a(m,g,v,_):g.isSpriteMaterial?l(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===Jt&&(m.bumpScale.value*=-1)),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===Jt&&m.normalScale.value.negate()),g.specularMap&&(m.specularMap.value=g.specularMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const v=e.get(g).envMap;if(v&&(m.envMap.value=v,m.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap){m.lightMap.value=g.lightMap;const x=r.physicallyCorrectLights!==!0?Math.PI:1;m.lightMapIntensity.value=g.lightMapIntensity*x}g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity);let _;g.map?_=g.map:g.specularMap?_=g.specularMap:g.displacementMap?_=g.displacementMap:g.normalMap?_=g.normalMap:g.bumpMap?_=g.bumpMap:g.roughnessMap?_=g.roughnessMap:g.metalnessMap?_=g.metalnessMap:g.alphaMap?_=g.alphaMap:g.emissiveMap?_=g.emissiveMap:g.clearcoatMap?_=g.clearcoatMap:g.clearcoatNormalMap?_=g.clearcoatNormalMap:g.clearcoatRoughnessMap?_=g.clearcoatRoughnessMap:g.iridescenceMap?_=g.iridescenceMap:g.iridescenceThicknessMap?_=g.iridescenceThicknessMap:g.specularIntensityMap?_=g.specularIntensityMap:g.specularColorMap?_=g.specularColorMap:g.transmissionMap?_=g.transmissionMap:g.thicknessMap?_=g.thicknessMap:g.sheenColorMap?_=g.sheenColorMap:g.sheenRoughnessMap&&(_=g.sheenRoughnessMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),m.uvTransform.value.copy(_.matrix));let y;g.aoMap?y=g.aoMap:g.lightMap&&(y=g.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),m.uv2Transform.value.copy(y.matrix))}function s(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity}function o(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function a(m,g,v,_){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*v,m.scale.value=_*.5,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let y;g.map?y=g.map:g.alphaMap&&(y=g.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),m.uvTransform.value.copy(y.matrix))}function l(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let v;g.map?v=g.map:g.alphaMap&&(v=g.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),m.uvTransform.value.copy(v.matrix))}function c(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function h(m,g){m.roughness.value=g.roughness,m.metalness.value=g.metalness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap),e.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,v){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),m.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===Jt&&m.clearcoatNormalScale.value.negate())),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap)),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=v.texture,m.transmissionSamplerSize.value.set(v.width,v.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap)}function d(m,g){g.matcap&&(m.matcap.value=g.matcap)}function p(m,g){m.referencePosition.value.copy(g.referencePosition),m.nearDistance.value=g.nearDistance,m.farDistance.value=g.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function P1(r,e,t,n){let i={},s={},o=[];const a=t.isWebGL2?r.getParameter(35375):0;function l(_,y){const x=y.program;n.uniformBlockBinding(_,x)}function c(_,y){let x=i[_.id];x===void 0&&(p(_),x=u(_),i[_.id]=x,_.addEventListener("dispose",g));const w=y.program;n.updateUBOMapping(_,w);const M=e.render.frame;s[_.id]!==M&&(f(_),s[_.id]=M)}function u(_){const y=h();_.__bindingPointIndex=y;const x=r.createBuffer(),w=_.__size,M=_.usage;return r.bindBuffer(35345,x),r.bufferData(35345,w,M),r.bindBuffer(35345,null),r.bindBufferBase(35345,y,x),x}function h(){for(let _=0;_<a;_++)if(o.indexOf(_)===-1)return o.push(_),_;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(_){const y=i[_.id],x=_.uniforms,w=_.__cache;r.bindBuffer(35345,y);for(let M=0,P=x.length;M<P;M++){const b=x[M];if(d(b,M,w)===!0){const T=b.value,I=b.__offset;typeof T=="number"?(b.__data[0]=T,r.bufferSubData(35345,I,b.__data)):(b.value.isMatrix3?(b.__data[0]=b.value.elements[0],b.__data[1]=b.value.elements[1],b.__data[2]=b.value.elements[2],b.__data[3]=b.value.elements[0],b.__data[4]=b.value.elements[3],b.__data[5]=b.value.elements[4],b.__data[6]=b.value.elements[5],b.__data[7]=b.value.elements[0],b.__data[8]=b.value.elements[6],b.__data[9]=b.value.elements[7],b.__data[10]=b.value.elements[8],b.__data[11]=b.value.elements[0]):T.toArray(b.__data),r.bufferSubData(35345,I,b.__data))}}r.bindBuffer(35345,null)}function d(_,y,x){const w=_.value;if(x[y]===void 0)return typeof w=="number"?x[y]=w:x[y]=w.clone(),!0;if(typeof w=="number"){if(x[y]!==w)return x[y]=w,!0}else{const M=x[y];if(M.equals(w)===!1)return M.copy(w),!0}return!1}function p(_){const y=_.uniforms;let x=0;const w=16;let M=0;for(let P=0,b=y.length;P<b;P++){const T=y[P],I=m(T);if(T.__data=new Float32Array(I.storage/Float32Array.BYTES_PER_ELEMENT),T.__offset=x,P>0){M=x%w;const D=w-M;M!==0&&D-I.boundary<0&&(x+=w-M,T.__offset=x)}x+=I.storage}return M=x%w,M>0&&(x+=w-M),_.__size=x,_.__cache={},this}function m(_){const y=_.value,x={boundary:0,storage:0};return typeof y=="number"?(x.boundary=4,x.storage=4):y.isVector2?(x.boundary=8,x.storage=8):y.isVector3||y.isColor?(x.boundary=16,x.storage=12):y.isVector4?(x.boundary=16,x.storage=16):y.isMatrix3?(x.boundary=48,x.storage=48):y.isMatrix4?(x.boundary=64,x.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),x}function g(_){const y=_.target;y.removeEventListener("dispose",g);const x=o.indexOf(y.__bindingPointIndex);o.splice(x,1),r.deleteBuffer(i[y.id]),delete i[y.id],delete s[y.id]}function v(){for(const _ in i)r.deleteBuffer(i[_]);o=[],i={},s={}}return{bind:l,update:c,dispose:v}}function L1(){const r=yo("canvas");return r.style.display="block",r}function Ph(r={}){this.isWebGLRenderer=!0;const e=r.canvas!==void 0?r.canvas:L1(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,a=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,l=r.powerPreference!==void 0?r.powerPreference:"default",c=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let h=null,f=null;const d=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Si,this.physicallyCorrectLights=!1,this.toneMapping=Sn,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const m=this;let g=!1,v=0,_=0,y=null,x=-1,w=null;const M=new He,P=new He;let b=null,T=e.width,I=e.height,D=1,V=null,X=null;const R=new He(0,0,T,I),U=new He(0,0,T,I);let O=!1;const H=new Ll;let $=!1,N=!1,B=null;const te=new be,K=new q,ie=new A,le={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ye(){return y===null?D:1}let Y=t;function Pe(C,k){for(let W=0;W<C.length;W++){const z=C[W],Q=e.getContext(z,k);if(Q!==null)return Q}return null}try{const C={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Ml}`),e.addEventListener("webglcontextlost",Le,!1),e.addEventListener("webglcontextrestored",Ve,!1),e.addEventListener("webglcontextcreationerror",tt,!1),Y===null){const k=["webgl2","webgl","experimental-webgl"];if(m.isWebGL1Renderer===!0&&k.shift(),Y=Pe(k,C),Y===null)throw Pe(k)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Y.getShaderPrecisionFormat===void 0&&(Y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let we,Ae,ce,De,J,Z,re,xe,ue,Re,Te,Se,Ke,je,L,S,G,ne,se,de,Ee,E,ee,oe;function me(){we=new Xw(Y),Ae=new Bw(Y,we,r),we.init(Ae),E=new Gg(Y,we,Ae),ce=new S1(Y,we,Ae),De=new jw,J=new f1,Z=new A1(Y,we,ce,J,Ae,E,De),re=new Vw(m),xe=new Ww(m),ue=new ox(Y,Ae),ee=new kw(Y,we,ue,Ae),Re=new $w(Y,ue,De,ee),Te=new Kw(Y,Re,ue,De),se=new Jw(Y,Ae,Z),S=new Uw(J),Se=new h1(m,re,xe,we,Ae,ee,S),Ke=new C1(m,J),je=new p1,L=new x1(we,Ae),ne=new Nw(m,re,ce,Te,u,o),G=new M1(m,Te,Ae),oe=new P1(Y,De,Ae,ce),de=new zw(Y,we,De,Ae),Ee=new qw(Y,we,De,Ae),De.programs=Se.programs,m.capabilities=Ae,m.extensions=we,m.properties=J,m.renderLists=je,m.shadowMap=G,m.state=ce,m.info=De}me();const pe=new E1(m,Y);this.xr=pe,this.getContext=function(){return Y},this.getContextAttributes=function(){return Y.getContextAttributes()},this.forceContextLoss=function(){const C=we.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=we.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(C){C!==void 0&&(D=C,this.setSize(T,I,!1))},this.getSize=function(C){return C.set(T,I)},this.setSize=function(C,k,W){if(pe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}T=C,I=k,e.width=Math.floor(C*D),e.height=Math.floor(k*D),W!==!1&&(e.style.width=C+"px",e.style.height=k+"px"),this.setViewport(0,0,C,k)},this.getDrawingBufferSize=function(C){return C.set(T*D,I*D).floor()},this.setDrawingBufferSize=function(C,k,W){T=C,I=k,D=W,e.width=Math.floor(C*W),e.height=Math.floor(k*W),this.setViewport(0,0,C,k)},this.getCurrentViewport=function(C){return C.copy(M)},this.getViewport=function(C){return C.copy(R)},this.setViewport=function(C,k,W,z){C.isVector4?R.set(C.x,C.y,C.z,C.w):R.set(C,k,W,z),ce.viewport(M.copy(R).multiplyScalar(D).floor())},this.getScissor=function(C){return C.copy(U)},this.setScissor=function(C,k,W,z){C.isVector4?U.set(C.x,C.y,C.z,C.w):U.set(C,k,W,z),ce.scissor(P.copy(U).multiplyScalar(D).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(C){ce.setScissorTest(O=C)},this.setOpaqueSort=function(C){V=C},this.setTransparentSort=function(C){X=C},this.getClearColor=function(C){return C.copy(ne.getClearColor())},this.setClearColor=function(){ne.setClearColor.apply(ne,arguments)},this.getClearAlpha=function(){return ne.getClearAlpha()},this.setClearAlpha=function(){ne.setClearAlpha.apply(ne,arguments)},this.clear=function(C=!0,k=!0,W=!0){let z=0;C&&(z|=16384),k&&(z|=256),W&&(z|=1024),Y.clear(z)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Le,!1),e.removeEventListener("webglcontextrestored",Ve,!1),e.removeEventListener("webglcontextcreationerror",tt,!1),je.dispose(),L.dispose(),J.dispose(),re.dispose(),xe.dispose(),Te.dispose(),ee.dispose(),oe.dispose(),Se.dispose(),pe.dispose(),pe.removeEventListener("sessionstart",$e),pe.removeEventListener("sessionend",Mt),B&&(B.dispose(),B=null),lt.stop()};function Le(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function Ve(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const C=De.autoReset,k=G.enabled,W=G.autoUpdate,z=G.needsUpdate,Q=G.type;me(),De.autoReset=C,G.enabled=k,G.autoUpdate=W,G.needsUpdate=z,G.type=Q}function tt(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function F(C){const k=C.target;k.removeEventListener("dispose",F),he(k)}function he(C){j(C),J.remove(C)}function j(C){const k=J.get(C).programs;k!==void 0&&(k.forEach(function(W){Se.releaseProgram(W)}),C.isShaderMaterial&&Se.releaseShaderCache(C))}this.renderBufferDirect=function(C,k,W,z,Q,Ie){k===null&&(k=le);const Fe=Q.isMesh&&Q.matrixWorld.determinant()<0,Ne=X_(C,k,W,z,Q);ce.setMaterial(z,Fe);let Oe=W.index;const Je=W.attributes.position;if(Oe===null){if(Je===void 0||Je.count===0)return}else if(Oe.count===0)return;let We=1;z.wireframe===!0&&(Oe=Re.getWireframeAttribute(W),We=2),ee.setup(Q,z,Ne,W,Oe);let qe,ot=de;Oe!==null&&(qe=ue.get(Oe),ot=Ee,ot.setIndex(qe));const Ri=Oe!==null?Oe.count:Je.count,Er=W.drawRange.start*We,Cr=W.drawRange.count*We,En=Ie!==null?Ie.start*We:0,Ye=Ie!==null?Ie.count*We:1/0,Pr=Math.max(Er,En),gt=Math.min(Ri,Er+Cr,En+Ye)-1,nn=Math.max(0,gt-Pr+1);if(nn!==0){if(Q.isMesh)z.wireframe===!0?(ce.setLineWidth(z.wireframeLinewidth*ye()),ot.setMode(1)):ot.setMode(4);else if(Q.isLine){let ri=z.linewidth;ri===void 0&&(ri=1),ce.setLineWidth(ri*ye()),Q.isLineSegments?ot.setMode(1):Q.isLineLoop?ot.setMode(2):ot.setMode(3)}else Q.isPoints?ot.setMode(0):Q.isSprite&&ot.setMode(4);if(Q.isInstancedMesh)ot.renderInstances(Pr,nn,Q.count);else if(W.isInstancedBufferGeometry){const ri=Math.min(W.instanceCount,W._maxInstanceCount);ot.renderInstances(Pr,nn,ri)}else ot.render(Pr,nn)}},this.compile=function(C,k){f=L.get(C),f.init(),p.push(f),C.traverseVisible(function(W){W.isLight&&W.layers.test(k.layers)&&(f.pushLight(W),W.castShadow&&f.pushShadow(W))}),f.setupLights(m.physicallyCorrectLights),C.traverse(function(W){const z=W.material;if(z)if(Array.isArray(z))for(let Q=0;Q<z.length;Q++){const Ie=z[Q];Yl(Ie,C,W)}else Yl(z,C,W)}),p.pop(),f=null};let ve=null;function _e(C){ve&&ve(C)}function $e(){lt.stop()}function Mt(){lt.start()}const lt=new Ng;lt.setAnimationLoop(_e),typeof self<"u"&&lt.setContext(self),this.setAnimationLoop=function(C){ve=C,pe.setAnimationLoop(C),C===null?lt.stop():lt.start()},pe.addEventListener("sessionstart",$e),pe.addEventListener("sessionend",Mt),this.render=function(C,k){if(k!==void 0&&k.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(g===!0)return;C.autoUpdate===!0&&C.updateMatrixWorld(),k.parent===null&&k.updateMatrixWorld(),pe.enabled===!0&&pe.isPresenting===!0&&(pe.cameraAutoUpdate===!0&&pe.updateCamera(k),k=pe.getCamera()),C.isScene===!0&&C.onBeforeRender(m,C,k,y),f=L.get(C,p.length),f.init(),p.push(f),te.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),H.setFromProjectionMatrix(te),N=this.localClippingEnabled,$=S.init(this.clippingPlanes,N,k),h=je.get(C,d.length),h.init(),d.push(h),ii(C,k,0,m.sortObjects),h.finish(),m.sortObjects===!0&&h.sort(V,X),$===!0&&S.beginShadows();const W=f.state.shadowsArray;if(G.render(W,C,k),$===!0&&S.endShadows(),this.info.autoReset===!0&&this.info.reset(),ne.render(h,C),f.setupLights(m.physicallyCorrectLights),k.isArrayCamera){const z=k.cameras;for(let Q=0,Ie=z.length;Q<Ie;Q++){const Fe=z[Q];st(h,C,Fe,Fe.viewport)}}else st(h,C,k);y!==null&&(Z.updateMultisampleRenderTarget(y),Z.updateRenderTargetMipmap(y)),C.isScene===!0&&C.onAfterRender(m,C,k),ee.resetDefaultState(),x=-1,w=null,p.pop(),p.length>0?f=p[p.length-1]:f=null,d.pop(),d.length>0?h=d[d.length-1]:h=null};function ii(C,k,W,z){if(C.visible===!1)return;if(C.layers.test(k.layers)){if(C.isGroup)W=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(k);else if(C.isLight)f.pushLight(C),C.castShadow&&f.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||H.intersectsSprite(C)){z&&ie.setFromMatrixPosition(C.matrixWorld).applyMatrix4(te);const Fe=Te.update(C),Ne=C.material;Ne.visible&&h.push(C,Fe,Ne,W,ie.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==De.render.frame&&(C.skeleton.update(),C.skeleton.frame=De.render.frame),!C.frustumCulled||H.intersectsObject(C))){z&&ie.setFromMatrixPosition(C.matrixWorld).applyMatrix4(te);const Fe=Te.update(C),Ne=C.material;if(Array.isArray(Ne)){const Oe=Fe.groups;for(let Je=0,We=Oe.length;Je<We;Je++){const qe=Oe[Je],ot=Ne[qe.materialIndex];ot&&ot.visible&&h.push(C,Fe,ot,W,ie.z,qe)}}else Ne.visible&&h.push(C,Fe,Ne,W,ie.z,null)}}const Ie=C.children;for(let Fe=0,Ne=Ie.length;Fe<Ne;Fe++)ii(Ie[Fe],k,W,z)}function st(C,k,W,z){const Q=C.opaque,Ie=C.transmissive,Fe=C.transparent;f.setupLightsView(W),Ie.length>0&&zn(Q,k,W),z&&ce.viewport(M.copy(z)),Q.length>0&&tn(Q,k,W),Ie.length>0&&tn(Ie,k,W),Fe.length>0&&tn(Fe,k,W),ce.buffers.depth.setTest(!0),ce.buffers.depth.setMask(!0),ce.buffers.color.setMask(!0),ce.setPolygonOffset(!1)}function zn(C,k,W){const z=Ae.isWebGL2;B===null&&(B=new Gt(1,1,{generateMipmaps:!0,type:we.has("EXT_color_buffer_half_float")?hs:Mi,minFilter:vr,samples:z&&s===!0?4:0})),m.getDrawingBufferSize(K),z?B.setSize(K.x,K.y):B.setSize(fl(K.x),fl(K.y));const Q=m.getRenderTarget();m.setRenderTarget(B),m.clear();const Ie=m.toneMapping;m.toneMapping=Sn,tn(C,k,W),m.toneMapping=Ie,Z.updateMultisampleRenderTarget(B),Z.updateRenderTargetMipmap(B),m.setRenderTarget(Q)}function tn(C,k,W){const z=k.isScene===!0?k.overrideMaterial:null;for(let Q=0,Ie=C.length;Q<Ie;Q++){const Fe=C[Q],Ne=Fe.object,Oe=Fe.geometry,Je=z===null?Fe.material:z,We=Fe.group;Ne.layers.test(W.layers)&&W_(Ne,k,W,Oe,Je,We)}}function W_(C,k,W,z,Q,Ie){C.onBeforeRender(m,k,W,z,Q,Ie),C.modelViewMatrix.multiplyMatrices(W.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),Q.onBeforeRender(m,k,W,z,C,Ie),Q.transparent===!0&&Q.side===xi?(Q.side=Jt,Q.needsUpdate=!0,m.renderBufferDirect(W,k,z,Q,C,Ie),Q.side=cs,Q.needsUpdate=!0,m.renderBufferDirect(W,k,z,Q,C,Ie),Q.side=xi):m.renderBufferDirect(W,k,z,Q,C,Ie),C.onAfterRender(m,k,W,z,Q,Ie)}function Yl(C,k,W){k.isScene!==!0&&(k=le);const z=J.get(C),Q=f.state.lights,Ie=f.state.shadowsArray,Fe=Q.state.version,Ne=Se.getParameters(C,Q.state,Ie,k,W),Oe=Se.getProgramCacheKey(Ne);let Je=z.programs;z.environment=C.isMeshStandardMaterial?k.environment:null,z.fog=k.fog,z.envMap=(C.isMeshStandardMaterial?xe:re).get(C.envMap||z.environment),Je===void 0&&(C.addEventListener("dispose",F),Je=new Map,z.programs=Je);let We=Je.get(Oe);if(We!==void 0){if(z.currentProgram===We&&z.lightsStateVersion===Fe)return xf(C,Ne),We}else Ne.uniforms=Se.getUniforms(C),C.onBuild(W,Ne,m),C.onBeforeCompile(Ne,m),We=Se.acquireProgram(Ne,Oe),Je.set(Oe,We),z.uniforms=Ne.uniforms;const qe=z.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(qe.clippingPlanes=S.uniform),xf(C,Ne),z.needsLights=q_(C),z.lightsStateVersion=Fe,z.needsLights&&(qe.ambientLightColor.value=Q.state.ambient,qe.lightProbe.value=Q.state.probe,qe.directionalLights.value=Q.state.directional,qe.directionalLightShadows.value=Q.state.directionalShadow,qe.spotLights.value=Q.state.spot,qe.spotLightShadows.value=Q.state.spotShadow,qe.rectAreaLights.value=Q.state.rectArea,qe.ltc_1.value=Q.state.rectAreaLTC1,qe.ltc_2.value=Q.state.rectAreaLTC2,qe.pointLights.value=Q.state.point,qe.pointLightShadows.value=Q.state.pointShadow,qe.hemisphereLights.value=Q.state.hemi,qe.directionalShadowMap.value=Q.state.directionalShadowMap,qe.directionalShadowMatrix.value=Q.state.directionalShadowMatrix,qe.spotShadowMap.value=Q.state.spotShadowMap,qe.spotShadowMatrix.value=Q.state.spotShadowMatrix,qe.pointShadowMap.value=Q.state.pointShadowMap,qe.pointShadowMatrix.value=Q.state.pointShadowMatrix);const ot=We.getUniforms(),Ri=qa.seqWithValue(ot.seq,qe);return z.currentProgram=We,z.uniformsList=Ri,We}function xf(C,k){const W=J.get(C);W.outputEncoding=k.outputEncoding,W.instancing=k.instancing,W.skinning=k.skinning,W.morphTargets=k.morphTargets,W.morphNormals=k.morphNormals,W.morphColors=k.morphColors,W.morphTargetsCount=k.morphTargetsCount,W.numClippingPlanes=k.numClippingPlanes,W.numIntersection=k.numClipIntersection,W.vertexAlphas=k.vertexAlphas,W.vertexTangents=k.vertexTangents,W.toneMapping=k.toneMapping}function X_(C,k,W,z,Q){k.isScene!==!0&&(k=le),Z.resetTextureUnits();const Ie=k.fog,Fe=z.isMeshStandardMaterial?k.environment:null,Ne=y===null?m.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:Si,Oe=(z.isMeshStandardMaterial?xe:re).get(z.envMap||Fe),Je=z.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,We=!!z.normalMap&&!!W.attributes.tangent,qe=!!W.morphAttributes.position,ot=!!W.morphAttributes.normal,Ri=!!W.morphAttributes.color,Er=z.toneMapped?m.toneMapping:Sn,Cr=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,En=Cr!==void 0?Cr.length:0,Ye=J.get(z),Pr=f.state.lights;if($===!0&&(N===!0||C!==w)){const Xt=C===w&&z.id===x;S.setState(z,C,Xt)}let gt=!1;z.version===Ye.__version?(Ye.needsLights&&Ye.lightsStateVersion!==Pr.state.version||Ye.outputEncoding!==Ne||Q.isInstancedMesh&&Ye.instancing===!1||!Q.isInstancedMesh&&Ye.instancing===!0||Q.isSkinnedMesh&&Ye.skinning===!1||!Q.isSkinnedMesh&&Ye.skinning===!0||Ye.envMap!==Oe||z.fog===!0&&Ye.fog!==Ie||Ye.numClippingPlanes!==void 0&&(Ye.numClippingPlanes!==S.numPlanes||Ye.numIntersection!==S.numIntersection)||Ye.vertexAlphas!==Je||Ye.vertexTangents!==We||Ye.morphTargets!==qe||Ye.morphNormals!==ot||Ye.morphColors!==Ri||Ye.toneMapping!==Er||Ae.isWebGL2===!0&&Ye.morphTargetsCount!==En)&&(gt=!0):(gt=!0,Ye.__version=z.version);let nn=Ye.currentProgram;gt===!0&&(nn=Yl(z,k,Q));let ri=!1,Hs=!1,Zl=!1;const Rt=nn.getUniforms(),Ws=Ye.uniforms;if(ce.useProgram(nn.program)&&(ri=!0,Hs=!0,Zl=!0),z.id!==x&&(x=z.id,Hs=!0),ri||w!==C){if(Rt.setValue(Y,"projectionMatrix",C.projectionMatrix),Ae.logarithmicDepthBuffer&&Rt.setValue(Y,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),w!==C&&(w=C,Hs=!0,Zl=!0),z.isShaderMaterial||z.isMeshPhongMaterial||z.isMeshToonMaterial||z.isMeshStandardMaterial||z.envMap){const Xt=Rt.map.cameraPosition;Xt!==void 0&&Xt.setValue(Y,ie.setFromMatrixPosition(C.matrixWorld))}(z.isMeshPhongMaterial||z.isMeshToonMaterial||z.isMeshLambertMaterial||z.isMeshBasicMaterial||z.isMeshStandardMaterial||z.isShaderMaterial)&&Rt.setValue(Y,"isOrthographic",C.isOrthographicCamera===!0),(z.isMeshPhongMaterial||z.isMeshToonMaterial||z.isMeshLambertMaterial||z.isMeshBasicMaterial||z.isMeshStandardMaterial||z.isShaderMaterial||z.isShadowMaterial||Q.isSkinnedMesh)&&Rt.setValue(Y,"viewMatrix",C.matrixWorldInverse)}if(Q.isSkinnedMesh){Rt.setOptional(Y,Q,"bindMatrix"),Rt.setOptional(Y,Q,"bindMatrixInverse");const Xt=Q.skeleton;Xt&&(Ae.floatVertexTextures?(Xt.boneTexture===null&&Xt.computeBoneTexture(),Rt.setValue(Y,"boneTexture",Xt.boneTexture,Z),Rt.setValue(Y,"boneTextureSize",Xt.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Jl=W.morphAttributes;if((Jl.position!==void 0||Jl.normal!==void 0||Jl.color!==void 0&&Ae.isWebGL2===!0)&&se.update(Q,W,z,nn),(Hs||Ye.receiveShadow!==Q.receiveShadow)&&(Ye.receiveShadow=Q.receiveShadow,Rt.setValue(Y,"receiveShadow",Q.receiveShadow)),Hs&&(Rt.setValue(Y,"toneMappingExposure",m.toneMappingExposure),Ye.needsLights&&$_(Ws,Zl),Ie&&z.fog===!0&&Ke.refreshFogUniforms(Ws,Ie),Ke.refreshMaterialUniforms(Ws,z,D,I,B),qa.upload(Y,Ye.uniformsList,Ws,Z)),z.isShaderMaterial&&z.uniformsNeedUpdate===!0&&(qa.upload(Y,Ye.uniformsList,Ws,Z),z.uniformsNeedUpdate=!1),z.isSpriteMaterial&&Rt.setValue(Y,"center",Q.center),Rt.setValue(Y,"modelViewMatrix",Q.modelViewMatrix),Rt.setValue(Y,"normalMatrix",Q.normalMatrix),Rt.setValue(Y,"modelMatrix",Q.matrixWorld),z.isShaderMaterial||z.isRawShaderMaterial){const Xt=z.uniformsGroups;for(let Kl=0,j_=Xt.length;Kl<j_;Kl++)if(Ae.isWebGL2){const bf=Xt[Kl];oe.update(bf,nn),oe.bind(bf,nn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return nn}function $_(C,k){C.ambientLightColor.needsUpdate=k,C.lightProbe.needsUpdate=k,C.directionalLights.needsUpdate=k,C.directionalLightShadows.needsUpdate=k,C.pointLights.needsUpdate=k,C.pointLightShadows.needsUpdate=k,C.spotLights.needsUpdate=k,C.spotLightShadows.needsUpdate=k,C.rectAreaLights.needsUpdate=k,C.hemisphereLights.needsUpdate=k}function q_(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(C,k,W){J.get(C.texture).__webglTexture=k,J.get(C.depthTexture).__webglTexture=W;const z=J.get(C);z.__hasExternalTextures=!0,z.__hasExternalTextures&&(z.__autoAllocateDepthBuffer=W===void 0,z.__autoAllocateDepthBuffer||we.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),z.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,k){const W=J.get(C);W.__webglFramebuffer=k,W.__useDefaultFramebuffer=k===void 0},this.setRenderTarget=function(C,k=0,W=0){y=C,v=k,_=W;let z=!0;if(C){const Oe=J.get(C);Oe.__useDefaultFramebuffer!==void 0?(ce.bindFramebuffer(36160,null),z=!1):Oe.__webglFramebuffer===void 0?Z.setupRenderTarget(C):Oe.__hasExternalTextures&&Z.rebindTextures(C,J.get(C.texture).__webglTexture,J.get(C.depthTexture).__webglTexture)}let Q=null,Ie=!1,Fe=!1;if(C){const Oe=C.texture;(Oe.isData3DTexture||Oe.isDataArrayTexture)&&(Fe=!0);const Je=J.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(Q=Je[k],Ie=!0):Ae.isWebGL2&&C.samples>0&&Z.useMultisampledRTT(C)===!1?Q=J.get(C).__webglMultisampledFramebuffer:Q=Je,M.copy(C.viewport),P.copy(C.scissor),b=C.scissorTest}else M.copy(R).multiplyScalar(D).floor(),P.copy(U).multiplyScalar(D).floor(),b=O;if(ce.bindFramebuffer(36160,Q)&&Ae.drawBuffers&&z&&ce.drawBuffers(C,Q),ce.viewport(M),ce.scissor(P),ce.setScissorTest(b),Ie){const Oe=J.get(C.texture);Y.framebufferTexture2D(36160,36064,34069+k,Oe.__webglTexture,W)}else if(Fe){const Oe=J.get(C.texture),Je=k||0;Y.framebufferTextureLayer(36160,36064,Oe.__webglTexture,W||0,Je)}x=-1},this.readRenderTargetPixels=function(C,k,W,z,Q,Ie,Fe){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ne=J.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Fe!==void 0&&(Ne=Ne[Fe]),Ne){ce.bindFramebuffer(36160,Ne);try{const Oe=C.texture,Je=Oe.format,We=Oe.type;if(Je!==Zt&&E.convert(Je)!==Y.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const qe=We===hs&&(we.has("EXT_color_buffer_half_float")||Ae.isWebGL2&&we.has("EXT_color_buffer_float"));if(We!==Mi&&E.convert(We)!==Y.getParameter(35738)&&!(We===qn&&(Ae.isWebGL2||we.has("OES_texture_float")||we.has("WEBGL_color_buffer_float")))&&!qe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}k>=0&&k<=C.width-z&&W>=0&&W<=C.height-Q&&Y.readPixels(k,W,z,Q,E.convert(Je),E.convert(We),Ie)}finally{const Oe=y!==null?J.get(y).__webglFramebuffer:null;ce.bindFramebuffer(36160,Oe)}}},this.copyFramebufferToTexture=function(C,k,W=0){const z=Math.pow(2,-W),Q=Math.floor(k.image.width*z),Ie=Math.floor(k.image.height*z);Z.setTexture2D(k,0),Y.copyTexSubImage2D(3553,W,0,0,C.x,C.y,Q,Ie),ce.unbindTexture()},this.copyTextureToTexture=function(C,k,W,z=0){const Q=k.image.width,Ie=k.image.height,Fe=E.convert(W.format),Ne=E.convert(W.type);Z.setTexture2D(W,0),Y.pixelStorei(37440,W.flipY),Y.pixelStorei(37441,W.premultiplyAlpha),Y.pixelStorei(3317,W.unpackAlignment),k.isDataTexture?Y.texSubImage2D(3553,z,C.x,C.y,Q,Ie,Fe,Ne,k.image.data):k.isCompressedTexture?Y.compressedTexSubImage2D(3553,z,C.x,C.y,k.mipmaps[0].width,k.mipmaps[0].height,Fe,k.mipmaps[0].data):Y.texSubImage2D(3553,z,C.x,C.y,Fe,Ne,k.image),z===0&&W.generateMipmaps&&Y.generateMipmap(3553),ce.unbindTexture()},this.copyTextureToTexture3D=function(C,k,W,z,Q=0){if(m.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ie=C.max.x-C.min.x+1,Fe=C.max.y-C.min.y+1,Ne=C.max.z-C.min.z+1,Oe=E.convert(z.format),Je=E.convert(z.type);let We;if(z.isData3DTexture)Z.setTexture3D(z,0),We=32879;else if(z.isDataArrayTexture)Z.setTexture2DArray(z,0),We=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Y.pixelStorei(37440,z.flipY),Y.pixelStorei(37441,z.premultiplyAlpha),Y.pixelStorei(3317,z.unpackAlignment);const qe=Y.getParameter(3314),ot=Y.getParameter(32878),Ri=Y.getParameter(3316),Er=Y.getParameter(3315),Cr=Y.getParameter(32877),En=W.isCompressedTexture?W.mipmaps[0]:W.image;Y.pixelStorei(3314,En.width),Y.pixelStorei(32878,En.height),Y.pixelStorei(3316,C.min.x),Y.pixelStorei(3315,C.min.y),Y.pixelStorei(32877,C.min.z),W.isDataTexture||W.isData3DTexture?Y.texSubImage3D(We,Q,k.x,k.y,k.z,Ie,Fe,Ne,Oe,Je,En.data):W.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Y.compressedTexSubImage3D(We,Q,k.x,k.y,k.z,Ie,Fe,Ne,Oe,En.data)):Y.texSubImage3D(We,Q,k.x,k.y,k.z,Ie,Fe,Ne,Oe,Je,En),Y.pixelStorei(3314,qe),Y.pixelStorei(32878,ot),Y.pixelStorei(3316,Ri),Y.pixelStorei(3315,Er),Y.pixelStorei(32877,Cr),Q===0&&z.generateMipmaps&&Y.generateMipmap(We),ce.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?Z.setTextureCube(C,0):C.isData3DTexture?Z.setTexture3D(C,0):C.isDataArrayTexture?Z.setTexture2DArray(C,0):Z.setTexture2D(C,0),ce.unbindTexture()},this.resetState=function(){v=0,_=0,y=null,ce.reset(),ee.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Xg extends Ph{}Xg.prototype.isWebGL1Renderer=!0;class Rl{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new ae(e),this.density=t}clone(){return new Rl(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Dl{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new ae(e),this.near=t,this.far=n}clone(){return new Dl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Lh extends Xe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}class Fl{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=_o,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Kt()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Kt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Kt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Dt=new A;class hr{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Dt.fromBufferAttribute(this,t),Dt.applyMatrix4(e),this.setXYZ(t,Dt.x,Dt.y,Dt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Dt.fromBufferAttribute(this,t),Dt.applyNormalMatrix(e),this.setXYZ(t,Dt.x,Dt.y,Dt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Dt.fromBufferAttribute(this,t),Dt.transformDirection(e),this.setXYZ(t,Dt.x,Dt.y,Dt.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Qe(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new hr(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Ih extends Lt{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new ae(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Wr;const js=new A,Xr=new A,$r=new A,qr=new q,Ys=new q,$g=new be,fa=new A,Zs=new A,da=new A,Id=new q,Lc=new q,Rd=new q;class qg extends Xe{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Wr===void 0){Wr=new Ce;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Fl(t,5);Wr.setIndex([0,1,2,0,2,3]),Wr.setAttribute("position",new hr(n,3,0,!1)),Wr.setAttribute("uv",new hr(n,2,3,!1))}this.geometry=Wr,this.material=e!==void 0?e:new Ih,this.center=new q(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Xr.setFromMatrixScale(this.matrixWorld),$g.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),$r.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Xr.multiplyScalar(-$r.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;pa(fa.set(-.5,-.5,0),$r,o,Xr,i,s),pa(Zs.set(.5,-.5,0),$r,o,Xr,i,s),pa(da.set(.5,.5,0),$r,o,Xr,i,s),Id.set(0,0),Lc.set(1,0),Rd.set(1,1);let a=e.ray.intersectTriangle(fa,Zs,da,!1,js);if(a===null&&(pa(Zs.set(-.5,.5,0),$r,o,Xr,i,s),Lc.set(0,1),a=e.ray.intersectTriangle(fa,da,Zs,!1,js),a===null))return;const l=e.ray.origin.distanceTo(js);l<e.near||l>e.far||t.push({distance:l,point:js.clone(),uv:cn.getUV(js,fa,Zs,da,Id,Lc,Rd,new q),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function pa(r,e,t,n,i,s){qr.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Ys.x=s*qr.x-i*qr.y,Ys.y=i*qr.x+s*qr.y):Ys.copy(qr),r.copy(e),r.x+=Ys.x,r.y+=Ys.y,r.applyMatrix4($g)}const ma=new A,Dd=new A;class jg extends Xe{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){ma.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(ma);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){ma.setFromMatrixPosition(e.matrixWorld),Dd.setFromMatrixPosition(this.matrixWorld);const n=ma.distanceTo(Dd)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}const Fd=new A,Od=new He,Nd=new He,I1=new A,kd=new be;class Rh extends wt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new be,this.bindMatrixInverse=new be}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new He,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Od.fromBufferAttribute(i.attributes.skinIndex,e),Nd.fromBufferAttribute(i.attributes.skinWeight,e),Fd.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=Nd.getComponent(s);if(o!==0){const a=Od.getComponent(s);kd.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(I1.copy(Fd).applyMatrix4(kd),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class xo extends Xe{constructor(){super(),this.isBone=!0,this.type="Bone"}}class ir extends mt{constructor(e=null,t=1,n=1,i,s,o,a,l,c=ht,u=ht,h,f){super(null,o,a,l,c,u,i,s,h,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const zd=new be,R1=new be;class ko{constructor(e=[],t=[]){this.uuid=Kt(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new be)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new be;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:R1;zd.multiplyMatrices(a,t[s]),zd.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new ko(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Ig(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new ir(t,e,e,Zt,qn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new xo),this.bones.push(o),this.boneInverses.push(new be().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class ds extends Qe{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Bd=new be,Ud=new be,ga=[],Js=new wt;class Yg extends wt{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ds(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Js.geometry=this.geometry,Js.material=this.material,Js.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,Bd),Ud.multiplyMatrices(n,Bd),Js.matrixWorld=Ud,Js.raycast(e,ga);for(let o=0,a=ga.length;o<a;o++){const l=ga[o];l.instanceId=s,l.object=this,t.push(l)}ga.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new ds(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class It extends Lt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ae(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Vd=new A,Gd=new A,Hd=new be,Ic=new Fo,_a=new xr;class ei extends Xe{constructor(e=new Ce,t=new It){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Vd.fromBufferAttribute(t,i-1),Gd.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Vd.distanceTo(Gd);e.setAttribute("lineDistance",new ge(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),_a.copy(n.boundingSphere),_a.applyMatrix4(i),_a.radius+=s,e.ray.intersectsSphere(_a)===!1)return;Hd.copy(i).invert(),Ic.copy(e.ray).applyMatrix4(Hd);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new A,u=new A,h=new A,f=new A,d=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,o.start),_=Math.min(p.count,o.start+o.count);for(let y=v,x=_-1;y<x;y+=d){const w=p.getX(y),M=p.getX(y+1);if(c.fromBufferAttribute(g,w),u.fromBufferAttribute(g,M),Ic.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const b=e.ray.origin.distanceTo(f);b<e.near||b>e.far||t.push({distance:b,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,o.start),_=Math.min(g.count,o.start+o.count);for(let y=v,x=_-1;y<x;y+=d){if(c.fromBufferAttribute(g,y),u.fromBufferAttribute(g,y+1),Ic.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(f);M<e.near||M>e.far||t.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}const Wd=new A,Xd=new A;class kn extends ei{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Wd.fromBufferAttribute(t,i),Xd.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Wd.distanceTo(Xd);e.setAttribute("lineDistance",new ge(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Zg extends ei{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Dh extends Lt{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new ae(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const $d=new be,Ru=new Fo,va=new xr,ya=new A;class Fh extends Xe{constructor(e=new Ce,t=new Dh){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),va.copy(n.boundingSphere),va.applyMatrix4(i),va.radius+=s,e.ray.intersectsSphere(va)===!1)return;$d.copy(i).invert(),Ru.copy(e.ray).applyMatrix4($d);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,h=n.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let p=f,m=d;p<m;p++){const g=c.getX(p);ya.fromBufferAttribute(h,g),qd(ya,g,l,i,e,t,this)}}else{const f=Math.max(0,o.start),d=Math.min(h.count,o.start+o.count);for(let p=f,m=d;p<m;p++)ya.fromBufferAttribute(h,p),qd(ya,p,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function qd(r,e,t,n,i,s,o){const a=Ru.distanceSqToPoint(r);if(a<t){const l=new A;Ru.closestPointToPoint(r,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class D1 extends mt{constructor(e,t,n,i,s,o,a,l,c){super(e,t,n,i,s,o,a,l,c),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:it,this.magFilter=s!==void 0?s:it,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class F1 extends mt{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=ht,this.minFilter=ht,this.generateMipmaps=!1,this.needsUpdate=!0}}class Jg extends mt{constructor(e,t,n,i,s,o,a,l,c,u,h,f){super(null,o,a,l,c,u,i,s,h,f),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class O1 extends mt{constructor(e,t,n,i,s,o,a,l,c){super(e,t,n,i,s,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class dn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const u=n[i],f=n[i+1]-u,d=(o-u)/f;return(i+d)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=t||(o.isVector2?new q:new A);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new A,i=[],s=[],o=[],a=new A,l=new be;for(let d=0;d<=e;d++){const p=d/e;i[d]=this.getTangentAt(p,new A)}s[0]=new A,o[0]=new A;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(i[d-1],i[d]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(ft(i[d-1].dot(i[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(a,p))}o[d].crossVectors(i[d],s[d])}if(t===!0){let d=Math.acos(ft(s[0].dot(s[e]),-1,1));d/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(d=-d);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(i[p],d*p)),o[p].crossVectors(i[p],s[p])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Ol extends dn{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const n=t||new q,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Kg extends Ol{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Oh(){let r=0,e=0,t=0,n=0;function i(s,o,a,l){r=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){i(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,i(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return r+e*s+t*o+n*a}}}const xa=new A,Rc=new Oh,Dc=new Oh,Fc=new Oh;class Qg extends dn{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new A){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%s]:(xa.subVectors(i[0],i[1]).add(i[0]),c=xa);const h=i[a%s],f=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(xa.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=xa),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),m=Math.pow(h.distanceToSquared(f),d),g=Math.pow(f.distanceToSquared(u),d);m<1e-4&&(m=1),p<1e-4&&(p=m),g<1e-4&&(g=m),Rc.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,m,g),Dc.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,m,g),Fc.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,m,g)}else this.curveType==="catmullrom"&&(Rc.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),Dc.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),Fc.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(Rc.calc(l),Dc.calc(l),Fc.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new A().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function jd(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,a=r*r,l=r*a;return(2*t-2*n+s+o)*l+(-3*t+3*n-2*s-o)*a+s*r+t}function N1(r,e){const t=1-r;return t*t*e}function k1(r,e){return 2*(1-r)*r*e}function z1(r,e){return r*r*e}function ro(r,e,t,n){return N1(r,e)+k1(r,t)+z1(r,n)}function B1(r,e){const t=1-r;return t*t*t*e}function U1(r,e){const t=1-r;return 3*t*t*r*e}function V1(r,e){return 3*(1-r)*r*r*e}function G1(r,e){return r*r*r*e}function so(r,e,t,n,i){return B1(r,e)+U1(r,t)+V1(r,n)+G1(r,i)}class Nh extends dn{constructor(e=new q,t=new q,n=new q,i=new q){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new q){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(so(e,i.x,s.x,o.x,a.x),so(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class e0 extends dn{constructor(e=new A,t=new A,n=new A,i=new A){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new A){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(so(e,i.x,s.x,o.x,a.x),so(e,i.y,s.y,o.y,a.y),so(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Nl extends dn{constructor(e=new q,t=new q){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new q){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new q;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class t0 extends dn{constructor(e=new A,t=new A){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new A){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class kh extends dn{constructor(e=new q,t=new q,n=new q){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new q){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(ro(e,i.x,s.x,o.x),ro(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class zh extends dn{constructor(e=new A,t=new A,n=new A){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new A){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(ro(e,i.x,s.x,o.x),ro(e,i.y,s.y,o.y),ro(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Bh extends dn{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new q){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(jd(a,l.x,c.x,u.x,h.x),jd(a,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new q().fromArray(i))}return this}}var Uh=Object.freeze({__proto__:null,ArcCurve:Kg,CatmullRomCurve3:Qg,CubicBezierCurve:Nh,CubicBezierCurve3:e0,EllipseCurve:Ol,LineCurve:Nl,LineCurve3:t0,QuadraticBezierCurve:kh,QuadraticBezierCurve3:zh,SplineCurve:Bh});class n0 extends dn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Nl(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Uh[i.type]().fromJSON(i))}return this}}class bo extends n0{constructor(e){super(),this.type="Path",this.currentPoint=new q,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Nl(this.currentPoint.clone(),new q(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new kh(this.currentPoint.clone(),new q(e,t),new q(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new Nh(this.currentPoint.clone(),new q(e,t),new q(n,i),new q(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Bh(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,n,i,s,o,a,l),this}absellipse(e,t,n,i,s,o,a,l){const c=new Ol(e,t,n,i,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class fr extends Ce{constructor(e=[new q(0,-.5),new q(.5,0),new q(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=ft(i,0,Math.PI*2);const s=[],o=[],a=[],l=[],c=[],u=1/t,h=new A,f=new q,d=new A,p=new A,m=new A;let g=0,v=0;for(let _=0;_<=e.length-1;_++)switch(_){case 0:g=e[_+1].x-e[_].x,v=e[_+1].y-e[_].y,d.x=v*1,d.y=-g,d.z=v*0,m.copy(d),d.normalize(),l.push(d.x,d.y,d.z);break;case e.length-1:l.push(m.x,m.y,m.z);break;default:g=e[_+1].x-e[_].x,v=e[_+1].y-e[_].y,d.x=v*1,d.y=-g,d.z=v*0,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),l.push(d.x,d.y,d.z),m.copy(p)}for(let _=0;_<=t;_++){const y=n+_*u*i,x=Math.sin(y),w=Math.cos(y);for(let M=0;M<=e.length-1;M++){h.x=e[M].x*x,h.y=e[M].y,h.z=e[M].x*w,o.push(h.x,h.y,h.z),f.x=_/t,f.y=M/(e.length-1),a.push(f.x,f.y);const P=l[3*M+0]*x,b=l[3*M+1],T=l[3*M+0]*w;c.push(P,b,T)}}for(let _=0;_<t;_++)for(let y=0;y<e.length-1;y++){const x=y+_*e.length,w=x,M=x+e.length,P=x+e.length+1,b=x+1;s.push(w,M,b),s.push(P,b,M)}this.setIndex(s),this.setAttribute("position",new ge(o,3)),this.setAttribute("uv",new ge(a,2)),this.setAttribute("normal",new ge(c,3))}static fromJSON(e){return new fr(e.points,e.segments,e.phiStart,e.phiLength)}}class ps extends fr{constructor(e=1,t=1,n=4,i=8){const s=new bo;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new ps(e.radius,e.length,e.capSegments,e.radialSegments)}}class ms extends Ce{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],a=[],l=[],c=new A,u=new q;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=n+h/t*i;c.x=e*Math.cos(d),c.y=e*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=t;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new ge(o,3)),this.setAttribute("normal",new ge(a,3)),this.setAttribute("uv",new ge(l,2))}static fromJSON(e){return new ms(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Ai extends Ce{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const u=[],h=[],f=[],d=[];let p=0;const m=[],g=n/2;let v=0;_(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new ge(h,3)),this.setAttribute("normal",new ge(f,3)),this.setAttribute("uv",new ge(d,2));function _(){const x=new A,w=new A;let M=0;const P=(t-e)/n;for(let b=0;b<=s;b++){const T=[],I=b/s,D=I*(t-e)+e;for(let V=0;V<=i;V++){const X=V/i,R=X*l+a,U=Math.sin(R),O=Math.cos(R);w.x=D*U,w.y=-I*n+g,w.z=D*O,h.push(w.x,w.y,w.z),x.set(U,P,O).normalize(),f.push(x.x,x.y,x.z),d.push(X,1-I),T.push(p++)}m.push(T)}for(let b=0;b<i;b++)for(let T=0;T<s;T++){const I=m[T][b],D=m[T+1][b],V=m[T+1][b+1],X=m[T][b+1];u.push(I,D,X),u.push(D,V,X),M+=6}c.addGroup(v,M,0),v+=M}function y(x){const w=p,M=new q,P=new A;let b=0;const T=x===!0?e:t,I=x===!0?1:-1;for(let V=1;V<=i;V++)h.push(0,g*I,0),f.push(0,I,0),d.push(.5,.5),p++;const D=p;for(let V=0;V<=i;V++){const R=V/i*l+a,U=Math.cos(R),O=Math.sin(R);P.x=T*O,P.y=g*I,P.z=T*U,h.push(P.x,P.y,P.z),f.push(0,I,0),M.x=U*.5+.5,M.y=O*.5*I+.5,d.push(M.x,M.y),p++}for(let V=0;V<i;V++){const X=w+V,R=D+V;x===!0?u.push(R,R+1,X):u.push(R+1,R,X),b+=3}c.addGroup(v,b,x===!0?1:2),v+=b}}static fromJSON(e){return new Ai(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class gs extends Ai{constructor(e=1,t=1,n=8,i=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new gs(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Dn extends Ce{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];a(i),c(n),u(),this.setAttribute("position",new ge(s,3)),this.setAttribute("normal",new ge(s.slice(),3)),this.setAttribute("uv",new ge(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(_){const y=new A,x=new A,w=new A;for(let M=0;M<t.length;M+=3)d(t[M+0],y),d(t[M+1],x),d(t[M+2],w),l(y,x,w,_)}function l(_,y,x,w){const M=w+1,P=[];for(let b=0;b<=M;b++){P[b]=[];const T=_.clone().lerp(x,b/M),I=y.clone().lerp(x,b/M),D=M-b;for(let V=0;V<=D;V++)V===0&&b===M?P[b][V]=T:P[b][V]=T.clone().lerp(I,V/D)}for(let b=0;b<M;b++)for(let T=0;T<2*(M-b)-1;T++){const I=Math.floor(T/2);T%2===0?(f(P[b][I+1]),f(P[b+1][I]),f(P[b][I])):(f(P[b][I+1]),f(P[b+1][I+1]),f(P[b+1][I]))}}function c(_){const y=new A;for(let x=0;x<s.length;x+=3)y.x=s[x+0],y.y=s[x+1],y.z=s[x+2],y.normalize().multiplyScalar(_),s[x+0]=y.x,s[x+1]=y.y,s[x+2]=y.z}function u(){const _=new A;for(let y=0;y<s.length;y+=3){_.x=s[y+0],_.y=s[y+1],_.z=s[y+2];const x=g(_)/2/Math.PI+.5,w=v(_)/Math.PI+.5;o.push(x,1-w)}p(),h()}function h(){for(let _=0;_<o.length;_+=6){const y=o[_+0],x=o[_+2],w=o[_+4],M=Math.max(y,x,w),P=Math.min(y,x,w);M>.9&&P<.1&&(y<.2&&(o[_+0]+=1),x<.2&&(o[_+2]+=1),w<.2&&(o[_+4]+=1))}}function f(_){s.push(_.x,_.y,_.z)}function d(_,y){const x=_*3;y.x=e[x+0],y.y=e[x+1],y.z=e[x+2]}function p(){const _=new A,y=new A,x=new A,w=new A,M=new q,P=new q,b=new q;for(let T=0,I=0;T<s.length;T+=9,I+=6){_.set(s[T+0],s[T+1],s[T+2]),y.set(s[T+3],s[T+4],s[T+5]),x.set(s[T+6],s[T+7],s[T+8]),M.set(o[I+0],o[I+1]),P.set(o[I+2],o[I+3]),b.set(o[I+4],o[I+5]),w.copy(_).add(y).add(x).divideScalar(3);const D=g(w);m(M,I+0,_,D),m(P,I+2,y,D),m(b,I+4,x,D)}}function m(_,y,x,w){w<0&&_.x===1&&(o[y]=_.x-1),x.x===0&&x.z===0&&(o[y]=w/2/Math.PI+.5)}function g(_){return Math.atan2(_.z,-_.x)}function v(_){return Math.atan2(-_.y,Math.sqrt(_.x*_.x+_.z*_.z))}}static fromJSON(e){return new Dn(e.vertices,e.indices,e.radius,e.details)}}class _s extends Dn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new _s(e.radius,e.detail)}}const ba=new A,wa=new A,Oc=new A,Ma=new cn;class i0 extends Ce{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(tr*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:m,b:g,c:v}=Ma;if(m.fromBufferAttribute(a,c[0]),g.fromBufferAttribute(a,c[1]),v.fromBufferAttribute(a,c[2]),Ma.getNormal(Oc),h[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,h[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,h[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let _=0;_<3;_++){const y=(_+1)%3,x=h[_],w=h[y],M=Ma[u[_]],P=Ma[u[y]],b=`${x}_${w}`,T=`${w}_${x}`;T in f&&f[T]?(Oc.dot(f[T].normal)<=s&&(d.push(M.x,M.y,M.z),d.push(P.x,P.y,P.z)),f[T]=null):b in f||(f[b]={index0:c[_],index1:c[y],normal:Oc.clone()})}}for(const p in f)if(f[p]){const{index0:m,index1:g}=f[p];ba.fromBufferAttribute(a,m),wa.fromBufferAttribute(a,g),d.push(ba.x,ba.y,ba.z),d.push(wa.x,wa.y,wa.z)}this.setAttribute("position",new ge(d,3))}}}class rr extends bo{constructor(e){super(e),this.uuid=Kt(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new bo().fromJSON(i))}return this}}const H1={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=r0(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,f,d;if(n&&(s=j1(r,e,s,t)),r.length>80*t){a=c=r[0],l=u=r[1];for(let p=t;p<i;p+=t)h=r[p],f=r[p+1],h<a&&(a=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-a,u-l),d=d!==0?1/d:0}return wo(s,o,t,a,l,d),o}};function r0(r,e,t,n,i){let s,o;if(i===sS(r,e,t,n)>0)for(s=e;s<t;s+=n)o=Yd(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=Yd(s,r[s],r[s+1],o);return o&&kl(o,o.next)&&(So(o),o=o.next),o}function Ti(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(kl(t,t.next)||rt(t.prev,t,t.next)===0)){if(So(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function wo(r,e,t,n,i,s,o){if(!r)return;!o&&s&&Q1(r,n,i,s);let a=r,l,c;for(;r.prev!==r.next;){if(l=r.prev,c=r.next,s?X1(r,n,i,s):W1(r)){e.push(l.i/t),e.push(r.i/t),e.push(c.i/t),So(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=$1(Ti(r),e,t),wo(r,e,t,n,i,s,2)):o===2&&q1(r,e,t,n,i,s):wo(Ti(r),e,t,n,i,s,1);break}}}function W1(r){const e=r.prev,t=r,n=r.next;if(rt(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(is(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&rt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function X1(r,e,t,n){const i=r.prev,s=r,o=r.next;if(rt(i,s,o)>=0)return!1;const a=i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,l=i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,c=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,h=Du(a,l,e,t,n),f=Du(c,u,e,t,n);let d=r.prevZ,p=r.nextZ;for(;d&&d.z>=h&&p&&p.z<=f;){if(d!==r.prev&&d!==r.next&&is(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&rt(d.prev,d,d.next)>=0||(d=d.prevZ,p!==r.prev&&p!==r.next&&is(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&rt(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=h;){if(d!==r.prev&&d!==r.next&&is(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&rt(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==r.prev&&p!==r.next&&is(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&rt(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function $1(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!kl(i,s)&&s0(i,n,n.next,s)&&Mo(i,s)&&Mo(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),So(n),So(n.next),n=r=s),n=n.next}while(n!==r);return Ti(n)}function q1(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&nS(o,a)){let l=o0(o,a);o=Ti(o,o.next),l=Ti(l,l.next),wo(o,e,t,n,i,s),wo(l,e,t,n,i,s);return}a=a.next}o=o.next}while(o!==r)}function j1(r,e,t,n){const i=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*n,l=s<o-1?e[s+1]*n:r.length,c=r0(r,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(tS(c));for(i.sort(Y1),s=0;s<i.length;s++)Z1(i[s],t),t=Ti(t,t.next);return t}function Y1(r,e){return r.x-e.x}function Z1(r,e){if(e=J1(r,e),e){const t=o0(e,r);Ti(e,e.next),Ti(t,t.next)}}function J1(r,e){let t=e;const n=r.x,i=r.y;let s=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const f=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=n&&f>s){if(s=f,f===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===s)return o;const a=o,l=o.x,c=o.y;let u=1/0,h;t=o;do n>=t.x&&t.x>=l&&n!==t.x&&is(i<c?n:s,i,l,c,i<c?s:n,i,t.x,t.y)&&(h=Math.abs(i-t.y)/(n-t.x),Mo(t,r)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&K1(o,t)))&&(o=t,u=h)),t=t.next;while(t!==a);return o}function K1(r,e){return rt(r.prev,r,e.prev)<0&&rt(e.next,r,r.next)<0}function Q1(r,e,t,n){let i=r;do i.z===null&&(i.z=Du(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,eS(i)}function eS(r){let e,t,n,i,s,o,a,l,c=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,!!n);e++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,c*=2}while(o>1);return r}function Du(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function tS(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function is(r,e,t,n,i,s,o,a){return(i-o)*(e-a)-(r-o)*(s-a)>=0&&(r-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(i-o)*(n-a)>=0}function nS(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!iS(r,e)&&(Mo(r,e)&&Mo(e,r)&&rS(r,e)&&(rt(r.prev,r,e.prev)||rt(r,e.prev,e))||kl(r,e)&&rt(r.prev,r,r.next)>0&&rt(e.prev,e,e.next)>0)}function rt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function kl(r,e){return r.x===e.x&&r.y===e.y}function s0(r,e,t,n){const i=Aa(rt(r,e,t)),s=Aa(rt(r,e,n)),o=Aa(rt(t,n,r)),a=Aa(rt(t,n,e));return!!(i!==s&&o!==a||i===0&&Sa(r,t,e)||s===0&&Sa(r,n,e)||o===0&&Sa(t,r,n)||a===0&&Sa(t,e,n))}function Sa(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Aa(r){return r>0?1:r<0?-1:0}function iS(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&s0(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Mo(r,e){return rt(r.prev,r,r.next)<0?rt(r,e,r.next)>=0&&rt(r,r.prev,e)>=0:rt(r,e,r.prev)<0||rt(r,r.next,e)<0}function rS(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function o0(r,e){const t=new Fu(r.i,r.x,r.y),n=new Fu(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Yd(r,e,t,n){const i=new Fu(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function So(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Fu(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function sS(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class In{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return In.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Zd(e),Jd(n,e);let o=e.length;t.forEach(Zd);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,Jd(n,t[l]);const a=H1.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Zd(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Jd(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class vs extends Ce{constructor(e=new rr([new q(.5,.5),new q(-.5,.5),new q(-.5,-.5),new q(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new ge(i,3)),this.setAttribute("uv",new ge(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1,h=t.depth!==void 0?t.depth:1;let f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,_=t.UVGenerator!==void 0?t.UVGenerator:oS;let y,x=!1,w,M,P,b;v&&(y=v.getSpacedPoints(u),x=!0,f=!1,w=v.computeFrenetFrames(u,!1),M=new A,P=new A,b=new A),f||(g=0,d=0,p=0,m=0);const T=a.extractPoints(c);let I=T.shape;const D=T.holes;if(!In.isClockWise(I)){I=I.reverse();for(let J=0,Z=D.length;J<Z;J++){const re=D[J];In.isClockWise(re)&&(D[J]=re.reverse())}}const X=In.triangulateShape(I,D),R=I;for(let J=0,Z=D.length;J<Z;J++){const re=D[J];I=I.concat(re)}function U(J,Z,re){return Z||console.error("THREE.ExtrudeGeometry: vec does not exist"),Z.clone().multiplyScalar(re).add(J)}const O=I.length,H=X.length;function $(J,Z,re){let xe,ue,Re;const Te=J.x-Z.x,Se=J.y-Z.y,Ke=re.x-J.x,je=re.y-J.y,L=Te*Te+Se*Se,S=Te*je-Se*Ke;if(Math.abs(S)>Number.EPSILON){const G=Math.sqrt(L),ne=Math.sqrt(Ke*Ke+je*je),se=Z.x-Se/G,de=Z.y+Te/G,Ee=re.x-je/ne,E=re.y+Ke/ne,ee=((Ee-se)*je-(E-de)*Ke)/(Te*je-Se*Ke);xe=se+Te*ee-J.x,ue=de+Se*ee-J.y;const oe=xe*xe+ue*ue;if(oe<=2)return new q(xe,ue);Re=Math.sqrt(oe/2)}else{let G=!1;Te>Number.EPSILON?Ke>Number.EPSILON&&(G=!0):Te<-Number.EPSILON?Ke<-Number.EPSILON&&(G=!0):Math.sign(Se)===Math.sign(je)&&(G=!0),G?(xe=-Se,ue=Te,Re=Math.sqrt(L)):(xe=Te,ue=Se,Re=Math.sqrt(L/2))}return new q(xe/Re,ue/Re)}const N=[];for(let J=0,Z=R.length,re=Z-1,xe=J+1;J<Z;J++,re++,xe++)re===Z&&(re=0),xe===Z&&(xe=0),N[J]=$(R[J],R[re],R[xe]);const B=[];let te,K=N.concat();for(let J=0,Z=D.length;J<Z;J++){const re=D[J];te=[];for(let xe=0,ue=re.length,Re=ue-1,Te=xe+1;xe<ue;xe++,Re++,Te++)Re===ue&&(Re=0),Te===ue&&(Te=0),te[xe]=$(re[xe],re[Re],re[Te]);B.push(te),K=K.concat(te)}for(let J=0;J<g;J++){const Z=J/g,re=d*Math.cos(Z*Math.PI/2),xe=p*Math.sin(Z*Math.PI/2)+m;for(let ue=0,Re=R.length;ue<Re;ue++){const Te=U(R[ue],N[ue],xe);Pe(Te.x,Te.y,-re)}for(let ue=0,Re=D.length;ue<Re;ue++){const Te=D[ue];te=B[ue];for(let Se=0,Ke=Te.length;Se<Ke;Se++){const je=U(Te[Se],te[Se],xe);Pe(je.x,je.y,-re)}}}const ie=p+m;for(let J=0;J<O;J++){const Z=f?U(I[J],K[J],ie):I[J];x?(P.copy(w.normals[0]).multiplyScalar(Z.x),M.copy(w.binormals[0]).multiplyScalar(Z.y),b.copy(y[0]).add(P).add(M),Pe(b.x,b.y,b.z)):Pe(Z.x,Z.y,0)}for(let J=1;J<=u;J++)for(let Z=0;Z<O;Z++){const re=f?U(I[Z],K[Z],ie):I[Z];x?(P.copy(w.normals[J]).multiplyScalar(re.x),M.copy(w.binormals[J]).multiplyScalar(re.y),b.copy(y[J]).add(P).add(M),Pe(b.x,b.y,b.z)):Pe(re.x,re.y,h/u*J)}for(let J=g-1;J>=0;J--){const Z=J/g,re=d*Math.cos(Z*Math.PI/2),xe=p*Math.sin(Z*Math.PI/2)+m;for(let ue=0,Re=R.length;ue<Re;ue++){const Te=U(R[ue],N[ue],xe);Pe(Te.x,Te.y,h+re)}for(let ue=0,Re=D.length;ue<Re;ue++){const Te=D[ue];te=B[ue];for(let Se=0,Ke=Te.length;Se<Ke;Se++){const je=U(Te[Se],te[Se],xe);x?Pe(je.x,je.y+y[u-1].y,y[u-1].x+re):Pe(je.x,je.y,h+re)}}}le(),ye();function le(){const J=i.length/3;if(f){let Z=0,re=O*Z;for(let xe=0;xe<H;xe++){const ue=X[xe];we(ue[2]+re,ue[1]+re,ue[0]+re)}Z=u+g*2,re=O*Z;for(let xe=0;xe<H;xe++){const ue=X[xe];we(ue[0]+re,ue[1]+re,ue[2]+re)}}else{for(let Z=0;Z<H;Z++){const re=X[Z];we(re[2],re[1],re[0])}for(let Z=0;Z<H;Z++){const re=X[Z];we(re[0]+O*u,re[1]+O*u,re[2]+O*u)}}n.addGroup(J,i.length/3-J,0)}function ye(){const J=i.length/3;let Z=0;Y(R,Z),Z+=R.length;for(let re=0,xe=D.length;re<xe;re++){const ue=D[re];Y(ue,Z),Z+=ue.length}n.addGroup(J,i.length/3-J,1)}function Y(J,Z){let re=J.length;for(;--re>=0;){const xe=re;let ue=re-1;ue<0&&(ue=J.length-1);for(let Re=0,Te=u+g*2;Re<Te;Re++){const Se=O*Re,Ke=O*(Re+1),je=Z+xe+Se,L=Z+ue+Se,S=Z+ue+Ke,G=Z+xe+Ke;Ae(je,L,S,G)}}}function Pe(J,Z,re){l.push(J),l.push(Z),l.push(re)}function we(J,Z,re){ce(J),ce(Z),ce(re);const xe=i.length/3,ue=_.generateTopUV(n,i,xe-3,xe-2,xe-1);De(ue[0]),De(ue[1]),De(ue[2])}function Ae(J,Z,re,xe){ce(J),ce(Z),ce(xe),ce(Z),ce(re),ce(xe);const ue=i.length/3,Re=_.generateSideWallUV(n,i,ue-6,ue-3,ue-2,ue-1);De(Re[0]),De(Re[1]),De(Re[3]),De(Re[1]),De(Re[2]),De(Re[3])}function ce(J){i.push(l[J*3+0]),i.push(l[J*3+1]),i.push(l[J*3+2])}function De(J){s.push(J.x),s.push(J.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return aS(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Uh[i.type]().fromJSON(i)),new vs(n,e.options)}}const oS={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],c=e[i*3],u=e[i*3+1];return[new q(s,o),new q(a,l),new q(c,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[n*3],u=e[n*3+1],h=e[n*3+2],f=e[i*3],d=e[i*3+1],p=e[i*3+2],m=e[s*3],g=e[s*3+1],v=e[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new q(o,1-l),new q(c,1-h),new q(f,1-p),new q(m,1-v)]:[new q(a,1-l),new q(u,1-h),new q(d,1-p),new q(g,1-v)]}};function aS(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class ys extends Dn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ys(e.radius,e.detail)}}class dr extends Dn{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new dr(e.radius,e.detail)}}class xs extends Ce{constructor(e=.5,t=1,n=8,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=e;const f=(t-e)/i,d=new A,p=new q;for(let m=0;m<=i;m++){for(let g=0;g<=n;g++){const v=s+g/n*o;d.x=h*Math.cos(v),d.y=h*Math.sin(v),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let m=0;m<i;m++){const g=m*(n+1);for(let v=0;v<n;v++){const _=v+g,y=_,x=_+n+1,w=_+n+2,M=_+1;a.push(y,x,M),a.push(x,w,M)}}this.setIndex(a),this.setAttribute("position",new ge(l,3)),this.setAttribute("normal",new ge(c,3)),this.setAttribute("uv",new ge(u,2))}static fromJSON(e){return new xs(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class bs extends Ce{constructor(e=new rr([new q(0,.5),new q(-.5,-.5),new q(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new ge(i,3)),this.setAttribute("normal",new ge(s,3)),this.setAttribute("uv",new ge(o,2));function c(u){const h=i.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;In.isClockWise(d)===!1&&(d=d.reverse());for(let g=0,v=p.length;g<v;g++){const _=p[g];In.isClockWise(_)===!0&&(p[g]=_.reverse())}const m=In.triangulateShape(d,p);for(let g=0,v=p.length;g<v;g++){const _=p[g];d=d.concat(_)}for(let g=0,v=d.length;g<v;g++){const _=d[g];i.push(_.x,_.y,0),s.push(0,0,1),o.push(_.x,_.y)}for(let g=0,v=m.length;g<v;g++){const _=m[g],y=_[0]+h,x=_[1]+h,w=_[2]+h;n.push(y,x,w),l+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return lS(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new bs(n,e.curveSegments)}}function lS(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class pr extends Ce{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new A,f=new A,d=[],p=[],m=[],g=[];for(let v=0;v<=n;v++){const _=[],y=v/n;let x=0;v==0&&o==0?x=.5/t:v==n&&l==Math.PI&&(x=-.5/t);for(let w=0;w<=t;w++){const M=w/t;h.x=-e*Math.cos(i+M*s)*Math.sin(o+y*a),h.y=e*Math.cos(o+y*a),h.z=e*Math.sin(i+M*s)*Math.sin(o+y*a),p.push(h.x,h.y,h.z),f.copy(h).normalize(),m.push(f.x,f.y,f.z),g.push(M+x,1-y),_.push(c++)}u.push(_)}for(let v=0;v<n;v++)for(let _=0;_<t;_++){const y=u[v][_+1],x=u[v][_],w=u[v+1][_],M=u[v+1][_+1];(v!==0||o>0)&&d.push(y,x,M),(v!==n-1||l<Math.PI)&&d.push(x,w,M)}this.setIndex(d),this.setAttribute("position",new ge(p,3)),this.setAttribute("normal",new ge(m,3)),this.setAttribute("uv",new ge(g,2))}static fromJSON(e){return new pr(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class ws extends Dn{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ws(e.radius,e.detail)}}class Ms extends Ce{constructor(e=1,t=.4,n=8,i=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],c=[],u=new A,h=new A,f=new A;for(let d=0;d<=n;d++)for(let p=0;p<=i;p++){const m=p/i*s,g=d/n*Math.PI*2;h.x=(e+t*Math.cos(g))*Math.cos(m),h.y=(e+t*Math.cos(g))*Math.sin(m),h.z=t*Math.sin(g),a.push(h.x,h.y,h.z),u.x=e*Math.cos(m),u.y=e*Math.sin(m),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/i),c.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=i;p++){const m=(i+1)*d+p-1,g=(i+1)*(d-1)+p-1,v=(i+1)*(d-1)+p,_=(i+1)*d+p;o.push(m,g,_),o.push(g,v,_)}this.setIndex(o),this.setAttribute("position",new ge(a,3)),this.setAttribute("normal",new ge(l,3)),this.setAttribute("uv",new ge(c,2))}static fromJSON(e){return new Ms(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Ss extends Ce{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],c=[],u=[],h=new A,f=new A,d=new A,p=new A,m=new A,g=new A,v=new A;for(let y=0;y<=n;++y){const x=y/n*s*Math.PI*2;_(x,s,o,e,d),_(x+.01,s,o,e,p),g.subVectors(p,d),v.addVectors(p,d),m.crossVectors(g,v),v.crossVectors(m,g),m.normalize(),v.normalize();for(let w=0;w<=i;++w){const M=w/i*Math.PI*2,P=-t*Math.cos(M),b=t*Math.sin(M);h.x=d.x+(P*v.x+b*m.x),h.y=d.y+(P*v.y+b*m.y),h.z=d.z+(P*v.z+b*m.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(y/n),u.push(w/i)}}for(let y=1;y<=n;y++)for(let x=1;x<=i;x++){const w=(i+1)*(y-1)+(x-1),M=(i+1)*y+(x-1),P=(i+1)*y+x,b=(i+1)*(y-1)+x;a.push(w,M,b),a.push(M,P,b)}this.setIndex(a),this.setAttribute("position",new ge(l,3)),this.setAttribute("normal",new ge(c,3)),this.setAttribute("uv",new ge(u,2));function _(y,x,w,M,P){const b=Math.cos(y),T=Math.sin(y),I=w/x*y,D=Math.cos(I);P.x=M*(2+D)*.5*b,P.y=M*(2+D)*T*.5,P.z=M*Math.sin(I)*.5}}static fromJSON(e){return new Ss(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class As extends Ce{constructor(e=new zh(new A(-1,-1,0),new A(-1,1,0),new A(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new A,l=new A,c=new q;let u=new A;const h=[],f=[],d=[],p=[];m(),this.setIndex(p),this.setAttribute("position",new ge(h,3)),this.setAttribute("normal",new ge(f,3)),this.setAttribute("uv",new ge(d,2));function m(){for(let y=0;y<t;y++)g(y);g(s===!1?t:0),_(),v()}function g(y){u=e.getPointAt(y/t,u);const x=o.normals[y],w=o.binormals[y];for(let M=0;M<=i;M++){const P=M/i*Math.PI*2,b=Math.sin(P),T=-Math.cos(P);l.x=T*x.x+b*w.x,l.y=T*x.y+b*w.y,l.z=T*x.z+b*w.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,h.push(a.x,a.y,a.z)}}function v(){for(let y=1;y<=t;y++)for(let x=1;x<=i;x++){const w=(i+1)*(y-1)+(x-1),M=(i+1)*y+(x-1),P=(i+1)*y+x,b=(i+1)*(y-1)+x;p.push(w,M,b),p.push(M,P,b)}}function _(){for(let y=0;y<=t;y++)for(let x=0;x<=i;x++)c.x=y/t,c.y=x/i,d.push(c.x,c.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new As(new Uh[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class a0 extends Ce{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new A,s=new A;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,m=f+d;p<m;p+=3)for(let g=0;g<3;g++){const v=a.getX(p+g),_=a.getX(p+(g+1)%3);i.fromBufferAttribute(o,v),s.fromBufferAttribute(o,_),Kd(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,h=3*a+(c+1)%3;i.fromBufferAttribute(o,u),s.fromBufferAttribute(o,h),Kd(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new ge(t,3))}}}function Kd(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Qd=Object.freeze({__proto__:null,BoxGeometry:Qn,BoxBufferGeometry:Qn,CapsuleGeometry:ps,CapsuleBufferGeometry:ps,CircleGeometry:ms,CircleBufferGeometry:ms,ConeGeometry:gs,ConeBufferGeometry:gs,CylinderGeometry:Ai,CylinderBufferGeometry:Ai,DodecahedronGeometry:_s,DodecahedronBufferGeometry:_s,EdgesGeometry:i0,ExtrudeGeometry:vs,ExtrudeBufferGeometry:vs,IcosahedronGeometry:ys,IcosahedronBufferGeometry:ys,LatheGeometry:fr,LatheBufferGeometry:fr,OctahedronGeometry:dr,OctahedronBufferGeometry:dr,PlaneGeometry:ur,PlaneBufferGeometry:ur,PolyhedronGeometry:Dn,PolyhedronBufferGeometry:Dn,RingGeometry:xs,RingBufferGeometry:xs,ShapeGeometry:bs,ShapeBufferGeometry:bs,SphereGeometry:pr,SphereBufferGeometry:pr,TetrahedronGeometry:ws,TetrahedronBufferGeometry:ws,TorusGeometry:Ms,TorusBufferGeometry:Ms,TorusKnotGeometry:Ss,TorusKnotBufferGeometry:Ss,TubeGeometry:As,TubeBufferGeometry:As,WireframeGeometry:a0});class l0 extends Lt{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new ae(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class c0 extends Nt{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Vh extends Lt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ae(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ci,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class u0 extends Vh{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new q(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ft(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new ae(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new ae(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new ae(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class oo extends Lt{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new ae(16777215),this.specular=new ae(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ci,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ar,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class h0 extends Lt{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ae(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ci,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class f0 extends Lt{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ci,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Gh extends Lt{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ar,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class d0 extends Lt{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ae(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ci,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class p0 extends It{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ln(r,e,t){return Hh(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)}function Ji(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Hh(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function m0(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Ou(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)i[o++]=r[a+l]}return i}function Wh(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)}function cS(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*i;if(!(p<t||p>=n)){h.push(c.times[d]);for(let m=0;m<u;++m)f.push(c.values[d*u+m])}}h.length!==0&&(c.times=Ji(h,c.times.constructor),c.values=Ji(f,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function uS(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=r.tracks.find(function(v){return v.name===a.name&&v.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let m;if(s<=a.times[0]){const v=u,_=h-u;m=ln(a.values,v,_)}else if(s>=a.times[p]){const v=p*h+u,_=v+h-u;m=ln(a.values,v,_)}else{const v=a.createInterpolant(),_=u,y=h-u;v.evaluate(s),m=ln(v.resultBuffer,_,y)}l==="quaternion"&&new yt().fromArray(m).normalize().conjugate().toArray(m);const g=c.times.length;for(let v=0;v<g;++v){const _=v*d+f;if(l==="quaternion")yt.multiplyQuaternionsFlat(c.values,_,m,0,c.values,_);else{const y=d-f*2;for(let x=0;x<y;++x)c.values[_+x]-=m[x]}}}return r.blendMode=wh,r}var g0=Object.freeze({__proto__:null,arraySlice:ln,convertArray:Ji,isTypedArray:Hh,getKeyframeOrder:m0,sortedArray:Ou,flattenJSON:Wh,subclip:cS,makeClipAdditive:uS});class zo{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class _0 extends zo{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ji,endingEnd:ji}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Yi:s=e,a=2*t-n;break;case go:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Yi:o=e,l=2*n-t;break;case go:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const c=(n-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),m=p*p,g=m*p,v=-f*g+2*f*m-f*p,_=(1+f)*g+(-1.5-2*f)*m+(-.5+f)*p+1,y=(-1-d)*g+(1.5+d)*m+.5*p,x=d*g-d*m;for(let w=0;w!==a;++w)s[w]=v*o[u+w]+_*o[c+w]+y*o[l+w]+x*o[h+w];return s}}class Xh extends zo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(n-t)/(i-t),h=1-u;for(let f=0;f!==a;++f)s[f]=o[c+f]*h+o[l+f]*u;return s}}class v0 extends zo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Tn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ji(t,this.TimeBufferType),this.values=Ji(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ji(e.times,Array),values:Ji(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new v0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Xh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new _0(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case po:t=this.InterpolantFactoryMethodDiscrete;break;case mo:t=this.InterpolantFactoryMethodLinear;break;case Wa:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return po;case this.InterpolantFactoryMethodLinear:return mo;case this.InterpolantFactoryMethodSmooth:return Wa}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=ln(n,s,o),this.values=ln(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(i!==void 0&&Hh(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=ln(this.times),t=ln(this.values),n=this.getValueSize(),i=this.getInterpolation()===Wa,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(i)l=!0;else{const h=a*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const m=t[h+p];if(m!==t[f+p]||m!==t[d+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*n,f=o*n;for(let d=0;d!==n;++d)t[f+d]=t[h+d]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=ln(e,0,o),this.values=ln(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=ln(this.times,0),t=ln(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Tn.prototype.TimeBufferType=Float32Array;Tn.prototype.ValueBufferType=Float32Array;Tn.prototype.DefaultInterpolation=mo;class wr extends Tn{}wr.prototype.ValueTypeName="bool";wr.prototype.ValueBufferType=Array;wr.prototype.DefaultInterpolation=po;wr.prototype.InterpolantFactoryMethodLinear=void 0;wr.prototype.InterpolantFactoryMethodSmooth=void 0;class $h extends Tn{}$h.prototype.ValueTypeName="color";class Ts extends Tn{}Ts.prototype.ValueTypeName="number";class y0 extends zo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let c=e*a;for(let u=c+a;c!==u;c+=4)yt.slerpFlat(s,0,o,c-a,o,c,l);return s}}class Mr extends Tn{InterpolantFactoryMethodLinear(e){return new y0(this.times,this.values,this.getValueSize(),e)}}Mr.prototype.ValueTypeName="quaternion";Mr.prototype.DefaultInterpolation=mo;Mr.prototype.InterpolantFactoryMethodSmooth=void 0;class Sr extends Tn{}Sr.prototype.ValueTypeName="string";Sr.prototype.ValueBufferType=Array;Sr.prototype.DefaultInterpolation=po;Sr.prototype.InterpolantFactoryMethodLinear=void 0;Sr.prototype.InterpolantFactoryMethodSmooth=void 0;class Es extends Tn{}Es.prototype.ValueTypeName="vector";class mr{constructor(e,t=-1,n,i=Al){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Kt(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(fS(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(Tn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=m0(l);l=Ou(l,1,u),c=Ou(c,1,u),!i&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new Ts(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let f=i[h];f||(i[h]=f=[]),f.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,m){if(d.length!==0){const g=[],v=[];Wh(d,g,v,p),g.length!==0&&m.push(new h(f,g,v))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let m=0;m<f[p].morphTargets.length;m++)d[f[p].morphTargets[m]]=-1;for(const m in d){const g=[],v=[];for(let _=0;_!==f[p].morphTargets.length;++_){const y=f[p];g.push(y.time),v.push(y.morphTarget===m?1:0)}i.push(new Ts(".morphTargetInfluence["+m+"]",g,v))}l=d.length*o}else{const d=".bones["+t[h].name+"]";n(Es,d+".position",f,"pos",i),n(Mr,d+".quaternion",f,"rot",i),n(Es,d+".scale",f,"scl",i)}}return i.length===0?null:new this(s,l,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function hS(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ts;case"vector":case"vector2":case"vector3":case"vector4":return Es;case"color":return $h;case"quaternion":return Mr;case"bool":case"boolean":return wr;case"string":return Sr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function fS(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=hS(r.type);if(r.times===void 0){const t=[],n=[];Wh(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const gr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class qh{constructor(e,t,n){const i=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const x0=new qh;class Wt{constructor(e){this.manager=e!==void 0?e:x0,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Wn={};class dS extends Error{constructor(e,t){super(e),this.response=t}}class Fn extends Wt{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=gr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Wn[e]!==void 0){Wn[e].push({onLoad:t,onProgress:n,onError:i});return}Wn[e]=[],Wn[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=Wn[e],h=c.body.getReader(),f=c.headers.get("Content-Length"),d=f?parseInt(f):0,p=d!==0;let m=0;const g=new ReadableStream({start(v){_();function _(){h.read().then(({done:y,value:x})=>{if(y)v.close();else{m+=x.byteLength;const w=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:d});for(let M=0,P=u.length;M<P;M++){const b=u[M];b.onProgress&&b.onProgress(w)}v.enqueue(x),_()}})}}});return new Response(g)}else throw new dS(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{gr.add(e,c);const u=Wn[e];delete Wn[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=Wn[e];if(u===void 0)throw this.manager.itemError(e),c;delete Wn[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class pS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Fn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=mr.parse(e[n]);t.push(i)}return t}}class mS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],a=new Jg,l=new Fn(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function u(h){l.load(e[h],function(f){const d=s.parse(f,!0);o[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(a.minFilter=it),a.image=o,a.format=d.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else l.load(e,function(h){const f=s.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){o[p]={mipmaps:[]};for(let m=0;m<f.mipmapCount;m++)o[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+m]),o[p].format=f.format,o[p].width=f.width,o[p].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=it),a.format=f.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class Ao extends Wt{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=gr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=yo("img");function l(){u(),gr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(h){u(),i&&i(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class b0 extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=new No,o=new Ao(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){s.images[c]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return s}}class gS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new ir,a=new Fn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){const c=s.parse(l);!c||(c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:Tt,o.wrapT=c.wrapT!==void 0?c.wrapT:Tt,o.magFilter=c.magFilter!==void 0?c.magFilter:it,o.minFilter=c.minFilter!==void 0?c.minFilter:it,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.encoding!==void 0&&(o.encoding=c.encoding),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=vr),c.mipmapCount===1&&(o.minFilter=it),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c))},n,i),o}}class Ar extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=new mt,o=new Ao(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Li extends Xe{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new ae(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class w0 extends Li{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Xe.DefaultUp),this.updateMatrix(),this.groundColor=new ae(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const ep=new be,tp=new A,np=new A;class jh{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new q(512,512),this.map=null,this.mapPass=null,this.matrix=new be,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ll,this._frameExtents=new q(1,1),this._viewportCount=1,this._viewports=[new He(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;tp.setFromMatrixPosition(e.matrixWorld),t.position.copy(tp),np.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(np),t.updateMatrixWorld(),ep.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ep),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class _S extends jh{constructor(){super(new bt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=vo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Yh extends Li{constructor(e,t,n=0,i=Math.PI/3,s=0,o=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Xe.DefaultUp),this.updateMatrix(),this.target=new Xe,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.shadow=new _S}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const ip=new be,Ks=new A,Nc=new A;class vS extends jh{constructor(){super(new bt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new q(4,2),this._viewportCount=6,this._viewports=[new He(2,1,1,1),new He(0,1,1,1),new He(3,1,1,1),new He(1,1,1,1),new He(3,0,1,1),new He(1,0,1,1)],this._cubeDirections=[new A(1,0,0),new A(-1,0,0),new A(0,0,1),new A(0,0,-1),new A(0,1,0),new A(0,-1,0)],this._cubeUps=[new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,0,1),new A(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Ks.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ks),Nc.copy(n.position),Nc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Nc),n.updateMatrixWorld(),i.makeTranslation(-Ks.x,-Ks.y,-Ks.z),ip.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ip)}}class To extends Li{constructor(e,t,n=0,i=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new vS}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class yS extends jh{constructor(){super(new br(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class zl extends Li{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Xe.DefaultUp),this.updateMatrix(),this.target=new Xe,this.shadow=new yS}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Bl extends Li{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class M0 extends Li{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class S0{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new A)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Ul extends Li{constructor(e=new S0,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Vl extends Wt{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,o=new Fn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Vl.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new ae().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new ae().setHex(o.value);break;case"v2":i.uniforms[s].value=new q().fromArray(o.value);break;case"v3":i.uniforms[s].value=new A().fromArray(o.value);break;case"v4":i.uniforms[s].value=new He().fromArray(o.value);break;case"m3":i.uniforms[s].value=new Ot().fromArray(o.value);break;case"m4":i.uniforms[s].value=new be().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new q().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new q().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:l0,SpriteMaterial:Ih,RawShaderMaterial:c0,ShaderMaterial:Nt,PointsMaterial:Dh,MeshPhysicalMaterial:u0,MeshStandardMaterial:Vh,MeshPhongMaterial:oo,MeshToonMaterial:h0,MeshNormalMaterial:f0,MeshLambertMaterial:Gh,MeshDepthMaterial:Eh,MeshDistanceMaterial:Ch,MeshBasicMaterial:Pi,MeshMatcapMaterial:d0,LineDashedMaterial:p0,LineBasicMaterial:It,Material:Lt};return new t[e]}}class Cs{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class A0 extends Ce{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class T0 extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Fn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(d,p){if(t[p]!==void 0)return t[p];const g=d.interleavedBuffers[p],v=s(d,g.buffer),_=ts(g.type,v),y=new Fl(_,g.stride);return y.uuid=g.uuid,t[p]=y,y}function s(d,p){if(n[p]!==void 0)return n[p];const g=d.arrayBuffers[p],v=new Uint32Array(g).buffer;return n[p]=v,v}const o=e.isInstancedBufferGeometry?new A0:new Ce,a=e.data.index;if(a!==void 0){const d=ts(a.type,a.array);o.setIndex(new Qe(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let m;if(p.isInterleavedBufferAttribute){const g=i(e.data,p.data);m=new hr(g,p.itemSize,p.offset,p.normalized)}else{const g=ts(p.type,p.array),v=p.isInstancedBufferAttribute?ds:Qe;m=new v(g,p.itemSize,p.normalized)}p.name!==void 0&&(m.name=p.name),p.usage!==void 0&&m.setUsage(p.usage),p.updateRange!==void 0&&(m.updateRange.offset=p.updateRange.offset,m.updateRange.count=p.updateRange.count),o.setAttribute(d,m)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],m=[];for(let g=0,v=p.length;g<v;g++){const _=p[g];let y;if(_.isInterleavedBufferAttribute){const x=i(e.data,_.data);y=new hr(x,_.itemSize,_.offset,_.normalized)}else{const x=ts(_.type,_.array);y=new Qe(x,_.itemSize,_.normalized)}_.name!==void 0&&(y.name=_.name),m.push(y)}o.morphAttributes[d]=m}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const m=h[d];o.addGroup(m.start,m.count,m.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new A;f.center!==void 0&&d.fromArray(f.center),o.boundingSphere=new xr(d,f.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class xS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?Cs.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Fn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Cs.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Fn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,n),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),t!==void 0){let h=!1;for(const f in o)if(o[f].data instanceof HTMLImageElement){h=!0;break}h===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,i,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new rr().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new ko().fromJSON(e[s],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new T0;for(let s=0,o=e.length;s<o;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:l.type in Qd?a=Qd[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),a.isBufferGeometry===!0&&l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Vl;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];if(l.type==="MultiMaterial"){const c=[];for(let u=0;u<l.materials.length;u++){const h=l.materials[u];n[h.uuid]===void 0&&(n[h.uuid]=s.parse(h)),c.push(n[h.uuid])}i[l.uuid]=c}else n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=mr.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(u)}else return l.data?{data:ts(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new qh(t);s=new Ao(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=a(g);v!==null&&(v instanceof HTMLImageElement?d.push(v):d.push(new ir(v.data,v.width,v.height)))}i[h.uuid]=new Zi(d)}else{const d=a(h.url);i[h.uuid]=new Zi(d)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:ts(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new Ao(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h],p=await s(d);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new ir(p.data,p.width,p.height)))}n[l.uuid]=new Zi(u)}else{const u=await s(l.url);n[l.uuid]=new Zi(u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let u;Array.isArray(c)?(u=new No,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new ir:u=new mt,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,bS)),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],rp),u.wrapT=n(a.wrap[1],rp)),a.format!==void 0&&(u.format=a.format),a.type!==void 0&&(u.type=a.type),a.encoding!==void 0&&(u.encoding=a.encoding),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,sp)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,sp)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(e,t,n,i,s){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const g=f[p];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),d.push(n[g])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function c(f){return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),i[f]}let u,h;switch(e.type){case"Scene":o=new Lh,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new ae(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Dl(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Rl(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new bt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new br(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Bl(e.color,e.intensity);break;case"DirectionalLight":o=new zl(e.color,e.intensity);break;case"PointLight":o=new To(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new M0(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Yh(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new w0(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Ul().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=l(e.material),o=new Rh(u,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=l(e.material),o=new wt(u,h);break;case"InstancedMesh":u=a(e.geometry),h=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;o=new Yg(u,h,f),o.instanceMatrix=new ds(new Float32Array(d.array),16),p!==void 0&&(o.instanceColor=new ds(new Float32Array(p.array),p.itemSize));break;case"LOD":o=new jg;break;case"Line":o=new ei(a(e.geometry),l(e.material));break;case"LineLoop":o=new Zg(a(e.geometry),l(e.material));break;case"LineSegments":o=new kn(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new Fh(a(e.geometry),l(e.material));break;case"Sprite":o=new qg(l(e.material));break;case"Group":o=new _i;break;case"Bone":o=new xo;break;default:o=new Xe}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)o.add(this.parseObject(f[d],t,n,i,s))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];o.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],m=o.getObjectByProperty("uuid",p.object);m!==void 0&&o.addLevel(m,p.distance)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const bS={UVMapping:Sl,CubeReflectionMapping:bi,CubeRefractionMapping:wi,EquirectangularReflectionMapping:us,EquirectangularRefractionMapping:ho,CubeUVReflectionMapping:Ds},rp={RepeatWrapping:lr,ClampToEdgeWrapping:Tt,MirroredRepeatWrapping:fo},sp={NearestFilter:ht,NearestMipmapNearestFilter:cl,NearestMipmapLinearFilter:ul,LinearFilter:it,LinearMipmapNearestFilter:vh,LinearMipmapLinearFilter:vr};class wS extends Wt{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=gr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){gr.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Ta;const Zh={getContext:function(){return Ta===void 0&&(Ta=new(window.AudioContext||window.webkitAudioContext)),Ta},setContext:function(r){Ta=r}};class MS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Fn(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const l=a.slice(0);Zh.getContext().decodeAudioData(l,function(u){t(u)})}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}}class SS extends Ul{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new ae().set(e),s=new ae().set(t),o=new A(i.r,i.g,i.b),a=new A(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)}}class AS extends Ul{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new ae().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const op=new be,ap=new be,Ni=new be;class TS{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new bt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new bt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ni.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(tr*t.fov*.5)/t.zoom;let a,l;ap.elements[12]=-i,op.elements[12]=i,a=-o*t.aspect+s,l=o*t.aspect+s,Ni.elements[0]=2*t.near/(l-a),Ni.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Ni),a=-o*t.aspect-s,l=o*t.aspect-s,Ni.elements[0]=2*t.near/(l-a),Ni.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Ni)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(ap),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(op)}}class Gl{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=lp(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=lp();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function lp(){return(typeof performance>"u"?Date:performance).now()}const ki=new A,cp=new yt,ES=new A,zi=new A;class CS extends Xe{constructor(){super(),this.type="AudioListener",this.context=Zh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Gl}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ki,cp,ES),zi.set(0,0,-1).applyQuaternion(cp),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(ki.x,i),t.positionY.linearRampToValueAtTime(ki.y,i),t.positionZ.linearRampToValueAtTime(ki.z,i),t.forwardX.linearRampToValueAtTime(zi.x,i),t.forwardY.linearRampToValueAtTime(zi.y,i),t.forwardZ.linearRampToValueAtTime(zi.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(ki.x,ki.y,ki.z),t.setOrientation(zi.x,zi.y,zi.z,n.x,n.y,n.z)}}class E0 extends Xe{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Bi=new A,up=new yt,PS=new A,Ui=new A;class LS extends E0{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Bi,up,PS),Ui.set(0,0,1).applyQuaternion(up);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Bi.x,n),t.positionY.linearRampToValueAtTime(Bi.y,n),t.positionZ.linearRampToValueAtTime(Bi.z,n),t.orientationX.linearRampToValueAtTime(Ui.x,n),t.orientationY.linearRampToValueAtTime(Ui.y,n),t.orientationZ.linearRampToValueAtTime(Ui.z,n)}else t.setPosition(Bi.x,Bi.y,Bi.z),t.setOrientation(Ui.x,Ui.y,Ui.z)}}class IS{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class C0{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){yt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;yt.multiplyQuaternionsFlat(e,o,e,t,e,n),yt.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const Jh="\\[\\]\\.:\\/",RS=new RegExp("["+Jh+"]","g"),Kh="[^"+Jh+"]",DS="[^"+Jh.replace("\\.","")+"]",FS=/((?:WC+[\/:])*)/.source.replace("WC",Kh),OS=/(WCOD+)?/.source.replace("WCOD",DS),NS=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Kh),kS=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Kh),zS=new RegExp("^"+FS+OS+NS+kS+"$"),BS=["material","materials","bones"];class US{constructor(e,t,n){const i=n||Be.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Be{constructor(e,t,n){this.path=t,this.parsedPath=n||Be.parseTrackName(t),this.node=Be.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Be.Composite(e,t,n):new Be(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(RS,"")}static parseTrackName(e){const t=zS.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);BS.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Be.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[i];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Be.Composite=US;Be.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Be.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Be.prototype.GetterByBindingType=[Be.prototype._getValue_direct,Be.prototype._getValue_array,Be.prototype._getValue_arrayElement,Be.prototype._getValue_toArray];Be.prototype.SetterByBindingTypeAndVersioning=[[Be.prototype._setValue_direct,Be.prototype._setValue_direct_setNeedsUpdate,Be.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Be.prototype._setValue_array,Be.prototype._setValue_array_setNeedsUpdate,Be.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Be.prototype._setValue_arrayElement,Be.prototype._setValue_arrayElement_setNeedsUpdate,Be.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Be.prototype._setValue_fromArray,Be.prototype._setValue_fromArray_setNeedsUpdate,Be.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class VS{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Kt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let m=0,g=o;m!==g;++m)s[m].push(new Be(f,n[m],i[m]))}else if(p<c){a=e[p];const m=--c,g=e[m];t[g.uuid]=p,e[p]=g,t[d]=m,e[m]=f;for(let v=0,_=o;v!==_;++v){const y=s[v],x=y[m];let w=y[p];y[p]=x,w===void 0&&(w=new Be(f,n[v],i[v])),y[m]=w}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=t[c];if(u!==void 0&&u>=s){const h=s++,f=e[h];t[f.uuid]=u,e[u]=f,t[c]=h,e[h]=l;for(let d=0,p=i;d!==p;++d){const m=n[d],g=m[h],v=m[u];m[u]=g,m[h]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],u=c.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<s){const f=--s,d=e[f],p=--o,m=e[p];t[d.uuid]=h,e[h]=d,t[m.uuid]=f,e[f]=m,e.pop();for(let g=0,v=i;g!==v;++g){const _=n[g],y=_[f],x=_[p];_[h]=y,_[f]=x,_.pop()}}else{const f=--o,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,m=i;p!==m;++p){const g=n[p];g[h]=g[f],g.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);i=s.length,n[e]=i,o.push(e),a.push(t),s.push(h);for(let f=u,d=l.length;f!==d;++f){const p=l[f];h[f]=new Be(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class GS{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:ji,endingEnd:ji};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=bh,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,a=i/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;if(l<0||n===0)return;this._startTime=null,t=n*l}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case wh:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case Al:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===Tg;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===Ag){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Yi,i.endingEnd=Yi):(e?i.endingStart=this.zeroSlopeAtStart?Yi:ji:i.endingStart=go,t?i.endingEnd=this.zeroSlopeAtEnd?Yi:ji:i.endingEnd=go)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}const HS=new Float32Array(1);class P0 extends Nn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==s;++h){const f=i[h],d=f.name;let p=u[d];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const m=t&&t._propertyBindings[h].binding.parsedPath;p=new C0(Be.create(n,d,m),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Xh(new Float32Array(2),new Float32Array(2),1,HS),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?mr.findByName(i,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Al),l!==void 0){const h=l.actionByRoot[s];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new GS(this,o,t,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?mr.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Qh{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Qh(this.value.clone===void 0?this.value:this.value.clone())}}let WS=0;class XS extends Nn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:WS++}),this.name="",this.usage=_o,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class $S extends Fl{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class qS{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class jS{constructor(e,t,n=0,i=1/0){this.ray=new Fo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new El,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Nu(e,this,n,t),n.sort(hp),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Nu(e[i],this,n,t);return n.sort(hp),n}}function hp(r,e){return r.distance-e.distance}function Nu(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)Nu(i[s],e,t,!0)}}class ku{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(ft(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class YS{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const fp=new q;class ZS{constructor(e=new q(1/0,1/0),t=new q(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=fp.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return fp.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const dp=new A,Ea=new A;class JS{constructor(e=new A,t=new A){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){dp.subVectors(e,this.start),Ea.subVectors(this.end,this.start);const n=Ea.dot(Ea);let s=Ea.dot(dp)/n;return t&&(s=ft(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const pp=new A;class KS extends Xe{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new Ce,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new ge(i,3));const s=new It({fog:!1,toneMapped:!1});this.cone=new kn(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),pp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(pp),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const fi=new A,Ca=new be,kc=new be;class QS extends kn{constructor(e){const t=L0(e),n=new Ce,i=[],s=[],o=new ae(0,0,1),a=new ae(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new ge(i,3)),n.setAttribute("color",new ge(s,3));const l=new It({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");kc.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Ca.multiplyMatrices(kc,a.matrixWorld),fi.setFromMatrixPosition(Ca),i.setXYZ(o,fi.x,fi.y,fi.z),Ca.multiplyMatrices(kc,a.parent.matrixWorld),fi.setFromMatrixPosition(Ca),i.setXYZ(o+1,fi.x,fi.y,fi.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function L0(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,L0(r.children[t]));return e}class I0 extends wt{constructor(e,t,n){const i=new pr(t,4,2),s=new Pi({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const eA=new A,mp=new ae,gp=new ae;class tA extends Xe{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new dr(t);i.rotateY(Math.PI*.5),this.material=new Pi({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new Qe(o,3)),this.add(new wt(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");mp.copy(this.light.color),gp.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?mp:gp;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(eA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class nA extends kn{constructor(e=10,t=10,n=4473924,i=8947848){n=new ae(n),i=new ae(i);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let f=0,d=0,p=-a;f<=t;f++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const m=f===s?n:i;m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3}const u=new Ce;u.setAttribute("position",new ge(l,3)),u.setAttribute("color",new ge(c,3));const h=new It({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}}class iA extends kn{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new ae(s),o=new ae(o);const a=[],l=[];for(let h=0;h<=t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,p);const m=h&1?s:o;l.push(m.r,m.g,m.b),l.push(m.r,m.g,m.b)}for(let h=0;h<=n;h++){const f=h&1?s:o,d=e-e/n*h;for(let p=0;p<i;p++){let m=p/i*(Math.PI*2),g=Math.sin(m)*d,v=Math.cos(m)*d;a.push(g,0,v),l.push(f.r,f.g,f.b),m=(p+1)/i*(Math.PI*2),g=Math.sin(m)*d,v=Math.cos(m)*d,a.push(g,0,v),l.push(f.r,f.g,f.b)}}const c=new Ce;c.setAttribute("position",new ge(a,3)),c.setAttribute("color",new ge(l,3));const u=new It({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}}const _p=new A,Pa=new A,vp=new A;class R0 extends Xe{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new Ce;i.setAttribute("position",new ge([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new It({fog:!1,toneMapped:!1});this.lightPlane=new ei(i,s),this.add(this.lightPlane),i=new Ce,i.setAttribute("position",new ge([0,0,0,0,0,1],3)),this.targetLine=new ei(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){_p.setFromMatrixPosition(this.light.matrixWorld),Pa.setFromMatrixPosition(this.light.target.matrixWorld),vp.subVectors(Pa,_p),this.lightPlane.lookAt(Pa),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Pa),this.targetLine.scale.z=vp.length()}}const La=new A,at=new Pl;class rA extends kn{constructor(e){const t=new Ce,n=new It({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,m){l(p),l(m)}function l(p){i.push(0,0,0),s.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(i.length/3-1)}t.setAttribute("position",new ge(i,3)),t.setAttribute("color",new ge(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new ae(16755200),u=new ae(16711680),h=new ae(43775),f=new ae(16777215),d=new ae(3355443);this.setColors(c,u,h,f,d)}setColors(e,t,n,i,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;at.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),ct("c",t,e,at,0,0,-1),ct("t",t,e,at,0,0,1),ct("n1",t,e,at,-n,-i,-1),ct("n2",t,e,at,n,-i,-1),ct("n3",t,e,at,-n,i,-1),ct("n4",t,e,at,n,i,-1),ct("f1",t,e,at,-n,-i,1),ct("f2",t,e,at,n,-i,1),ct("f3",t,e,at,-n,i,1),ct("f4",t,e,at,n,i,1),ct("u1",t,e,at,n*.7,i*1.1,-1),ct("u2",t,e,at,-n*.7,i*1.1,-1),ct("u3",t,e,at,0,i*2,-1),ct("cf1",t,e,at,-n,0,1),ct("cf2",t,e,at,n,0,1),ct("cf3",t,e,at,0,-i,1),ct("cf4",t,e,at,0,i,1),ct("cn1",t,e,at,-n,0,-1),ct("cn2",t,e,at,n,0,-1),ct("cn3",t,e,at,0,-i,-1),ct("cn4",t,e,at,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function ct(r,e,t,n,i,s,o){La.set(i,s,o).unproject(n);const a=e[r];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],La.x,La.y,La.z)}}const Ia=new yr;class sA extends kn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new Ce;s.setIndex(new Qe(n,1)),s.setAttribute("position",new Qe(i,3)),super(s,new It({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Ia.setFromObject(this.object),Ia.isEmpty())return;const t=Ia.min,n=Ia.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}}class oA extends kn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Ce;s.setIndex(new Qe(n,1)),s.setAttribute("position",new ge(i,3)),super(s,new It({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class aA extends ei{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new Ce;o.setAttribute("position",new ge(s,3)),o.computeBoundingSphere(),super(o,new It({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new Ce;l.setAttribute("position",new ge(a,3)),l.computeBoundingSphere(),this.add(new wt(l,new Pi({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}}const yp=new A;let Ra,zc;class lA extends Xe{constructor(e=new A(0,0,1),t=new A(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Ra===void 0&&(Ra=new Ce,Ra.setAttribute("position",new ge([0,0,0,0,1,0],3)),zc=new Ai(0,.5,1,5,1),zc.translate(0,-.5,0)),this.position.copy(t),this.line=new ei(Ra,new It({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new wt(zc,new Pi({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{yp.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(yp,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class cA extends kn{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Ce;i.setAttribute("position",new ge(t,3)),i.setAttribute("color",new ge(n,3));const s=new It({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new ae,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class uA{constructor(){this.type="ShapePath",this.color=new ae,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new bo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(_){const y=[];for(let x=0,w=_.length;x<w;x++){const M=_[x],P=new rr;P.curves=M.curves,y.push(P)}return y}function i(_,y){const x=y.length;let w=!1;for(let M=x-1,P=0;P<x;M=P++){let b=y[M],T=y[P],I=T.x-b.x,D=T.y-b.y;if(Math.abs(D)>Number.EPSILON){if(D<0&&(b=y[P],I=-I,T=y[M],D=-D),_.y<b.y||_.y>T.y)continue;if(_.y===b.y){if(_.x===b.x)return!0}else{const V=D*(_.x-b.x)-I*(_.y-b.y);if(V===0)return!0;if(V<0)continue;w=!w}}else{if(_.y!==b.y)continue;if(T.x<=_.x&&_.x<=b.x||b.x<=_.x&&_.x<=T.x)return!0}}return w}const s=In.isClockWise,o=this.subPaths;if(o.length===0)return[];if(t===!0)return n(o);let a,l,c;const u=[];if(o.length===1)return l=o[0],c=new rr,c.curves=l.curves,u.push(c),u;let h=!s(o[0].getPoints());h=e?!h:h;const f=[],d=[];let p=[],m=0,g;d[m]=void 0,p[m]=[];for(let _=0,y=o.length;_<y;_++)l=o[_],g=l.getPoints(),a=s(g),a=e?!a:a,a?(!h&&d[m]&&m++,d[m]={s:new rr,p:g},d[m].s.curves=l.curves,h&&m++,p[m]=[]):p[m].push({h:l,p:g[0]});if(!d[0])return n(o);if(d.length>1){let _=!1,y=0;for(let x=0,w=d.length;x<w;x++)f[x]=[];for(let x=0,w=d.length;x<w;x++){const M=p[x];for(let P=0;P<M.length;P++){const b=M[P];let T=!0;for(let I=0;I<d.length;I++)i(b.p,d[I].p)&&(x!==I&&y++,T?(T=!1,f[I].push(b)):_=!0);T&&f[x].push(b)}}y>0&&_===!1&&(p=f)}let v;for(let _=0,y=d.length;_<y;_++){c=d[_].s,u.push(c),v=p[_];for(let x=0,w=v.length;x<w;x++)c.holes.push(v[x].h)}return u}}const Xn=hA();function hA(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;(c&8388608)===0;)c<<=1,u-=8388608;c&=-8388609,u+=947912704,s[l]=c|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:a}}function fA(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=ft(r,-65504,65504),Xn.floatView[0]=r;const e=Xn.uint32View[0],t=e>>23&511;return Xn.baseTable[t]+((e&8388607)>>Xn.shiftTable[t])}function dA(r){const e=r>>10;return Xn.uint32View[0]=Xn.mantissaTable[Xn.offsetTable[e]+(r&1023)]+Xn.exponentTable[e],Xn.floatView[0]}var pA=Object.freeze({__proto__:null,toHalfFloat:fA,fromHalfFloat:dA});class mA extends Ce{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class gA extends Ce{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function _A(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function vA(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function yA(){console.error("THREE.ImmediateRenderObject has been removed.")}class xA extends Gt{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class bA extends Do{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class wA extends Tl{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ml}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ml);const D0=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:_h,AddEquation:$i,AddOperation:ll,AdditiveAnimationBlendMode:wh,AdditiveBlending:ol,AlphaFormat:gg,AlwaysDepth:rg,AlwaysStencilFunc:Lg,AmbientLight:Bl,AmbientLightProbe:AS,AnimationClip:mr,AnimationLoader:pS,AnimationMixer:P0,AnimationObjectGroup:VS,AnimationUtils:g0,ArcCurve:Kg,ArrayCamera:Hg,ArrowHelper:lA,Audio:E0,AudioAnalyser:IS,AudioContext:Zh,AudioListener:CS,AudioLoader:MS,AxesHelper:cA,BackSide:Jt,BasicDepthPacking:Eg,BasicShadowMap:Bv,Bone:xo,BooleanKeyframeTrack:wr,Box2:ZS,Box3:yr,Box3Helper:oA,BoxBufferGeometry:Qn,BoxGeometry:Qn,BoxHelper:sA,BufferAttribute:Qe,BufferGeometry:Ce,BufferGeometryLoader:T0,ByteType:hg,Cache:gr,Camera:Pl,CameraHelper:rA,CanvasTexture:O1,CapsuleBufferGeometry:ps,CapsuleGeometry:ps,CatmullRomCurve3:Qg,CineonToneMapping:gh,CircleBufferGeometry:ms,CircleGeometry:ms,ClampToEdgeWrapping:Tt,Clock:Gl,Color:ae,ColorKeyframeTrack:$h,ColorManagement:on,CompressedTexture:Jg,CompressedTextureLoader:mS,ConeBufferGeometry:gs,ConeGeometry:gs,CubeCamera:Fg,CubeReflectionMapping:bi,CubeRefractionMapping:wi,CubeTexture:No,CubeTextureLoader:b0,CubeUVReflectionMapping:Ds,CubicBezierCurve:Nh,CubicBezierCurve3:e0,CubicInterpolant:_0,CullFaceBack:nu,CullFaceFront:Gm,CullFaceFrontBack:zv,CullFaceNone:Vm,Curve:dn,CurvePath:n0,CustomBlending:Xm,CustomToneMapping:ug,CylinderBufferGeometry:Ai,CylinderGeometry:Ai,Cylindrical:YS,Data3DTexture:Tl,DataArrayTexture:Do,DataTexture:ir,DataTexture2DArray:bA,DataTexture3D:wA,DataTextureLoader:gS,DataUtils:pA,DecrementStencilOp:Kv,DecrementWrapStencilOp:ey,DefaultLoadingManager:x0,DepthFormat:vi,DepthStencilFormat:cr,DepthTexture:Wg,DirectionalLight:zl,DirectionalLightHelper:R0,DiscreteInterpolant:v0,DodecahedronBufferGeometry:_s,DodecahedronGeometry:_s,DoubleSide:xi,DstAlphaFactor:Km,DstColorFactor:eg,DynamicCopyUsage:my,DynamicDrawUsage:cy,DynamicReadUsage:fy,EdgesGeometry:i0,EllipseCurve:Ol,EqualDepth:sg,EqualStencilFunc:ry,EquirectangularReflectionMapping:us,EquirectangularRefractionMapping:ho,Euler:wn,EventDispatcher:Nn,ExtrudeBufferGeometry:vs,ExtrudeGeometry:vs,FileLoader:Fn,FlatShading:Wm,Float16BufferAttribute:Jy,Float32BufferAttribute:ge,Float64BufferAttribute:Ky,FloatType:qn,Fog:Dl,FogExp2:Rl,Font:vA,FontLoader:_A,FramebufferTexture:F1,FrontSide:cs,Frustum:Ll,GLBufferAttribute:qS,GLSL1:_y,GLSL3:Cu,GreaterDepth:ag,GreaterEqualDepth:og,GreaterEqualStencilFunc:ly,GreaterStencilFunc:oy,GridHelper:nA,Group:_i,HalfFloatType:hs,HemisphereLight:w0,HemisphereLightHelper:tA,HemisphereLightProbe:SS,IcosahedronBufferGeometry:ys,IcosahedronGeometry:ys,ImageBitmapLoader:wS,ImageLoader:Ao,ImageUtils:Sh,ImmediateRenderObject:yA,IncrementStencilOp:Jv,IncrementWrapStencilOp:Qv,InstancedBufferAttribute:ds,InstancedBufferGeometry:A0,InstancedInterleavedBuffer:$S,InstancedMesh:Yg,Int16BufferAttribute:Yy,Int32BufferAttribute:Zy,Int8BufferAttribute:$y,IntType:dg,InterleavedBuffer:Fl,InterleavedBufferAttribute:hr,Interpolant:zo,InterpolateDiscrete:po,InterpolateLinear:mo,InterpolateSmooth:Wa,InvertStencilOp:ty,KeepStencilOp:Xa,KeyframeTrack:Tn,LOD:jg,LatheBufferGeometry:fr,LatheGeometry:fr,Layers:El,LessDepth:dh,LessEqualDepth:al,LessEqualStencilFunc:sy,LessStencilFunc:iy,Light:Li,LightProbe:Ul,Line:ei,Line3:JS,LineBasicMaterial:It,LineCurve:Nl,LineCurve3:t0,LineDashedMaterial:p0,LineLoop:Zg,LineSegments:kn,LinearEncoding:Si,LinearFilter:it,LinearInterpolant:Xh,LinearMipMapLinearFilter:Wv,LinearMipMapNearestFilter:Hv,LinearMipmapLinearFilter:vr,LinearMipmapNearestFilter:vh,LinearSRGBColorSpace:gi,LinearToneMapping:ph,Loader:Wt,LoaderUtils:Cs,LoadingManager:qh,LoopOnce:Ag,LoopPingPong:Tg,LoopRepeat:bh,LuminanceAlphaFormat:vg,LuminanceFormat:xh,MOUSE:Gi,Material:Lt,MaterialLoader:Vl,MathUtils:bn,Matrix3:Ot,Matrix4:be,MaxEquation:ou,Mesh:wt,MeshBasicMaterial:Pi,MeshDepthMaterial:Eh,MeshDistanceMaterial:Ch,MeshLambertMaterial:Gh,MeshMatcapMaterial:d0,MeshNormalMaterial:f0,MeshPhongMaterial:oo,MeshPhysicalMaterial:u0,MeshStandardMaterial:Vh,MeshToonMaterial:h0,MinEquation:su,MirroredRepeatWrapping:fo,MixOperation:cg,MultiplyBlending:ru,MultiplyOperation:ar,NearestFilter:ht,NearestMipMapLinearFilter:Gv,NearestMipMapNearestFilter:Vv,NearestMipmapLinearFilter:ul,NearestMipmapNearestFilter:cl,NeverDepth:ig,NeverStencilFunc:ny,NoBlending:Kn,NoColorSpace:jv,NoToneMapping:Sn,NormalAnimationBlendMode:Al,NormalBlending:Qi,NotEqualDepth:lg,NotEqualStencilFunc:ay,NumberKeyframeTrack:Ts,Object3D:Xe,ObjectLoader:xS,ObjectSpaceNormalMap:Pg,OctahedronBufferGeometry:dr,OctahedronGeometry:dr,OneFactor:Ym,OneMinusDstAlphaFactor:Qm,OneMinusDstColorFactor:tg,OneMinusSrcAlphaFactor:fh,OneMinusSrcColorFactor:Jm,OrthographicCamera:br,PCFShadowMap:uh,PCFSoftShadowMap:Hm,PMREMGenerator:Lu,ParametricGeometry:mA,Path:bo,PerspectiveCamera:bt,Plane:pi,PlaneBufferGeometry:ur,PlaneGeometry:ur,PlaneHelper:aA,PointLight:To,PointLightHelper:I0,Points:Fh,PointsMaterial:Dh,PolarGridHelper:iA,PolyhedronBufferGeometry:Dn,PolyhedronGeometry:Dn,PositionalAudio:LS,PropertyBinding:Be,PropertyMixer:C0,QuadraticBezierCurve:kh,QuadraticBezierCurve3:zh,Quaternion:yt,QuaternionKeyframeTrack:Mr,QuaternionLinearInterpolant:y0,REVISION:Ml,RGBADepthPacking:Cg,RGBAFormat:Zt,RGBAIntegerFormat:Mg,RGBA_ASTC_10x10_Format:Su,RGBA_ASTC_10x5_Format:bu,RGBA_ASTC_10x6_Format:wu,RGBA_ASTC_10x8_Format:Mu,RGBA_ASTC_12x10_Format:Au,RGBA_ASTC_12x12_Format:Tu,RGBA_ASTC_4x4_Format:du,RGBA_ASTC_5x4_Format:pu,RGBA_ASTC_5x5_Format:mu,RGBA_ASTC_6x5_Format:gu,RGBA_ASTC_6x6_Format:_u,RGBA_ASTC_8x5_Format:vu,RGBA_ASTC_8x6_Format:yu,RGBA_ASTC_8x8_Format:xu,RGBA_BPTC_Format:Eu,RGBA_ETC2_EAC_Format:fu,RGBA_PVRTC_2BPPV1_Format:uu,RGBA_PVRTC_4BPPV1_Format:cu,RGBA_S3TC_DXT1_Format:Va,RGBA_S3TC_DXT3_Format:Ga,RGBA_S3TC_DXT5_Format:Ha,RGBFormat:_g,RGB_ETC1_Format:Sg,RGB_ETC2_Format:hu,RGB_PVRTC_2BPPV1_Format:lu,RGB_PVRTC_4BPPV1_Format:au,RGB_S3TC_DXT1_Format:Ua,RGFormat:bg,RGIntegerFormat:wg,RawShaderMaterial:c0,Ray:Fo,Raycaster:jS,RectAreaLight:M0,RedFormat:yg,RedIntegerFormat:xg,ReinhardToneMapping:mh,RepeatWrapping:lr,ReplaceStencilOp:Zv,ReverseSubtractEquation:qm,RingBufferGeometry:xs,RingGeometry:xs,SRGBColorSpace:Pn,Scene:Lh,ShaderChunk:ke,ShaderLib:Pt,ShaderMaterial:Nt,ShadowMaterial:l0,Shape:rr,ShapeBufferGeometry:bs,ShapeGeometry:bs,ShapePath:uA,ShapeUtils:In,ShortType:fg,Skeleton:ko,SkeletonHelper:QS,SkinnedMesh:Rh,SmoothShading:Uv,Source:Zi,Sphere:xr,SphereBufferGeometry:pr,SphereGeometry:pr,Spherical:ku,SphericalHarmonics3:S0,SplineCurve:Bh,SpotLight:Yh,SpotLightHelper:KS,Sprite:qg,SpriteMaterial:Ih,SrcAlphaFactor:hh,SrcAlphaSaturateFactor:ng,SrcColorFactor:Zm,StaticCopyUsage:py,StaticDrawUsage:_o,StaticReadUsage:hy,StereoCamera:TS,StreamCopyUsage:gy,StreamDrawUsage:uy,StreamReadUsage:dy,StringKeyframeTrack:Sr,SubtractEquation:$m,SubtractiveBlending:iu,TOUCH:Hi,TangentSpaceNormalMap:Ci,TetrahedronBufferGeometry:ws,TetrahedronGeometry:ws,TextGeometry:gA,Texture:mt,TextureLoader:Ar,TorusBufferGeometry:Ms,TorusGeometry:Ms,TorusKnotBufferGeometry:Ss,TorusKnotGeometry:Ss,Triangle:cn,TriangleFanDrawMode:qv,TriangleStripDrawMode:$v,TrianglesDrawMode:Xv,TubeBufferGeometry:As,TubeGeometry:As,UVMapping:Sl,Uint16BufferAttribute:Cl,Uint32BufferAttribute:Ah,Uint8BufferAttribute:qy,Uint8ClampedBufferAttribute:jy,Uniform:Qh,UniformsGroup:XS,UniformsLib:fe,UniformsUtils:Oo,UnsignedByteType:Mi,UnsignedInt248Type:er,UnsignedIntType:mi,UnsignedShort4444Type:pg,UnsignedShort5551Type:mg,UnsignedShortType:yh,VSMShadowMap:es,Vector2:q,Vector3:A,Vector4:He,VectorKeyframeTrack:Es,VideoTexture:D1,WebGL1Renderer:Xg,WebGL3DRenderTarget:Ny,WebGLArrayRenderTarget:Oy,WebGLCubeRenderTarget:Og,WebGLMultipleRenderTargets:ky,WebGLMultisampleRenderTarget:xA,WebGLRenderTarget:Gt,WebGLRenderer:Ph,WebGLUtils:Gg,WireframeGeometry:a0,WrapAroundEnding:go,ZeroCurvatureEnding:ji,ZeroFactor:jm,ZeroSlopeEnding:Yi,ZeroStencilOp:Yv,_SRGBAFormat:hl,sRGBEncoding:Ge},Symbol.toStringTag,{value:"Module"})),xp={type:"change"},Bc={type:"start"},bp={type:"end"};class MA extends Nn{constructor(e,t){super(),t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new A,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Gi.ROTATE,MIDDLE:Gi.DOLLY,RIGHT:Gi.PAN},this.touches={ONE:Hi.ROTATE,TWO:Hi.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(E){E.addEventListener("keydown",je),this._domElementKeyEvents=E},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(xp),n.update(),s=i.NONE},this.update=function(){const E=new A,ee=new yt().setFromUnitVectors(e.up,new A(0,1,0)),oe=ee.clone().invert(),me=new A,pe=new yt,Le=2*Math.PI;return function(){const tt=n.object.position;E.copy(tt).sub(n.target),E.applyQuaternion(ee),a.setFromVector3(E),n.autoRotate&&s===i.NONE&&T(P()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let F=n.minAzimuthAngle,he=n.maxAzimuthAngle;return isFinite(F)&&isFinite(he)&&(F<-Math.PI?F+=Le:F>Math.PI&&(F-=Le),he<-Math.PI?he+=Le:he>Math.PI&&(he-=Le),F<=he?a.theta=Math.max(F,Math.min(he,a.theta)):a.theta=a.theta>(F+he)/2?Math.max(F,a.theta):Math.min(he,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),E.setFromSpherical(a),E.applyQuaternion(oe),tt.copy(n.target).add(E),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,h||me.distanceToSquared(n.object.position)>o||8*(1-pe.dot(n.object.quaternion))>o?(n.dispatchEvent(xp),me.copy(n.object.position),pe.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",G),n.domElement.removeEventListener("pointerdown",re),n.domElement.removeEventListener("pointercancel",Re),n.domElement.removeEventListener("wheel",Ke),n.domElement.removeEventListener("pointermove",xe),n.domElement.removeEventListener("pointerup",ue),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",je)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=i.NONE;const o=1e-6,a=new ku,l=new ku;let c=1;const u=new A;let h=!1;const f=new q,d=new q,p=new q,m=new q,g=new q,v=new q,_=new q,y=new q,x=new q,w=[],M={};function P(){return 2*Math.PI/60/60*n.autoRotateSpeed}function b(){return Math.pow(.95,n.zoomSpeed)}function T(E){l.theta-=E}function I(E){l.phi-=E}const D=function(){const E=new A;return function(oe,me){E.setFromMatrixColumn(me,0),E.multiplyScalar(-oe),u.add(E)}}(),V=function(){const E=new A;return function(oe,me){n.screenSpacePanning===!0?E.setFromMatrixColumn(me,1):(E.setFromMatrixColumn(me,0),E.crossVectors(n.object.up,E)),E.multiplyScalar(oe),u.add(E)}}(),X=function(){const E=new A;return function(oe,me){const pe=n.domElement;if(n.object.isPerspectiveCamera){const Le=n.object.position;E.copy(Le).sub(n.target);let Ve=E.length();Ve*=Math.tan(n.object.fov/2*Math.PI/180),D(2*oe*Ve/pe.clientHeight,n.object.matrix),V(2*me*Ve/pe.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(D(oe*(n.object.right-n.object.left)/n.object.zoom/pe.clientWidth,n.object.matrix),V(me*(n.object.top-n.object.bottom)/n.object.zoom/pe.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function R(E){n.object.isPerspectiveCamera?c/=E:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*E)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function U(E){n.object.isPerspectiveCamera?c*=E:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/E)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function O(E){f.set(E.clientX,E.clientY)}function H(E){_.set(E.clientX,E.clientY)}function $(E){m.set(E.clientX,E.clientY)}function N(E){d.set(E.clientX,E.clientY),p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const ee=n.domElement;T(2*Math.PI*p.x/ee.clientHeight),I(2*Math.PI*p.y/ee.clientHeight),f.copy(d),n.update()}function B(E){y.set(E.clientX,E.clientY),x.subVectors(y,_),x.y>0?R(b()):x.y<0&&U(b()),_.copy(y),n.update()}function te(E){g.set(E.clientX,E.clientY),v.subVectors(g,m).multiplyScalar(n.panSpeed),X(v.x,v.y),m.copy(g),n.update()}function K(E){E.deltaY<0?U(b()):E.deltaY>0&&R(b()),n.update()}function ie(E){let ee=!1;switch(E.code){case n.keys.UP:X(0,n.keyPanSpeed),ee=!0;break;case n.keys.BOTTOM:X(0,-n.keyPanSpeed),ee=!0;break;case n.keys.LEFT:X(n.keyPanSpeed,0),ee=!0;break;case n.keys.RIGHT:X(-n.keyPanSpeed,0),ee=!0;break}ee&&(E.preventDefault(),n.update())}function le(){if(w.length===1)f.set(w[0].pageX,w[0].pageY);else{const E=.5*(w[0].pageX+w[1].pageX),ee=.5*(w[0].pageY+w[1].pageY);f.set(E,ee)}}function ye(){if(w.length===1)m.set(w[0].pageX,w[0].pageY);else{const E=.5*(w[0].pageX+w[1].pageX),ee=.5*(w[0].pageY+w[1].pageY);m.set(E,ee)}}function Y(){const E=w[0].pageX-w[1].pageX,ee=w[0].pageY-w[1].pageY,oe=Math.sqrt(E*E+ee*ee);_.set(0,oe)}function Pe(){n.enableZoom&&Y(),n.enablePan&&ye()}function we(){n.enableZoom&&Y(),n.enableRotate&&le()}function Ae(E){if(w.length==1)d.set(E.pageX,E.pageY);else{const oe=Ee(E),me=.5*(E.pageX+oe.x),pe=.5*(E.pageY+oe.y);d.set(me,pe)}p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const ee=n.domElement;T(2*Math.PI*p.x/ee.clientHeight),I(2*Math.PI*p.y/ee.clientHeight),f.copy(d)}function ce(E){if(w.length===1)g.set(E.pageX,E.pageY);else{const ee=Ee(E),oe=.5*(E.pageX+ee.x),me=.5*(E.pageY+ee.y);g.set(oe,me)}v.subVectors(g,m).multiplyScalar(n.panSpeed),X(v.x,v.y),m.copy(g)}function De(E){const ee=Ee(E),oe=E.pageX-ee.x,me=E.pageY-ee.y,pe=Math.sqrt(oe*oe+me*me);y.set(0,pe),x.set(0,Math.pow(y.y/_.y,n.zoomSpeed)),R(x.y),_.copy(y)}function J(E){n.enableZoom&&De(E),n.enablePan&&ce(E)}function Z(E){n.enableZoom&&De(E),n.enableRotate&&Ae(E)}function re(E){n.enabled!==!1&&(w.length===0&&(n.domElement.setPointerCapture(E.pointerId),n.domElement.addEventListener("pointermove",xe),n.domElement.addEventListener("pointerup",ue)),ne(E),E.pointerType==="touch"?L(E):Te(E))}function xe(E){n.enabled!==!1&&(E.pointerType==="touch"?S(E):Se(E))}function ue(E){se(E),w.length===0&&(n.domElement.releasePointerCapture(E.pointerId),n.domElement.removeEventListener("pointermove",xe),n.domElement.removeEventListener("pointerup",ue)),n.dispatchEvent(bp),s=i.NONE}function Re(E){se(E)}function Te(E){let ee;switch(E.button){case 0:ee=n.mouseButtons.LEFT;break;case 1:ee=n.mouseButtons.MIDDLE;break;case 2:ee=n.mouseButtons.RIGHT;break;default:ee=-1}switch(ee){case Gi.DOLLY:if(n.enableZoom===!1)return;H(E),s=i.DOLLY;break;case Gi.ROTATE:if(E.ctrlKey||E.metaKey||E.shiftKey){if(n.enablePan===!1)return;$(E),s=i.PAN}else{if(n.enableRotate===!1)return;O(E),s=i.ROTATE}break;case Gi.PAN:if(E.ctrlKey||E.metaKey||E.shiftKey){if(n.enableRotate===!1)return;O(E),s=i.ROTATE}else{if(n.enablePan===!1)return;$(E),s=i.PAN}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Bc)}function Se(E){switch(s){case i.ROTATE:if(n.enableRotate===!1)return;N(E);break;case i.DOLLY:if(n.enableZoom===!1)return;B(E);break;case i.PAN:if(n.enablePan===!1)return;te(E);break}}function Ke(E){n.enabled===!1||n.enableZoom===!1||s!==i.NONE||(E.preventDefault(),n.dispatchEvent(Bc),K(E),n.dispatchEvent(bp))}function je(E){n.enabled===!1||n.enablePan===!1||ie(E)}function L(E){switch(de(E),w.length){case 1:switch(n.touches.ONE){case Hi.ROTATE:if(n.enableRotate===!1)return;le(),s=i.TOUCH_ROTATE;break;case Hi.PAN:if(n.enablePan===!1)return;ye(),s=i.TOUCH_PAN;break;default:s=i.NONE}break;case 2:switch(n.touches.TWO){case Hi.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Pe(),s=i.TOUCH_DOLLY_PAN;break;case Hi.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;we(),s=i.TOUCH_DOLLY_ROTATE;break;default:s=i.NONE}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Bc)}function S(E){switch(de(E),s){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;Ae(E),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;ce(E),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;J(E),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Z(E),n.update();break;default:s=i.NONE}}function G(E){n.enabled!==!1&&E.preventDefault()}function ne(E){w.push(E)}function se(E){delete M[E.pointerId];for(let ee=0;ee<w.length;ee++)if(w[ee].pointerId==E.pointerId){w.splice(ee,1);return}}function de(E){let ee=M[E.pointerId];ee===void 0&&(ee=new q,M[E.pointerId]=ee),ee.set(E.pageX,E.pageY)}function Ee(E){const ee=E.pointerId===w[0].pointerId?w[1]:w[0];return M[ee.pointerId]}n.domElement.addEventListener("contextmenu",G),n.domElement.addEventListener("pointerdown",re),n.domElement.addEventListener("pointercancel",Re),n.domElement.addEventListener("wheel",Ke,{passive:!1}),this.update()}}const F0="fbx",O0="animations",SA="img/textures/matcap",Hl="data";/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/var wp={},zu=function(r){return URL.createObjectURL(new Blob([r],{type:"text/javascript"}))},N0=function(r){return new Worker(r)};try{URL.revokeObjectURL(zu(""))}catch{zu=function(e){return"data:application/javascript;charset=UTF-8,"+encodeURI(e)},N0=function(e){return new Worker(e,{type:"module"})}}var AA=function(r,e,t,n,i){var s=N0(wp[e]||(wp[e]=zu(r)));return s.onerror=function(o){return i(o.error,null)},s.onmessage=function(o){return i(null,o.data)},s.postMessage(t,n),s},Ue=Uint8Array,At=Uint16Array,ti=Uint32Array,Os=new Ue([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Ns=new Ue([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Eo=new Ue([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),k0=function(r,e){for(var t=new At(31),n=0;n<31;++n)t[n]=e+=1<<r[n-1];for(var i=new ti(t[30]),n=1;n<30;++n)for(var s=t[n];s<t[n+1];++s)i[s]=s-t[n]<<5|n;return[t,i]},z0=k0(Os,2),ef=z0[0],dl=z0[1];ef[28]=258,dl[258]=28;var B0=k0(Ns,0),U0=B0[0],Bu=B0[1],Co=new At(32768);for(var et=0;et<32768;++et){var di=(et&43690)>>>1|(et&21845)<<1;di=(di&52428)>>>2|(di&13107)<<2,di=(di&61680)>>>4|(di&3855)<<4,Co[et]=((di&65280)>>>8|(di&255)<<8)>>>1}var un=function(r,e,t){for(var n=r.length,i=0,s=new At(e);i<n;++i)++s[r[i]-1];var o=new At(e);for(i=0;i<e;++i)o[i]=o[i-1]+s[i-1]<<1;var a;if(t){a=new At(1<<e);var l=15-e;for(i=0;i<n;++i)if(r[i])for(var c=i<<4|r[i],u=e-r[i],h=o[r[i]-1]++<<u,f=h|(1<<u)-1;h<=f;++h)a[Co[h]>>>l]=c}else for(a=new At(n),i=0;i<n;++i)r[i]&&(a[i]=Co[o[r[i]-1]++]>>>15-r[i]);return a},ni=new Ue(288);for(var et=0;et<144;++et)ni[et]=8;for(var et=144;et<256;++et)ni[et]=9;for(var et=256;et<280;++et)ni[et]=7;for(var et=280;et<288;++et)ni[et]=8;var Ps=new Ue(32);for(var et=0;et<32;++et)Ps[et]=5;var V0=un(ni,9,0),G0=un(ni,9,1),H0=un(Ps,5,0),W0=un(Ps,5,1),ja=function(r){for(var e=r[0],t=1;t<r.length;++t)r[t]>e&&(e=r[t]);return e},an=function(r,e,t){var n=e/8|0;return(r[n]|r[n+1]<<8)>>(e&7)&t},Ya=function(r,e){var t=e/8|0;return(r[t]|r[t+1]<<8|r[t+2]<<16)>>(e&7)},Bo=function(r){return(r/8|0)+(r&7&&1)},hn=function(r,e,t){(e==null||e<0)&&(e=0),(t==null||t>r.length)&&(t=r.length);var n=new(r instanceof At?At:r instanceof ti?ti:Ue)(t-e);return n.set(r.subarray(e,t)),n},Uo=function(r,e,t){var n=r.length;if(!n||t&&!t.l&&n<5)return e||new Ue(0);var i=!e||t,s=!t||t.i;t||(t={}),e||(e=new Ue(n*3));var o=function(Y){var Pe=e.length;if(Y>Pe){var we=new Ue(Math.max(Pe*2,Y));we.set(e),e=we}},a=t.f||0,l=t.p||0,c=t.b||0,u=t.l,h=t.d,f=t.m,d=t.n,p=n*8;do{if(!u){t.f=a=an(r,l,1);var m=an(r,l+1,3);if(l+=3,m)if(m==1)u=G0,h=W0,f=9,d=5;else if(m==2){var y=an(r,l,31)+257,x=an(r,l+10,15)+4,w=y+an(r,l+5,31)+1;l+=14;for(var M=new Ue(w),P=new Ue(19),b=0;b<x;++b)P[Eo[b]]=an(r,l+b*3,7);l+=x*3;for(var T=ja(P),I=(1<<T)-1,D=un(P,T,1),b=0;b<w;){var V=D[an(r,l,I)];l+=V&15;var g=V>>>4;if(g<16)M[b++]=g;else{var X=0,R=0;for(g==16?(R=3+an(r,l,3),l+=2,X=M[b-1]):g==17?(R=3+an(r,l,7),l+=3):g==18&&(R=11+an(r,l,127),l+=7);R--;)M[b++]=X}}var U=M.subarray(0,y),O=M.subarray(y);f=ja(U),d=ja(O),u=un(U,f,1),h=un(O,d,1)}else throw"invalid block type";else{var g=Bo(l)+4,v=r[g-4]|r[g-3]<<8,_=g+v;if(_>n){if(s)throw"unexpected EOF";break}i&&o(c+v),e.set(r.subarray(g,_),c),t.b=c+=v,t.p=l=_*8;continue}if(l>p){if(s)throw"unexpected EOF";break}}i&&o(c+131072);for(var H=(1<<f)-1,$=(1<<d)-1,N=l;;N=l){var X=u[Ya(r,l)&H],B=X>>>4;if(l+=X&15,l>p){if(s)throw"unexpected EOF";break}if(!X)throw"invalid length/literal";if(B<256)e[c++]=B;else if(B==256){N=l,u=null;break}else{var te=B-254;if(B>264){var b=B-257,K=Os[b];te=an(r,l,(1<<K)-1)+ef[b],l+=K}var ie=h[Ya(r,l)&$],le=ie>>>4;if(!ie)throw"invalid distance";l+=ie&15;var O=U0[le];if(le>3){var K=Ns[le];O+=Ya(r,l)&(1<<K)-1,l+=K}if(l>p){if(s)throw"unexpected EOF";break}i&&o(c+131072);for(var ye=c+te;c<ye;c+=4)e[c]=e[c-O],e[c+1]=e[c+1-O],e[c+2]=e[c+2-O],e[c+3]=e[c+3-O];c=ye}}t.l=u,t.p=N,t.b=c,u&&(a=1,t.m=f,t.d=h,t.n=d)}while(!a);return c==e.length?e:hn(e,0,c)},Cn=function(r,e,t){t<<=e&7;var n=e/8|0;r[n]|=t,r[n+1]|=t>>>8},Yr=function(r,e,t){t<<=e&7;var n=e/8|0;r[n]|=t,r[n+1]|=t>>>8,r[n+2]|=t>>>16},Za=function(r,e){for(var t=[],n=0;n<r.length;++n)r[n]&&t.push({s:n,f:r[n]});var i=t.length,s=t.slice();if(!i)return[jn,0];if(i==1){var o=new Ue(t[0].s+1);return o[t[0].s]=1,[o,1]}t.sort(function(w,M){return w.f-M.f}),t.push({s:-1,f:25001});var a=t[0],l=t[1],c=0,u=1,h=2;for(t[0]={s:-1,f:a.f+l.f,l:a,r:l};u!=i-1;)a=t[t[c].f<t[h].f?c++:h++],l=t[c!=u&&t[c].f<t[h].f?c++:h++],t[u++]={s:-1,f:a.f+l.f,l:a,r:l};for(var f=s[0].s,n=1;n<i;++n)s[n].s>f&&(f=s[n].s);var d=new At(f+1),p=pl(t[u-1],d,0);if(p>e){var n=0,m=0,g=p-e,v=1<<g;for(s.sort(function(M,P){return d[P.s]-d[M.s]||M.f-P.f});n<i;++n){var _=s[n].s;if(d[_]>e)m+=v-(1<<p-d[_]),d[_]=e;else break}for(m>>>=g;m>0;){var y=s[n].s;d[y]<e?m-=1<<e-d[y]++-1:++n}for(;n>=0&&m;--n){var x=s[n].s;d[x]==e&&(--d[x],++m)}p=e}return[new Ue(d),p]},pl=function(r,e,t){return r.s==-1?Math.max(pl(r.l,e,t+1),pl(r.r,e,t+1)):e[r.s]=t},Uu=function(r){for(var e=r.length;e&&!r[--e];);for(var t=new At(++e),n=0,i=r[0],s=1,o=function(l){t[n++]=l},a=1;a<=e;++a)if(r[a]==i&&a!=e)++s;else{if(!i&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(i),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(i);s=1,i=r[a]}return[t.subarray(0,n),e]},Zr=function(r,e){for(var t=0,n=0;n<e.length;++n)t+=r[n]*e[n];return t},ao=function(r,e,t){var n=t.length,i=Bo(e+2);r[i]=n&255,r[i+1]=n>>>8,r[i+2]=r[i]^255,r[i+3]=r[i+1]^255;for(var s=0;s<n;++s)r[i+s+4]=t[s];return(i+4+n)*8},Vu=function(r,e,t,n,i,s,o,a,l,c,u){Cn(e,u++,t),++i[256];for(var h=Za(i,15),f=h[0],d=h[1],p=Za(s,15),m=p[0],g=p[1],v=Uu(f),_=v[0],y=v[1],x=Uu(m),w=x[0],M=x[1],P=new At(19),b=0;b<_.length;++b)P[_[b]&31]++;for(var b=0;b<w.length;++b)P[w[b]&31]++;for(var T=Za(P,7),I=T[0],D=T[1],V=19;V>4&&!I[Eo[V-1]];--V);var X=c+5<<3,R=Zr(i,ni)+Zr(s,Ps)+o,U=Zr(i,f)+Zr(s,m)+o+14+3*V+Zr(P,I)+(2*P[16]+3*P[17]+7*P[18]);if(X<=R&&X<=U)return ao(e,u,r.subarray(l,l+c));var O,H,$,N;if(Cn(e,u,1+(U<R)),u+=2,U<R){O=un(f,d,0),H=f,$=un(m,g,0),N=m;var B=un(I,D,0);Cn(e,u,y-257),Cn(e,u+5,M-1),Cn(e,u+10,V-4),u+=14;for(var b=0;b<V;++b)Cn(e,u+3*b,I[Eo[b]]);u+=3*V;for(var te=[_,w],K=0;K<2;++K)for(var ie=te[K],b=0;b<ie.length;++b){var le=ie[b]&31;Cn(e,u,B[le]),u+=I[le],le>15&&(Cn(e,u,ie[b]>>>5&127),u+=ie[b]>>>12)}}else O=V0,H=ni,$=H0,N=Ps;for(var b=0;b<a;++b)if(n[b]>255){var le=n[b]>>>18&31;Yr(e,u,O[le+257]),u+=H[le+257],le>7&&(Cn(e,u,n[b]>>>23&31),u+=Os[le]);var ye=n[b]&31;Yr(e,u,$[ye]),u+=N[ye],ye>3&&(Yr(e,u,n[b]>>>5&8191),u+=Ns[ye])}else Yr(e,u,O[n[b]]),u+=H[n[b]];return Yr(e,u,O[256]),u+H[256]},X0=new ti([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),jn=new Ue(0),$0=function(r,e,t,n,i,s){var o=r.length,a=new Ue(n+o+5*(1+Math.ceil(o/7e3))+i),l=a.subarray(n,a.length-i),c=0;if(!e||o<8)for(var u=0;u<=o;u+=65535){var h=u+65535;h<o?c=ao(l,c,r.subarray(u,h)):(l[u]=s,c=ao(l,c,r.subarray(u,o)))}else{for(var f=X0[e-1],d=f>>>13,p=f&8191,m=(1<<t)-1,g=new At(32768),v=new At(m+1),_=Math.ceil(t/3),y=2*_,x=function(re){return(r[re]^r[re+1]<<_^r[re+2]<<y)&m},w=new ti(25e3),M=new At(288),P=new At(32),b=0,T=0,u=0,I=0,D=0,V=0;u<o;++u){var X=x(u),R=u&32767,U=v[X];if(g[R]=U,v[X]=R,D<=u){var O=o-u;if((b>7e3||I>24576)&&O>423){c=Vu(r,l,0,w,M,P,T,I,V,u-V,c),I=b=T=0,V=u;for(var H=0;H<286;++H)M[H]=0;for(var H=0;H<30;++H)P[H]=0}var $=2,N=0,B=p,te=R-U&32767;if(O>2&&X==x(u-te))for(var K=Math.min(d,O)-1,ie=Math.min(32767,u),le=Math.min(258,O);te<=ie&&--B&&R!=U;){if(r[u+$]==r[u+$-te]){for(var ye=0;ye<le&&r[u+ye]==r[u+ye-te];++ye);if(ye>$){if($=ye,N=te,ye>K)break;for(var Y=Math.min(te,ye-2),Pe=0,H=0;H<Y;++H){var we=u-te+H+32768&32767,Ae=g[we],ce=we-Ae+32768&32767;ce>Pe&&(Pe=ce,U=we)}}}R=U,U=g[R],te+=R-U+32768&32767}if(N){w[I++]=268435456|dl[$]<<18|Bu[N];var De=dl[$]&31,J=Bu[N]&31;T+=Os[De]+Ns[J],++M[257+De],++P[J],D=u+$,++b}else w[I++]=r[u],++M[r[u]]}}c=Vu(r,l,s,w,M,P,T,I,V,u-V,c),!s&&c&7&&(c=ao(l,c+1,jn))}return hn(a,0,n+Bo(c)+i)},q0=function(){for(var r=new ti(256),e=0;e<256;++e){for(var t=e,n=9;--n;)t=(t&1&&3988292384)^t>>>1;r[e]=t}return r}(),ks=function(){var r=-1;return{p:function(e){for(var t=r,n=0;n<e.length;++n)t=q0[t&255^e[n]]^t>>>8;r=t},d:function(){return~r}}},tf=function(){var r=1,e=0;return{p:function(t){for(var n=r,i=e,s=t.length,o=0;o!=s;){for(var a=Math.min(o+2655,s);o<a;++o)i+=n+=t[o];n=(n&65535)+15*(n>>16),i=(i&65535)+15*(i>>16)}r=n,e=i},d:function(){return r%=65521,e%=65521,(r&255)<<24|r>>>8<<16|(e&255)<<8|e>>>8}}},Tr=function(r,e,t,n,i){return $0(r,e.level==null?6:e.level,e.mem==null?Math.ceil(Math.max(8,Math.min(13,Math.log(r.length)))*1.5):12+e.mem,t,n,!i)},Vo=function(r,e){var t={};for(var n in r)t[n]=r[n];for(var n in e)t[n]=e[n];return t},Mp=function(r,e,t){for(var n=r(),i=r.toString(),s=i.slice(i.indexOf("[")+1,i.lastIndexOf("]")).replace(/ /g,"").split(","),o=0;o<n.length;++o){var a=n[o],l=s[o];if(typeof a=="function"){e+=";"+l+"=";var c=a.toString();if(a.prototype)if(c.indexOf("[native code]")!=-1){var u=c.indexOf(" ",8)+1;e+=c.slice(u,c.indexOf("(",u))}else{e+=c;for(var h in a.prototype)e+=";"+l+".prototype."+h+"="+a.prototype[h].toString()}else e+=c}else t[l]=a}return[e,t]},Da=[],TA=function(r){var e=[];for(var t in r)(r[t]instanceof Ue||r[t]instanceof At||r[t]instanceof ti)&&e.push((r[t]=new r[t].constructor(r[t])).buffer);return e},j0=function(r,e,t,n){var i;if(!Da[t]){for(var s="",o={},a=r.length-1,l=0;l<a;++l)i=Mp(r[l],s,o),s=i[0],o=i[1];Da[t]=Mp(r[a],s,o)}var c=Vo({},Da[t][1]);return AA(Da[t][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",t,c,TA(c),n)},zs=function(){return[Ue,At,ti,Os,Ns,Eo,ef,U0,G0,W0,Co,un,ja,an,Ya,Bo,hn,Uo,Gs,Ii,nf]},Bs=function(){return[Ue,At,ti,Os,Ns,Eo,dl,Bu,V0,ni,H0,Ps,Co,X0,jn,un,Cn,Yr,Za,pl,Uu,Zr,ao,Vu,Bo,hn,$0,Tr,Go,Ii]},Y0=function(){return[rf,of,Ze,ks,q0]},Z0=function(){return[sf,Q0]},J0=function(){return[af,Ze,tf]},K0=function(){return[e_]},Ii=function(r){return postMessage(r,[r.buffer])},nf=function(r){return r&&r.size&&new Ue(r.size)},Us=function(r,e,t,n,i,s){var o=j0(t,n,i,function(a,l){o.terminate(),s(a,l)});return o.postMessage([r,e],e.consume?[r.buffer]:[]),function(){o.terminate()}},fn=function(r){return r.ondata=function(e,t){return postMessage([e,t],[e.buffer])},function(e){return r.push(e.data[0],e.data[1])}},Vs=function(r,e,t,n,i){var s,o=j0(r,n,i,function(a,l){a?(o.terminate(),e.ondata.call(e,a)):(l[1]&&o.terminate(),e.ondata.call(e,a,l[0],l[1]))});o.postMessage(t),e.push=function(a,l){if(s)throw"stream finished";if(!e.ondata)throw"no stream handler";o.postMessage([a,s=l],[a.buffer])},e.terminate=function(){o.terminate()}},Ft=function(r,e){return r[e]|r[e+1]<<8},dt=function(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0},Uc=function(r,e){return dt(r,e)+dt(r,e+4)*4294967296},Ze=function(r,e,t){for(;t;++e)r[e]=t,t>>>=8},rf=function(r,e){var t=e.filename;if(r[0]=31,r[1]=139,r[2]=8,r[8]=e.level<2?4:e.level==9?2:0,r[9]=3,e.mtime!=0&&Ze(r,4,Math.floor(new Date(e.mtime||Date.now())/1e3)),t){r[3]=8;for(var n=0;n<=t.length;++n)r[n+10]=t.charCodeAt(n)}},sf=function(r){if(r[0]!=31||r[1]!=139||r[2]!=8)throw"invalid gzip data";var e=r[3],t=10;e&4&&(t+=r[10]|(r[11]<<8)+2);for(var n=(e>>3&1)+(e>>4&1);n>0;n-=!r[t++]);return t+(e&2)},Q0=function(r){var e=r.length;return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0},of=function(r){return 10+(r.filename&&r.filename.length+1||0)},af=function(r,e){var t=e.level,n=t==0?0:t<6?1:t==9?3:2;r[0]=120,r[1]=n<<6|(n?32-2*n:1)},e_=function(r){if((r[0]&15)!=8||r[0]>>>4>7||(r[0]<<8|r[1])%31)throw"invalid zlib data";if(r[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function lf(r,e){return!e&&typeof r=="function"&&(e=r,r={}),this.ondata=e,r}var On=function(){function r(e,t){!t&&typeof e=="function"&&(t=e,e={}),this.ondata=t,this.o=e||{}}return r.prototype.p=function(e,t){this.ondata(Tr(e,this.o,0,0,!t),t)},r.prototype.push=function(e,t){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=t,this.p(e,t||!1)},r}(),t_=function(){function r(e,t){Vs([Bs,function(){return[fn,On]}],this,lf.call(this,e,t),function(n){var i=new On(n.data);onmessage=fn(i)},6)}return r}();function n_(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Us(r,e,[Bs],function(n){return Ii(Go(n.data[0],n.data[1]))},0,t)}function Go(r,e){return Tr(r,e||{},0,0)}var Vt=function(){function r(e){this.s={},this.p=new Ue(0),this.ondata=e}return r.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var t=this.p.length,n=new Ue(t+e.length);n.set(this.p),n.set(e,t),this.p=n},r.prototype.c=function(e){this.d=this.s.i=e||!1;var t=this.s.b,n=Uo(this.p,this.o,this.s);this.ondata(hn(n,t,this.s.b),this.d),this.o=hn(n,this.s.b-32768),this.s.b=this.o.length,this.p=hn(this.p,this.s.p/8|0),this.s.p&=7},r.prototype.push=function(e,t){this.e(e),this.c(t)},r}(),cf=function(){function r(e){this.ondata=e,Vs([zs,function(){return[fn,Vt]}],this,0,function(){var t=new Vt;onmessage=fn(t)},7)}return r}();function uf(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Us(r,e,[zs],function(n){return Ii(Gs(n.data[0],nf(n.data[1])))},1,t)}function Gs(r,e){return Uo(r,e)}var ml=function(){function r(e,t){this.c=ks(),this.l=0,this.v=1,On.call(this,e,t)}return r.prototype.push=function(e,t){On.prototype.push.call(this,e,t)},r.prototype.p=function(e,t){this.c.p(e),this.l+=e.length;var n=Tr(e,this.o,this.v&&of(this.o),t&&8,!t);this.v&&(rf(n,this.o),this.v=0),t&&(Ze(n,n.length-8,this.c.d()),Ze(n,n.length-4,this.l)),this.ondata(n,t)},r}(),Sp=function(){function r(e,t){Vs([Bs,Y0,function(){return[fn,On,ml]}],this,lf.call(this,e,t),function(n){var i=new ml(n.data);onmessage=fn(i)},8)}return r}();function Ap(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Us(r,e,[Bs,Y0,function(){return[gl]}],function(n){return Ii(gl(n.data[0],n.data[1]))},2,t)}function gl(r,e){e||(e={});var t=ks(),n=r.length;t.p(r);var i=Tr(r,e,of(e),8),s=i.length;return rf(i,e),Ze(i,s-8,t.d()),Ze(i,s-4,n),i}var _l=function(){function r(e){this.v=1,Vt.call(this,e)}return r.prototype.push=function(e,t){if(Vt.prototype.e.call(this,e),this.v){var n=this.p.length>3?sf(this.p):4;if(n>=this.p.length&&!t)return;this.p=this.p.subarray(n),this.v=0}if(t){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}Vt.prototype.c.call(this,t)},r}(),i_=function(){function r(e){this.ondata=e,Vs([zs,Z0,function(){return[fn,Vt,_l]}],this,0,function(){var t=new _l;onmessage=fn(t)},9)}return r}();function r_(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Us(r,e,[zs,Z0,function(){return[vl]}],function(n){return Ii(vl(n.data[0]))},3,t)}function vl(r,e){return Uo(r.subarray(sf(r),-8),e||new Ue(Q0(r)))}var Gu=function(){function r(e,t){this.c=tf(),this.v=1,On.call(this,e,t)}return r.prototype.push=function(e,t){On.prototype.push.call(this,e,t)},r.prototype.p=function(e,t){this.c.p(e);var n=Tr(e,this.o,this.v&&2,t&&4,!t);this.v&&(af(n,this.o),this.v=0),t&&Ze(n,n.length-4,this.c.d()),this.ondata(n,t)},r}(),EA=function(){function r(e,t){Vs([Bs,J0,function(){return[fn,On,Gu]}],this,lf.call(this,e,t),function(n){var i=new Gu(n.data);onmessage=fn(i)},10)}return r}();function CA(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Us(r,e,[Bs,J0,function(){return[Hu]}],function(n){return Ii(Hu(n.data[0],n.data[1]))},4,t)}function Hu(r,e){e||(e={});var t=tf();t.p(r);var n=Tr(r,e,2,4);return af(n,e),Ze(n,n.length-4,t.d()),n}var yl=function(){function r(e){this.v=1,Vt.call(this,e)}return r.prototype.push=function(e,t){if(Vt.prototype.e.call(this,e),this.v){if(this.p.length<2&&!t)return;this.p=this.p.subarray(2),this.v=0}if(t){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}Vt.prototype.c.call(this,t)},r}(),s_=function(){function r(e){this.ondata=e,Vs([zs,K0,function(){return[fn,Vt,yl]}],this,0,function(){var t=new yl;onmessage=fn(t)},11)}return r}();function o_(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Us(r,e,[zs,K0,function(){return[Po]}],function(n){return Ii(Po(n.data[0],nf(n.data[1])))},5,t)}function Po(r,e){return Uo((e_(r),r.subarray(2,-4)),e)}var a_=function(){function r(e){this.G=_l,this.I=Vt,this.Z=yl,this.ondata=e}return r.prototype.push=function(e,t){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,t);else{if(this.p&&this.p.length){var n=new Ue(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var i=this,s=function(){i.ondata.apply(i,arguments)};this.s=this.p[0]==31&&this.p[1]==139&&this.p[2]==8?new this.G(s):(this.p[0]&15)!=8||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(s):new this.Z(s),this.s.push(this.p,t),this.p=null}}},r}(),PA=function(){function r(e){this.G=i_,this.I=cf,this.Z=s_,this.ondata=e}return r.prototype.push=function(e,t){a_.prototype.push.call(this,e,t)},r}();function LA(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return r[0]==31&&r[1]==139&&r[2]==8?r_(r,e,t):(r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31?uf(r,e,t):o_(r,e,t)}function IA(r,e){return r[0]==31&&r[1]==139&&r[2]==8?vl(r,e):(r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31?Gs(r,e):Po(r,e)}var hf=function(r,e,t,n){for(var i in r){var s=r[i],o=e+i;s instanceof Ue?t[o]=[s,n]:Array.isArray(s)?t[o]=[s[0],Vo(n,s[1])]:hf(s,o+"/",t,n)}},Tp=typeof TextEncoder<"u"&&new TextEncoder,Wu=typeof TextDecoder<"u"&&new TextDecoder,l_=0;try{Wu.decode(jn,{stream:!0}),l_=1}catch{}var c_=function(r){for(var e="",t=0;;){var n=r[t++],i=(n>127)+(n>223)+(n>239);if(t+i>r.length)return[e,hn(r,t-1)];i?i==3?(n=((n&15)<<18|(r[t++]&63)<<12|(r[t++]&63)<<6|r[t++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):i&1?e+=String.fromCharCode((n&31)<<6|r[t++]&63):e+=String.fromCharCode((n&15)<<12|(r[t++]&63)<<6|r[t++]&63):e+=String.fromCharCode(n)}},RA=function(){function r(e){this.ondata=e,l_?this.t=new TextDecoder:this.p=jn}return r.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(t=!!t,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),t),t){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}return}if(!this.p)throw"stream finished";var n=new Ue(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length);var i=c_(n),s=i[0],o=i[1];if(t){if(o.length)throw"invalid utf-8 data";this.p=null}else this.p=o;this.ondata(s,t)},r}(),DA=function(){function r(e){this.ondata=e}return r.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(Ei(e),this.d=t||!1)},r}();function Ei(r,e){if(e){for(var t=new Ue(r.length),n=0;n<r.length;++n)t[n]=r.charCodeAt(n);return t}if(Tp)return Tp.encode(r);for(var i=r.length,s=new Ue(r.length+(r.length>>1)),o=0,a=function(u){s[o++]=u},n=0;n<i;++n){if(o+5>s.length){var l=new Ue(o+8+(i-n<<1));l.set(s),s=l}var c=r.charCodeAt(n);c<128||e?a(c):c<2048?(a(192|c>>6),a(128|c&63)):c>55295&&c<57344?(c=65536+(c&1023<<10)|r.charCodeAt(++n)&1023,a(240|c>>18),a(128|c>>12&63),a(128|c>>6&63),a(128|c&63)):(a(224|c>>12),a(128|c>>6&63),a(128|c&63))}return hn(s,0,o)}function ff(r,e){if(e){for(var t="",n=0;n<r.length;n+=16384)t+=String.fromCharCode.apply(null,r.subarray(n,n+16384));return t}else{if(Wu)return Wu.decode(r);var i=c_(r),s=i[0],o=i[1];if(o.length)throw"invalid utf-8 data";return s}}var u_=function(r){return r==1?3:r<6?2:r==9?1:0},h_=function(r,e){return e+30+Ft(r,e+26)+Ft(r,e+28)},f_=function(r,e,t){var n=Ft(r,e+28),i=ff(r.subarray(e+46,e+46+n),!(Ft(r,e+8)&2048)),s=e+46+n,o=dt(r,e+20),a=t&&o==4294967295?d_(r,s):[o,dt(r,e+24),dt(r,e+42)],l=a[0],c=a[1],u=a[2];return[Ft(r,e+10),l,c,i,s+Ft(r,e+30)+Ft(r,e+32),u]},d_=function(r,e){for(;Ft(r,e)!=1;e+=4+Ft(r,e+2));return[Uc(r,e+12),Uc(r,e+4),Uc(r,e+20)]},yi=function(r){var e=0;if(r)for(var t in r){var n=r[t].length;if(n>65535)throw"extra field too long";e+=n+4}return e},Ls=function(r,e,t,n,i,s,o,a){var l=n.length,c=t.extra,u=a&&a.length,h=yi(c);Ze(r,e,o!=null?33639248:67324752),e+=4,o!=null&&(r[e++]=20,r[e++]=t.os),r[e]=20,e+=2,r[e++]=t.flag<<1|(s==null&&8),r[e++]=i&&8,r[e++]=t.compression&255,r[e++]=t.compression>>8;var f=new Date(t.mtime==null?Date.now():t.mtime),d=f.getFullYear()-1980;if(d<0||d>119)throw"date not in range 1980-2099";if(Ze(r,e,d<<25|f.getMonth()+1<<21|f.getDate()<<16|f.getHours()<<11|f.getMinutes()<<5|f.getSeconds()>>>1),e+=4,s!=null&&(Ze(r,e,t.crc),Ze(r,e+4,s),Ze(r,e+8,t.size)),Ze(r,e+12,l),Ze(r,e+14,h),e+=16,o!=null&&(Ze(r,e,u),Ze(r,e+6,t.attrs),Ze(r,e+10,o),e+=14),r.set(n,e),e+=l,h)for(var p in c){var m=c[p],g=m.length;Ze(r,e,+p),Ze(r,e+2,g),r.set(m,e+4),e+=4+g}return u&&(r.set(a,e),e+=u),e},df=function(r,e,t,n,i){Ze(r,e,101010256),Ze(r,e+8,t),Ze(r,e+10,t),Ze(r,e+12,n),Ze(r,e+16,i)},Lo=function(){function r(e){this.filename=e,this.c=ks(),this.size=0,this.compression=0}return r.prototype.process=function(e,t){this.ondata(null,e,t)},r.prototype.push=function(e,t){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,t&&(this.crc=this.c.d()),this.process(e,t||!1)},r}(),FA=function(){function r(e,t){var n=this;t||(t={}),Lo.call(this,e),this.d=new On(t,function(i,s){n.ondata(null,i,s)}),this.compression=8,this.flag=u_(t.level)}return r.prototype.process=function(e,t){try{this.d.push(e,t)}catch(n){this.ondata(n,null,t)}},r.prototype.push=function(e,t){Lo.prototype.push.call(this,e,t)},r}(),OA=function(){function r(e,t){var n=this;t||(t={}),Lo.call(this,e),this.d=new t_(t,function(i,s,o){n.ondata(i,s,o)}),this.compression=8,this.flag=u_(t.level),this.terminate=this.d.terminate}return r.prototype.process=function(e,t){this.d.push(e,t)},r.prototype.push=function(e,t){Lo.prototype.push.call(this,e,t)},r}(),NA=function(){function r(e){this.ondata=e,this.u=[],this.d=1}return r.prototype.add=function(e){var t=this;if(this.d&2)throw"stream finished";var n=Ei(e.filename),i=n.length,s=e.comment,o=s&&Ei(s),a=i!=e.filename.length||o&&s.length!=o.length,l=i+yi(e.extra)+30;if(i>65535)throw"filename too long";var c=new Ue(l);Ls(c,0,e,n,a);var u=[c],h=function(){for(var g=0,v=u;g<v.length;g++){var _=v[g];t.ondata(null,_,!1)}u=[]},f=this.d;this.d=0;var d=this.u.length,p=Vo(e,{f:n,u:a,o,t:function(){e.terminate&&e.terminate()},r:function(){if(h(),f){var g=t.u[d+1];g?g.r():t.d=1}f=1}}),m=0;e.ondata=function(g,v,_){if(g)t.ondata(g,v,_),t.terminate();else if(m+=v.length,u.push(v),_){var y=new Ue(16);Ze(y,0,134695760),Ze(y,4,e.crc),Ze(y,8,m),Ze(y,12,e.size),u.push(y),p.c=m,p.b=l+m+16,p.crc=e.crc,p.size=e.size,f&&p.r(),f=1}else f&&h()},this.u.push(p)},r.prototype.end=function(){var e=this;if(this.d&2)throw this.d&1?"stream finishing":"stream finished";this.d?this.e():this.u.push({r:function(){!(e.d&1)||(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},r.prototype.e=function(){for(var e=0,t=0,n=0,i=0,s=this.u;i<s.length;i++){var o=s[i];n+=46+o.f.length+yi(o.extra)+(o.o?o.o.length:0)}for(var a=new Ue(n+22),l=0,c=this.u;l<c.length;l++){var o=c[l];Ls(a,e,o,o.f,o.u,o.c,t,o.o),e+=46+o.f.length+yi(o.extra)+(o.o?o.o.length:0),t+=o.b}df(a,e,this.u.length,n,t),this.ondata(null,a,!0),this.d=2},r.prototype.terminate=function(){for(var e=0,t=this.u;e<t.length;e++){var n=t[e];n.t()}this.d=2},r}();function kA(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";var n={};hf(r,"",n,e);var i=Object.keys(n),s=i.length,o=0,a=0,l=s,c=new Array(s),u=[],h=function(){for(var m=0;m<u.length;++m)u[m]()},f=function(){var m=new Ue(a+22),g=o,v=a-o;a=0;for(var _=0;_<l;++_){var y=c[_];try{var x=y.c.length;Ls(m,a,y,y.f,y.u,x);var w=30+y.f.length+yi(y.extra),M=a+w;m.set(y.c,M),Ls(m,o,y,y.f,y.u,x,a,y.m),o+=16+w+(y.m?y.m.length:0),a=M+x}catch(P){return t(P,null)}}df(m,o,c.length,v,g),t(null,m)};s||f();for(var d=function(m){var g=i[m],v=n[g],_=v[0],y=v[1],x=ks(),w=_.length;x.p(_);var M=Ei(g),P=M.length,b=y.comment,T=b&&Ei(b),I=T&&T.length,D=yi(y.extra),V=y.level==0?0:8,X=function(R,U){if(R)h(),t(R,null);else{var O=U.length;c[m]=Vo(y,{size:w,crc:x.d(),c:U,f:M,m:T,u:P!=g.length||T&&b.length!=I,compression:V}),o+=30+P+D+O,a+=76+2*(P+D)+(I||0)+O,--s||f()}};if(P>65535&&X("filename too long",null),!V)X(null,_);else if(w<16e4)try{X(null,Go(_,y))}catch(R){X(R,null)}else u.push(n_(_,y,X))},p=0;p<l;++p)d(p);return h}function zA(r,e){e||(e={});var t={},n=[];hf(r,"",t,e);var i=0,s=0;for(var o in t){var a=t[o],l=a[0],c=a[1],u=c.level==0?0:8,h=Ei(o),f=h.length,d=c.comment,p=d&&Ei(d),m=p&&p.length,g=yi(c.extra);if(f>65535)throw"filename too long";var v=u?Go(l,c):l,_=v.length,y=ks();y.p(l),n.push(Vo(c,{size:l.length,crc:y.d(),c:v,f:h,m:p,u:f!=o.length||p&&d.length!=m,o:i,compression:u})),i+=30+f+g+_,s+=76+2*(f+g)+(m||0)+_}for(var x=new Ue(s+22),w=i,M=s-i,P=0;P<n.length;++P){var h=n[P];Ls(x,h.o,h,h.f,h.u,h.c.length);var b=30+h.f.length+yi(h.extra);x.set(h.c,h.o+b),Ls(x,i,h,h.f,h.u,h.c.length,h.o,h.m),i+=16+b+(h.m?h.m.length:0)}return df(x,i,n.length,M,w),x}var p_=function(){function r(){}return r.prototype.push=function(e,t){this.ondata(null,e,t)},r.compression=0,r}(),BA=function(){function r(){var e=this;this.i=new Vt(function(t,n){e.ondata(null,t,n)})}return r.prototype.push=function(e,t){try{this.i.push(e,t)}catch(n){this.ondata(n,e,t)}},r.compression=8,r}(),UA=function(){function r(e,t){var n=this;t<32e4?this.i=new Vt(function(i,s){n.ondata(null,i,s)}):(this.i=new cf(function(i,s,o){n.ondata(i,s,o)}),this.terminate=this.i.terminate)}return r.prototype.push=function(e,t){this.i.terminate&&(e=hn(e,0)),this.i.push(e,t)},r.compression=8,r}(),VA=function(){function r(e){this.onfile=e,this.k=[],this.o={0:p_},this.p=jn}return r.prototype.push=function(e,t){var n=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var i=Math.min(this.c,e.length),s=e.subarray(0,i);if(this.c-=i,this.d?this.d.push(s,!this.c):this.k[0].push(s),e=e.subarray(i),e.length)return this.push(e,t)}else{var o=0,a=0,l=void 0,c=void 0;this.p.length?e.length?(c=new Ue(this.p.length+e.length),c.set(this.p),c.set(e,this.p.length)):c=this.p:c=e;for(var u=c.length,h=this.c,f=h&&this.d,d=function(){var v,_=dt(c,a);if(_==67324752){o=1,l=a,p.d=null,p.c=0;var y=Ft(c,a+6),x=Ft(c,a+8),w=y&2048,M=y&8,P=Ft(c,a+26),b=Ft(c,a+28);if(u>a+30+P+b){var T=[];p.k.unshift(T),o=2;var I=dt(c,a+18),D=dt(c,a+22),V=ff(c.subarray(a+30,a+=30+P),!w);I==4294967295?(v=M?[-2]:d_(c,a),I=v[0],D=v[1]):M&&(I=-1),a+=b,p.c=I;var X,R={name:V,compression:x,start:function(){if(!R.ondata)throw"no callback";if(!I)R.ondata(null,jn,!0);else{var U=n.o[x];if(!U)throw"unknown compression type "+x;X=I<0?new U(V):new U(V,I,D),X.ondata=function(N,B,te){R.ondata(N,B,te)};for(var O=0,H=T;O<H.length;O++){var $=H[O];X.push($,!1)}n.k[0]==T&&n.c?n.d=X:X.push(jn,!0)}},terminate:function(){X&&X.terminate&&X.terminate()}};I>=0&&(R.size=I,R.originalSize=D),p.onfile(R)}return"break"}else if(h){if(_==134695760)return l=a+=12+(h==-2&&8),o=3,p.c=0,"break";if(_==33639248)return l=a-=4,o=3,p.c=0,"break"}},p=this;a<u-4;++a){var m=d();if(m==="break")break}if(this.p=jn,h<0){var g=o?c.subarray(0,l-12-(h==-2&&8)-(dt(c,l-16)==134695760&&4)):c.subarray(0,a);f?f.push(g,!!o):this.k[+(o==2)].push(g)}if(o&2)return this.push(c.subarray(a),t);this.p=c.subarray(a)}if(t){if(this.c)throw"invalid zip file";this.p=null}},r.prototype.register=function(e){this.o[e.compression]=e},r}();function GA(r,e){if(typeof e!="function")throw"no callback";for(var t=[],n=function(){for(var f=0;f<t.length;++f)t[f]()},i={},s=r.length-22;dt(r,s)!=101010256;--s)if(!s||r.length-s>65558){e("invalid zip file",null);return}var o=Ft(r,s+8);o||e(null,{});var a=o,l=dt(r,s+16),c=l==4294967295;if(c){if(s=dt(r,s-12),dt(r,s)!=101075792){e("invalid zip file",null);return}a=o=dt(r,s+32),l=dt(r,s+48)}for(var u=function(f){var d=f_(r,l,c),p=d[0],m=d[1],g=d[2],v=d[3],_=d[4],y=d[5],x=h_(r,y);l=_;var w=function(P,b){P?(n(),e(P,null)):(i[v]=b,--o||e(null,i))};if(!p)w(null,hn(r,x,x+m));else if(p==8){var M=r.subarray(x,x+m);if(m<32e4)try{w(null,Gs(M,new Ue(g)))}catch(P){w(P,null)}else t.push(uf(M,{size:g},w))}else w("unknown compression type "+p,null)},h=0;h<a;++h)u();return n}function HA(r){for(var e={},t=r.length-22;dt(r,t)!=101010256;--t)if(!t||r.length-t>65558)throw"invalid zip file";var n=Ft(r,t+8);if(!n)return{};var i=dt(r,t+16),s=i==4294967295;if(s){if(t=dt(r,t-12),dt(r,t)!=101075792)throw"invalid zip file";n=dt(r,t+32),i=dt(r,t+48)}for(var o=0;o<n;++o){var a=f_(r,i,s),l=a[0],c=a[1],u=a[2],h=a[3],f=a[4],d=a[5],p=h_(r,d);if(i=f,!l)e[h]=hn(r,p,p+c);else if(l==8)e[h]=Gs(r.subarray(p,p+c),new Ue(u));else throw"unknown compression type "+l}return e}const WA=Object.freeze(Object.defineProperty({__proto__:null,Deflate:On,AsyncDeflate:t_,deflate:n_,deflateSync:Go,Inflate:Vt,AsyncInflate:cf,inflate:uf,inflateSync:Gs,Gzip:ml,AsyncGzip:Sp,gzip:Ap,gzipSync:gl,Gunzip:_l,AsyncGunzip:i_,gunzip:r_,gunzipSync:vl,Zlib:Gu,AsyncZlib:EA,zlib:CA,zlibSync:Hu,Unzlib:yl,AsyncUnzlib:s_,unzlib:o_,unzlibSync:Po,compress:Ap,AsyncCompress:Sp,compressSync:gl,Compress:ml,Decompress:a_,AsyncDecompress:PA,decompress:LA,decompressSync:IA,DecodeUTF8:RA,EncodeUTF8:DA,strToU8:Ei,strFromU8:ff,ZipPassThrough:Lo,ZipDeflate:FA,AsyncZipDeflate:OA,Zip:NA,zip:kA,zipSync:zA,UnzipPassThrough:p_,UnzipInflate:BA,AsyncUnzipInflate:UA,Unzip:VA,unzip:GA,unzipSync:HA},Symbol.toStringTag,{value:"Module"}));function m_(r,e,t){const n=t.length-r-1;if(e>=t[n])return n-1;if(e<=t[r])return r;let i=r,s=n,o=Math.floor((i+s)/2);for(;e<t[o]||e>=t[o+1];)e<t[o]?s=o:i=o,o=Math.floor((i+s)/2);return o}function XA(r,e,t,n){const i=[],s=[],o=[];i[0]=1;for(let a=1;a<=t;++a){s[a]=e-n[r+1-a],o[a]=n[r+a]-e;let l=0;for(let c=0;c<a;++c){const u=o[c+1],h=s[a-c],f=i[c]/(u+h);i[c]=l+u*f,l=h*f}i[a]=l}return i}function $A(r,e,t,n){const i=m_(r,n,e),s=XA(i,n,r,e),o=new He(0,0,0,0);for(let a=0;a<=r;++a){const l=t[i-r+a],c=s[a],u=l.w*c;o.x+=l.x*u,o.y+=l.y*u,o.z+=l.z*u,o.w+=l.w*c}return o}function qA(r,e,t,n,i){const s=[];for(let h=0;h<=t;++h)s[h]=0;const o=[];for(let h=0;h<=n;++h)o[h]=s.slice(0);const a=[];for(let h=0;h<=t;++h)a[h]=s.slice(0);a[0][0]=1;const l=s.slice(0),c=s.slice(0);for(let h=1;h<=t;++h){l[h]=e-i[r+1-h],c[h]=i[r+h]-e;let f=0;for(let d=0;d<h;++d){const p=c[d+1],m=l[h-d];a[h][d]=p+m;const g=a[d][h-1]/a[h][d];a[d][h]=f+p*g,f=m*g}a[h][h]=f}for(let h=0;h<=t;++h)o[0][h]=a[h][t];for(let h=0;h<=t;++h){let f=0,d=1;const p=[];for(let m=0;m<=t;++m)p[m]=s.slice(0);p[0][0]=1;for(let m=1;m<=n;++m){let g=0;const v=h-m,_=t-m;h>=m&&(p[d][0]=p[f][0]/a[_+1][v],g=p[d][0]*a[v][_]);const y=v>=-1?1:-v,x=h-1<=_?m-1:t-h;for(let M=y;M<=x;++M)p[d][M]=(p[f][M]-p[f][M-1])/a[_+1][v+M],g+=p[d][M]*a[v+M][_];h<=_&&(p[d][m]=-p[f][m-1]/a[_+1][h],g+=p[d][m]*a[h][_]),o[m][h]=g;const w=f;f=d,d=w}}let u=t;for(let h=1;h<=n;++h){for(let f=0;f<=t;++f)o[h][f]*=u;u*=t-h}return o}function jA(r,e,t,n,i){const s=i<r?i:r,o=[],a=m_(r,n,e),l=qA(a,n,r,s,e),c=[];for(let u=0;u<t.length;++u){const h=t[u].clone(),f=h.w;h.x*=f,h.y*=f,h.z*=f,c[u]=h}for(let u=0;u<=s;++u){const h=c[a-r].clone().multiplyScalar(l[u][0]);for(let f=1;f<=r;++f)h.add(c[a-r+f].clone().multiplyScalar(l[u][f]));o[u]=h}for(let u=s+1;u<=i+1;++u)o[u]=new He(0,0,0);return o}function YA(r,e){let t=1;for(let i=2;i<=r;++i)t*=i;let n=1;for(let i=2;i<=e;++i)n*=i;for(let i=2;i<=r-e;++i)n*=i;return t/n}function ZA(r){const e=r.length,t=[],n=[];for(let s=0;s<e;++s){const o=r[s];t[s]=new A(o.x,o.y,o.z),n[s]=o.w}const i=[];for(let s=0;s<e;++s){const o=t[s].clone();for(let a=1;a<=s;++a)o.sub(i[s-a].clone().multiplyScalar(YA(s,a)*n[a]));i[s]=o.divideScalar(n[0])}return i}function JA(r,e,t,n,i){const s=jA(r,e,t,n,i);return ZA(s)}class Ep extends dn{constructor(e,t,n,i,s){super(),this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=i||0,this.endKnot=s||this.knots.length-1;for(let o=0;o<n.length;++o){const a=n[o];this.controlPoints[o]=new He(a.x,a.y,a.z,a.w)}}getPoint(e,t=new A){const n=t,i=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),s=$A(this.degree,this.knots,this.controlPoints,i);return s.w!==1&&s.divideScalar(s.w),n.set(s.x,s.y,s.z)}getTangent(e,t=new A){const n=t,i=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),s=JA(this.degree,this.knots,this.controlPoints,i,1);return n.copy(s[1]).normalize(),n}}let ze,ut,Bt;class KA extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=s.path===""?Cs.extractUrlBase(e):s.path,a=new Fn(this.manager);a.setPath(s.path),a.setResponseType("arraybuffer"),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(l){try{t(s.parse(l,o))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e,t){if(rT(e))ze=new iT().parse(e);else{const i=y_(e);if(!sT(i))throw new Error("THREE.FBXLoader: Unknown format.");if(Pp(i)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+Pp(i));ze=new nT().parse(i)}const n=new Ar(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new QA(n,this.manager).parse(ze)}}class QA{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){ut=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),n=this.parseMaterials(t),i=this.parseDeformers(),s=new eT().parse(i);return this.parseScene(i,s,n),Bt}parseConnections(){const e=new Map;return"Connections"in ze&&ze.Connections.connections.forEach(function(n){const i=n[0],s=n[1],o=n[2];e.has(i)||e.set(i,{parents:[],children:[]});const a={ID:s,relationship:o};e.get(i).parents.push(a),e.has(s)||e.set(s,{parents:[],children:[]});const l={ID:i,relationship:o};e.get(s).children.push(l)}),e}parseImages(){const e={},t={};if("Video"in ze.Objects){const n=ze.Objects.Video;for(const i in n){const s=n[i],o=parseInt(i);if(e[o]=s.RelativeFilename||s.Filename,"Content"in s){const a=s.Content instanceof ArrayBuffer&&s.Content.byteLength>0,l=typeof s.Content=="string"&&s.Content!=="";if(a||l){const c=this.parseImage(n[i]);t[s.RelativeFilename||s.Filename]=c}}}}for(const n in e){const i=e[n];t[i]!==void 0?e[n]=t[i]:e[n]=e[n].split("\\").pop()}return e}parseImage(e){const t=e.Content,n=e.RelativeFilename||e.Filename,i=n.slice(n.lastIndexOf(".")+1).toLowerCase();let s;switch(i){case"bmp":s="image/bmp";break;case"jpg":case"jpeg":s="image/jpeg";break;case"png":s="image/png";break;case"tif":s="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",n),s="image/tga";break;default:console.warn('FBXLoader: Image type "'+i+'" is not supported.');return}if(typeof t=="string")return"data:"+s+";base64,"+t;{const o=new Uint8Array(t);return window.URL.createObjectURL(new Blob([o],{type:s}))}}parseTextures(e){const t=new Map;if("Texture"in ze.Objects){const n=ze.Objects.Texture;for(const i in n){const s=this.parseTexture(n[i],e);t.set(parseInt(i),s)}}return t}parseTexture(e,t){const n=this.loadTexture(e,t);n.ID=e.id,n.name=e.attrName;const i=e.WrapModeU,s=e.WrapModeV,o=i!==void 0?i.value:0,a=s!==void 0?s.value:0;if(n.wrapS=o===0?lr:Tt,n.wrapT=a===0?lr:Tt,"Scaling"in e){const l=e.Scaling.value;n.repeat.x=l[0],n.repeat.y=l[1]}if("Translation"in e){const l=e.Translation.value;n.offset.x=l[0],n.offset.y=l[1]}return n}loadTexture(e,t){let n;const i=this.textureLoader.path,s=ut.get(e.id).children;s!==void 0&&s.length>0&&t[s[0].ID]!==void 0&&(n=t[s[0].ID],(n.indexOf("blob:")===0||n.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let o;const a=e.FileName.slice(-3).toLowerCase();if(a==="tga"){const l=this.manager.getHandler(".tga");l===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),o=new mt):(l.setPath(this.textureLoader.path),o=l.load(n))}else a==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),o=new mt):o=this.textureLoader.load(n);return this.textureLoader.setPath(i),o}parseMaterials(e){const t=new Map;if("Material"in ze.Objects){const n=ze.Objects.Material;for(const i in n){const s=this.parseMaterial(n[i],e);s!==null&&t.set(parseInt(i),s)}}return t}parseMaterial(e,t){const n=e.id,i=e.attrName;let s=e.ShadingModel;if(typeof s=="object"&&(s=s.value),!ut.has(n))return null;const o=this.parseParameters(e,t,n);let a;switch(s.toLowerCase()){case"phong":a=new oo;break;case"lambert":a=new Gh;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',s),a=new oo;break}return a.setValues(o),a.name=i,a}parseParameters(e,t,n){const i={};e.BumpFactor&&(i.bumpScale=e.BumpFactor.value),e.Diffuse?i.color=new ae().fromArray(e.Diffuse.value):e.DiffuseColor&&(e.DiffuseColor.type==="Color"||e.DiffuseColor.type==="ColorRGB")&&(i.color=new ae().fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(i.displacementScale=e.DisplacementFactor.value),e.Emissive?i.emissive=new ae().fromArray(e.Emissive.value):e.EmissiveColor&&(e.EmissiveColor.type==="Color"||e.EmissiveColor.type==="ColorRGB")&&(i.emissive=new ae().fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(i.opacity=parseFloat(e.Opacity.value)),i.opacity<1&&(i.transparent=!0),e.ReflectionFactor&&(i.reflectivity=e.ReflectionFactor.value),e.Shininess&&(i.shininess=e.Shininess.value),e.Specular?i.specular=new ae().fromArray(e.Specular.value):e.SpecularColor&&e.SpecularColor.type==="Color"&&(i.specular=new ae().fromArray(e.SpecularColor.value));const s=this;return ut.get(n).children.forEach(function(o){const a=o.relationship;switch(a){case"Bump":i.bumpMap=s.getTexture(t,o.ID);break;case"Maya|TEX_ao_map":i.aoMap=s.getTexture(t,o.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":i.map=s.getTexture(t,o.ID),i.map!==void 0&&(i.map.encoding=Ge);break;case"DisplacementColor":i.displacementMap=s.getTexture(t,o.ID);break;case"EmissiveColor":i.emissiveMap=s.getTexture(t,o.ID),i.emissiveMap!==void 0&&(i.emissiveMap.encoding=Ge);break;case"NormalMap":case"Maya|TEX_normal_map":i.normalMap=s.getTexture(t,o.ID);break;case"ReflectionColor":i.envMap=s.getTexture(t,o.ID),i.envMap!==void 0&&(i.envMap.mapping=us,i.envMap.encoding=Ge);break;case"SpecularColor":i.specularMap=s.getTexture(t,o.ID),i.specularMap!==void 0&&(i.specularMap.encoding=Ge);break;case"TransparentColor":case"TransparencyFactor":i.alphaMap=s.getTexture(t,o.ID),i.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",a);break}}),i}getTexture(e,t){return"LayeredTexture"in ze.Objects&&t in ze.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=ut.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in ze.Objects){const n=ze.Objects.Deformer;for(const i in n){const s=n[i],o=ut.get(parseInt(i));if(s.attrType==="Skin"){const a=this.parseSkeleton(o,n);a.ID=i,o.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),a.geometryID=o.parents[0].ID,e[i]=a}else if(s.attrType==="BlendShape"){const a={id:i};a.rawTargets=this.parseMorphTargets(o,n),a.id=i,o.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[i]=a}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const n=[];return e.children.forEach(function(i){const s=t[i.ID];if(s.attrType!=="Cluster")return;const o={ID:i.ID,indices:[],weights:[],transformLink:new be().fromArray(s.TransformLink.a)};"Indexes"in s&&(o.indices=s.Indexes.a,o.weights=s.Weights.a),n.push(o)}),{rawBones:n,bones:[]}}parseMorphTargets(e,t){const n=[];for(let i=0;i<e.children.length;i++){const s=e.children[i],o=t[s.ID],a={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if(o.attrType!=="BlendShapeChannel")return;a.geoID=ut.get(parseInt(s.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,n.push(a)}return n}parseScene(e,t,n){Bt=new _i;const i=this.parseModels(e.skeletons,t,n),s=ze.Objects.Model,o=this;i.forEach(function(l){const c=s[l.ID];o.setLookAtProperties(l,c),ut.get(l.ID).parents.forEach(function(h){const f=i.get(h.ID);f!==void 0&&f.add(l)}),l.parent===null&&Bt.add(l)}),this.bindSkeleton(e.skeletons,t,i),this.createAmbientLight(),Bt.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);const c=__(l.userData.transformData);l.applyMatrix4(c),l.updateWorldMatrix()}});const a=new tT().parse();Bt.children.length===1&&Bt.children[0].isGroup&&(Bt.children[0].animations=a,Bt=Bt.children[0]),Bt.animations=a}parseModels(e,t,n){const i=new Map,s=ze.Objects.Model;for(const o in s){const a=parseInt(o),l=s[o],c=ut.get(a);let u=this.buildSkeleton(c,e,a,l.attrName);if(!u){switch(l.attrType){case"Camera":u=this.createCamera(c);break;case"Light":u=this.createLight(c);break;case"Mesh":u=this.createMesh(c,t,n);break;case"NurbsCurve":u=this.createCurve(c,t);break;case"LimbNode":case"Root":u=new xo;break;case"Null":default:u=new _i;break}u.name=l.attrName?Be.sanitizeNodeName(l.attrName):"",u.ID=a}this.getTransformData(u,l),i.set(a,u)}return i}buildSkeleton(e,t,n,i){let s=null;return e.parents.forEach(function(o){for(const a in t){const l=t[a];l.rawBones.forEach(function(c,u){if(c.ID===o.ID){const h=s;s=new xo,s.matrixWorld.copy(c.transformLink),s.name=i?Be.sanitizeNodeName(i):"",s.ID=n,l.bones[u]=s,h!==null&&s.add(h)}})}}),s}createCamera(e){let t,n;if(e.children.forEach(function(i){const s=ze.Objects.NodeAttribute[i.ID];s!==void 0&&(n=s)}),n===void 0)t=new Xe;else{let i=0;n.CameraProjectionType!==void 0&&n.CameraProjectionType.value===1&&(i=1);let s=1;n.NearPlane!==void 0&&(s=n.NearPlane.value/1e3);let o=1e3;n.FarPlane!==void 0&&(o=n.FarPlane.value/1e3);let a=window.innerWidth,l=window.innerHeight;n.AspectWidth!==void 0&&n.AspectHeight!==void 0&&(a=n.AspectWidth.value,l=n.AspectHeight.value);const c=a/l;let u=45;n.FieldOfView!==void 0&&(u=n.FieldOfView.value);const h=n.FocalLength?n.FocalLength.value:null;switch(i){case 0:t=new bt(u,c,s,o),h!==null&&t.setFocalLength(h);break;case 1:t=new br(-a/2,a/2,l/2,-l/2,s,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+i+"."),t=new Xe;break}}return t}createLight(e){let t,n;if(e.children.forEach(function(i){const s=ze.Objects.NodeAttribute[i.ID];s!==void 0&&(n=s)}),n===void 0)t=new Xe;else{let i;n.LightType===void 0?i=0:i=n.LightType.value;let s=16777215;n.Color!==void 0&&(s=new ae().fromArray(n.Color.value));let o=n.Intensity===void 0?1:n.Intensity.value/100;n.CastLightOnObject!==void 0&&n.CastLightOnObject.value===0&&(o=0);let a=0;n.FarAttenuationEnd!==void 0&&(n.EnableFarAttenuation!==void 0&&n.EnableFarAttenuation.value===0?a=0:a=n.FarAttenuationEnd.value);const l=1;switch(i){case 0:t=new To(s,o,a,l);break;case 1:t=new zl(s,o);break;case 2:let c=Math.PI/3;n.InnerAngle!==void 0&&(c=bn.degToRad(n.InnerAngle.value));let u=0;n.OuterAngle!==void 0&&(u=bn.degToRad(n.OuterAngle.value),u=Math.max(u,1)),t=new Yh(s,o,a,c,u,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),t=new To(s,o);break}n.CastShadows!==void 0&&n.CastShadows.value===1&&(t.castShadow=!0)}return t}createMesh(e,t,n){let i,s=null,o=null;const a=[];return e.children.forEach(function(l){t.has(l.ID)&&(s=t.get(l.ID)),n.has(l.ID)&&a.push(n.get(l.ID))}),a.length>1?o=a:a.length>0?o=a[0]:(o=new oo({color:13421772}),a.push(o)),"color"in s.attributes&&a.forEach(function(l){l.vertexColors=!0}),s.FBX_Deformer?(i=new Rh(s,o),i.normalizeSkinWeights()):i=new wt(s,o),i}createCurve(e,t){const n=e.children.reduce(function(s,o){return t.has(o.ID)&&(s=t.get(o.ID)),s},null),i=new It({color:3342591,linewidth:1});return new ei(n,i)}getTransformData(e,t){const n={};"InheritType"in t&&(n.inheritType=parseInt(t.InheritType.value)),"RotationOrder"in t?n.eulerOrder=v_(t.RotationOrder.value):n.eulerOrder="ZYX","Lcl_Translation"in t&&(n.translation=t.Lcl_Translation.value),"PreRotation"in t&&(n.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(n.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(n.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(n.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(n.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(n.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(n.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(n.rotationPivot=t.RotationPivot.value),e.userData.transformData=n}setLookAtProperties(e,t){"LookAtProperty"in t&&ut.get(e.ID).children.forEach(function(i){if(i.relationship==="LookAtProperty"){const s=ze.Objects.Model[i.ID];if("Lcl_Translation"in s){const o=s.Lcl_Translation.value;e.target!==void 0?(e.target.position.fromArray(o),Bt.add(e.target)):e.lookAt(new A().fromArray(o))}}})}bindSkeleton(e,t,n){const i=this.parsePoseNodes();for(const s in e){const o=e[s];ut.get(parseInt(o.ID)).parents.forEach(function(l){if(t.has(l.ID)){const c=l.ID;ut.get(c).parents.forEach(function(h){n.has(h.ID)&&n.get(h.ID).bind(new ko(o.bones),i[h.ID])})}})}}parsePoseNodes(){const e={};if("Pose"in ze.Objects){const t=ze.Objects.Pose;for(const n in t)if(t[n].attrType==="BindPose"&&t[n].NbPoseNodes>0){const i=t[n].PoseNode;Array.isArray(i)?i.forEach(function(s){e[s.Node]=new be().fromArray(s.Matrix.a)}):e[i.Node]=new be().fromArray(i.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in ze&&"AmbientColor"in ze.GlobalSettings){const e=ze.GlobalSettings.AmbientColor.value,t=e[0],n=e[1],i=e[2];if(t!==0||n!==0||i!==0){const s=new ae(t,n,i);Bt.add(new Bl(s,1))}}}}class eT{parse(e){const t=new Map;if("Geometry"in ze.Objects){const n=ze.Objects.Geometry;for(const i in n){const s=ut.get(parseInt(i)),o=this.parseGeometry(s,n[i],e);t.set(parseInt(i),o)}}return t}parseGeometry(e,t,n){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,n);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,n){const i=n.skeletons,s=[],o=e.parents.map(function(h){return ze.Objects.Model[h.ID]});if(o.length===0)return;const a=e.children.reduce(function(h,f){return i[f.ID]!==void 0&&(h=i[f.ID]),h},null);e.children.forEach(function(h){n.morphTargets[h.ID]!==void 0&&s.push(n.morphTargets[h.ID])});const l=o[0],c={};"RotationOrder"in l&&(c.eulerOrder=v_(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);const u=__(c);return this.genGeometry(t,a,s,u)}genGeometry(e,t,n,i){const s=new Ce;e.attrName&&(s.name=e.attrName);const o=this.parseGeoNode(e,t),a=this.genBuffers(o),l=new ge(a.vertex,3);if(l.applyMatrix4(i),s.setAttribute("position",l),a.colors.length>0&&s.setAttribute("color",new ge(a.colors,3)),t&&(s.setAttribute("skinIndex",new Cl(a.weightsIndices,4)),s.setAttribute("skinWeight",new ge(a.vertexWeights,4)),s.FBX_Deformer=t),a.normal.length>0){const c=new Ot().getNormalMatrix(i),u=new ge(a.normal,3);u.applyNormalMatrix(c),s.setAttribute("normal",u)}if(a.uvs.forEach(function(c,u){let h="uv"+(u+1).toString();u===0&&(h="uv"),s.setAttribute(h,new ge(a.uvs[u],2))}),o.material&&o.material.mappingType!=="AllSame"){let c=a.materialIndex[0],u=0;if(a.materialIndex.forEach(function(h,f){h!==c&&(s.addGroup(u,f-u,c),c=h,u=f)}),s.groups.length>0){const h=s.groups[s.groups.length-1],f=h.start+h.count;f!==a.materialIndex.length&&s.addGroup(f,a.materialIndex.length-f,c)}s.groups.length===0&&s.addGroup(0,a.materialIndex.length,a.materialIndex[0])}return this.addMorphTargets(s,e,n,i),s}parseGeoNode(e,t){const n={};if(n.vertexPositions=e.Vertices!==void 0?e.Vertices.a:[],n.vertexIndices=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(n.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(n.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(n.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){n.uv=[];let i=0;for(;e.LayerElementUV[i];)e.LayerElementUV[i].UV&&n.uv.push(this.parseUVs(e.LayerElementUV[i])),i++}return n.weightTable={},t!==null&&(n.skeleton=t,t.rawBones.forEach(function(i,s){i.indices.forEach(function(o,a){n.weightTable[o]===void 0&&(n.weightTable[o]=[]),n.weightTable[o].push({id:s,weight:i.weights[a]})})})),n}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let n=0,i=0,s=!1,o=[],a=[],l=[],c=[],u=[],h=[];const f=this;return e.vertexIndices.forEach(function(d,p){let m,g=!1;d<0&&(d=d^-1,g=!0);let v=[],_=[];if(o.push(d*3,d*3+1,d*3+2),e.color){const y=Fa(p,n,d,e.color);l.push(y[0],y[1],y[2])}if(e.skeleton){if(e.weightTable[d]!==void 0&&e.weightTable[d].forEach(function(y){_.push(y.weight),v.push(y.id)}),_.length>4){s||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),s=!0);const y=[0,0,0,0],x=[0,0,0,0];_.forEach(function(w,M){let P=w,b=v[M];x.forEach(function(T,I,D){if(P>T){D[I]=P,P=T;const V=y[I];y[I]=b,b=V}})}),v=y,_=x}for(;_.length<4;)_.push(0),v.push(0);for(let y=0;y<4;++y)u.push(_[y]),h.push(v[y])}if(e.normal){const y=Fa(p,n,d,e.normal);a.push(y[0],y[1],y[2])}e.material&&e.material.mappingType!=="AllSame"&&(m=Fa(p,n,d,e.material)[0]),e.uv&&e.uv.forEach(function(y,x){const w=Fa(p,n,d,y);c[x]===void 0&&(c[x]=[]),c[x].push(w[0]),c[x].push(w[1])}),i++,g&&(f.genFace(t,e,o,m,a,l,c,u,h,i),n++,i=0,o=[],a=[],l=[],c=[],u=[],h=[])}),t}genFace(e,t,n,i,s,o,a,l,c,u){for(let h=2;h<u;h++)e.vertex.push(t.vertexPositions[n[0]]),e.vertex.push(t.vertexPositions[n[1]]),e.vertex.push(t.vertexPositions[n[2]]),e.vertex.push(t.vertexPositions[n[(h-1)*3]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+1]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+2]]),e.vertex.push(t.vertexPositions[n[h*3]]),e.vertex.push(t.vertexPositions[n[h*3+1]]),e.vertex.push(t.vertexPositions[n[h*3+2]]),t.skeleton&&(e.vertexWeights.push(l[0]),e.vertexWeights.push(l[1]),e.vertexWeights.push(l[2]),e.vertexWeights.push(l[3]),e.vertexWeights.push(l[(h-1)*4]),e.vertexWeights.push(l[(h-1)*4+1]),e.vertexWeights.push(l[(h-1)*4+2]),e.vertexWeights.push(l[(h-1)*4+3]),e.vertexWeights.push(l[h*4]),e.vertexWeights.push(l[h*4+1]),e.vertexWeights.push(l[h*4+2]),e.vertexWeights.push(l[h*4+3]),e.weightsIndices.push(c[0]),e.weightsIndices.push(c[1]),e.weightsIndices.push(c[2]),e.weightsIndices.push(c[3]),e.weightsIndices.push(c[(h-1)*4]),e.weightsIndices.push(c[(h-1)*4+1]),e.weightsIndices.push(c[(h-1)*4+2]),e.weightsIndices.push(c[(h-1)*4+3]),e.weightsIndices.push(c[h*4]),e.weightsIndices.push(c[h*4+1]),e.weightsIndices.push(c[h*4+2]),e.weightsIndices.push(c[h*4+3])),t.color&&(e.colors.push(o[0]),e.colors.push(o[1]),e.colors.push(o[2]),e.colors.push(o[(h-1)*3]),e.colors.push(o[(h-1)*3+1]),e.colors.push(o[(h-1)*3+2]),e.colors.push(o[h*3]),e.colors.push(o[h*3+1]),e.colors.push(o[h*3+2])),t.material&&t.material.mappingType!=="AllSame"&&(e.materialIndex.push(i),e.materialIndex.push(i),e.materialIndex.push(i)),t.normal&&(e.normal.push(s[0]),e.normal.push(s[1]),e.normal.push(s[2]),e.normal.push(s[(h-1)*3]),e.normal.push(s[(h-1)*3+1]),e.normal.push(s[(h-1)*3+2]),e.normal.push(s[h*3]),e.normal.push(s[h*3+1]),e.normal.push(s[h*3+2])),t.uv&&t.uv.forEach(function(f,d){e.uvs[d]===void 0&&(e.uvs[d]=[]),e.uvs[d].push(a[d][0]),e.uvs[d].push(a[d][1]),e.uvs[d].push(a[d][(h-1)*2]),e.uvs[d].push(a[d][(h-1)*2+1]),e.uvs[d].push(a[d][h*2]),e.uvs[d].push(a[d][h*2+1])})}addMorphTargets(e,t,n,i){if(n.length===0)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const s=this;n.forEach(function(o){o.rawTargets.forEach(function(a){const l=ze.Objects.Geometry[a.geoID];l!==void 0&&s.genMorphGeometry(e,t,l,i,a.name)})})}genMorphGeometry(e,t,n,i,s){const o=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],a=n.Vertices!==void 0?n.Vertices.a:[],l=n.Indexes!==void 0?n.Indexes.a:[],c=e.attributes.position.count*3,u=new Float32Array(c);for(let p=0;p<l.length;p++){const m=l[p]*3;u[m]=a[p*3],u[m+1]=a[p*3+1],u[m+2]=a[p*3+2]}const h={vertexIndices:o,vertexPositions:u},f=this.genBuffers(h),d=new ge(f.vertex,3);d.name=s||n.attrName,d.applyMatrix4(i),e.morphAttributes.position.push(d)}parseNormals(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Normals.a;let s=[];return n==="IndexToDirect"&&("NormalIndex"in e?s=e.NormalIndex.a:"NormalsIndex"in e&&(s=e.NormalsIndex.a)),{dataSize:3,buffer:i,indices:s,mappingType:t,referenceType:n}}parseUVs(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.UV.a;let s=[];return n==="IndexToDirect"&&(s=e.UVIndex.a),{dataSize:2,buffer:i,indices:s,mappingType:t,referenceType:n}}parseVertexColors(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Colors.a;let s=[];return n==="IndexToDirect"&&(s=e.ColorIndex.a),{dataSize:4,buffer:i,indices:s,mappingType:t,referenceType:n}}parseMaterialIndices(e){const t=e.MappingInformationType,n=e.ReferenceInformationType;if(t==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};const i=e.Materials.a,s=[];for(let o=0;o<i.length;++o)s.push(o);return{dataSize:1,buffer:i,indices:s,mappingType:t,referenceType:n}}parseNurbsGeometry(e){if(Ep===void 0)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new Ce;const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new Ce;const n=t-1,i=e.KnotVector.a,s=[],o=e.Points.a;for(let h=0,f=o.length;h<f;h+=4)s.push(new He().fromArray(o,h));let a,l;if(e.Form==="Closed")s.push(s[0]);else if(e.Form==="Periodic"){a=n,l=i.length-1-a;for(let h=0;h<n;++h)s.push(s[h])}const u=new Ep(n,i,s,a,l).getPoints(s.length*12);return new Ce().setFromPoints(u)}}class tT{parse(){const e=[],t=this.parseClips();if(t!==void 0)for(const n in t){const i=t[n],s=this.addClip(i);e.push(s)}return e}parseClips(){if(ze.Objects.AnimationCurve===void 0)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=ze.Objects.AnimationCurveNode,t=new Map;for(const n in e){const i=e[n];if(i.attrName.match(/S|R|T|DeformPercent/)!==null){const s={id:i.id,attr:i.attrName,curves:{}};t.set(s.id,s)}}return t}parseAnimationCurves(e){const t=ze.Objects.AnimationCurve;for(const n in t){const i={id:t[n].id,times:t[n].KeyTime.a.map(oT),values:t[n].KeyValueFloat.a},s=ut.get(i.id);if(s!==void 0){const o=s.parents[0].ID,a=s.parents[0].relationship;a.match(/X/)?e.get(o).curves.x=i:a.match(/Y/)?e.get(o).curves.y=i:a.match(/Z/)?e.get(o).curves.z=i:a.match(/d|DeformPercent/)&&e.has(o)&&(e.get(o).curves.morph=i)}}}parseAnimationLayers(e){const t=ze.Objects.AnimationLayer,n=new Map;for(const i in t){const s=[],o=ut.get(parseInt(i));o!==void 0&&(o.children.forEach(function(l,c){if(e.has(l.ID)){const u=e.get(l.ID);if(u.curves.x!==void 0||u.curves.y!==void 0||u.curves.z!==void 0){if(s[c]===void 0){const h=ut.get(l.ID).parents.filter(function(f){return f.relationship!==void 0})[0].ID;if(h!==void 0){const f=ze.Objects.Model[h.toString()];if(f===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}const d={modelName:f.attrName?Be.sanitizeNodeName(f.attrName):"",ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};Bt.traverse(function(p){p.ID===f.id&&(d.transform=p.matrix,p.userData.transformData&&(d.eulerOrder=p.userData.transformData.eulerOrder))}),d.transform||(d.transform=new be),"PreRotation"in f&&(d.preRotation=f.PreRotation.value),"PostRotation"in f&&(d.postRotation=f.PostRotation.value),s[c]=d}}s[c]&&(s[c][u.attr]=u)}else if(u.curves.morph!==void 0){if(s[c]===void 0){const h=ut.get(l.ID).parents.filter(function(v){return v.relationship!==void 0})[0].ID,f=ut.get(h).parents[0].ID,d=ut.get(f).parents[0].ID,p=ut.get(d).parents[0].ID,m=ze.Objects.Model[p],g={modelName:m.attrName?Be.sanitizeNodeName(m.attrName):"",morphName:ze.Objects.Deformer[h].attrName};s[c]=g}s[c][u.attr]=u}}}),n.set(parseInt(i),s))}return n}parseAnimStacks(e){const t=ze.Objects.AnimationStack,n={};for(const i in t){const s=ut.get(parseInt(i)).children;s.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const o=e.get(s[0].ID);n[i]={name:t[i].attrName,layer:o}}return n}addClip(e){let t=[];const n=this;return e.layer.forEach(function(i){t=t.concat(n.generateTracks(i))}),new mr(e.name,-1,t)}generateTracks(e){const t=[];let n=new A,i=new yt,s=new A;if(e.transform&&e.transform.decompose(n,i,s),n=n.toArray(),i=new wn().setFromQuaternion(i,e.eulerOrder).toArray(),s=s.toArray(),e.T!==void 0&&Object.keys(e.T.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.T.curves,n,"position");o!==void 0&&t.push(o)}if(e.R!==void 0&&Object.keys(e.R.curves).length>0){const o=this.generateRotationTrack(e.modelName,e.R.curves,i,e.preRotation,e.postRotation,e.eulerOrder);o!==void 0&&t.push(o)}if(e.S!==void 0&&Object.keys(e.S.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.S.curves,s,"scale");o!==void 0&&t.push(o)}if(e.DeformPercent!==void 0){const o=this.generateMorphTrack(e);o!==void 0&&t.push(o)}return t}generateVectorTrack(e,t,n,i){const s=this.getTimesForAllAxes(t),o=this.getKeyframeTrackValues(s,t,n);return new Es(e+"."+i,s,o)}generateRotationTrack(e,t,n,i,s,o){t.x!==void 0&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(bn.degToRad)),t.y!==void 0&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(bn.degToRad)),t.z!==void 0&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(bn.degToRad));const a=this.getTimesForAllAxes(t),l=this.getKeyframeTrackValues(a,t,n);i!==void 0&&(i=i.map(bn.degToRad),i.push(o),i=new wn().fromArray(i),i=new yt().setFromEuler(i)),s!==void 0&&(s=s.map(bn.degToRad),s.push(o),s=new wn().fromArray(s),s=new yt().setFromEuler(s).invert());const c=new yt,u=new wn,h=[];for(let f=0;f<l.length;f+=3)u.set(l[f],l[f+1],l[f+2],o),c.setFromEuler(u),i!==void 0&&c.premultiply(i),s!==void 0&&c.multiply(s),c.toArray(h,f/3*4);return new Mr(e+".quaternion",a,h)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,n=t.values.map(function(s){return s/100}),i=Bt.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new Ts(e.modelName+".morphTargetInfluences["+i+"]",t.times,n)}getTimesForAllAxes(e){let t=[];if(e.x!==void 0&&(t=t.concat(e.x.times)),e.y!==void 0&&(t=t.concat(e.y.times)),e.z!==void 0&&(t=t.concat(e.z.times)),t=t.sort(function(n,i){return n-i}),t.length>1){let n=1,i=t[0];for(let s=1;s<t.length;s++){const o=t[s];o!==i&&(t[n]=o,i=o,n++)}t=t.slice(0,n)}return t}getKeyframeTrackValues(e,t,n){const i=n,s=[];let o=-1,a=-1,l=-1;return e.forEach(function(c){if(t.x&&(o=t.x.times.indexOf(c)),t.y&&(a=t.y.times.indexOf(c)),t.z&&(l=t.z.times.indexOf(c)),o!==-1){const u=t.x.values[o];s.push(u),i[0]=u}else s.push(i[0]);if(a!==-1){const u=t.y.values[a];s.push(u),i[1]=u}else s.push(i[1]);if(l!==-1){const u=t.z.values[l];s.push(u),i[2]=u}else s.push(i[2])}),s}interpolateRotations(e){for(let t=1;t<e.values.length;t++){const n=e.values[t-1],i=e.values[t]-n,s=Math.abs(i);if(s>=180){const o=s/180,a=i/o;let l=n+a;const c=e.times[t-1],h=(e.times[t]-c)/o;let f=c+h;const d=[],p=[];for(;f<e.times[t];)d.push(f),f+=h,p.push(l),l+=a;e.times=Lp(e.times,t,d),e.values=Lp(e.values,t,p)}}}}class nT{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new g_,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,n=e.split(/[\r\n]+/);return n.forEach(function(i,s){const o=i.match(/^[\s\t]*;/),a=i.match(/^[\s\t]*$/);if(o||a)return;const l=i.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),c=i.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),u=i.match("^\\t{"+(t.currentIndent-1)+"}}");l?t.parseNodeBegin(i,l):c?t.parseNodeProperty(i,c,n[++s]):u?t.popStack():i.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(i)}),this.allNodes}parseNodeBegin(e,t){const n=t[1].trim().replace(/^"/,"").replace(/"$/,""),i=t[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),s={name:n},o=this.parseNodeAttr(i),a=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(n,s):n in a?(n==="PoseNode"?a.PoseNode.push(s):a[n].id!==void 0&&(a[n]={},a[n][a[n].id]=a[n]),o.id!==""&&(a[n][o.id]=s)):typeof o.id=="number"?(a[n]={},a[n][o.id]=s):n!=="Properties70"&&(n==="PoseNode"?a[n]=[s]:a[n]=s),typeof o.id=="number"&&(s.id=o.id),o.name!==""&&(s.attrName=o.name),o.type!==""&&(s.attrType=o.type),this.pushStack(s)}parseNodeAttr(e){let t=e[0];e[0]!==""&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let n="",i="";return e.length>1&&(n=e[1].replace(/^(\w+)::/,""),i=e[2]),{id:t,name:n,type:i}}parseNodeProperty(e,t,n){let i=t[1].replace(/^"/,"").replace(/"$/,"").trim(),s=t[2].replace(/^"/,"").replace(/"$/,"").trim();i==="Content"&&s===","&&(s=n.replace(/"/g,"").replace(/,$/,"").trim());const o=this.getCurrentNode();if(o.name==="Properties70"){this.parseNodeSpecialProperty(e,i,s);return}if(i==="C"){const l=s.split(",").slice(1),c=parseInt(l[0]),u=parseInt(l[1]);let h=s.split(",").slice(3);h=h.map(function(f){return f.trim().replace(/^"/,"")}),i="connections",s=[c,u],lT(s,h),o[i]===void 0&&(o[i]=[])}i==="Node"&&(o.id=s),i in o&&Array.isArray(o[i])?o[i].push(s):i!=="a"?o[i]=s:o.a=s,this.setCurrentProp(o,i),i==="a"&&s.slice(-1)!==","&&(o.a=Gc(s))}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,e.slice(-1)!==","&&(t.a=Gc(t.a))}parseNodeSpecialProperty(e,t,n){const i=n.split('",').map(function(u){return u.trim().replace(/^\"/,"").replace(/\s/,"_")}),s=i[0],o=i[1],a=i[2],l=i[3];let c=i[4];switch(o){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=Gc(c);break}this.getPrevNode()[s]={type:o,type2:a,flag:l,value:c},this.setCurrentProp(this.getPrevNode(),s)}}class iT{parse(e){const t=new Cp(e);t.skip(23);const n=t.getUint32();if(n<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+n);const i=new g_;for(;!this.endOfContent(t);){const s=this.parseNode(t,n);s!==null&&i.add(s.name,s)}return i}endOfContent(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const n={},i=t>=7500?e.getUint64():e.getUint32(),s=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const o=e.getUint8(),a=e.getString(o);if(i===0)return null;const l=[];for(let f=0;f<s;f++)l.push(this.parseProperty(e));const c=l.length>0?l[0]:"",u=l.length>1?l[1]:"",h=l.length>2?l[2]:"";for(n.singleProperty=s===1&&e.getOffset()===i;i>e.getOffset();){const f=this.parseNode(e,t);f!==null&&this.parseSubNode(a,n,f)}return n.propertyList=l,typeof c=="number"&&(n.id=c),u!==""&&(n.attrName=u),h!==""&&(n.attrType=h),a!==""&&(n.name=a),n}parseSubNode(e,t,n){if(n.singleProperty===!0){const i=n.propertyList[0];Array.isArray(i)?(t[n.name]=n,n.a=i):t[n.name]=i}else if(e==="Connections"&&n.name==="C"){const i=[];n.propertyList.forEach(function(s,o){o!==0&&i.push(s)}),t.connections===void 0&&(t.connections=[]),t.connections.push(i)}else if(n.name==="Properties70")Object.keys(n).forEach(function(s){t[s]=n[s]});else if(e==="Properties70"&&n.name==="P"){let i=n.propertyList[0],s=n.propertyList[1];const o=n.propertyList[2],a=n.propertyList[3];let l;i.indexOf("Lcl ")===0&&(i=i.replace("Lcl ","Lcl_")),s.indexOf("Lcl ")===0&&(s=s.replace("Lcl ","Lcl_")),s==="Color"||s==="ColorRGB"||s==="Vector"||s==="Vector3D"||s.indexOf("Lcl_")===0?l=[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:l=n.propertyList[4],t[i]={type:s,type2:o,flag:a,value:l}}else t[n.name]===void 0?typeof n.id=="number"?(t[n.name]={},t[n.name][n.id]=n):t[n.name]=n:n.name==="PoseNode"?(Array.isArray(t[n.name])||(t[n.name]=[t[n.name]]),t[n.name].push(n)):t[n.name][n.id]===void 0&&(t[n.name][n.id]=n)}parseProperty(e){const t=e.getString(1);let n;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return n=e.getUint32(),e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const i=e.getUint32(),s=e.getUint32(),o=e.getUint32();if(s===0)switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}typeof WA>"u"&&console.error("THREE.FBXLoader: External library fflate.min.js required.");const a=Po(new Uint8Array(e.getArrayBuffer(o))),l=new Cp(a.buffer);switch(t){case"b":case"c":return l.getBooleanArray(i);case"d":return l.getFloat64Array(i);case"f":return l.getFloat32Array(i);case"i":return l.getInt32Array(i);case"l":return l.getInt64Array(i)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}class Cp{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=t!==void 0?t:!0}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(e){const t=[];for(let n=0;n<e;n++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t&2147483648?(t=~t&4294967295,e=~e&4294967295,e===4294967295&&(t=t+1&4294967295),e=e+1&4294967295,-(t*4294967296+e)):t*4294967296+e}getInt64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t*4294967296+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){let t=[];for(let i=0;i<e;i++)t[i]=this.getUint8();const n=t.indexOf(0);return n>=0&&(t=t.slice(0,n)),Cs.decodeText(new Uint8Array(t))}}class g_{add(e,t){this[e]=t}}function rT(r){const e="Kaydara FBX Binary  \0";return r.byteLength>=e.length&&e===y_(r,0,e.length)}function sT(r){const e=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let t=0;function n(i){const s=r[i-1];return r=r.slice(t+i),t++,s}for(let i=0;i<e.length;++i)if(n(1)===e[i])return!1;return!0}function Pp(r){const e=/FBXVersion: (\d+)/,t=r.match(e);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function oT(r){return r/46186158e3}const aT=[];function Fa(r,e,t,n){let i;switch(n.mappingType){case"ByPolygonVertex":i=r;break;case"ByPolygon":i=e;break;case"ByVertice":i=t;break;case"AllSame":i=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}n.referenceType==="IndexToDirect"&&(i=n.indices[i]);const s=i*n.dataSize,o=s+n.dataSize;return cT(aT,n.buffer,s,o)}const Vc=new wn,jr=new A;function __(r){const e=new be,t=new be,n=new be,i=new be,s=new be,o=new be,a=new be,l=new be,c=new be,u=new be,h=new be,f=new be,d=r.inheritType?r.inheritType:0;if(r.translation&&e.setPosition(jr.fromArray(r.translation)),r.preRotation){const I=r.preRotation.map(bn.degToRad);I.push(r.eulerOrder),t.makeRotationFromEuler(Vc.fromArray(I))}if(r.rotation){const I=r.rotation.map(bn.degToRad);I.push(r.eulerOrder),n.makeRotationFromEuler(Vc.fromArray(I))}if(r.postRotation){const I=r.postRotation.map(bn.degToRad);I.push(r.eulerOrder),i.makeRotationFromEuler(Vc.fromArray(I)),i.invert()}r.scale&&s.scale(jr.fromArray(r.scale)),r.scalingOffset&&a.setPosition(jr.fromArray(r.scalingOffset)),r.scalingPivot&&o.setPosition(jr.fromArray(r.scalingPivot)),r.rotationOffset&&l.setPosition(jr.fromArray(r.rotationOffset)),r.rotationPivot&&c.setPosition(jr.fromArray(r.rotationPivot)),r.parentMatrixWorld&&(h.copy(r.parentMatrix),u.copy(r.parentMatrixWorld));const p=t.clone().multiply(n).multiply(i),m=new be;m.extractRotation(u);const g=new be;g.copyPosition(u);const v=g.clone().invert().multiply(u),_=m.clone().invert().multiply(v),y=s,x=new be;if(d===0)x.copy(m).multiply(p).multiply(_).multiply(y);else if(d===1)x.copy(m).multiply(_).multiply(p).multiply(y);else{const D=new be().scale(new A().setFromMatrixScale(h)).clone().invert(),V=_.clone().multiply(D);x.copy(m).multiply(p).multiply(V).multiply(y)}const w=c.clone().invert(),M=o.clone().invert();let P=e.clone().multiply(l).multiply(c).multiply(t).multiply(n).multiply(i).multiply(w).multiply(a).multiply(o).multiply(s).multiply(M);const b=new be().copyPosition(P),T=u.clone().multiply(b);return f.copyPosition(T),P=f.clone().multiply(x),P.premultiply(u.invert()),P}function v_(r){r=r||0;const e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return r===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[r]}function Gc(r){return r.split(",").map(function(t){return parseFloat(t)})}function y_(r,e,t){return e===void 0&&(e=0),t===void 0&&(t=r.byteLength),Cs.decodeText(new Uint8Array(r,e,t))}function lT(r,e){for(let t=0,n=r.length,i=e.length;t<i;t++,n++)r[n]=e[t]}function cT(r,e,t,n){for(let i=t,s=0;i<n;i++,s++)r[s]=e[i];return r}function Lp(r,e,t){return r.slice(0,e).concat(t).concat(r.slice(e))}const x_=r=>r&&new Promise(e=>{new KA().load(r,e)}),b_=r=>r&&new Promise(e=>{new Ar().load(r,e)}),uT=["px.png","nx.png","py.png","ny.png","pz.png","nz.png"],hT=r=>r&&new Promise(e=>{new b0().setPath(`${r}/`).load(uT,e)}),fT=["c100007_01","c100007_05","c100007_09","c100034_01","c100035_01","c100036_01","c100037_01","c100041_01"],dT=async r=>await(await fetch(r)).json(),Wl=async r=>(await dT(r)).data,pT=(...r)=>e=>r.reduce((t,n)=>n(t),e),mT=r=>[...new Set(r)],Yn=r=>r==="false"?!1:!!r,w_=(r,e,t)=>{if(!e.length)return;const n=e.pop(),i=e.reduce((s,o)=>s==null?void 0:s[o],r);i&&(i[n]=t)};function pf(r){return!!/[0-9A-Fa-f]{6}/.test(r)}function Ja(r){return pf(r)&&!r.startsWith("#")?new ae(`#${r}`):new ae(r)}async function gT(r=100){return await new Promise(e=>setTimeout(e,r))}function M_(r,e="="){const[t,...n]=r.split(e),i=n.join(e);return[t,i]}const _T=r=>r.startsWith("w302"),Ip=([r,...e])=>`${r.toUpperCase()}${e.join("")}`;function vT(r){var t;return r==="smith"?"dragon":r.endsWith("h")?"story":fT.includes(r)?"spAdventurer":(t={c:"adventurer",b:"boss",d:"dragon",e:"enemy",h:"high boss",o:"object",r:"raid boss",w:"weapon"}[r[0]])!=null?t:"other"}function yT(r=UT){const e=new Ph(r);return e.outputEncoding=Ge,e}function xT(r={}){const{fov:e,aspect:t,near:n,far:i}={...GT,...r};return new bt(e,t,n,i)}async function bT(r){if(r.startsWith("img:")){const e=r.replace("img:",""),t=await b_(e);return t.encoding=Ge,t.center.set(.5,0),t}if(r.startsWith("sky:")){const e=r.replace("sky:",""),t=await hT(e);return t.encoding=Ge,t}if(r==="transparent")return null;if(pf(r)){const e=r.startsWith("#")?r:`#${r}`;return new ae(e)}}function wT(r){var e,t,n,i;(t=(e=r.map)==null?void 0:e.dispose)==null||t.call(e),(i=(n=r.userData.backupMap)==null?void 0:n.dispose)==null||i.call(n),r.dispose()}const S_=r=>{const e=new Ar().load(r);return e.encoding=Ge,e};function MT(r){const e=[],t=[];return r.traverse(n=>{n.isMesh&&e.push(n),n.isBone&&t.push(n)}),[e,t]}function ST(r){var t,n;if(!r)return;[r.material].flat().forEach(i=>{var s,o,a,l,c,u;(o=(s=i.map)==null?void 0:s.dispose)==null||o.call(s),(c=(l=(a=i.userData)==null?void 0:a.backupMap)==null?void 0:l.dispose)==null||c.call(l),(u=i.dispose)==null||u.call(i)}),(n=(t=r.geometry)==null?void 0:t.dispose)==null||n.call(t)}const AT=()=>{const r=new Date,e=r.toDateString().replaceAll(" ","_"),t=r.toLocaleTimeString().replaceAll(":","-").replaceAll(" ","");return`${e}_${t}`},A_=r=>r?r.split("/").reduce((t,n)=>{const[i,s]=n.split("=");return i&&s&&(t[i]=s),t},{}):{},TT=`
varying vec3 vViewPosition;

struct BlinnPhongMaterial {

	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;

};

void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;

}

void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong

#define Material_LightProbeLOD( material )	(0)
`,ET=`
#ifdef USE_MATCAP

	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks
	vec4 matcapColor = texture2D( matcap, uv );

	#ifdef MATCAP_BLENDING_MULTIPLY

		outgoingLight *= matcapColor.rgb;

	#elif defined( MATCAP_BLENDING_ADD )

		outgoingLight += matcapColor.rgb;

	#endif

#endif
`,Oa={defines:{TOON:!0,MATCAP:!0,MATCAP_BLENDING_ADD:!0},uniforms:Oo.merge([Pt.toon.uniforms,Pt.phong.uniforms,Pt.matcap.uniforms]),vertexShader:Pt.phong.vertexShader,fragmentShader:Pt.phong.fragmentShader.replace("#include <common>",`
					#ifdef USE_MATCAP
						uniform sampler2D matcap;
					#endif

					#include <common>
				`).replace("#include <envmap_common_pars_fragment>",`
					#include <gradientmap_pars_fragment>
					#include <envmap_common_pars_fragment>
				`).replace("#include <lights_phong_pars_fragment>",TT).replace("#include <envmap_fragment>",`
					#include <envmap_fragment>
					${ET}
				`)};class T_ extends Nt{constructor(e){super(),this._matcapCombine=ll,this.emissiveIntensity=1,this.normalMapType=Ci,this.combine=ar,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.lights=!0,this.vertexShader=Oa.vertexShader,this.fragmentShader=Oa.fragmentShader,this.defines=Object.assign({},Oa.defines),Object.defineProperty(this,"matcapCombine",{get:function(){return this._matcapCombine},set:function(n){switch(this._matcapCombine=n,n){case ar:this.defines.MATCAP_BLENDING_MULTIPLY=!0,delete this.defines.MATCAP_BLENDING_ADD;break;default:case ll:this.defines.MATCAP_BLENDING_ADD=!0,delete this.defines.MATCAP_BLENDING_MULTIPLY;break}}}),this.uniforms=Oo.clone(Oa.uniforms);const t=["specular","shininess","opacity","diffuse","map","matcap","gradientMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacemantBias","displacemantMap","displacemantScale","specularMap","alphaMap","envMap","reflectivity","refractionRatio"];for(const n of t)Object.defineProperty(this,n,{get:function(){return this.uniforms[n].value},set:function(i){this.uniforms[n].value=i}});Object.defineProperty(this,"color",Object.getOwnPropertyDescriptor(this,"diffuse")),this.setValues(e)}copy(e){return super.copy(e),this.matcapCombine=e.matcapCombine,this.emissiveIntensity=e.emissiveIntensity,this.normalMapType=e.normalMapType,this.combine=e.combine,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}T_.prototype.isMMDToonMaterial=!0;const CT=["color","emissive","specular"],PT=["wireframe","metalness","opacity","roughness","shininess","transparent","emissiveIntensity","transmission","thickness","ior"],E_=["type","flatShading","showTexture","gradientMap","matcap"],LT=[...CT,...PT,...E_],IT=["transparent","opacity","wireframe","showTexture","color"],RT={Basic:[],Toon:["emissive","emissiveIntensity","gradientMap"],Lambert:["emissive","emissiveIntensity"],Phong:["emissive","emissiveIntensity","specular","shininess","flatShading"],Standard:["emissive","emissiveIntensity","metalness","roughness","flatShading"],Physical:["emissive","emissiveIntensity","metalness","roughness","flatShading","transmission","thickness","ior"],Matcap:["flatShading","matcap"],MMDToon:["emissive","emissiveIntensity","specular","shininess","matcap","gradientMap","flatShading"]},jt=r=>`${r}`,Hc=r=>pf(r)?`${r.startsWith("#")?"":"#"}${r}`:r,DT=r=>Array.isArray(r)?r.join(","):r,mf={wireframe:{name:"Wireframe",type:"boolean",default:!1,valueMap:Yn,toString:jt},showTexture:{name:"Texture",type:"boolean",default:!0,valueMap:Yn,toString:jt},transparent:{name:"Transparent",type:"boolean",default:!1,valueMap:Yn,toString:jt},flatShading:{name:"Flat Shading",type:"boolean",default:!1,valueMap:Yn,toString:jt},color:{name:"Color",type:"color",default:"#ffffff",valueMap:Ja,toString:Hc},emissive:{name:"Emissive",type:"color",default:"#000000",valueMap:Ja,toString:Hc},opacity:{name:"Opacity",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:jt},emissiveIntensity:{name:"Emissive Intensity",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:jt},specular:{name:"Specular",type:"color",default:"#111111",valueMap:Ja,toString:Hc},metalness:{name:"Metalness",type:"percentage",default:0,min:0,max:1,valueMap:parseFloat,toString:jt},roughness:{name:"Roughness",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:jt},shininess:{name:"Shininess",type:"number",default:30,min:1,max:100,valueMap:parseFloat,toString:jt},gradientMap:{name:"Gradient Map",type:"select",default:"none",valueMap:C_,toString:DT},matcap:{name:"Matcap",type:"select",default:"matcap_fresnel.jpg",valueMap:P_,toString:jt},transmission:{name:"Transmission",type:"number",default:1,min:0,max:1,valueMap:parseFloat,toString:jt},thickness:{name:"Thickness",type:"number",default:.01,min:0,max:10,valueMap:parseFloat,toString:jt},ior:{name:"Index-of-refraction",type:"number",default:1.5,min:1,max:2.333,valueMap:parseFloat,toString:jt}},FT=Object.fromEntries(Object.entries(mf).map(([r,{default:e}])=>[r,e])),Xi={...FT,type:"Basic"},OT=Object.fromEntries(Object.entries(mf).map(([r,{valueMap:e}])=>[r,e])),NT=Object.fromEntries(Object.entries(mf).map(([r,{toString:e}])=>[r,e])),Wc=r=>[...IT,...RT[r]],kT=(r,e={})=>{if(r==="MMDToon")return new T_(e);const t=`Mesh${r}Material`;return new D0[t](e)},Rp=(r,{matType:e="Basic",texturePath:t="",force:n=!1}={})=>{r.forEach(i=>{const s=[i.material].flat(),o=Array.isArray(i.material);if(!n&&!t){const a=`isMesh${e}Material`;if(!s.some(c=>!c[a]))return}s.forEach((a,l)=>{var h,f,d,p;const c=t?new Ar().load(t):s[l].map;t&&(c.encoding=Ge);const u=kT(e);if(u.name=a.name,u.map=c,u.userData.backupMap=a.userData.backupMap,t&&((f=(h=a.map)==null?void 0:h.dispose)==null||f.call(h),(p=(d=a.userData.backupMap)==null?void 0:d.dispose)==null||p.call(d)),a.dispose(),o){i.material[l]=u;return}i.material=u})})},zT=r=>Array.isArray(r)?r:r.split(",").map(e=>parseInt(e));function C_(r){const e=zT(r),t=e.length;if(t<2)return null;const n=Uint8Array.from(e),i=new ir(n,t,1,xh);return i.minFilter=i.magFilter=ht,i.generateMipmaps=!1,i}const BT=r=>r.includes("/")||r.includes(":")?r:`${SA}/${r}`;function P_(r){const e=BT(r);return e?S_(e):null}const UT={alpha:!0,antialias:!0},VT="#cccccc",GT={type:"Perspective",fov:45,aspect:1,far:300,near:.01},HT="c100001_01",Jr={enabled:!0,size:5,color:"#000000",opacity:1},WT={noBackground:!0,fileName:"screenshot",frameRate:30},XT={frameRate:30,fileName:"ani",appendDate:!0},Dp=1,Xu=30,$T={directional:{color:"#ffffff",intensity:.8,position:[1,0,2]},ambient:{color:"#444444",intensity:1},point:{color:"#ffffff",intensity:1}},Xc={"No Mapping":Sn,Linear:ph,Reinhard:mh,Cineon:gh,"ACES Filmic":_h},Ho={addEventListener(r,e){var n,i;if(!e)return;(n=this._listeners)!=null||(this._listeners={});const t=this._listeners;return r=r.toLowerCase(),(i=t[r])!=null||(t[r]=[]),t[r].includes(e)||t[r].push(e),e},hasEventListener(r,e){var t,n;return r=r.toLowerCase(),!!((n=(t=this._listeners)==null?void 0:t[r])!=null&&n.includes(e))},removeEventListener(r,e){var i;r=r.toLowerCase();const t=(i=this._listeners)==null?void 0:i[r];if(!t)return;const n=t.indexOf(e);n!==-1&&t.splice(n,1)},dispatchEvent(r){var i,s;const e=(i=r.type)==null?void 0:i.toLowerCase(),t=(s=this._listeners)==null?void 0:s[e];if(!t)return;r.target=this,[...t].forEach(o=>o.call(this,r))},addCountedEventListener(r,e,t=1){const n=this;function i(s){e.call(n,s),t--,t===0&&n.removeEventListener(r,i)}this.addEventListener(r,i)}},qT={face1:[2,1],face2:[0,0],face3:[1,0],face4:[2,0],face5:[3,0],face6:[0,-1],face7:[1,-1],face8:[2,-1],face9:[3,-1]},L_={},jT=async()=>{const r=await Wl(`${Hl}/face-offset.json`);Object.assign(L_,r)},Fp=r=>L_[r]||[0,0],$u={},YT=async()=>{const r=await Wl(`${Hl}/camera-position.json`);Object.assign($u,r)},ZT=r=>{var e;return(e=$u[r])!=null?e:$u[r[0]]},qu={},JT=async()=>{const r=await Wl(`${Hl}/control-position.json`);Object.assign(qu,r)},KT=r=>{var e;return(e=qu[r])!=null?e:qu[r[0]]},Op=r=>qT[`face${r}`],QT=(r,e)=>{const t={x:0,y:0};if(r!==e){const[n,i]=Op(e),[s,o]=Op(r);t.x=s-n,t.y=o-i}return[t.x,t.y]},eE=(r,e)=>{const t={x:0,y:0};if(r!==e){const[n,i]=Fp(e),[s,o]=Fp(r);t.x=s-n,t.y=o-i}return[t.x,t.y]},Xl=r=>new Proxy(Object.assign(r,Ho),{get(e,t){return e[t]},set(e,t,n){return e[t]=n,e.dispatchEvent({type:"change",propName:t,value:n}),!0}}),I_=/mEye_[0-9]/m,R_=/mMouth_[0-9]/m,tE=/[0-9]{2}/,D_=["eye","mouth"];function nE(r){const{type:e,meshes:t}=r;return e==="adventurer"?iE(r):t.some(({name:i})=>i.match(/mEye|mMouth/))?rE(r):r}function iE(r){const{meshes:e,id:t}=r,n=c=>`${F0}/${c}/${c}.png`,i=e.find(({name:c})=>c==="mBodyAll"),s={eyeIdx:2,eyeBaseIdx:2,mouthIdx:2,mouthBaseIdx:2,eyeTexture:t,mouthTexture:t},o={type:"uv",reset:function(){this.eyeIdx=this.eyeBaseIdx,this.mouthIdx=this.mouthBaseIdx}},a=c=>([u,h])=>{var _;if(!i)return;const f=`mt${Ip(c)}CH`,d=(_=i.geometry.groups)==null?void 0:_.find(y=>{var x;return((x=i.material[y.materialIndex])==null?void 0:x.name)===f});if(!d)return;const{start:p,count:m}=d,g=p+m,v=i.geometry.attributes.uv;for(let y=p;y<g;y++){const x=v.getX(y)+.25*u,w=v.getY(y)+.25*h;v.setXY(y,x,w)}v.needsUpdate=!0},l=c=>u=>{var p,m;if(!i)return;const h=`mt${Ip(c)}CH`,f=(m=(p=i.material).find)==null?void 0:m.call(p,({name:g})=>g===h);if(!f)return;const d=n(u);f.map.dispose(),f.map=S_(d),f.needsUpdate=!0};return D_.forEach(c=>{Object.defineProperties(o,{[`${c}Idx`]:{get(){return s[`${c}Idx`]},set(u){const h=parseInt(u),f=this[`${c}Idx`];s[`${c}Idx`]=h;const d=QT(h,f);a(c)(d)}},[`${c}BaseIdx`]:{get(){return s[`${c}BaseIdx`]},set(u){s[`${c}BaseIdx`]=u,this[`${c}Idx`]=u}},[`${c}Texture`]:{get(){return s[`${c}Texture`]},set(u){const h=this[`${c}Texture`];s[`${c}Texture`]=u,l(c)(u);const f=eE(u,h);a(c)(f)}}})}),r.face=Xl(o),r}function rE(r){const{meshes:e}=r,[t,n]=sE(e);[...t,...n].forEach(l=>l.frustumCulled=!1);const i={eye:t,mouth:n},s={eyeIdx:"",eyeBaseIdx:"",mouthIdx:"",mouthBaseIdx:""},o={eyeList:t,mouthList:n,type:"meshes",reset:function(){this.eyeIdx=this.eyeBaseIdx,this.mouthIdx=this.mouthBaseIdx}},a=l=>c=>{i[l].forEach(u=>{const{name:h}=u,f=tE.exec(h)[0];u.visible=parseInt(f)===c})};return D_.forEach(l=>Object.defineProperties(o,{[`${l}Idx`]:{get(){return s[`${l}Idx`]},set(c){const u=parseInt(c);a(l)(u),s[`${l}Idx`]=`${u}`}},[`${l}BaseIdx`]:{get(){return s[`${l}BaseIdx`]},set(c){s[`${l}BaseIdx`]=c,this[`${l}Idx`]=c}}})),o.eyeBaseIdx=Dp,o.mouthBaseIdx=Dp,r.face=Xl(o),r}function sE(r){const e=r.filter(({name:n})=>n.match(I_)),t=r.filter(({name:n})=>n.match(R_));return[e,t]}function oE(r){const{model:e,uniqueId:t}=r,[n,i]=MT(e);return Object.defineProperty(i,"list",{value:mT(i.map(({name:s})=>s))}),Object.defineProperty(n,"visible",{get(){return this.filter(({visible:s})=>s)}}),i.forEach(s=>{s.name=`${t}|${s.name}`}),Object.defineProperties(r,{meshes:{get(){return n}},bones:{get(){return i}}})}const F_={},aE=async()=>{const r=await Wl(`${Hl}/model-parts.json`);Object.assign(F_,r)},lE=r=>F_[r],cE=/mParts([A-Za-z]+)/,Np=/mParts[A-Za-z]+_([A-Za-z]*)/;function uE(r){const{meshes:e,id:t}=r,n=lE(t),i=[],s=[];if(e.forEach(c=>{var h;let{name:u}=c;if(!!(u!=null&&u.match)){if((u.includes("Effect")||u.includes("Extension"))&&(c.visible=!1),(h=n==null?void 0:n.custom)!=null&&h[u]&&(u=c.name=n.custom[u]),u.match(/mParts/)){i.push(c);return}!u.match(I_)&&!u.match(R_)&&s.push(c)}}),!i.length&&s.length<2)return r;const o=Object.defineProperties({},{list:{get(){return Object.keys(this)},enumerable:!1},reset:{value:function(){this.list.forEach(c=>this[c].reset())},enumerable:!1},others:{get(){return s},enumerable:!1}});if(r.parts=o,!i.length)return r;const a=new Set(i.map(({name:c})=>{var u;return(u=cE.exec(c))==null?void 0:u[1]}).sort((c,u)=>c>u?1:-1)),l=c=>i.filter(({name:u})=>u.includes(`mParts${c}`)).sort((u,h)=>u.name>h.name?1:-1);return a.forEach(c=>{var g,v,_;const u=n==null?void 0:n[c],h=(v=(g=u==null?void 0:u.name)==null?void 0:g.replaceAll(" ","_"))!=null?v:c,f=u==null?void 0:u.options,d=l(c);d.forEach(y=>y.frustumCulled=!1);const p=d.map(({name:y})=>{var w,M,P;const x=(M=(w=Np.exec(y))==null?void 0:w[1])!=null?M:"default";return(P=f==null?void 0:f[x])!=null?P:x}),m=(_=u==null?void 0:u.default)!=null?_:p[0];o[h]={_meshes:d,list:p,default:m!=null?m:p[0]},Object.defineProperties(o[h],{current:{get(){var P,b,T;const y=d.filter(({visible:I})=>I).length;if(y===0)return"None";if(y!==1)return"custom";const w=(P=d.find(({visible:I})=>I).name.match(Np))==null?void 0:P[1];return(T=(b=f==null?void 0:f[w!=null?w:"default"])!=null?b:w)!=null?T:"default"},set(y){if(y.toLowerCase()==="none"){this._meshes.forEach((w,M)=>{w.visible=!1});return}if(!this.list.includes(y))return;const x=this.list.indexOf(y);this._meshes.forEach((w,M)=>{w.visible=M===x})}},index:{get(){return this.current==="custom"?NaN:this.list.indexOf(this.current)},set(y){this._meshes.forEach((x,w)=>{x.visible=w===Number(y)})}},reset:{value:function(){this.current=this.default}}})}),o.reset(),r.parts=o,r}const hE=r=>e=>{const t=e.meshes,n={...Xi,...r},{type:i}=n;Rp(t,{force:!0,matType:i});let s={type:i,showTexture:!0},o=Wc(i);const a={get code(){const{type:l,propList:c}=this,u=[];return l!==Xi.type&&u.push(`type=${l}`),c.forEach(f=>{const d=NT[f],p=d(this[f]),m=d(Xi[f]);p!==m&&u.push(`${f}=${p}`)}),u.join("/").replaceAll("#","")},set code(l){const c=Object.keys(Xi),u={...Xi,...A_(l)};c.forEach(h=>{this[h]=u[h]})},toString(){const{code:l}=this;return l?`mat=(${l})`:""},get list(){return t.flatMap(({material:l})=>l)},get propList(){return o},set type(l){if(this.type===l)return;o=Wc(l),Rp(t,{matType:l}),s.type=l;const c={...s};s={showTexture:c.showTexture},o.forEach(u=>this[u]=c[u]),s=c},set flatShading(l){const c=Yn(l);c!==this.flatShading&&(s.flatShading=c,this.propList.includes("flatShading")&&this.list.forEach(u=>{u.flatShading=c,u.needsUpdate=!0}))},set gradientMap(l){var h,f;if(l===this.gradientMap||(s.gradientMap=l,!this.propList.includes("gradientMap")))return;const c=(h=this.list[0])==null?void 0:h.gradientMap;(f=c==null?void 0:c.dispose)==null||f.call(c);const u=l==="none"?null:C_(l);this.list.forEach(d=>{d.gradientMap=u,d.needsUpdate=!0})},set showTexture(l){const c=Yn(l);if(this.showTexture===c)return;s.showTexture=c;const u=c?h=>{h.map=h.userData.backupMap,h.userData.backupMap=null,h.needsUpdate=!0}:h=>{h.userData.backupMap=h.map,h.map=null,h.needsUpdate=!0};this.list.forEach(u)},set matcap(l){var h,f;if(s.matcap===l||(s.matcap=l,!this.propList.includes("matcap")))return;const c=(h=this.list[0])==null?void 0:h.matcap;(f=c==null?void 0:c.dispose)==null||f.call(c);const u=P_(l);this.list.forEach(d=>{d.matcap=u,d.needsUpdate=!0})}};return LT.forEach(l=>Object.defineProperty(a,l,{get(){return s[l]},...!E_.includes(l)&&{set(c){c!==this[l]&&(s[l]=c,this.propList.includes(l)&&this.list.forEach(u=>u[l]=OT[l](c)))}}})),Wc(i).forEach(l=>a[l]=n[l]),s={...Xi,...s},e.material=Xl(a),e},fE=`uniform float opacity;\r
uniform vec3 color;\r
\r
void main() {\r
	gl_FragColor = vec4( color, opacity );\r
}\r
`,dE=`uniform float size;\r
\r
#include <skinning_pars_vertex>\r
\r
void main() {\r
	#include <skinbase_vertex>\r
	\r
    vec3 transformed = position + normal * 0.0005 * size;\r
        \r
	#include <skinning_vertex>\r
	#include <project_vertex>\r
}`,pE=r=>new Nt({side:Jt,transparent:!0,depthFunc:dh,vertexShader:dE,fragmentShader:fE,uniforms:r});function mE(r,e){const{material:t}=r,n=Array.isArray(r.material);[t].flat().forEach(wT),r.material=n?new Array(r.material.length).fill(e):e}function gE(r,e){const t=pE(e),n=[],i=["Eff","Extension"];return r.forEach(s=>{const{name:o}=s;if(i.some(l=>o.includes(l)))return;const a=s.clone();a.name=`outline-${s.name}`,mE(a,t),s.isSkinnedMesh&&a.bind(s.skeleton,s.bindMatrix),s.add(a),n.push(a)}),n}const _E={size:parseFloat,opacity:parseFloat,color:Ja},vE=r=>e=>{const t={...Jr,...r},n=e.meshes,i={size:{value:t.size},opacity:{value:t.opacity},color:{value:new ae(t.color)}},s=gE(n,i),o={...t,enabled:!0},a={get propList(){return["enabled","color","size","opacity"]},get enabled(){return o.enabled},set enabled(l){const c=Yn(l);s.forEach(u=>u.visible=c),o.enabled=c},get code(){if(!this.enabled)return"none";const l=[];return Object.keys(Jr).forEach(c=>{const u=this[c];u!==Jr[c]&&l.push(`${c}=${u}`)}),l.join("/").replaceAll("#","")},set code(l){if(l==="none"){this.enabled=!1;return}const c=Object.keys(Jr),u={...Jr,...A_(l)};c.forEach(h=>{this[h]=u[h]})},toString(){const{code:l}=this;return l?`ol=(${l})`:""}};return["size","opacity","color"].forEach(l=>Object.defineProperty(a,l,{get(){return o[l]},set(c){c!==this[l]&&(o[l]=c,i[l].value=_E[l](c))}})),a.enabled=t.enabled,e.outline=Xl(a),e},yE=["push","pop","shift","unshift","splice","reverse","sort"];class Zn extends Array{constructor(...e){super(...e),Object.assign(this,Ho),yE.forEach(t=>{Object.defineProperty(this,t,{value:(...n)=>{Array.prototype[t].call(this,...n),this.dispatchEvent({type:"change",method:t,args:n})},enumerable:!1})})}remove(e){const t=this.indexOf(e);t!==-1&&this.splice(t,1)}}const kp={chainName:"",chainCode:"",chainLength:0,aniIdx:0,clipDuration:0,clipTimeScale:1,action:null,aniAction:[],aniActionPointer:0};function O_(r){return r.split(">").map(xE)}function xE(r){const[e,...t]=r.split("&"),n=bE(t);return{aniName:e,...n}}function bE(r){const e={},t=[],n={r:{name:"reps",map:parseInt},ts:{name:"timeScale",map:parseFloat},dur:{name:"duration",map:wE}};return r.forEach(i=>{const[s,o]=M_(i);if(s.startsWith("@")){const c=ME(o.replace(/[()]/g,""));c.time=parseFloat(s.slice(1)),t.push(c);return}if(!n[s])return;const{name:a,map:l}=n[s];e[a]=l(o)}),e.aniAction=t.filter(({time:i})=>i<=100&&i>=0).sort((i,s)=>i.time-s.time),e}function wE(r){if(!r)return[0,100];const e=r.split("-").slice(0,2).map(parseFloat),t=e.length===2?e:[0,e[0]];return t.some(n=>n>100||n<0)||t[0]>t[1]?[0,100]:t}function ME(r){return r.split("/").reduce((t,n)=>{const[i,s]=M_(n);return{...t,...SE(i,s)}},{})}const zp={ei:{name:"face.eyeIdx",valueMap:parseInt},mi:{name:"face.mouthIdx",valueMap:parseInt},et:{name:"face.eyeTexture"},mt:{name:"face.mouthTexture"}};function SE(r,e){var i;if(r in zp){const{name:s,valueMap:o}=zp[r];return{[s]:(i=o==null?void 0:o(e))!=null?i:e}}let t=r,n=e;return r.startsWith("att")&&t.replace("att","attachment"),r.startsWith("parts")&&(t+="index",n=parseInt(e)),{[t]:n}}const AE=r=>`${O0}/${r}.json`;function TE(r,e){if(r.startsWith("fbx:"))return EE(r);if(r.startsWith("ex:")){const[,n]=r.split(":"),i=e==null?void 0:e.find(({uuid:s})=>n===s);return Promise.resolve(i.clone())}const t=AE(r);return new Promise(n=>fetch(t).then(i=>i.json()).then(i=>mr.parse(i)).then(n))}async function EE(r){const e=r.replace("fbx:",""),[t,n]=e.split("+"),{animations:i}=await x_(t);return n?i.find(({name:s})=>s===n):i[0]}function CE(r,e=null){return Promise.all(r.map(t=>TE(t,e)))}function PE(r,e=[]){return r.map((t,n)=>{const i=e[n];if(!i||i[0]===0&&i[1]===100)return t;const s=t.duration*Xu,[o,a]=i.map(l=>Math.round(l*s/100));return g0.subclip(t,t.name,o,a,Xu)})}async function LE(r,e=null){const t=O_(r),n=t.map(({aniName:c})=>c),i=t.map(({duration:c})=>c),s=t.map(({aniName:c,duration:u,...h})=>({...h})),o=await CE(n,e),a=PE(o,i);return{code:r,clips:a,mod:s,get duration(){return s.some(({timeScale:u})=>u===0)?1/0:a.map((u,h)=>{var f,d;return u.duration/Math.abs((f=s[h].timeScale)!=null?f:1)*((d=s[h].reps)!=null?d:1)}).reduce((u,h)=>u+h,0)}}}const IE=/[a-z][0-9]{6}/;function RE(r){var h;const{model:e,uniqueId:t,bones:n,id:i,viewer:s}=r,o=s.userData.ani,a=new P0(e),l=(h=n==null?void 0:n.list)!=null?h:[],c={...Ho,mixer:a,chain:{},current:{...kp},toString(){var d;const f=(d=this.chain.default)==null?void 0:d.code;return f?`ani=${f}`:""},async addChain(f,{name:d="default",autoplay:p=!0}={}){var g;if(!f||((g=this.chain[d])==null?void 0:g.code)===f)return;a.stopAllAction();const m=await LE(f,o);m.clips.forEach(v=>{v.tracks=v.tracks.reduce((_,y)=>{let x=y.name.split(".")[0];return IE.test(x)&&(y.name.replace(x,i),x=i),l.includes(x)&&(y.name=`${t}|${y.name}`,_.push(y)),_},[])}),this.chain[d]=m,a.addEventListener("finished",u),p&&this.play(d)},play(f=this.current.chainName||"default"){const d=this.chain[f];!d||(this.current.chainName=f,this.current.chainCode=d.code,this.current.chainLength=d.clips.length,this.aniIdx=0)},pause(){this.current.action&&(this.current.action.paused=!0)},resume(){this.current.action&&(this.current.action.paused=!1)},stop(){a.stopAllAction()},reset(){const f=this.current.chainName;this.stop(),this.current={...kp},this.chain[f]=void 0},update(f){var v;a.update(f);const{current:d}=this,{action:p,aniAction:m,clipDuration:g}=d;if(!(!m[d.aniActionPointer]||!p))for(;(p==null?void 0:p.time)>((v=m[d.aniActionPointer])==null?void 0:v.time)*g/100;)this.applyAniAction(m[d.aniActionPointer]),this.current.aniActionPointer++},applyAniAction(f){r.dispatchEvent({type:"aniAction",id:t,aniAction:f});const{time:d,...p}=f;Object.entries(p).forEach(([m,g])=>{const v=m.split(".");w_(r,v,g)})},nextFrame(f=1,d=Xu){if(!this.isPaused)return;const{clipTimeScale:p,clipDuration:m,action:g}=this.current,v=f*p/d;if(g.time+=v,g.time>=m){const _=g.time-m;u(),this.pause(),this.current.action.time+=_*this.current.clipTimeScale}},setTime(f){const{clipDuration:d,action:p}=this.current;!d||f>d||(p.time=f)},get isPaused(){var f;return(f=this.current.action)==null?void 0:f.paused},get aniIdx(){return this.current.aniIdx},set aniIdx(f){if(f>=this.current.chainLength)return;this.current.aniIdx=f,this.current.aniActionPointer=0;const d={type:f===0?"chainStart":"chainMove",index:f,uniqueId:t,chainName:this.current.chainName};this.dispatchEvent(d),a.stopAllAction();const p=this.chain[this.current.chainName],m=p.mod[f],{timeScale:g,reps:v,aniAction:_}=m,y=p.clips[f],x=a.clipAction(y);x.timeScale=g!=null?g:1,x.setLoop(bh,v!=null?v:1),this.current.clipDuration=y.duration,this.current.action=x,this.current.aniAction=_,this.current.aniActionPointer=0,this.current.clipTimeScale=g!=null?g:1,x.play()}};function u(){const{aniIdx:f,chainLength:d}=c.current,p=(f+1)%d;if(p===0){c.dispatchEvent({type:"ChainFinished",chainName:c.current.chainName});const{face:m}=r;m&&(m.eyeIdx=m.eyeBaseIdx,m.mouthIdx=m.mouthBaseIdx)}c.aniIdx=p}return r.animation=c,r.addEventListener("TimeUpdated",({dt:f})=>c.update(f)),r}function DE(r){const{model:e,bones:t,uniqueId:n}=r,i={};return Object.defineProperty(i,"list",{get(){return Object.values(this).flat()}}),Object.defineProperty(i,"traverse",{value:function(u){this.list.forEach(h=>{var f,d;u(h),(d=(f=h.attachment)==null?void 0:f.traverse)==null||d.call(f,u)})}}),Object.assign(r,{attachment:i,parent:null,parentBone:"",attach:(u,h="root")=>{var d;i[h]=(d=i[h])!=null?d:new Zn;const f=h==="root"?e:t.find(({name:p})=>p===`${n}|${h}`);!(f!=null&&f.add)||(u.detach(),f.add(u.model),i[h].push(u),u.parent=r,u.parentBone=h,r.dispatchEvent({type:"AttachmentChanged"}))},remove:(u,h="")=>{var d,p,m;const f=h||Object.keys(i).find(g=>i[g].indexOf(u)!==-1);!f||((p=(d=i[f]).remove)==null||p.call(d,u),(m=u.model.parent)==null||m.remove(u.model),r.dispatchEvent({type:"AttachmentChanged"}))},detach:()=>{var f;(f=e.parent)==null||f.remove(e);const{parent:u,parentBone:h}=r;!u||(u.remove(r,h),r.parent=r.parentBone=null)},attachTo:(u,h="root")=>{var f;r.detach(),(f=u==null?void 0:u.attach)==null||f.call(u,r,h)}})}function FE(r){const{material:e,id:t}=r,n=lo.source.fbx,i=Bp(t);_T(t)&&async function(){const l=a(i),c=new Ar().load(l);c.encoding=Ge,c.name=i,e.list.forEach(u=>{var h;return u.map=(h=u.map)!=null?h:c})}();let s=i;Object.defineProperty(r,"texture",{get(){return s},set(l){if(!l){this.texture=i;return}if(l===s)return;const c=a(l),[,u]=o(l),[,h]=o(this.texture),f=e.list.filter(d=>{var p,m,g,v;return((m=(p=d.map)==null?void 0:p.name)==null?void 0:m.includes(h))||((v=(g=d.userData.backupMap)==null?void 0:g.name)==null?void 0:v.includes(h))});!f.length||(async function(){const d=await b_(c);d.name=u,d.encoding=Ge,f.forEach(p=>{var m,g,v,_;p.map&&((g=(m=p.map).dispose)==null||g.call(m),p.map=d),p.userData.backupMap&&((_=(v=p.userData.backupMap).dispose)==null||_.call(v),p.userData.backupMap=d)})}(),s=l)}});function o(l){const[c,u]=l.split(">"),h=c||t,f=u||Bp(h);return[h,f]}function a(l){const[c,u]=o(l);return`${n}/${c}/${u}.png`}return r}const Bp=r=>r.match(/_[0-9]{2}/)||r.startsWith("h")?r:`>${r}_01`,OE=`uniform float uTime;\r
uniform float uSpread;\r
uniform float uThreshold;\r
uniform float uSpeed;\r
uniform float uParticleSize;\r
uniform float uAuraSize;\r
\r
attribute float aRandom;\r
\r
varying float vIsParticle;\r
varying float vRandom;\r
\r
#include <skinning_pars_vertex>\r
void main() {\r
    #include <skinbase_vertex>\r
\r
    vec3 transformed = position + normal * 0.005 * uSpread;\r
\r
    #include <skinning_vertex>\r
\r
    vec3 objectNormal = normal;\r
\r
	#include <skinnormal_vertex>\r
    \r
    vec4 viewPosition = viewMatrix * modelMatrix * vec4(transformed, 1.0);\r
    float yDisplacement = fract( uTime * uSpeed + aRandom ) * 0.1;\r
    viewPosition.y += yDisplacement;\r
    viewPosition.x += sin( uTime * aRandom * uSpeed + aRandom ) * 0.02;\r
    \r
    gl_Position = projectionMatrix * viewPosition;\r
    \r
    objectNormal.z *= objectNormal.z > 0.7 ? -1.0 : 1.0;\r
    vIsParticle = objectNormal.z - uThreshold;\r
\r
    gl_PointSize = vIsParticle > 0.0 ? uParticleSize : uAuraSize;\r
    gl_PointSize /= -viewPosition.z;\r
\r
    vRandom = aRandom;\r
}\r
`,NE=`uniform sampler2D uTexture;\r
\r
uniform float uTime;\r
uniform float uParticleOpacity;\r
uniform float uAuraOpacity;\r
uniform vec3 uColor;\r
uniform vec3 uColor2;\r
\r
varying float vRandom;\r
varying float vIsParticle;\r
\r
void main(){\r
    vec4 textureColor = texture2D( uTexture, gl_PointCoord );\r
    textureColor.a = length( textureColor.rgb ) ;\r
    textureColor.a *= abs( 1.0 - fract( uTime + vRandom ) ) * 0.5;\r
    textureColor.rgb = mix( uColor, uColor2,  textureColor.a * 2.0 );\r
    textureColor.a *= vIsParticle > 0.0 ? uParticleOpacity * 4.0 : uAuraOpacity;\r
\r
    gl_FragColor = textureColor;\r
    gl_FragColor /= vIsParticle > 0.0 ? 2.0 : 4.0;\r
}\r
`,Ka=[{name:"time",uName:"uTime",defaultValue:0,valueMap:Number},{name:"speed",uName:"uSpeed",defaultValue:1,valueMap:Number},{name:"particleOpacity",uName:"uParticleOpacity",defaultValue:.3,valueMap:Number},{name:"auraOpacity",uName:"uAuraOpacity",defaultValue:.3,valueMap:Number},{name:"particleSize",uName:"uParticleSize",defaultValue:10,valueMap:Number},{name:"auraSize",uName:"uAuraSize",defaultValue:100,valueMap:Number},{name:"spread",uName:"uSpread",defaultValue:5,valueMap:Number},{name:"threshold",uName:"uThreshold",defaultValue:.3,valueMap:Number},{name:"texture",uName:"uTexture",defaultValue:"img/textures/particle/cloud.png",valueMap:r=>new Ar().load(r)},{name:"color",uName:"uColor",defaultValue:"#ffffff",valueMap:r=>new ae(r)},{name:"color2",uName:"uColor2",defaultValue:"#33ffff",valueMap:r=>new ae(r)}],kE={aura:["visible",...Ka.slice(1).map(({name:r})=>r)]},zE=(r="aura")=>(e,t={})=>{if(!!(e!=null&&e.length)&&r==="aura")return UE(e,t)};function BE(r){return new Nt({vertexShader:OE,fragmentShader:NE,uniforms:r,transparent:!0,blending:ol,depthWrite:!1,side:xi})}function UE(r,e){const t=Ka.map(l=>{var d;const{uName:c,defaultValue:u,valueMap:h}=l,f=(d=h==null?void 0:h(u))!=null?d:u;return[c,{value:f}]}),n=Object.fromEntries(t),i=BE(n),s=[];r.forEach(l=>{const{name:c}=l.geometry;if(c.startsWith("mEye")||c.startsWith("mMouth"))return;const u=l.geometry.clone(),h=u.attributes.position.count,f=new Float32Array(h).fill(0).map(()=>Math.random()-.5);u.setAttribute("aRandom",new Qe(f,1)),u.deleteAttribute("color"),u.deleteAttribute("uv");const d=new Fh(u,i);d.name="aura",l.isSkinnedMesh&&(d.type="SkinnedMesh",d.isSkinnedMesh=!0,d.skeleton=l.skeleton,d.bindMatrix=l.bindMatrix,d.bindMatrixInverse=l.bindMatrixInverse,d.bindMode=l.bindMode,d.bind=l.bind,d.clone=l.clone,d.initBones=l.initBones,d.normalizeSkinWeights=l.normalizeSkinWeights,d.pose=l.pose,d.updateMatrixWorld=l.updateMatrixWorld),l.add(d),s.push(d)});const o={visible:!0},a={name:"aura",onDispose:()=>{},get list(){return s},get propList(){return kE.aura},get visible(){return o.visible},set visible(l){const c=Yn(l);this.list.forEach(u=>u.visible=c),o.visible=c},dispose(){this.onDispose(),this.list.forEach(l=>{var c,u,h,f,d;(c=l.parent)==null||c.remove(l),(h=(u=l.material).dispose)==null||h.call(u),(d=(f=l.geometry).dispose)==null||d.call(f)})},set code(l){l.split("/").forEach(u=>{const[h,f]=u.split("=");!Ka.map(({name:d})=>d).includes(h)||(this[h]=f)})}};return Ka.forEach(l=>{const{name:c,uName:u,defaultValue:h,valueMap:f}=l;o[c]=h,Object.defineProperty(a,c,{get(){return o[c]},set(d){var p;o[c]=d,n[u].value=(p=f==null?void 0:f(d))!=null?p:d}})}),a.onTimeUpdate=({time:l})=>a.time=l,Object.entries(e).forEach(([l,c])=>a[l]=c),a}function VE(r){const{meshes:e}=r,t={list:new Zn,dispose(){this.list.forEach(n=>{var i;return(i=n.dispose)==null?void 0:i.call(n)})},add(n="aura",i={}){const s=zE(n)(e,i);return s.onDispose=()=>this.list.remove(s),this.list.push(s),r.addEventListener("TimeUpdated",s.onTimeUpdate),s}};return r.particle=t,r}const GE=r=>{var a,l;if(r.dispatchEvent({type:"dispose"}),!r)return;const{model:e,meshes:t,outline:n,particle:i,viewer:s}=r;i==null||i.list.forEach(c=>c.dispose()),(a=e.parent)!=null&&a.isScene&&(e.parent.remove(e),s.loadedModel.remove(r)),(l=r.detach)==null||l.call(r),[t.reverse(),n==null?void 0:n.all].flat().forEach(ST)};function HE(r){const{x:e,y:t,z:n}=r;return[e,t,n].map(i=>i||"").join()}const WE={position:",,",rotation:",,",scale:"1,1,1"},XE={position:"pos",rotation:"rot",scale:"scl"};function $E(r){return Object.assign(r,{...r.isDLModel&&{toString(){const{id:e,animation:t,outline:n,material:i}=this,s=Object.entries(WE).map(([o,a])=>{const l=HE(this[o]);return l===a?"":`${XE[o]}=${l}`});return[`id=${e}`,...s,t,n,i].filter(o=>`${o}`).join("/")}},dispose(){const{attachment:e,parent:t,parentBone:n}=this;e.list.forEach(i=>i.dispose()),t==null||t.remove(this,n),this.dispatchEvent({type:"dispose"}),GE(this)}})}let gf=(r=21)=>crypto.getRandomValues(new Uint8Array(r)).reduce((e,t)=>(t&=63,t<36?e+=t.toString(36):t<62?e+=(t-26).toString(36).toUpperCase():t>62?e+="-":e+="_",e),"");function qE(r,e){const{id:t,material:n,outline:i,viewer:s}=e,o=[oE,uE,DE,vE(i),hE(n),FE,nE,RE,VE,$E],a={...Ho,isDLModel:!0,model:r,id:t,uniqueId:gf(),type:vT(t),viewer:s,userData:{},_time:0,update(l){var c;this._time+=l,(c=this.attachment)==null||c.list.forEach(u=>{var h;return(h=u.update)==null?void 0:h.call(u,l)}),this.dispatchEvent({type:"TimeUpdated",dt:l,time:this._time})},set scale(l){var u;if((u=l.includes)!=null&&u.call(l,",")){const[h,f,d]=l.split(",").map(p=>p?parseFloat(p):1);this.model.scale.set(h,f,d);return}const c=Number(l)||1;this.model.scale.set(c,c,c)},get scale(){const{scale:l}=this.model,{x:c,y:u,z:h}=l;return c===u&&c===h?c:[c,u,h].join(",")},set visible(l){this.model.visible=Yn(l)}};return["position","rotation","visible"].forEach(l=>Object.defineProperty(a,l,{get(){return this.model[l]},enumerable:!0})),r.userData.container=a,pT(...o)(a)}const Up={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );
			gl_FragColor.a *= opacity;


		}`};class $l{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const jE=new br(-1,1,1,-1,0,1),_f=new Ce;_f.setAttribute("position",new ge([-1,3,0,-1,-1,0,3,-1,0],3));_f.setAttribute("uv",new ge([0,2,0,0,2,0],2));class YE{constructor(e){this._mesh=new wt(_f,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,jE)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class ju extends $l{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof Nt?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Oo.clone(e.uniforms),this.material=new Nt({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new YE(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}const N_=Object.freeze(Object.defineProperty({__proto__:null,ShaderPass:ju},Symbol.toStringTag,{value:"Module"}));class Vp extends $l{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const i=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),s.buffers.stencil.setFunc(i.ALWAYS,o,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(i.EQUAL,1,4294967295),s.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),s.buffers.stencil.setLocked(!0)}}class ZE extends $l{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class JE{constructor(e,t){if(this.renderer=e,t===void 0){const n=e.getSize(new q);this._pixelRatio=e.getPixelRatio(),this._width=n.width,this._height=n.height,t=new Gt(this._width*this._pixelRatio,this._height*this._pixelRatio),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],Up===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),ju===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new ju(Up),this.clock=new Gl}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let i=0,s=this.passes.length;i<s;i++){const o=this.passes[i];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}Vp!==void 0&&(o instanceof Vp?n=!0:o instanceof ZE&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new q);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new br(-1,1,1,-1,0,1);const k_=new Ce;k_.setAttribute("position",new ge([-1,3,0,-1,-1,0,3,-1,0],3));k_.setAttribute("uv",new ge([0,2,0,0,2,0],2));class KE extends $l{constructor(e,t,n,i,s){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=s!==void 0?s:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new ae}render(e,t,n){const i=e.autoClear;e.autoClear=!1;let s,o;this.overrideMaterial!==void 0&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,s),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=o),e.autoClear=i}}function Gp({renderer:r,scene:e,camera:t}){const n=QE(),i=new JE(r,n),s=new KE(e,t);return i.addPass(s),i}const QE=()=>new Gt(800,600,{minFilter:it,magFilter:it,format:Zt,encoding:Ge}),$c={bloom:t2,pixel:i2,afterimage:l2,sobel:r2,halftone:s2,dotscreen:o2,bokeh:a2,smaa:n2};async function e2(r,e){var n;r=r.toLowerCase();const t=await((n=$c[r])==null?void 0:n.call($c,e));return t.type=r,t.name=vf[r].name,t}function Wo(r,e){Object.defineProperty(r,"propList",{value:e}),e.forEach(t=>{Object.defineProperty(r,t,{get(){return this.uniforms[t].value},set(n){this.uniforms[t].value=n}})})}async function t2({resolution:r=new q(800,600),strength:e=.3,radius:t=.5,threshold:n=.8}={}){const{UnrealBloomPass:i}=await nt(()=>import("./UnrealBloomPass.1164aae7.js"),[]),s=new i(r,e,t,n);return Object.defineProperty(s,"propList",{value:["radius","strength","threshold"],writable:!1}),s}async function n2({renderer:r}){const{SMAAPass:e}=await nt(()=>import("./SMAAPass.02d0fce6.js"),[]),t=new q;r.getSize(t);const n=new e(t.x,t.y);return Object.defineProperty(n,"propList",{value:[],writable:!1}),n}async function i2({renderer:r}){const{ShaderPass:e}=await nt(()=>Promise.resolve().then(()=>N_),void 0),{PixelShader:t}=await nt(()=>import("./PixelShader.ee1b9117.js"),[]),n=new e(t),i=new q;return r.getSize(i),i.multiplyScalar(window.devicePixelRatio),n.uniforms.resolution.value=i,Wo(n,["pixelSize"]),n.pixelSize=10,n}async function r2({renderer:r}){const{ShaderPass:e}=await nt(()=>Promise.resolve().then(()=>N_),void 0),{SobelOperatorShader:t}=await nt(()=>import("./SobelOperatorShader.36790403.js"),[]),n=new q;r.getSize(n),n.multiplyScalar(window.devicePixelRatio);const i=new e(t);return i.uniforms.resolution.value.x=n.x,i.uniforms.resolution.value.y=n.y,Object.defineProperty(i,"propList",{value:[],writable:!1}),i}async function s2({renderer:r}){const{HalftonePass:e}=await nt(()=>import("./HalftonePass.4456df6e.js"),[]),t=new q;r.getSize(t);const n=new e(t.x,t.y,{radius:4});return Wo(n,["greyscale","radius","scatter","shape"]),n}async function o2(){const{DotScreenPass:r}=await nt(()=>import("./DotScreenPass.24ee5701.js"),[]),e=new r;return Wo(e,["scale","center"]),e}async function a2({scene:r,camera:e}){const{BokehPass:t}=await nt(()=>import("./BokehPass.1f35b686.js"),[]),n=new t(r,e,{});return Wo(n,["focus","aperture","aspect"]),n}async function l2(){const{AfterimagePass:r}=await nt(()=>import("./AfterimagePass.f4a3e26b.js"),[]),e=new r(.7);return Wo(e,["damp"]),e}function c2(r){var o;const{name:e,type:t}=r,n=(o=vf[t].propList)!=null?o:[],i={};return n.forEach(a=>{Object.defineProperty(i,a,{get(){return r[a]},set(l){r[a]=l},enumerable:!0})}),{target:r,name:e,type:t,params:i,id:gf()}}const vf={bloom:{name:"Bloom",propList:["enabled","radius","strength","threshold"]},pixel:{name:"Pixelate",propList:["enabled","pixelSize"]},afterimage:{name:"Afterimage",propList:["enabled","damp"]},sobel:{name:"Sobel",propList:["enabled"]},halftone:{name:"Halftone",propList:["enabled","greyscale","radius","scatter","shape"]},dotscreen:{name:"Dot Screen",propList:["enabled","scale"]},bokeh:{name:"Bokeh",propList:["enabled","focus","aperture","aspect"]},smaa:{name:"SMAA",propList:["enabled"]}};Object.entries(vf).map(([r,{name:e}])=>({value:r,label:e}));var Kr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function xC(r){var e=r.default;if(typeof e=="function"){var t=function(){return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(r).forEach(function(n){var i=Object.getOwnPropertyDescriptor(r,n);Object.defineProperty(t,n,i.get?i:{enumerable:!0,get:function(){return r[n]}})}),t}var z_={exports:{}};(function(r,e){(function(t,n){r.exports=n()})(Kr,function(){var t=function(){function n(d){return o.appendChild(d.dom),d}function i(d){for(var p=0;p<o.children.length;p++)o.children[p].style.display=p===d?"block":"none";s=d}var s=0,o=document.createElement("div");o.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",o.addEventListener("click",function(d){d.preventDefault(),i(++s%o.children.length)},!1);var a=(performance||Date).now(),l=a,c=0,u=n(new t.Panel("FPS","#0ff","#002")),h=n(new t.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=n(new t.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:o,addPanel:n,showPanel:i,begin:function(){a=(performance||Date).now()},end:function(){c++;var d=(performance||Date).now();if(h.update(d-a,200),d>l+1e3&&(u.update(1e3*c/(d-l),100),l=d,c=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return d},update:function(){a=this.end()},domElement:o,setMode:i}};return t.Panel=function(n,i,s){var o=1/0,a=0,l=Math.round,c=l(window.devicePixelRatio||1),u=80*c,h=48*c,f=3*c,d=2*c,p=3*c,m=15*c,g=74*c,v=30*c,_=document.createElement("canvas");_.width=u,_.height=h,_.style.cssText="width:80px;height:48px";var y=_.getContext("2d");return y.font="bold "+9*c+"px Helvetica,Arial,sans-serif",y.textBaseline="top",y.fillStyle=s,y.fillRect(0,0,u,h),y.fillStyle=i,y.fillText(n,f,d),y.fillRect(p,m,g,v),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p,m,g,v),{dom:_,update:function(x,w){o=Math.min(o,x),a=Math.max(a,x),y.fillStyle=s,y.globalAlpha=1,y.fillRect(0,0,u,m),y.fillStyle=i,y.fillText(l(x)+" "+n+" ("+l(o)+"-"+l(a)+")",f,d),y.drawImage(_,p+c,m,g-c,v,p,m,g-c,v),y.fillRect(p+g-c,m,c,v),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p+g-c,m,c,l((1-x/w)*v))}}},t})})(z_);const u2=z_.exports;var ql={exports:{}};(function(r,e){(function(t,n){n()})(Kr,function(){function t(c,u){return typeof u>"u"?u={autoBom:!1}:typeof u!="object"&&(console.warn("Deprecated: Expected third argument to be a object"),u={autoBom:!u}),u.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(c.type)?new Blob(["\uFEFF",c],{type:c.type}):c}function n(c,u,h){var f=new XMLHttpRequest;f.open("GET",c),f.responseType="blob",f.onload=function(){l(f.response,u,h)},f.onerror=function(){console.error("could not download file")},f.send()}function i(c){var u=new XMLHttpRequest;u.open("HEAD",c,!1);try{u.send()}catch{}return 200<=u.status&&299>=u.status}function s(c){try{c.dispatchEvent(new MouseEvent("click"))}catch{var u=document.createEvent("MouseEvents");u.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),c.dispatchEvent(u)}}var o=typeof window=="object"&&window.window===window?window:typeof self=="object"&&self.self===self?self:typeof Kr=="object"&&Kr.global===Kr?Kr:void 0,a=o.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),l=o.saveAs||(typeof window!="object"||window!==o?function(){}:"download"in HTMLAnchorElement.prototype&&!a?function(c,u,h){var f=o.URL||o.webkitURL,d=document.createElement("a");u=u||c.name||"download",d.download=u,d.rel="noopener",typeof c=="string"?(d.href=c,d.origin===location.origin?s(d):i(d.href)?n(c,u,h):s(d,d.target="_blank")):(d.href=f.createObjectURL(c),setTimeout(function(){f.revokeObjectURL(d.href)},4e4),setTimeout(function(){s(d)},0))}:"msSaveOrOpenBlob"in navigator?function(c,u,h){if(u=u||c.name||"download",typeof c!="string")navigator.msSaveOrOpenBlob(t(c,h),u);else if(i(c))n(c,u,h);else{var f=document.createElement("a");f.href=c,f.target="_blank",setTimeout(function(){s(f)})}}:function(c,u,h,f){if(f=f||open("","_blank"),f&&(f.document.title=f.document.body.innerText="downloading..."),typeof c=="string")return n(c,u,h);var d=c.type==="application/octet-stream",p=/constructor/i.test(o.HTMLElement)||o.safari,m=/CriOS\/[\d]+/.test(navigator.userAgent);if((m||d&&p||a)&&typeof FileReader<"u"){var g=new FileReader;g.onloadend=function(){var y=g.result;y=m?y:y.replace(/^data:[^;]*;/,"data:attachment/file;"),f?f.location.href=y:location=y,f=null},g.readAsDataURL(c)}else{var v=o.URL||o.webkitURL,_=v.createObjectURL(c);f?f.location=_:location.href=_,f=null,setTimeout(function(){v.revokeObjectURL(_)},4e4)}});o.saveAs=l.saveAs=l,r.exports=l})})(ql);const h2=["video/mp4;codecs=h264","video/webm;codecs=h264","video/webm;codecs=vp9","video/webm;codecs=vp8","video/webm"],Na=h2.filter(MediaRecorder.isTypeSupported);function f2(r){if(!Na.length)return;const e=[],t=Na[0],n={settings:{...XT,mimeType:t},get supportedMimeTypes(){return Na},get mimeType(){return this.settings.mimeType},set mimeType(i){Na.includes(i)&&(this.settings.mimeType=i)},start(){if(this.recorder)return;const{fileName:i,frameRate:s,mimeType:o}=this.settings,a=r.captureStream(s||30),l=a.getTracks()[0],c=new MediaRecorder(a,{mimeType:o});c.onstart=()=>e.length=0,c.ondataavailable=({data:u})=>e.push(u),c.onstop=()=>{l.stop(),this.recorder=void 0;const u=this.settings.mimeType.includes("webm")?"webm":"mp4",h=new Blob(e,{type:`video/${u}`}),f=this.settings.appendDate?`_${AT()}`:"",d=`${i||"ani"}${f}.${u}`;ql.exports.saveAs(h,d)},c.start(),this.recorder=c},get state(){var i,s;return(s=(i=this.recorder)==null?void 0:i.state)!=null?s:"idle"}};return["pause","resume","stop"].forEach(i=>{Object.defineProperty(n,i,{value:()=>{var s;return(s=n.recorder)==null?void 0:s[i]()}})}),n}function d2(r){let e=1,t=!1,n=!1;const i=()=>{r.stats.begin(),r.controls.update();const c=t?-e:e,u=r.clock.getDelta()*c;n||r.update(u),r.render(),r.stats.end()};let s=!1;const o=()=>{s||(r.render(),s=!0,setTimeout(()=>s=!1,50))};let a="";return{start(){a!=="active"&&(r.renderer.setAnimationLoop(i),r.controls.removeEventListener("change",o),a="active")},stop(){a!=="inactive"&&(r.renderer.setAnimationLoop(null),r.controls.addEventListener("change",o),a="inactive")},pause(){n=!0},resume(){n=!1},get state(){return a},get timeScale(){return e},set timeScale(c){const u=parseFloat(c);e=isNaN(u)?1:Math.abs(u)},get reverse(){return t},set reverse(c){t=!!c},get paused(){return n},set paused(c){n=!!c}}}const p2=async r=>{const{zip:e}=await nt(()=>import("./browser.83a5952f.js"),[]);return new Promise(t=>e(r,{},(n,i)=>t(new Blob([i]))))},m2=r=>{const e=r.indexOf(",");return r.slice(e+1,1/0)},g2=async r=>{if(r=await r,r instanceof Blob&&(r=await r.arrayBuffer()),r instanceof ArrayBuffer)return new Uint8Array(r);if(typeof r=="string"){const e=r.startsWith("data")?m2(r):r,t=window.atob(e);return Uint8Array.from(t,n=>n.charCodeAt(0))}};async function _2(r){const e=await Promise.all(r.map(({data:n})=>g2(n))),t=Object.fromEntries(r.map(({name:n},i)=>[n,[e[i],{level:0,consume:!0}]]));return p2(t)}async function v2(r,e){const t=r.length.toString().length,n=r.map((i,s)=>{const o=s.toString().padStart(t,"0");return{name:`${e||"ss"}_${o}.png`,data:i}});return _2(n)}function y2(r,e){const t=document.createElement("a");t.style.display="none",t.href=r,t.download=e,document.body.appendChild(t),t.click(),document.body.removeChild(t)}async function Yu(r,e="frames"){const t=await v2(r,e);ql.exports.saveAs(t,`${e}.zip`)}function x2(r){const{canvas:e,scene:t}=r;return{settings:WT,downloadFrame(i=1){const{noBackground:s,fileName:o}=this.settings,a=s&&!r.postProcessing.enabled;let l=null;const c=()=>[t.background,l]=[l,t.background];if(r.loop.state==="inactive"||i===1){a&&c(),r.render();const d=e.toDataURL();a&&c(),y2(d,`${o}.png`),r.render();return}let u=0;const h=[];a&&r.addCountedEventListener("beforeRender",c);function f(){const d=e.toDataURL("image/png");h.push(d),++u===i&&(a&&r.addCountedEventListener("beforeRender",c),Yu(h,o))}r.addCountedEventListener("afterRender",f,i)},getFrame(){let i;const{noBackground:s}=this.settings;if(s&&!r.postProcessing.enabled){let a=null;[t.background,a]=[a,t.background],r.render(),i=e.toDataURL("image/png"),[t.background,a]=[a,t.background],r.render()}else r.render(),i=e.toDataURL("image/png");return i},getAllFrames(i){var p,m;const s=i==null?void 0:i.animation.current.chainName;if(!s||i.animation.chain[s].duration===1/0)return;console.info("main thread locked");const a=r.loop.state;r.loop.stop(),(m=(p=i.face)==null?void 0:p.reset)==null||m.call(p),i.animation.stop();const l=[],{frameRate:c,noBackground:u}=this.settings,h=1/(c||30);let f=null,d=!0;for(u&&([t.background,f]=[f,t.background]),i.animation.addCountedEventListener("chainFinished",()=>d=!1),i.animation.play();d;){r.update(h);const g=e.toDataURL();l.push(g)}return console.info("main thread unlocked"),u&&([t.background,f]=[f,t.background]),a==="active"&&r.loop.start(),l},downloadAllFrames(i=0){const s=r.model[i],o=this.getAllFrames(s),{fileName:a}=this.settings;Yu(o,a)},getAllFramesAsArrayBuffer(i){var y,x;const s=i==null?void 0:i.animation.current.chainName;if(!s||i.animation.chain[s].duration===1/0)return;console.info("main thread locked");const a=r.renderer.getContext(),l=r.loop.state;(x=(y=i.face)==null?void 0:y.reset)==null||x.call(y),r.loop.stop(),i.animation.stop();const c=[],{frameRate:u,noBackground:h}=this.settings,f=1/(u||30),{width:d,height:p}=e,g=d*p*4;let v=null,_=!0;for(h&&([t.background,v]=[v,t.background]),i.animation.addCountedEventListener("chainFinished",()=>_=!1),i.animation.play();_;){r.update(f);const w=new Uint8Array(g);a.readPixels(0,0,d,p,a.RGBA,a.UNSIGNED_BYTE,w);const M=b2(w,{width:d,height:p});c.push(M.buffer)}return console.info("main thread unlocked"),h&&([t.background,v]=[v,t.background]),l==="active"&&r.loop.start(),c}}}function b2(r,{width:e,height:t}){const n=t/2|0,i=e*4,s=new Uint8Array(e*4);for(let o=0;o<n;++o){const a=o*i,l=(t-o-1)*i;s.set(r.subarray(a,a+i)),r.copyWithin(a,l,l+i),r.set(s,l)}return r}const w2=()=>Promise.all([jT(),YT(),JT(),aE()]),M2={directional:zl,ambient:Bl,point:To},S2={directional:R0,point:I0},A2=r=>{var l,c;const e=M2[r];if(!e)return null;const t=$T[r],{color:n,intensity:i,...s}=t,o=new e(n,i);o.name=(c=(l=o.type)==null?void 0:l.replace)==null?void 0:c.call(l,"Light","");const a=S2[r];return a&&(o.helper=new a(o),Object.defineProperty(o,"showHelper",{get(){return o.helper.visible},set(u){o.helper.visible=!!u,o.helper.update()}}),o.showHelper=!1),Object.defineProperty(o,"colorCode",{get(){return"#"+this.color.getHexString()},set(u){var h,f;this.color=new ae(u),(f=(h=this.helper)==null?void 0:h.update)==null||f.call(h)}}),Object.entries(s).forEach(([u,h])=>{o[u].isVector3?o[u].set(...h):o[u]=h}),o};function T2(r){const e={list:new Zn,add:t=>{const n=A2(t);if(!!n)return r.scene.add(n),n.helper&&(r.scene.add(n.helper),n.helper.update()),e.list.push(n),n.remove=()=>{var i,s,o,a,l;e.list.remove(n),n.helper&&((i=n.parent)==null||i.remove(n.helper),(o=(s=n.helper).dispose)==null||o.call(s)),(a=n.parent)==null||a.remove(n),(l=n.dispose)==null||l.call(n)},n}};return e}const Hp={"<":">","(":")","[":"]","{":"}"},E2=r=>{let e="";const t=[],n=[];for(const i of r){if(t.length){e+=i;const s=t.at(-1);i===Hp[s]&&t.pop();continue}if(i==="/"){e&&n.push(e),e="";continue}e+=i,i in Hp&&t.push(i)}return e&&n.push(e),n},B_=r=>E2(r).reduce((t,n)=>{const[i,...s]=n.split("="),o=s==null?void 0:s.join("=");return i&&o&&t.push([i,o]),t},[]),C2={mat:{keys:["material","code"],valueMap:r=>r.slice(1,-1)},ol:{keys:["outline","code"],valueMap:r=>r.slice(1,-1)},ei:{keys:["face","eyeBaseIdx"]},et:{keys:["face","eyeTexture"]},mi:{keys:["face","mouthBaseIdx"]},mt:{keys:["face","mouthTexture"]},tx:{keys:["texture"]},scl:{keys:["scale"]}};async function P2(r){const e=B_(r),t=Object.fromEntries(e),{id:n}=t,i=await this.loadDLModel(n);return await L2(i,t),i}async function L2(r,e){const{ani:t,...n}=e;Object.entries(n).forEach(([i,s])=>{var u;const o=C2[i];if(!o)return;const{keys:a,valueMap:l}=o,c=(u=l==null?void 0:l(s))!=null?u:s;w_(r,a,c)}),t&&await r.animation.addChain(t)}const yf=class{constructor(){pn(this,"userData",{ani:new Zn});pn(this,"dataLoaded",!1);pn(this,"initData",async()=>{await w2(),this.dataLoaded=!0,this.dispatchEvent({type:"dataLoaded"})});pn(this,"_background","");pn(this,"model",new Zn);pn(this,"loadedModel",new Zn);pn(this,"loadModelFromCode",P2);pn(this,"settings",{outline:Jr,material:Xi});pn(this,"viewport",{width:0,height:0,set(e,t){this.width=e,this.height=t}});Object.assign(this,Ho);const e=new Lh;this.scene=e,this.background=VT,this.clock=new Gl;const t=xT();this.camera=t;const n=T2(this);n.add("directional"),n.add("ambient"),this.light=n;const i=yT();this.renderer=i,this.canvas=i.domElement,this.screenshot=x2(this),this.record=f2(this.canvas),this.controls=new MA(this.camera,this.canvas),this.postProcessing={enabled:!1,passes:new Zn,composer:Gp({renderer:i,scene:e,camera:t}),async addPass(s,o={}){const a=await e2(s,{...o,renderer:i,scene:e,camera:t});this.composer.addPass(a);const l=c2(a),{passes:c}=this,u=this;return l.remove=()=>{c.remove(l),u.refresh()},c.push(l),a},async refresh(){this.composer=Gp({renderer:i,scene:e,camera:t});const s=this.passes.map(({type:a,params:l})=>({type:a,params:Object.entries(l)}));this.passes.length=0;const{length:o}=s;for(let a=0;a<o;a++){const{type:l,params:c}=s[a],u=await this.addPass(l);c.forEach(([h,f])=>void(u[h]=f))}},updatePasses(s){this.passes.length=0,this.passes.splice(0,0,...s),this.refresh()}},this.stats=new u2,this.loop=d2(this),this.loop.start(),console.info("%cDragalia Lost Model Viewer","color:yellow;background-color:black;font-size:1.5rem;text-shadow: 0 0 0.5rem white")}get background(){return this._background}set background(e){var n,i;if(this._background===e)return;this._background="loading",(i=(n=this.scene.background)==null?void 0:n.dispose)==null||i.call(n);const t=this;(async function(){t.scene.background=await bT(e),t._background=e,e.startsWith("img:")&&t.updateBgAspectRatio()})()}get toneMapping(){var t,n;const{toneMapping:e}=this.renderer;return(n=(t=Object.entries(Xc).find(([,i])=>i===e))==null?void 0:t[0])!=null?n:"Unknown"}set toneMapping(e){const t=Xc[e]?e:"No Mapping";this.renderer.toneMapping=Xc[t]}get pixelRatio(){return this.renderer.getPixelRatio()}set pixelRatio(e){this.renderer.setPixelRatio(e),this.postProcessing.composer.setPixelRatio(e)}get unusedModel(){return this.loadedModel.filter(e=>!this.model.includes(e))}async loadDLModel(e=HT){this.dataLoaded||await new Promise(o=>this.addCountedEventListener("dataLoaded",o));const t=yf.getModelPath(e),n=await x_(t);n.name=e;const i={id:e,outline:this.settings.outline,material:this.settings.material,viewer:this},s=qE(n,i);return this.loadedModel.push(s),s.addEventListener("dispose",()=>this.loadedModel.remove(s)),s}add(e){var t;(t=e.detach)==null||t.call(e),this.model.push(e),this.scene.add(e.model),e.parent=this}remove(e){this.model.remove(e),this.scene.remove(e.model)}disposeAllModels(){this.loadedModel.forEach(e=>{var t;return(t=e.dispose)==null?void 0:t.call(e)}),this.model.length=0}static getModelPath(e){return`${this.source.fbx}/${e}/${e}.fbx`}async setViewport(e,t){var o;await gT(200);const n=e!=null?e:window.innerWidth,i=t!=null?t:window.innerHeight;this.viewport.set(n,i),this.renderer.setSize(n,i);const s=n/i;return this.camera.aspect=s,this.camera.updateProjectionMatrix(),(o=this.postProcessing.composer)==null||o.setSize(n,i),this.background.startsWith("img:")&&this.updateBgAspectRatio(),this}updateBgAspectRatio(){if(!this.background.startsWith("img:"))return;const{width:e,height:t}=this.viewport,n=e/t,{background:i}=this.scene,{naturalWidth:s,naturalHeight:o}=i.image,a=s/o,l=n/a,c=n>a?[1,1/l]:[l,1];i.repeat.set(...c)}update(e){var t;(t=this.animation)==null||t.update(e),this.model.forEach(n=>{var i;return(i=n.update)==null?void 0:i.call(n,e)}),this.loop.state==="inactive"&&this.render(),this.dispatchEvent({type:"timeUpdate",dt:e})}stopAll(){this.model.forEach(e=>{var t,n;return(n=(t=e.animation)==null?void 0:t.stop)==null?void 0:n.call(t)})}playAll(){this.model.forEach(e=>{var t,n;return(n=(t=e.animation)==null?void 0:t.play)==null?void 0:n.call(t)})}render(){this.dispatchEvent({type:"beforeRender"}),this.postProcessing.enabled?this.postProcessing.composer.render():this.renderer.render(this.scene,this.camera),this.dispatchEvent({type:"afterRender"})}toString(){return"Dragalia Lost Model Viewer"}dispose(){var e,t,n;this.model.forEach(i=>i.dispose()),(t=(e=this.scene.background)==null?void 0:e.dispose)==null||t.call(e),(n=this.renderer.renderLists)==null||n.dispose(),this.renderer.dispose()}};let lo=yf;pn(lo,"source",{fbx:F0,ani:O0});var Yt={fullscreenEnabled:0,fullscreenElement:1,requestFullscreen:2,exitFullscreen:3,fullscreenchange:4,fullscreenerror:5,fullscreen:6},Wp=["webkitFullscreenEnabled","webkitFullscreenElement","webkitRequestFullscreen","webkitExitFullscreen","webkitfullscreenchange","webkitfullscreenerror","-webkit-full-screen"],Xp=["mozFullScreenEnabled","mozFullScreenElement","mozRequestFullScreen","mozCancelFullScreen","mozfullscreenchange","mozfullscreenerror","-moz-full-screen"],$p=["msFullscreenEnabled","msFullscreenElement","msRequestFullscreen","msExitFullscreen","MSFullscreenChange","MSFullscreenError","-ms-fullscreen"],Ut=typeof window<"u"&&typeof window.document<"u"?window.document:{},sn="fullscreenEnabled"in Ut&&Object.keys(Yt)||Wp[0]in Ut&&Wp||Xp[0]in Ut&&Xp||$p[0]in Ut&&$p||[],I2={requestFullscreen:function(r){return r[sn[Yt.requestFullscreen]]()},requestFullscreenFunction:function(r){return r[sn[Yt.requestFullscreen]]},get exitFullscreen(){return Ut[sn[Yt.exitFullscreen]].bind(Ut)},get fullscreenPseudoClass(){return":"+sn[Yt.fullscreen]},addEventListener:function(r,e,t){return Ut.addEventListener(sn[Yt[r]],e,t)},removeEventListener:function(r,e,t){return Ut.removeEventListener(sn[Yt[r]],e,t)},get fullscreenEnabled(){return Boolean(Ut[sn[Yt.fullscreenEnabled]])},set fullscreenEnabled(r){},get fullscreenElement(){return Ut[sn[Yt.fullscreenElement]]},set fullscreenElement(r){},get onfullscreenchange(){return Ut[("on"+sn[Yt.fullscreenchange]).toLowerCase()]},set onfullscreenchange(r){return Ut[("on"+sn[Yt.fullscreenchange]).toLowerCase()]=r},get onfullscreenerror(){return Ut[("on"+sn[Yt.fullscreenerror]).toLowerCase()]},set onfullscreenerror(r){return Ut[("on"+sn[Yt.fullscreenerror]).toLowerCase()]=r}};const ka=I2,pt=new lo;pt.initData();pt.setViewport();pt.userData.specialCapture={frameRate:30,duration:5,program:"rotate"};window.addEventListener("resize",()=>pt.setViewport());pt.canvas.addEventListener("dblclick",R2);window.viewer=pt;window.model=pt.model;window.getFrame=pt.screenshot.getFrame;window.downloadFrames=Yu;window.saveAs=ql.exports.saveAs;window.THREE=D0;window.makeGif=async r=>{const{makeGif:e}=await nt(()=>import("./index.3a92bef7.js"),[]);return await e(r)};function R2(){!ka.fullscreenEnabled||(ka.fullscreenElement?ka.exitFullscreen():ka.requestFullscreen(pt.canvas))}function D2(){try{return window.self!==window.top}catch{return!0}}let qp="";const U_=D2(),F2=U_?!1:!window.location.hash.includes("showSettings=false"),O2=U_?!1:!window.location.hash.includes("showAC=false"),N2=r=>({showSettings:F2,toggleSettings:()=>r(e=>{e.showSettings=!e.showSettings}),loadingMsg:"",setLoadingMsg:e=>r(t=>{t.loadingMsg=e}),showTimeControl:O2,toggleTimeControl:()=>r(e=>{e.showTimeControl=!e.showTimeControl}),showFrameRate:!1,toggleFrameRate:()=>r(e=>{e.showFrameRate=!e.showFrameRate}),sidebar:{open:!0,toggle:()=>r(e=>{e.sidebar.open=!e.sidebar.open}),settings:{tab:"Model",setTab:e=>r(t=>{t.sidebar.settings.tab=e})},modal:{mode:"",handleSelect:void 0,open:(e,t)=>{qp=pt.loop.state,pt.loop.stop(),r(n=>{n.sidebar.modal.mode=e,n.sidebar.modal.handleSelect=t})},close:()=>{qp==="active"&&pt.loop.start(),r(e=>{e.sidebar.modal.mode="",e.sidebar.modal.handleSelect=void 0})}},manageMode:"single",setManageMode:e=>r(t=>{t.sidebar.manageMode=e})},chainMaker:{target:null,setTarget:e=>r(t=>{t.chainMaker.target=e})},dock:{mode:"",handleSelect:void 0,open:(e="",t)=>r(n=>{n.dock.mode=e,n.dock.handleSelect=t}),close:()=>r(e=>{e.dock.mode="",e.dock.handleSelect=void 0})}});var k2=0;function vn(r,e,t,n,i){var s,o,a={};for(o in e)o=="ref"?s=e[o]:a[o]=e[o];var l={type:r,props:a,key:t,ref:s,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:--k2,__source:i,__self:n};if(typeof r=="function"&&(s=r.defaultProps))for(o in s)a[o]===void 0&&(a[o]=s[o]);return Me.vnode&&Me.vnode(l),l}const z2=Ht(()=>nt(()=>import("./index.029e4f3f.js"),["assets/index.029e4f3f.js","assets/index.aa80096d.css","assets/TabBar.4f367cdc.js","assets/ButtonBase.324cbefb.js","assets/Gallery.adf6dce0.js","assets/Popover.9e542fb6.js","assets/createSvgIcon.f48dfdc6.js","assets/Box.7e076a6f.js","assets/DialogTitle.c93f1b7c.js","assets/ColorPicker.e1836353.js","assets/ColorPicker.a4b8921d.css","assets/ColorButton.ee288166.js","assets/Button.10b60749.js","assets/file2dataURL.883f7460.js"])),B2=Ht(()=>nt(()=>import("./index.d9b8aa71.js"),["assets/index.d9b8aa71.js","assets/styles.2ff56570.css","assets/lists.5e9376e3.js","assets/lists.4341b07e.css","assets/createSvgIcon.f48dfdc6.js","assets/ButtonBase.324cbefb.js","assets/Gallery.adf6dce0.js","assets/Popover.9e542fb6.js","assets/Box.7e076a6f.js","assets/DialogTitle.c93f1b7c.js","assets/Close.e3c29bca.js","assets/filterConfig.40627a45.js","assets/filterConfig.ea114570.css","assets/GlowToggle.35d02027.js","assets/GlowToggle.eb519626.css","assets/styles.5647af64.js","assets/styles.6d95f099.css","assets/index.59783713.js"])),U2=Ht(()=>nt(()=>import("./index.8e3f7435.js"),["assets/index.8e3f7435.js","assets/index.a584847b.css","assets/styles.2ff56570.css","assets/lists.5e9376e3.js","assets/lists.4341b07e.css","assets/createSvgIcon.f48dfdc6.js","assets/ButtonBase.324cbefb.js","assets/Gallery.adf6dce0.js","assets/Popover.9e542fb6.js","assets/Box.7e076a6f.js","assets/DialogTitle.c93f1b7c.js","assets/Close.e3c29bca.js","assets/Stretcher.21293eab.js","assets/Stretcher.c7840dc6.css","assets/TabBar.4f367cdc.js","assets/Button.10b60749.js","assets/ModelIcon.5a0b7166.js","assets/aniFunction.717b2e2d.js","assets/Selector.49b61404.js","assets/Selector.88a094c7.css","assets/GlowToggle.35d02027.js","assets/GlowToggle.eb519626.css","assets/useKey.8e4632ee.js","assets/file2dataURL.883f7460.js","assets/useToggleState.fb55bbed.js","assets/Check.7ac6f019.js"])),V2=Ht(()=>nt(()=>import("./index.5c6ca852.js"),["assets/index.5c6ca852.js","assets/styles.2ff56570.css","assets/AddWeapon.7ba2650d.js","assets/AddWeapon.45b642d6.css","assets/lists.5e9376e3.js","assets/lists.4341b07e.css","assets/createSvgIcon.f48dfdc6.js","assets/ButtonBase.324cbefb.js","assets/Gallery.adf6dce0.js","assets/Popover.9e542fb6.js","assets/Box.7e076a6f.js","assets/DialogTitle.c93f1b7c.js","assets/Close.e3c29bca.js","assets/filterConfig.40627a45.js","assets/filterConfig.ea114570.css","assets/GlowToggle.35d02027.js","assets/GlowToggle.eb519626.css","assets/index.59783713.js","assets/useToggleState.fb55bbed.js","assets/ModelIcon.5a0b7166.js"])),G2=Ht(()=>nt(()=>import("./ColorSelect.00ea9ccb.js"),["assets/ColorSelect.00ea9ccb.js","assets/ColorPicker.e1836353.js","assets/ColorPicker.a4b8921d.css","assets/ColorButton.ee288166.js","assets/Button.10b60749.js","assets/ButtonBase.324cbefb.js","assets/DialogTitle.c93f1b7c.js"])),H2=Ht(()=>nt(()=>import("./index.dece48b6.js"),["assets/index.dece48b6.js","assets/FaceSelect.edafc08a.js","assets/FaceSelect.febe3778.css","assets/useKey.8e4632ee.js","assets/FacePartSelector.63b3eb88.js","assets/Selector.49b61404.js","assets/Selector.88a094c7.css","assets/GlowToggle.35d02027.js","assets/GlowToggle.eb519626.css","assets/MeshMouthSelect.7f3765f2.js","assets/MeshMouthSelect.7f49998c.css","assets/Box.7e076a6f.js","assets/ButtonBase.324cbefb.js","assets/DialogTitle.c93f1b7c.js","assets/Button.10b60749.js"])),W2=Ht(()=>nt(()=>import("./index.181770c0.js"),["assets/index.181770c0.js","assets/styles.2ff56570.css","assets/FaceTexture.3118fac9.js","assets/useToggleState.fb55bbed.js","assets/lists.5e9376e3.js","assets/lists.4341b07e.css","assets/createSvgIcon.f48dfdc6.js","assets/ButtonBase.324cbefb.js","assets/Gallery.adf6dce0.js","assets/Popover.9e542fb6.js","assets/Box.7e076a6f.js","assets/DialogTitle.c93f1b7c.js","assets/Close.e3c29bca.js","assets/FacePartSelector.63b3eb88.js","assets/Selector.49b61404.js","assets/Selector.88a094c7.css","assets/GlowToggle.35d02027.js","assets/GlowToggle.eb519626.css","assets/filterConfig.40627a45.js","assets/filterConfig.ea114570.css","assets/styles.5647af64.js","assets/styles.6d95f099.css"])),X2=Ht(()=>nt(()=>import("./index.7190a767.js"),["assets/index.7190a767.js","assets/index.98b9a174.css","assets/styles.2ff56570.css","assets/useKey.8e4632ee.js","assets/Stretcher.21293eab.js","assets/Stretcher.c7840dc6.css","assets/BoneManager.9ddf6348.js","assets/BoneManager.bf3fbd2c.css","assets/ModelIcon.5a0b7166.js","assets/Accordion.07c88855.js","assets/Accordion.09fd7fc3.css","assets/useToggleState.fb55bbed.js","assets/createSvgIcon.f48dfdc6.js","assets/ButtonBase.324cbefb.js","assets/filterConfig.40627a45.js","assets/filterConfig.ea114570.css","assets/Gallery.adf6dce0.js","assets/Popover.9e542fb6.js","assets/Box.7e076a6f.js","assets/DialogTitle.c93f1b7c.js","assets/GlowToggle.35d02027.js","assets/GlowToggle.eb519626.css","assets/lists.5e9376e3.js","assets/lists.4341b07e.css","assets/Close.e3c29bca.js","assets/ColorButton.ee288166.js","assets/Button.10b60749.js","assets/SkipPrevious.e7da98b0.js","assets/FaceSelect.edafc08a.js","assets/FaceSelect.febe3778.css","assets/FacePartSelector.63b3eb88.js","assets/Selector.49b61404.js","assets/Selector.88a094c7.css","assets/MeshMouthSelect.7f3765f2.js","assets/MeshMouthSelect.7f49998c.css","assets/FaceTexture.3118fac9.js","assets/styles.5647af64.js","assets/styles.6d95f099.css","assets/AddWeapon.7ba2650d.js","assets/AddWeapon.45b642d6.css","assets/index.59783713.js"])),jp=Ht(()=>nt(()=>import("./index.da7b66b5.js"),["assets/index.da7b66b5.js","assets/index.045f3dd6.css","assets/MeshMouthSelect.7f3765f2.js","assets/MeshMouthSelect.7f49998c.css","assets/Box.7e076a6f.js","assets/ButtonBase.324cbefb.js","assets/DialogTitle.c93f1b7c.js","assets/Button.10b60749.js"])),$2=Ht(()=>nt(()=>import("./index.bb46f7dd.js"),["assets/index.bb46f7dd.js","assets/index.79f787e2.css","assets/styles.2ff56570.css","assets/useKey.8e4632ee.js","assets/Accordion.07c88855.js","assets/Accordion.09fd7fc3.css","assets/useToggleState.fb55bbed.js","assets/createSvgIcon.f48dfdc6.js","assets/ButtonBase.324cbefb.js","assets/ModelIcon.5a0b7166.js","assets/Button.10b60749.js","assets/Check.7ac6f019.js","assets/DialogTitle.c93f1b7c.js","assets/Box.7e076a6f.js"])),Yp={background:z2,model:B2,animation:U2,weapon:V2,color:G2,face:H2,faceTexture:W2,attachment:X2,target:$2,eye:({onSelect:r})=>vn(jp,{part:"eye",onSelect:r}),mouth:({onSelect:r})=>vn(jp,{part:"mouth",onSelect:r})},q2=(r,e)=>({Component:void 0,props:void 0,openModal:(t,n)=>r(i=>{i.props=n,i.Component=t}),close:()=>r(t=>{t.Component=void 0}),onClose:void 0,reset:()=>r(t=>{t.Component=t.props=t.onClose=void 0}),getInput:async t=>{if(!Yp[t])return null;const{close:n,reset:i}=e(),s=new Promise((o,a)=>{const l=(...c)=>o(c);r(c=>{c.onClose=()=>{a(),n()},c.props={onSelect:l,onAfterSelect:n},c.Component=Yp[t]})});try{return await s}catch{return null}finally{i()}},inputModel:()=>e().getInput("model"),inputAni:()=>e().getInput("animation"),inputColor:async()=>{const t=await e().getInput("color");return t==null?void 0:t[0]},inputTarget:()=>e().getInput("target"),inputEye:()=>e().getInput("eye"),inputMouth:()=>e().getInput("mouth")}),j2=r=>({activeModel:void 0,setActiveModel:e=>r({activeModel:e})}),Y2=r=>({open:!1,toggle:()=>r(e=>e.open=!e.open),target:null,setTarget:e=>r(t=>{!e||(e.userData.chain||(e.userData.chain=new Zn),t.target=e)})}),Z2=r=>(e,t,n)=>r(i=>e(Nv(i)),t,n),Xo=r=>nh(Z2(r)),Zu=Xo(N2),bC=nh(j2),wC=nh(Y2),MC=Xo(Bm),SC=Xo(Bm),J2=Xo(kv),AC=Xo(q2);function K2(){return new Worker("/dl-model/assets/fetchWorker.841d8105.js")}const Q2=r=>{const e=new K2;return new Promise(t=>{e.addEventListener("message",n=>{e.terminate(),t(n.data)}),e.postMessage(r)})};function V_(){return new Worker("/dl-model/assets/dbWorker.9464fd3f.js")}const G_=(r,e)=>{const t=new V_;return new Promise(n=>{t.addEventListener("message",()=>{n(),t.terminate()}),t.postMessage({type:"put",store:e,value:r})})};function eC(){return new Worker("/dl-model/assets/searchWorker.20599182.js")}async function tC(r,e="",t=["name"]){if(!e||!t.length)return r;const n=new eC;return new Promise(i=>{n.addEventListener("message",s=>{n.terminate(),i(s.data)}),n.postMessage({fullList:r,query:e,keys:t})})}const TC=async r=>{const e=Object.values(r).flat();await G_(e,"model"),console.info("Model DB Initialized")},EC=r=>jl({type:"get",store:"model",value:r}),CC=r=>jl({type:"search",store:"model",index:"name",value:r}),PC=async r=>{const t=(await jl({type:"getByKeyRange",store:"model",value:"c100000_00-c199999_99"})).filter(({id:n})=>!n.endsWith("h"));return tC(t,r)},nC=()=>jl({type:"getMap",store:"model",index:"name"}),jl=r=>{const e=new V_;return new Promise(t=>{e.addEventListener("message",n=>{e.terminate(),t(n.data)}),e.postMessage(r)})},Io={},iC=async()=>{if(Object.keys(Io).length)return;const r="ani-personal",e=(await Q2([r]))[r];Object.assign(Io,e)},H_=iC(),LC=r=>Io[r],rC=r=>{var e,t;return(t=(e=Io[r])==null?void 0:e[0])!=null?t:r.startsWith("c")?{name:"Bob",code:"CMN_MWM_03"}:null},IC=async()=>{const r=await nC();await H_;const e=Object.entries(Io).flatMap(([t,n])=>{const i=r.get(t);return n.map(s=>({...s,user:t,fullName:`${i} ${s.name}`}))});await G_(e,"animation")},sC="cccccc",oC="c100001_01",Zp=(r,e="Unknown")=>{const t=O_(r),{length:n}=t,i=t.map((s,o)=>{const{aniName:a,reps:l=1,timeScale:c=1,duration:u=[0,100],aniAction:h}=s,f=n>1?e+` #${o+1}`:e;return{id:gf(),name:f,aniName:a,reps:l,timeScale:c,duration:u,aniAction:h}});return Zn.from(i)},Jp={ts:{key:"timeScale",defaultValue:1},r:{key:"reps",defaultValue:1}},aC={"face.eyeIdx":"ei","face.mouthIdx":"mi"},RC=r=>r.map(lC).join(">"),lC=r=>{const{aniName:e}=r,t=cC(r),n=uC(r),i=hC(r);return`${e}${t}${n}${i}`},cC=r=>{const e=[];return Object.keys(Jp).forEach(t=>{const{key:n,defaultValue:i}=Jp[t];r[n]&&r[n]!==i&&e.push(`&${t}=${r[n]}`)}),e.join("")},uC=r=>{const{duration:e=[0,100]}=r,[t,n]=e;return t!==0?`&dur=${t}-${n}`:n===100?"":`&dur=${n}`},hC=r=>{const{aniAction:e}=r;if(!e.length)return"";const t=e.map(n=>{const{time:i,...s}=n,o=Object.entries(s).map(([a,l])=>{var c;return`${(c=aC[a])!=null?c:a}=${l}`});return`@${i}=(${o.join("/")})`});return"&"+t.join("&")};function fC(r){if(!(r!=null&&r.userData))return;const{type:e,id:t}=r,{name:n}=r.userData;r.userData.aniSelectState={category:e==="adventurer"?"Adv":"Personal",personalAni:{source:t,sourceName:n}}}function qc(){const r=decodeURI(window.location.hash),e=B_(r),t=Object.fromEntries(e);dC(t),pC(r)}function dC(r){const{bg:e=sC,showAC:t="true",showSettings:n="true"}=r;pt.background=e,Zu.setState({showTimeControl:Jf(t)}),Zu.setState({showSettings:Jf(n)})}async function pC(r){pt.disposeAllModels(),setTimeout(async()=>{var o;const e=r.includes("id=")?r:r+`/id=${oC}`,t=await pt.loadModelFromCode(e);pt.add(t);const n=t.type==="adventurer"?"Adv":"Personal";J2.getState().setCategory(n),fC(t);const{id:i}=t;if(!r.includes("camPos=")){const a=ZT(i);pt.camera.position.set(...a)}const s=KT(i);if(pt.controls.target.set(...s),r.includes("ani=")){const a=(o=t.animation.current.chainCode)!=null?o:"";a&&(t.userData.chain=Zp(a,"init"))}else{const a=rC(i);if(a){const{code:l,name:c}=a;t.animation.addChain(l),t.userData.chain=Zp(l,c)}}})}const mC=Ht(()=>nt(()=>import("./index.ba326c27.js"),["assets/index.ba326c27.js","assets/index.0f03617c.css","assets/styles.2ff56570.css","assets/createSvgIcon.f48dfdc6.js","assets/ButtonBase.324cbefb.js","assets/BoneManager.9ddf6348.js","assets/BoneManager.bf3fbd2c.css","assets/ModelIcon.5a0b7166.js","assets/Accordion.07c88855.js","assets/Accordion.09fd7fc3.css","assets/useToggleState.fb55bbed.js","assets/filterConfig.40627a45.js","assets/filterConfig.ea114570.css","assets/Gallery.adf6dce0.js","assets/Popover.9e542fb6.js","assets/Box.7e076a6f.js","assets/DialogTitle.c93f1b7c.js","assets/GlowToggle.35d02027.js","assets/GlowToggle.eb519626.css","assets/lists.5e9376e3.js","assets/lists.4341b07e.css","assets/Close.e3c29bca.js","assets/ColorButton.ee288166.js","assets/Button.10b60749.js","assets/SkipPrevious.e7da98b0.js","assets/useKey.8e4632ee.js","assets/FaceSelect.edafc08a.js","assets/FaceSelect.febe3778.css","assets/FacePartSelector.63b3eb88.js","assets/Selector.49b61404.js","assets/Selector.88a094c7.css","assets/MeshMouthSelect.7f3765f2.js","assets/MeshMouthSelect.7f49998c.css","assets/FaceTexture.3118fac9.js","assets/styles.5647af64.js","assets/styles.6d95f099.css","assets/AddWeapon.7ba2650d.js","assets/AddWeapon.45b642d6.css","assets/index.59783713.js","assets/TabBar.4f367cdc.js","assets/aniFunction.717b2e2d.js"])),gC=Ht(()=>nt(()=>import("./index.86563374.js"),["assets/index.86563374.js","assets/index.0a450c69.css","assets/useToggleState.fb55bbed.js","assets/GlowToggle.35d02027.js","assets/GlowToggle.eb519626.css","assets/Button.10b60749.js","assets/ButtonBase.324cbefb.js","assets/Popover.9e542fb6.js","assets/SkipPrevious.e7da98b0.js","assets/createSvgIcon.f48dfdc6.js","assets/Close.e3c29bca.js"]));function _C(){const r=bv(),e=yn(),t=yn(),{loadingMsg:n,showTimeControl:i,showSettings:s,showFrameRate:o}=Zu();return sr(()=>(r&&H_.then(qc),window.addEventListener("hashchange",qc),()=>window.removeEventListener("hashchange",qc))),sr(()=>{e.current.appendChild(pt.canvas),pt.stats.dom.style.position="",t.current.appendChild(pt.stats.dom)},[]),vn(An,{children:[s&&vn(Ki,{fallback:null,children:vn(mC,{})}),vn("div",{className:"mount",ref:a=>e.current=a}),vn("div",{className:"stats",style:{display:o?"unset":"none"},ref:a=>t.current=a}),n&&vn("div",{className:"loading-msg",children:n}),i&&vn(Ki,{fallback:null,children:vn(gC,{})})]})}ss(vn(_C,{}),document.getElementById("app"));export{G_ as $,ql as A,nt as B,Ip as C,v2 as D,_2 as E,wl as F,AC as G,RC as H,gf as I,Q2 as J,TC as K,H_ as L,IC as M,bv as N,yC as O,GT as P,mT as Q,ym as R,eh as S,pm as T,Dm as U,wm as V,hm as W,xm as X,dm as Y,nh as Z,sr as _,Ki as a,jl as a0,Rn as a1,vm as a2,Nv as a3,Fp as a4,F0 as a5,Bp as a6,PC as a7,CC as a8,tC as a9,bn as aA,Be as aB,po as aC,be as aD,Lh as aE,mo as aF,cl as aG,ul as aH,vh as aI,vr as aJ,Tt as aK,lr as aL,fo as aM,Ge as aN,Kr as aO,xC as aP,nl as aQ,Mn as aR,SC as aa,Ht as ab,KA as ac,LC as ad,ae,$l as af,q as ag,Gt as ah,Oo as ai,Nt as aj,A as ak,Up as al,ol as am,Pi as an,YE as ao,mt as ap,it as aq,ht as ar,Eh as as,Cg as at,Kn as au,Zi as av,Si as aw,Zt as ax,xi as ay,Qe as az,bC as b,Zp as c,Yp as d,vn as e,ZT as f,rC as g,KT as h,fC as i,J2 as j,xv as k,MC as l,xl as m,EC as n,wC as o,An as p,as as q,Pm as r,yn as s,Xc as t,Zu as u,pt as v,mm as w,Rm as x,bl as y,vf as z};
