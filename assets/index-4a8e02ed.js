import{_ as C,a as L,h as S,o}from"./jsxRuntime.module-9121d302.js";import{u as b}from"./useKey-ea23d921.js";import{b as y,f as D}from"./index-7e831e29.js";import{S as w}from"./Stretcher-961678e0.js";import{h as k,i as x}from"./BoneManager-98839e4d.js";import{h as E,v as l}from"./viewer-9239d58b.js";import{B as n}from"./Box-22a79bc4.js";import{a as N,b as q}from"./DialogTitle-c13aece2.js";import{S as I}from"./Gallery-74b65e41.js";import{M as K}from"./filterConfig-371af7a4.js";import{B as T}from"./Button-79e361e6.js";import"./index-d7a93f3d.js";import"./_commonjsHelpers-35101cd5.js";import"./compat.module-90d28d8c.js";import"./immer.esm-6fa25dee.js";import"./preload-helper-45408441.js";/* empty css               */import"./ModelIcon-6ce365e9.js";import"./Accordion-6424f84c.js";import"./useToggleState-3fb9d00b.js";import"./createSvgIcon-06820ebd.js";import"./ButtonBase-e35dbca3.js";import"./Popover-9fb2a3a1.js";import"./ColorButton-27ac9cef.js";import"./SkipPrevious-7f542b68.js";import"./Close-f2887c68.js";import"./FaceSelect-aad58ba2.js";import"./useIsMount-3cd333ef.js";import"./FacePartSelector-ce967422.js";import"./Selector-dc749ac1.js";import"./GlowToggle-14284aac.js";import"./MeshMouthSelect-35d7b358.js";import"./FaceTexture-7164a0c9.js";import"./lists-87486fd5.js";import"./styles-45a5e75d.js";import"./index-f60cacb5.js";import"./helper-09e63ffb.js";import"./AddWeapon-5bf02e12.js";import"./index-b3e77134.js";import"./initAniSelectState-54296060.js";import"./three-5c1cbd72.js";import"./CopyShader-e27bbfcf.js";import"./ShaderPass-8cbc6b59.js";import"./Pass-4a28857e.js";function Dt(){var p;const{activeModel:e}=y();if(!e)return null;const[h,u]=b(),{inputModel:f}=D(),a=C(()=>{}),i=["root",...((p=e==null?void 0:e.bones)==null?void 0:p.list)??[]],[m,c]=L(i[0]),g=E(e.attachment.list.map(t=>t.parentBone));S(()=>{if(!e)return;c("root"),a.current();const t=e.addEventListener("AttachmentChanged",u);return a.current=()=>e.removeEventListener("AttachmentChanged",t),a.current},[e]);const A=t=>{c(t.target.value)},s=async(t=m)=>{const d=await f();if(!d)return;const[v,B]=d,r=await l.loadDLModel(v);r.userData.name=B,e.attach(r,t==="root"?void 0:t),r.outline.code=e.outline.code,r.material.code=e.material.code,l.render()},M=()=>s();return o(n,{className:"AttachmentManager",children:[o(n,{className:"AttachmentManager-top",children:[o(N,{children:"Manage Attachments"}),o(n,{className:"AttachmentManager-add",children:[o(I,{onChange:A,value:m,className:"AttachmentManager-select",children:i.map(t=>o(K,{value:t,children:t},t))}),o(T,{title:"Add Attachment",variant:"contained",onClick:M,children:o(k,{})})]})]}),o(q,{className:"AttachmentManager-body",children:[o(w,{}),g.map(t=>o(x,{add:s,bone:t},t))]},h)]})}export{Dt as default};
