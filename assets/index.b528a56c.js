var Uv=Object.defineProperty;var Vv=(r,e,t)=>e in r?Uv(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var ln=(r,e,t)=>(Vv(r,typeof e!="symbol"?e+"":e,t),t);const Gv=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerpolicy&&(s.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?s.credentials="include":i.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}};Gv();var Ao,be,Hp,Ys,df,Wp,qa={},Xp=[],Hv=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function Vn(r,e){for(var t in e)r[t]=e[t];return r}function $p(r){var e=r.parentNode;e&&e.removeChild(r)}function Ln(r,e,t){var n,i,s,o={};for(s in e)s=="key"?n=e[s]:s=="ref"?i=e[s]:o[s]=e[s];if(arguments.length>2&&(o.children=arguments.length>3?Ao.call(arguments,2):t),typeof r=="function"&&r.defaultProps!=null)for(s in r.defaultProps)o[s]===void 0&&(o[s]=r.defaultProps[s]);return Zs(r,o,n,i,null)}function Zs(r,e,t,n,i){var s={type:r,props:e,key:t,ref:n,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:i==null?++Hp:i};return i==null&&be.vnode!=null&&be.vnode(s),s}function qp(){return{current:null}}function xn(r){return r.children}function _n(r,e){this.props=r,this.context=e}function Qr(r,e){if(e==null)return r.__?Qr(r.__,r.__.__k.indexOf(r)+1):null;for(var t;e<r.__k.length;e++)if((t=r.__k[e])!=null&&t.__e!=null)return t.__e;return typeof r.type=="function"?Qr(r):null}function jp(r){var e,t;if((r=r.__)!=null&&r.__c!=null){for(r.__e=r.__c.base=null,e=0;e<r.__k.length;e++)if((t=r.__k[e])!=null&&t.__e!=null){r.__e=r.__c.base=t.__e;break}return jp(r)}}function Gl(r){(!r.__d&&(r.__d=!0)&&Ys.push(r)&&!ja.__r++||df!==be.debounceRendering)&&((df=be.debounceRendering)||setTimeout)(ja)}function ja(){for(var r;ja.__r=Ys.length;)r=Ys.sort(function(e,t){return e.__v.__b-t.__v.__b}),Ys=[],r.some(function(e){var t,n,i,s,o,a;e.__d&&(o=(s=(t=e).__v).__e,(a=t.__P)&&(n=[],(i=Vn({},s)).__v=s.__v+1,Wu(a,s,i,t.__n,a.ownerSVGElement!==void 0,s.__h!=null?[o]:null,n,o==null?Qr(s):o,s.__h),Kp(n,s),s.__e!=o&&jp(s)))})}function Yp(r,e,t,n,i,s,o,a,c,l){var u,h,f,d,p,m,g,v=n&&n.__k||Xp,_=v.length;for(t.__k=[],u=0;u<e.length;u++)if((d=t.__k[u]=(d=e[u])==null||typeof d=="boolean"?null:typeof d=="string"||typeof d=="number"||typeof d=="bigint"?Zs(null,d,null,null,d):Array.isArray(d)?Zs(xn,{children:d},null,null,null):d.__b>0?Zs(d.type,d.props,d.key,null,d.__v):d)!=null){if(d.__=t,d.__b=t.__b+1,(f=v[u])===null||f&&d.key==f.key&&d.type===f.type)v[u]=void 0;else for(h=0;h<_;h++){if((f=v[h])&&d.key==f.key&&d.type===f.type){v[h]=void 0;break}f=null}Wu(r,d,f=f||qa,i,s,o,a,c,l),p=d.__e,(h=d.ref)&&f.ref!=h&&(g||(g=[]),f.ref&&g.push(f.ref,null,d),g.push(h,d.__c||p,d)),p!=null?(m==null&&(m=p),typeof d.type=="function"&&d.__k===f.__k?d.__d=c=Zp(d,c,r):c=Jp(r,d,f,v,p,c),typeof t.type=="function"&&(t.__d=c)):c&&f.__e==c&&c.parentNode!=r&&(c=Qr(f))}for(t.__e=m,u=_;u--;)v[u]!=null&&(typeof t.type=="function"&&v[u].__e!=null&&v[u].__e==t.__d&&(t.__d=Qr(n,u+1)),em(v[u],v[u]));if(g)for(u=0;u<g.length;u++)Qp(g[u],g[++u],g[++u])}function Zp(r,e,t){for(var n,i=r.__k,s=0;i&&s<i.length;s++)(n=i[s])&&(n.__=r,e=typeof n.type=="function"?Zp(n,e,t):Jp(t,n,n,i,n.__e,e));return e}function $n(r,e){return e=e||[],r==null||typeof r=="boolean"||(Array.isArray(r)?r.some(function(t){$n(t,e)}):e.push(r)),e}function Jp(r,e,t,n,i,s){var o,a,c;if(e.__d!==void 0)o=e.__d,e.__d=void 0;else if(t==null||i!=s||i.parentNode==null)e:if(s==null||s.parentNode!==r)r.appendChild(i),o=null;else{for(a=s,c=0;(a=a.nextSibling)&&c<n.length;c+=2)if(a==i)break e;r.insertBefore(i,s),o=s}return o!==void 0?o:i.nextSibling}function Wv(r,e,t,n,i){var s;for(s in t)s==="children"||s==="key"||s in e||Ya(r,s,null,t[s],n);for(s in e)i&&typeof e[s]!="function"||s==="children"||s==="key"||s==="value"||s==="checked"||t[s]===e[s]||Ya(r,s,e[s],t[s],n)}function pf(r,e,t){e[0]==="-"?r.setProperty(e,t):r[e]=t==null?"":typeof t!="number"||Hv.test(e)?t:t+"px"}function Ya(r,e,t,n,i){var s;e:if(e==="style")if(typeof t=="string")r.style.cssText=t;else{if(typeof n=="string"&&(r.style.cssText=n=""),n)for(e in n)t&&e in t||pf(r.style,e,"");if(t)for(e in t)n&&t[e]===n[e]||pf(r.style,e,t[e])}else if(e[0]==="o"&&e[1]==="n")s=e!==(e=e.replace(/Capture$/,"")),e=e.toLowerCase()in r?e.toLowerCase().slice(2):e.slice(2),r.l||(r.l={}),r.l[e+s]=t,t?n||r.addEventListener(e,s?gf:mf,s):r.removeEventListener(e,s?gf:mf,s);else if(e!=="dangerouslySetInnerHTML"){if(i)e=e.replace(/xlink(H|:h)/,"h").replace(/sName$/,"s");else if(e!=="href"&&e!=="list"&&e!=="form"&&e!=="tabIndex"&&e!=="download"&&e in r)try{r[e]=t==null?"":t;break e}catch{}typeof t=="function"||(t!=null&&(t!==!1||e[0]==="a"&&e[1]==="r")?r.setAttribute(e,t):r.removeAttribute(e))}}function mf(r){this.l[r.type+!1](be.event?be.event(r):r)}function gf(r){this.l[r.type+!0](be.event?be.event(r):r)}function Wu(r,e,t,n,i,s,o,a,c){var l,u,h,f,d,p,m,g,v,_,y,x,w,M=e.type;if(e.constructor!==void 0)return null;t.__h!=null&&(c=t.__h,a=e.__e=t.__e,e.__h=null,s=[a]),(l=be.__b)&&l(e);try{e:if(typeof M=="function"){if(g=e.props,v=(l=M.contextType)&&n[l.__c],_=l?v?v.props.value:l.__:n,t.__c?m=(u=e.__c=t.__c).__=u.__E:("prototype"in M&&M.prototype.render?e.__c=u=new M(g,_):(e.__c=u=new _n(g,_),u.constructor=M,u.render=$v),v&&v.sub(u),u.props=g,u.state||(u.state={}),u.context=_,u.__n=n,h=u.__d=!0,u.__h=[]),u.__s==null&&(u.__s=u.state),M.getDerivedStateFromProps!=null&&(u.__s==u.state&&(u.__s=Vn({},u.__s)),Vn(u.__s,M.getDerivedStateFromProps(g,u.__s))),f=u.props,d=u.state,h)M.getDerivedStateFromProps==null&&u.componentWillMount!=null&&u.componentWillMount(),u.componentDidMount!=null&&u.__h.push(u.componentDidMount);else{if(M.getDerivedStateFromProps==null&&g!==f&&u.componentWillReceiveProps!=null&&u.componentWillReceiveProps(g,_),!u.__e&&u.shouldComponentUpdate!=null&&u.shouldComponentUpdate(g,u.__s,_)===!1||e.__v===t.__v){u.props=g,u.state=u.__s,e.__v!==t.__v&&(u.__d=!1),u.__v=e,e.__e=t.__e,e.__k=t.__k,e.__k.forEach(function(P){P&&(P.__=e)}),u.__h.length&&o.push(u);break e}u.componentWillUpdate!=null&&u.componentWillUpdate(g,u.__s,_),u.componentDidUpdate!=null&&u.__h.push(function(){u.componentDidUpdate(f,d,p)})}if(u.context=_,u.props=g,u.__v=e,u.__P=r,y=be.__r,x=0,"prototype"in M&&M.prototype.render)u.state=u.__s,u.__d=!1,y&&y(e),l=u.render(u.props,u.state,u.context);else do u.__d=!1,y&&y(e),l=u.render(u.props,u.state,u.context),u.state=u.__s;while(u.__d&&++x<25);u.state=u.__s,u.getChildContext!=null&&(n=Vn(Vn({},n),u.getChildContext())),h||u.getSnapshotBeforeUpdate==null||(p=u.getSnapshotBeforeUpdate(f,d)),w=l!=null&&l.type===xn&&l.key==null?l.props.children:l,Yp(r,Array.isArray(w)?w:[w],e,t,n,i,s,o,a,c),u.base=e.__e,e.__h=null,u.__h.length&&o.push(u),m&&(u.__E=u.__=null),u.__e=!1}else s==null&&e.__v===t.__v?(e.__k=t.__k,e.__e=t.__e):e.__e=Xv(t.__e,e,t,n,i,s,o,c);(l=be.diffed)&&l(e)}catch(P){e.__v=null,(c||s!=null)&&(e.__e=a,e.__h=!!c,s[s.indexOf(a)]=null),be.__e(P,e,t)}}function Kp(r,e){be.__c&&be.__c(e,r),r.some(function(t){try{r=t.__h,t.__h=[],r.some(function(n){n.call(t)})}catch(n){be.__e(n,t.__v)}})}function Xv(r,e,t,n,i,s,o,a){var c,l,u,h=t.props,f=e.props,d=e.type,p=0;if(d==="svg"&&(i=!0),s!=null){for(;p<s.length;p++)if((c=s[p])&&"setAttribute"in c==!!d&&(d?c.localName===d:c.nodeType===3)){r=c,s[p]=null;break}}if(r==null){if(d===null)return document.createTextNode(f);r=i?document.createElementNS("http://www.w3.org/2000/svg",d):document.createElement(d,f.is&&f),s=null,a=!1}if(d===null)h===f||a&&r.data===f||(r.data=f);else{if(s=s&&Ao.call(r.childNodes),l=(h=t.props||qa).dangerouslySetInnerHTML,u=f.dangerouslySetInnerHTML,!a){if(s!=null)for(h={},p=0;p<r.attributes.length;p++)h[r.attributes[p].name]=r.attributes[p].value;(u||l)&&(u&&(l&&u.__html==l.__html||u.__html===r.innerHTML)||(r.innerHTML=u&&u.__html||""))}if(Wv(r,f,h,i,a),u)e.__k=[];else if(p=e.props.children,Yp(r,Array.isArray(p)?p:[p],e,t,n,i&&d!=="foreignObject",s,o,s?s[0]:t.__k&&Qr(t,0),a),s!=null)for(p=s.length;p--;)s[p]!=null&&$p(s[p]);a||("value"in f&&(p=f.value)!==void 0&&(p!==r.value||d==="progress"&&!p||d==="option"&&p!==h.value)&&Ya(r,"value",p,h.value,!1),"checked"in f&&(p=f.checked)!==void 0&&p!==r.checked&&Ya(r,"checked",p,h.checked,!1))}return r}function Qp(r,e,t){try{typeof r=="function"?r(e):r.current=e}catch(n){be.__e(n,t)}}function em(r,e,t){var n,i;if(be.unmount&&be.unmount(r),(n=r.ref)&&(n.current&&n.current!==r.__e||Qp(n,null,e)),(n=r.__c)!=null){if(n.componentWillUnmount)try{n.componentWillUnmount()}catch(s){be.__e(s,e)}n.base=n.__P=null}if(n=r.__k)for(i=0;i<n.length;i++)n[i]&&em(n[i],e,typeof r.type!="function");t||r.__e==null||$p(r.__e),r.__e=r.__d=void 0}function $v(r,e,t){return this.constructor(r,t)}function es(r,e,t){var n,i,s;be.__&&be.__(r,e),i=(n=typeof t=="function")?null:t&&t.__k||e.__k,s=[],Wu(e,r=(!n&&t||e).__k=Ln(xn,null,[r]),i||qa,qa,e.ownerSVGElement!==void 0,!n&&t?[t]:i?null:e.firstChild?Ao.call(e.childNodes):null,s,!n&&t?t:i?i.__e:e.firstChild,n),Kp(s,r)}function tm(r,e){es(r,e,tm)}function qv(r,e,t){var n,i,s,o=Vn({},r.props);for(s in e)s=="key"?n=e[s]:s=="ref"?i=e[s]:o[s]=e[s];return arguments.length>2&&(o.children=arguments.length>3?Ao.call(arguments,2):t),Zs(r.type,o,n||r.key,i||r.ref,null)}function nm(r,e){var t={__c:e="__cC"+Wp++,__:r,Consumer:function(n,i){return n.children(i)},Provider:function(n){var i,s;return this.getChildContext||(i=[],(s={})[e]=this,this.getChildContext=function(){return s},this.shouldComponentUpdate=function(o){this.props.value!==o.value&&i.some(Gl)},this.sub=function(o){i.push(o);var a=o.componentWillUnmount;o.componentWillUnmount=function(){i.splice(i.indexOf(o),1),a&&a.call(o)}}),n.children}};return t.Provider.__=t.Consumer.contextType=t}Ao=Xp.slice,be={__e:function(r,e,t,n){for(var i,s,o;e=e.__;)if((i=e.__c)&&!i.__)try{if((s=i.constructor)&&s.getDerivedStateFromError!=null&&(i.setState(s.getDerivedStateFromError(r)),o=i.__d),i.componentDidCatch!=null&&(i.componentDidCatch(r,n||{}),o=i.__d),o)return i.__E=i}catch(a){r=a}throw r}},Hp=0,_n.prototype.setState=function(r,e){var t;t=this.__s!=null&&this.__s!==this.state?this.__s:this.__s=Vn({},this.state),typeof r=="function"&&(r=r(Vn({},t),this.props)),r&&Vn(t,r),r!=null&&this.__v&&(e&&this.__h.push(e),Gl(this))},_n.prototype.forceUpdate=function(r){this.__v&&(this.__e=!0,r&&this.__h.push(r),Gl(this))},_n.prototype.render=xn,Ys=[],ja.__r=0,Wp=0;const jv="modulepreload",Yv=function(r){return"/dl-model/"+r},vf={},it=function(e,t,n){return!t||t.length===0?e():Promise.all(t.map(i=>{if(i=Yv(i),i in vf)return;vf[i]=!0;const s=i.endsWith(".css"),o=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${i}"]${o}`))return;const a=document.createElement("link");if(a.rel=s?"stylesheet":jv,s||(a.as="script",a.crossOrigin=""),a.href=i,document.head.appendChild(a),s)return new Promise((c,l)=>{a.addEventListener("load",c),a.addEventListener("error",()=>l(new Error(`Unable to preload CSS for ${i}`)))})})).then(()=>e())};var fr,vt,qc,_f,ts=0,im=[],Ra=[],yf=be.__b,xf=be.__r,bf=be.diffed,wf=be.__c,Mf=be.unmount;function As(r,e){be.__h&&be.__h(vt,r,ts||e),ts=0;var t=vt.__H||(vt.__H={__:[],__h:[]});return r>=t.__.length&&t.__.push({__V:Ra}),t.__[r]}function mc(r){return ts=1,gc(am,r)}function gc(r,e,t){var n=As(fr++,2);return n.t=r,n.__c||(n.__=[t?t(e):am(void 0,e),function(i){var s=n.t(n.__[0],i);n.__[0]!==s&&(n.__=[s,n.__[1]],n.__c.setState({}))}],n.__c=vt),n.__}function Qi(r,e){var t=As(fr++,3);!be.__s&&$u(t.__H,e)&&(t.__=r,t.u=e,vt.__H.__h.push(t))}function ns(r,e){var t=As(fr++,4);!be.__s&&$u(t.__H,e)&&(t.__=r,t.u=e,vt.__h.push(t))}function pn(r){return ts=5,vc(function(){return{current:r}},[])}function rm(r,e,t){ts=6,ns(function(){return typeof r=="function"?(r(e()),function(){return r(null)}):r?(r.current=e(),function(){return r.current=null}):void 0},t==null?t:t.concat(r))}function vc(r,e){var t=As(fr++,7);return $u(t.__H,e)?(t.__V=r(),t.u=e,t.__h=r,t.__V):t.__}function sm(r,e){return ts=8,vc(function(){return r},e)}function om(r){var e=vt.context[r.__c],t=As(fr++,9);return t.c=r,e?(t.__==null&&(t.__=!0,e.sub(vt)),e.props.value):r.__}function Xu(r,e){be.useDebugValue&&be.useDebugValue(e?e(r):r)}function Zv(r){var e=As(fr++,10),t=mc();return e.__=r,vt.componentDidCatch||(vt.componentDidCatch=function(n){e.__&&e.__(n),t[1](n)}),[t[0],function(){t[1](void 0)}]}function Jv(){for(var r;r=im.shift();)if(r.__P)try{r.__H.__h.forEach(Da),r.__H.__h.forEach(Hl),r.__H.__h=[]}catch(e){r.__H.__h=[],be.__e(e,r.__v)}}be.__b=function(r){vt=null,yf&&yf(r)},be.__r=function(r){xf&&xf(r),fr=0;var e=(vt=r.__c).__H;e&&(qc===vt?(e.__h=[],vt.__h=[],e.__.forEach(function(t){t.__V=Ra,t.u=void 0})):(e.__h.forEach(Da),e.__h.forEach(Hl),e.__h=[])),qc=vt},be.diffed=function(r){bf&&bf(r);var e=r.__c;e&&e.__H&&(e.__H.__h.length&&(im.push(e)!==1&&_f===be.requestAnimationFrame||((_f=be.requestAnimationFrame)||function(t){var n,i=function(){clearTimeout(s),Sf&&cancelAnimationFrame(n),setTimeout(t)},s=setTimeout(i,100);Sf&&(n=requestAnimationFrame(i))})(Jv)),e.__H.__.forEach(function(t){t.u&&(t.__H=t.u),t.__V!==Ra&&(t.__=t.__V),t.u=void 0,t.__V=Ra})),qc=vt=null},be.__c=function(r,e){e.some(function(t){try{t.__h.forEach(Da),t.__h=t.__h.filter(function(n){return!n.__||Hl(n)})}catch(n){e.some(function(i){i.__h&&(i.__h=[])}),e=[],be.__e(n,t.__v)}}),wf&&wf(r,e)},be.unmount=function(r){Mf&&Mf(r);var e,t=r.__c;t&&t.__H&&(t.__H.__.forEach(function(n){try{Da(n)}catch(i){e=i}}),e&&be.__e(e,t.__v))};var Sf=typeof requestAnimationFrame=="function";function Da(r){var e=vt,t=r.__c;typeof t=="function"&&(r.__c=void 0,t()),vt=e}function Hl(r){var e=vt;r.__c=r.__(),vt=e}function $u(r,e){return!r||r.length!==e.length||e.some(function(t,n){return t!==r[n]})}function am(r,e){return typeof e=="function"?e(r):e}function cm(r,e){for(var t in e)r[t]=e[t];return r}function Wl(r,e){for(var t in r)if(t!=="__source"&&!(t in e))return!0;for(var n in e)if(n!=="__source"&&r[n]!==e[n])return!0;return!1}function Za(r){this.props=r}function lm(r,e){function t(i){var s=this.props.ref,o=s==i.ref;return!o&&s&&(s.call?s(null):s.current=null),e?!e(this.props,i)||!o:Wl(this.props,i)}function n(i){return this.shouldComponentUpdate=t,Ln(r,i)}return n.displayName="Memo("+(r.displayName||r.name)+")",n.prototype.isReactComponent=!0,n.__f=!0,n}(Za.prototype=new _n).isPureReactComponent=!0,Za.prototype.shouldComponentUpdate=function(r,e){return Wl(this.props,r)||Wl(this.state,e)};var Af=be.__b;be.__b=function(r){r.type&&r.type.__f&&r.ref&&(r.props.ref=r.ref,r.ref=null),Af&&Af(r)};var Kv=typeof Symbol<"u"&&Symbol.for&&Symbol.for("react.forward_ref")||3911;function um(r){function e(t){var n=cm({},t);return delete n.ref,r(n,t.ref||null)}return e.$$typeof=Kv,e.render=e,e.prototype.isReactComponent=e.__f=!0,e.displayName="ForwardRef("+(r.displayName||r.name)+")",e}var Tf=function(r,e){return r==null?null:$n($n(r).map(e))},hm={map:Tf,forEach:Tf,count:function(r){return r?$n(r).length:0},only:function(r){var e=$n(r);if(e.length!==1)throw"Children.only";return e[0]},toArray:$n},Qv=be.__e;be.__e=function(r,e,t,n){if(r.then){for(var i,s=e;s=s.__;)if((i=s.__c)&&i.__c)return e.__e==null&&(e.__e=t.__e,e.__k=t.__k),i.__c(r,e)}Qv(r,e,t,n)};var Ef=be.unmount;function $i(){this.__u=0,this.t=null,this.__b=null}function fm(r){var e=r.__.__c;return e&&e.__a&&e.__a(r)}function Ht(r){var e,t,n;function i(s){if(e||(e=r()).then(function(o){t=o.default||o},function(o){n=o}),n)throw n;if(!t)throw e;return Ln(t,s)}return i.displayName="Lazy",i.__f=!0,i}function jr(){this.u=null,this.o=null}be.unmount=function(r){var e=r.__c;e&&e.__R&&e.__R(),e&&r.__h===!0&&(r.type=null),Ef&&Ef(r)},($i.prototype=new _n).__c=function(r,e){var t=e.__c,n=this;n.t==null&&(n.t=[]),n.t.push(t);var i=fm(n.__v),s=!1,o=function(){s||(s=!0,t.__R=null,i?i(a):a())};t.__R=o;var a=function(){if(!--n.__u){if(n.state.__a){var l=n.state.__a;n.__v.__k[0]=function h(f,d,p){return f&&(f.__v=null,f.__k=f.__k&&f.__k.map(function(m){return h(m,d,p)}),f.__c&&f.__c.__P===d&&(f.__e&&p.insertBefore(f.__e,f.__d),f.__c.__e=!0,f.__c.__P=p)),f}(l,l.__c.__P,l.__c.__O)}var u;for(n.setState({__a:n.__b=null});u=n.t.pop();)u.forceUpdate()}},c=e.__h===!0;n.__u++||c||n.setState({__a:n.__b=n.__v.__k[0]}),r.then(o,o)},$i.prototype.componentWillUnmount=function(){this.t=[]},$i.prototype.render=function(r,e){if(this.__b){if(this.__v.__k){var t=document.createElement("div"),n=this.__v.__k[0].__c;this.__v.__k[0]=function s(o,a,c){return o&&(o.__c&&o.__c.__H&&(o.__c.__H.__.forEach(function(l){typeof l.__c=="function"&&l.__c()}),o.__c.__H=null),(o=cm({},o)).__c!=null&&(o.__c.__P===c&&(o.__c.__P=a),o.__c=null),o.__k=o.__k&&o.__k.map(function(l){return s(l,a,c)})),o}(this.__b,t,n.__O=n.__P)}this.__b=null}var i=e.__a&&Ln(xn,null,r.fallback);return i&&(i.__h=null),[Ln(xn,null,e.__a?null:r.children),i]};var Cf=function(r,e,t){if(++t[1]===t[0]&&r.o.delete(e),r.props.revealOrder&&(r.props.revealOrder[0]!=="t"||!r.o.size))for(t=r.u;t;){for(;t.length>3;)t.pop()();if(t[1]<t[0])break;r.u=t=t[2]}};function e_(r){return this.getChildContext=function(){return r.context},r.children}function t_(r){var e=this,t=r.i;e.componentWillUnmount=function(){es(null,e.l),e.l=null,e.i=null},e.i&&e.i!==t&&e.componentWillUnmount(),r.__v?(e.l||(e.i=t,e.l={nodeType:1,parentNode:t,childNodes:[],appendChild:function(n){this.childNodes.push(n),e.i.appendChild(n)},insertBefore:function(n,i){this.childNodes.push(n),e.i.appendChild(n)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),e.i.removeChild(n)}}),es(Ln(e_,{context:e.context},r.__v),e.l)):e.l&&e.componentWillUnmount()}function dm(r,e){var t=Ln(t_,{__v:r,i:e});return t.containerInfo=e,t}(jr.prototype=new _n).__a=function(r){var e=this,t=fm(e.__v),n=e.o.get(r);return n[0]++,function(i){var s=function(){e.props.revealOrder?(n.push(i),Cf(e,r,n)):i()};t?t(s):s()}},jr.prototype.render=function(r){this.u=null,this.o=new Map;var e=$n(r.children);r.revealOrder&&r.revealOrder[0]==="b"&&e.reverse();for(var t=e.length;t--;)this.o.set(e[t],this.u=[1,0,this.u]);return r.children},jr.prototype.componentDidUpdate=jr.prototype.componentDidMount=function(){var r=this;this.o.forEach(function(e,t){Cf(r,t,e)})};var pm=typeof Symbol<"u"&&Symbol.for&&Symbol.for("react.element")||60103,n_=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|shape|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,i_=typeof document<"u",r_=function(r){return(typeof Symbol<"u"&&typeof Symbol()=="symbol"?/fil|che|rad/i:/fil|che|ra/i).test(r)};function mm(r,e,t){return e.__k==null&&(e.textContent=""),es(r,e),typeof t=="function"&&t(),r?r.__c:null}function gm(r,e,t){return tm(r,e),typeof t=="function"&&t(),r?r.__c:null}_n.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach(function(r){Object.defineProperty(_n.prototype,r,{configurable:!0,get:function(){return this["UNSAFE_"+r]},set:function(e){Object.defineProperty(this,r,{configurable:!0,writable:!0,value:e})}})});var Pf=be.event;function s_(){}function o_(){return this.cancelBubble}function a_(){return this.defaultPrevented}be.event=function(r){return Pf&&(r=Pf(r)),r.persist=s_,r.isPropagationStopped=o_,r.isDefaultPrevented=a_,r.nativeEvent=r};var vm,Lf={configurable:!0,get:function(){return this.class}},If=be.vnode;be.vnode=function(r){var e=r.type,t=r.props,n=t;if(typeof e=="string"){var i=e.indexOf("-")===-1;for(var s in n={},t){var o=t[s];i_&&s==="children"&&e==="noscript"||s==="value"&&"defaultValue"in t&&o==null||(s==="defaultValue"&&"value"in t&&t.value==null?s="value":s==="download"&&o===!0?o="":/ondoubleclick/i.test(s)?s="ondblclick":/^onchange(textarea|input)/i.test(s+e)&&!r_(t.type)?s="oninput":/^onfocus$/i.test(s)?s="onfocusin":/^onblur$/i.test(s)?s="onfocusout":/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(s)?s=s.toLowerCase():i&&n_.test(s)?s=s.replace(/[A-Z0-9]/,"-$&").toLowerCase():o===null&&(o=void 0),/^oninput$/i.test(s)&&(s=s.toLowerCase(),n[s]&&(s="oninputCapture")),n[s]=o)}e=="select"&&n.multiple&&Array.isArray(n.value)&&(n.value=$n(t.children).forEach(function(a){a.props.selected=n.value.indexOf(a.props.value)!=-1})),e=="select"&&n.defaultValue!=null&&(n.value=$n(t.children).forEach(function(a){a.props.selected=n.multiple?n.defaultValue.indexOf(a.props.value)!=-1:n.defaultValue==a.props.value})),r.props=n,t.class!=t.className&&(Lf.enumerable="className"in t,t.className!=null&&(n.class=t.className),Object.defineProperty(n,"className",Lf))}r.$$typeof=pm,If&&If(r)};var Rf=be.__r;be.__r=function(r){Rf&&Rf(r),vm=r.__c};var _m={ReactCurrentDispatcher:{current:{readContext:function(r){return vm.__n[r.__c].props.value}}}},c_="17.0.2";function ym(r){return Ln.bind(null,r)}function qu(r){return!!r&&r.$$typeof===pm}function xm(r){return qu(r)?qv.apply(null,arguments):r}function bm(r){return!!r.__k&&(es(null,r),!0)}function wm(r){return r&&(r.base||r.nodeType===1&&r)||null}var Mm=function(r,e){return r(e)},Sm=function(r,e){return r(e)},l_=xn;function ju(r){r()}function Am(r){return r}function Tm(){return[!1,ju]}var u_=ns;function Em(r,e){var t=mc(e),n=t[0],i=t[1];return Qi(function(){return r(function(){i(e())})},[r,e]),n}const h_={useState:mc,useReducer:gc,useEffect:Qi,useLayoutEffect:ns,useInsertionEffect:ns,useTransition:Tm,useDeferredValue:Am,useSyncExternalStore:Em,startTransition:ju,useRef:pn,useImperativeHandle:rm,useMemo:vc,useCallback:sm,useContext:om,useDebugValue:Xu,version:"17.0.2",Children:hm,render:mm,hydrate:gm,unmountComponentAtNode:bm,createPortal:dm,createElement:Ln,createContext:nm,createFactory:ym,cloneElement:xm,createRef:qp,Fragment:xn,isValidElement:qu,findDOMNode:wm,Component:_n,PureComponent:Za,memo:lm,forwardRef:um,flushSync:Sm,unstable_batchedUpdates:Mm,StrictMode:xn,Suspense:$i,SuspenseList:jr,lazy:Ht,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:_m},cC=Object.freeze(Object.defineProperty({__proto__:null,default:h_,startTransition:ju,useDeferredValue:Am,useTransition:Tm,useInsertionEffect:u_,useSyncExternalStore:Em,version:c_,Children:hm,render:mm,hydrate:gm,unmountComponentAtNode:bm,createPortal:dm,createFactory:ym,cloneElement:xm,isValidElement:qu,findDOMNode:wm,PureComponent:Za,memo:lm,forwardRef:um,flushSync:Sm,unstable_batchedUpdates:Mm,StrictMode:l_,Suspense:$i,SuspenseList:jr,lazy:Ht,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:_m,createElement:Ln,createContext:nm,createRef:qp,Fragment:xn,Component:_n,useState:mc,useReducer:gc,useEffect:Qi,useLayoutEffect:ns,useRef:pn,useImperativeHandle:rm,useMemo:vc,useCallback:sm,useContext:om,useDebugValue:Xu,useErrorBoundary:Zv},Symbol.toStringTag,{value:"Module"})),f_=()=>{const r=pn(!0);return Qi(()=>{r.current=!1},[]),r.current};function d_(r){let e;const t=new Set,n=(l,u)=>{const h=typeof l=="function"?l(e):l;if(h!==e){const f=e;e=u?h:Object.assign({},e,h),t.forEach(d=>d(e,f))}},i=()=>e,s=(l,u=i,h=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let f=u(e);function d(){const p=u(e);if(!h(f,p)){const m=f;l(f=p,m)}}return t.add(d),()=>t.delete(d)},c={setState:n,getState:i,subscribe:(l,u,h)=>u||h?s(l,u,h):(t.add(l),()=>t.delete(l)),destroy:()=>t.clear()};return e=r(n,i,c),c}const p_=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),Df=p_?Qi:ns;function Yu(r){const e=typeof r=="function"?d_(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=gc(g=>g+1,0),o=e.getState(),a=pn(o),c=pn(n),l=pn(i),u=pn(!1),h=pn();h.current===void 0&&(h.current=n(o));let f,d=!1;(a.current!==o||c.current!==n||l.current!==i||u.current)&&(f=n(o),d=!i(h.current,f)),Df(()=>{d&&(h.current=f),a.current=o,c.current=n,l.current=i,u.current=!1});const p=pn(o);Df(()=>{const g=()=>{try{const _=e.getState(),y=c.current(_);l.current(h.current,y)||(a.current=_,h.current=y,s())}catch{u.current=!0,s()}},v=e.subscribe(g);return e.getState()!==p.current&&g(),v},[]);const m=d?f:h.current;return Xu(m),m};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}function mn(r){for(var e=arguments.length,t=Array(e>1?e-1:0),n=1;n<e;n++)t[n-1]=arguments[n];throw Error("[Immer] minified error nr: "+r+(t.length?" "+t.map(function(i){return"'"+i+"'"}).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function is(r){return!!r&&!!r[Jt]}function er(r){return!!r&&(function(e){if(!e||typeof e!="object")return!1;var t=Object.getPrototypeOf(e);if(t===null)return!0;var n=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return n===Object||typeof n=="function"&&Function.toString.call(n)===w_}(r)||Array.isArray(r)||!!r[Vf]||!!r.constructor[Vf]||Zu(r)||Ju(r))}function io(r,e,t){t===void 0&&(t=!1),Ts(r)===0?(t?Object.keys:nh)(r).forEach(function(n){t&&typeof n=="symbol"||e(n,r[n],r)}):r.forEach(function(n,i){return e(i,n,r)})}function Ts(r){var e=r[Jt];return e?e.i>3?e.i-4:e.i:Array.isArray(r)?1:Zu(r)?2:Ju(r)?3:0}function Xl(r,e){return Ts(r)===2?r.has(e):Object.prototype.hasOwnProperty.call(r,e)}function m_(r,e){return Ts(r)===2?r.get(e):r[e]}function Cm(r,e,t){var n=Ts(r);n===2?r.set(e,t):n===3?(r.delete(e),r.add(t)):r[e]=t}function g_(r,e){return r===e?r!==0||1/r==1/e:r!=r&&e!=e}function Zu(r){return x_&&r instanceof Map}function Ju(r){return b_&&r instanceof Set}function Ni(r){return r.o||r.t}function Ku(r){if(Array.isArray(r))return Array.prototype.slice.call(r);var e=M_(r);delete e[Jt];for(var t=nh(e),n=0;n<t.length;n++){var i=t[n],s=e[i];s.writable===!1&&(s.writable=!0,s.configurable=!0),(s.get||s.set)&&(e[i]={configurable:!0,writable:!0,enumerable:s.enumerable,value:r[i]})}return Object.create(Object.getPrototypeOf(r),e)}function Qu(r,e){return e===void 0&&(e=!1),eh(r)||is(r)||!er(r)||(Ts(r)>1&&(r.set=r.add=r.clear=r.delete=v_),Object.freeze(r),e&&io(r,function(t,n){return Qu(n,!0)},!0)),r}function v_(){mn(2)}function eh(r){return r==null||typeof r!="object"||Object.isFrozen(r)}function Cn(r){var e=S_[r];return e||mn(18,r),e}function Ff(){return ro}function jc(r,e){e&&(Cn("Patches"),r.u=[],r.s=[],r.v=e)}function Ja(r){$l(r),r.p.forEach(__),r.p=null}function $l(r){r===ro&&(ro=r.l)}function Of(r){return ro={p:[],l:ro,h:r,m:!0,_:0}}function __(r){var e=r[Jt];e.i===0||e.i===1?e.j():e.O=!0}function Yc(r,e){e._=e.p.length;var t=e.p[0],n=r!==void 0&&r!==t;return e.h.g||Cn("ES5").S(e,r,n),n?(t[Jt].P&&(Ja(e),mn(4)),er(r)&&(r=Ka(e,r),e.l||Qa(e,r)),e.u&&Cn("Patches").M(t[Jt].t,r,e.u,e.s)):r=Ka(e,t,[]),Ja(e),e.u&&e.v(e.u,e.s),r!==Pm?r:void 0}function Ka(r,e,t){if(eh(e))return e;var n=e[Jt];if(!n)return io(e,function(s,o){return Nf(r,n,e,s,o,t)},!0),e;if(n.A!==r)return e;if(!n.P)return Qa(r,n.t,!0),n.t;if(!n.I){n.I=!0,n.A._--;var i=n.i===4||n.i===5?n.o=Ku(n.k):n.o;io(n.i===3?new Set(i):i,function(s,o){return Nf(r,n,i,s,o,t)}),Qa(r,i,!1),t&&r.u&&Cn("Patches").R(n,t,r.u,r.s)}return n.o}function Nf(r,e,t,n,i,s){if(is(i)){var o=Ka(r,i,s&&e&&e.i!==3&&!Xl(e.D,n)?s.concat(n):void 0);if(Cm(t,n,o),!is(o))return;r.m=!1}if(er(i)&&!eh(i)){if(!r.h.F&&r._<1)return;Ka(r,i),e&&e.A.l||Qa(r,i)}}function Qa(r,e,t){t===void 0&&(t=!1),r.h.F&&r.m&&Qu(e,t)}function Zc(r,e){var t=r[Jt];return(t?Ni(t):r)[e]}function zf(r,e){if(e in r)for(var t=Object.getPrototypeOf(r);t;){var n=Object.getOwnPropertyDescriptor(t,e);if(n)return n;t=Object.getPrototypeOf(t)}}function ql(r){r.P||(r.P=!0,r.l&&ql(r.l))}function Jc(r){r.o||(r.o=Ku(r.t))}function jl(r,e,t){var n=Zu(e)?Cn("MapSet").N(e,t):Ju(e)?Cn("MapSet").T(e,t):r.g?function(i,s){var o=Array.isArray(i),a={i:o?1:0,A:s?s.A:Ff(),P:!1,I:!1,D:{},l:s,t:i,k:null,o:null,j:null,C:!1},c=a,l=Yl;o&&(c=[a],l=qs);var u=Proxy.revocable(c,l),h=u.revoke,f=u.proxy;return a.k=f,a.j=h,f}(e,t):Cn("ES5").J(e,t);return(t?t.A:Ff()).p.push(n),n}function y_(r){return is(r)||mn(22,r),function e(t){if(!er(t))return t;var n,i=t[Jt],s=Ts(t);if(i){if(!i.P&&(i.i<4||!Cn("ES5").K(i)))return i.t;i.I=!0,n=kf(t,s),i.I=!1}else n=kf(t,s);return io(n,function(o,a){i&&m_(i.t,o)===a||Cm(n,o,e(a))}),s===3?new Set(n):n}(r)}function kf(r,e){switch(e){case 2:return new Map(r);case 3:return Array.from(r)}return Ku(r)}var Bf,ro,th=typeof Symbol<"u"&&typeof Symbol("x")=="symbol",x_=typeof Map<"u",b_=typeof Set<"u",Uf=typeof Proxy<"u"&&Proxy.revocable!==void 0&&typeof Reflect<"u",Pm=th?Symbol.for("immer-nothing"):((Bf={})["immer-nothing"]=!0,Bf),Vf=th?Symbol.for("immer-draftable"):"__$immer_draftable",Jt=th?Symbol.for("immer-state"):"__$immer_state",w_=""+Object.prototype.constructor,nh=typeof Reflect<"u"&&Reflect.ownKeys?Reflect.ownKeys:Object.getOwnPropertySymbols!==void 0?function(r){return Object.getOwnPropertyNames(r).concat(Object.getOwnPropertySymbols(r))}:Object.getOwnPropertyNames,M_=Object.getOwnPropertyDescriptors||function(r){var e={};return nh(r).forEach(function(t){e[t]=Object.getOwnPropertyDescriptor(r,t)}),e},S_={},Yl={get:function(r,e){if(e===Jt)return r;var t=Ni(r);if(!Xl(t,e))return function(i,s,o){var a,c=zf(s,o);return c?"value"in c?c.value:(a=c.get)===null||a===void 0?void 0:a.call(i.k):void 0}(r,t,e);var n=t[e];return r.I||!er(n)?n:n===Zc(r.t,e)?(Jc(r),r.o[e]=jl(r.A.h,n,r)):n},has:function(r,e){return e in Ni(r)},ownKeys:function(r){return Reflect.ownKeys(Ni(r))},set:function(r,e,t){var n=zf(Ni(r),e);if(n!=null&&n.set)return n.set.call(r.k,t),!0;if(!r.P){var i=Zc(Ni(r),e),s=i==null?void 0:i[Jt];if(s&&s.t===t)return r.o[e]=t,r.D[e]=!1,!0;if(g_(t,i)&&(t!==void 0||Xl(r.t,e)))return!0;Jc(r),ql(r)}return r.o[e]===t&&typeof t!="number"&&(t!==void 0||e in r.o)||(r.o[e]=t,r.D[e]=!0,!0)},deleteProperty:function(r,e){return Zc(r.t,e)!==void 0||e in r.t?(r.D[e]=!1,Jc(r),ql(r)):delete r.D[e],r.o&&delete r.o[e],!0},getOwnPropertyDescriptor:function(r,e){var t=Ni(r),n=Reflect.getOwnPropertyDescriptor(t,e);return n&&{writable:!0,configurable:r.i!==1||e!=="length",enumerable:n.enumerable,value:t[e]}},defineProperty:function(){mn(11)},getPrototypeOf:function(r){return Object.getPrototypeOf(r.t)},setPrototypeOf:function(){mn(12)}},qs={};io(Yl,function(r,e){qs[r]=function(){return arguments[0]=arguments[0][0],e.apply(this,arguments)}}),qs.deleteProperty=function(r,e){return qs.set.call(this,r,e,void 0)},qs.set=function(r,e,t){return Yl.set.call(this,r[0],e,t,r[0])};var A_=function(){function r(t){var n=this;this.g=Uf,this.F=!0,this.produce=function(i,s,o){if(typeof i=="function"&&typeof s!="function"){var a=s;s=i;var c=n;return function(m){var g=this;m===void 0&&(m=a);for(var v=arguments.length,_=Array(v>1?v-1:0),y=1;y<v;y++)_[y-1]=arguments[y];return c.produce(m,function(x){var w;return(w=s).call.apply(w,[g,x].concat(_))})}}var l;if(typeof s!="function"&&mn(6),o!==void 0&&typeof o!="function"&&mn(7),er(i)){var u=Of(n),h=jl(n,i,void 0),f=!0;try{l=s(h),f=!1}finally{f?Ja(u):$l(u)}return typeof Promise<"u"&&l instanceof Promise?l.then(function(m){return jc(u,o),Yc(m,u)},function(m){throw Ja(u),m}):(jc(u,o),Yc(l,u))}if(!i||typeof i!="object"){if((l=s(i))===void 0&&(l=i),l===Pm&&(l=void 0),n.F&&Qu(l,!0),o){var d=[],p=[];Cn("Patches").M(i,l,d,p),o(d,p)}return l}mn(21,i)},this.produceWithPatches=function(i,s){if(typeof i=="function")return function(l){for(var u=arguments.length,h=Array(u>1?u-1:0),f=1;f<u;f++)h[f-1]=arguments[f];return n.produceWithPatches(l,function(d){return i.apply(void 0,[d].concat(h))})};var o,a,c=n.produce(i,s,function(l,u){o=l,a=u});return typeof Promise<"u"&&c instanceof Promise?c.then(function(l){return[l,o,a]}):[c,o,a]},typeof(t==null?void 0:t.useProxies)=="boolean"&&this.setUseProxies(t.useProxies),typeof(t==null?void 0:t.autoFreeze)=="boolean"&&this.setAutoFreeze(t.autoFreeze)}var e=r.prototype;return e.createDraft=function(t){er(t)||mn(8),is(t)&&(t=y_(t));var n=Of(this),i=jl(this,t,void 0);return i[Jt].C=!0,$l(n),i},e.finishDraft=function(t,n){var i=t&&t[Jt],s=i.A;return jc(s,n),Yc(void 0,s)},e.setAutoFreeze=function(t){this.F=t},e.setUseProxies=function(t){t&&!Uf&&mn(20),this.g=t},e.applyPatches=function(t,n){var i;for(i=n.length-1;i>=0;i--){var s=n[i];if(s.path.length===0&&s.op==="replace"){t=s.value;break}}i>-1&&(n=n.slice(i+1));var o=Cn("Patches").$;return is(t)?o(t,n):this.produce(t,function(a){return o(a,n)})},r}(),Kt=new A_,T_=Kt.produce;Kt.produceWithPatches.bind(Kt);Kt.setAutoFreeze.bind(Kt);Kt.setUseProxies.bind(Kt);Kt.applyPatches.bind(Kt);Kt.createDraft.bind(Kt);Kt.finishDraft.bind(Kt);const E_=T_,Lm=r=>({indices:[0,0],_indicesCache:{},setIndex:(e,t)=>{r(n=>{var h,f;const{indices:i,_indicesCache:s}=n;i[e]=t;const o=i.slice(0,e+1).join(),a=(h=s[o])!=null?h:[],{length:c}=i;for(let d=0;e+1+d<c;d++)i[e+1+d]=(f=a[d])!=null?f:0;const l=i.slice(e),u=i.slice(0,e).join();u&&(s[u]=l)})},showFilter:!1,toggleFilter:()=>r(e=>{e.showFilter=!e.showFilter}),searchAll:!1,toggleSearchAll:()=>r(e=>{e.searchAll=!e.searchAll})}),Gf=r=>r==="true";function Im(r,e){return r&&e&&Object.keys(e).forEach(t=>{const n=e[t];typeof n=="object"?(r[t]||(r[t]={}),Im(r[t],n)):r[t]=n}),r}const C_=(r,e)=>({category:"Adv",setCategory:t=>r(n=>{n.category=t}),advAni:{category:"home",setCategory:t=>r(n=>{n.advAni.category=t}),home:{gender:"Male",setGender:t=>r(n=>{n.advAni.home.gender=t})},weapon:{type:"Sword",setType:t=>r(n=>{n.advAni.weapon.type=t}),gunMode:"Long",setGunMode:t=>r(n=>{n.advAni.weapon.gunMode=t})},genericSkill:{type:"Sword",setType:t=>r(n=>{n.advAni.genericSkill.type=t})},groupByWeapon:{setGroupWeaponType:(t,n)=>r(i=>{i.advAni.groupByWeapon[t]=n})},uniqueOther:{type:"Sword",setType:t=>r(n=>{n.advAni.uniqueOther.type=t}),selected:"",setSelected:t=>r(n=>{n.advAni.uniqueOther.selected=t})}},extraAni:{category:"Dance",setCategory:t=>r(n=>{n.extraAni.category=t})},personalAni:{source:"",setSource:t=>r(n=>{n.personalAni.source=t}),sourceName:"",setSourceName:t=>r(n=>{n.personalAni.sourceName=t})},getCurrentState:()=>{const t=e();return JSON.parse(JSON.stringify(t))},loadState:(t={})=>{r(n=>Im(n,t))}});/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const _c="142",zi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ki={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Rm=0,Zl=1,Dm=2,P_=3,L_=0,ih=1,Fm=2,Yr=3,tr=0,Ut=1,mi=2,Om=1,I_=2,qn=0,qi=1,ec=2,Jl=3,Kl=4,Nm=5,Vi=100,zm=101,km=102,Ql=103,eu=104,Bm=200,Um=201,Vm=202,Gm=203,rh=204,sh=205,Hm=206,Wm=207,Xm=208,$m=209,qm=210,jm=0,Ym=1,oh=2,tc=3,Zm=4,Jm=5,Km=6,Qm=7,nr=0,eg=1,nc=2,yn=0,ah=1,ch=2,lh=3,uh=4,tg=5,yc=300,gi=301,vi=302,rs=303,so=304,Es=306,ir=1e3,St=1001,oo=1002,ut=1003,ic=1004,R_=1004,rc=1005,D_=1005,rt=1006,hh=1007,F_=1007,dr=1008,O_=1008,_i=1009,ng=1010,ig=1011,fh=1012,rg=1013,ui=1014,Gn=1015,ss=1016,sg=1017,og=1018,ji=1020,ag=1021,cg=1022,Yt=1023,dh=1024,lg=1025,di=1026,rr=1027,ug=1028,hg=1029,fg=1030,dg=1031,pg=1033,Fa=33776,Oa=33777,Na=33778,za=33779,tu=35840,nu=35841,iu=35842,ru=35843,mg=36196,su=37492,ou=37496,au=37808,cu=37809,lu=37810,uu=37811,hu=37812,fu=37813,du=37814,pu=37815,mu=37816,gu=37817,vu=37818,_u=37819,yu=37820,xu=37821,bu=36492,gg=2200,ph=2201,vg=2202,ao=2300,co=2301,ka=2302,Hi=2400,Wi=2401,lo=2402,xc=2500,mh=2501,N_=0,z_=1,k_=2,yi=3e3,Ge=3001,_g=3200,yg=3201,Mi=0,xg=1,B_="",En="srgb",hi="srgb-linear",U_=0,Ba=7680,V_=7681,G_=7682,H_=7683,W_=34055,X_=34056,$_=5386,q_=512,j_=513,Y_=514,Z_=515,J_=516,K_=517,Q_=518,bg=519,sc=35044,ey=35048,ty=35040,ny=35045,iy=35049,ry=35041,sy=35046,oy=35050,ay=35042,cy="100",wu="300 es",oc=1035;class Kn{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const At=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Hf=1234567;const Yi=Math.PI/180,uo=180/Math.PI;function Zt(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(At[r&255]+At[r>>8&255]+At[r>>16&255]+At[r>>24&255]+"-"+At[e&255]+At[e>>8&255]+"-"+At[e>>16&15|64]+At[e>>24&255]+"-"+At[t&63|128]+At[t>>8&255]+"-"+At[t>>16&255]+At[t>>24&255]+At[n&255]+At[n>>8&255]+At[n>>16&255]+At[n>>24&255]).toLowerCase()}function ht(r,e,t){return Math.max(e,Math.min(t,r))}function gh(r,e){return(r%e+e)%e}function ly(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function uy(r,e,t){return r!==e?(t-r)/(e-r):0}function Js(r,e,t){return(1-t)*r+t*e}function hy(r,e,t,n){return Js(r,e,1-Math.exp(-t*n))}function fy(r,e=1){return e-Math.abs(gh(r,e*2)-e)}function dy(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function py(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function my(r,e){return r+Math.floor(Math.random()*(e-r+1))}function gy(r,e){return r+Math.random()*(e-r)}function vy(r){return r*(.5-Math.random())}function _y(r){r!==void 0&&(Hf=r);let e=Hf+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function yy(r){return r*Yi}function xy(r){return r*uo}function Mu(r){return(r&r-1)===0&&r!==0}function wg(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function ac(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function by(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),c=o(t/2),l=s((e+n)/2),u=o((e+n)/2),h=s((e-n)/2),f=o((e-n)/2),d=s((n-e)/2),p=o((n-e)/2);switch(i){case"XYX":r.set(a*u,c*h,c*f,a*l);break;case"YZY":r.set(c*f,a*u,c*h,a*l);break;case"ZXZ":r.set(c*h,c*f,a*u,a*l);break;case"XZX":r.set(a*u,c*p,c*d,a*l);break;case"YXY":r.set(c*d,a*u,c*p,a*l);break;case"ZYZ":r.set(c*p,c*d,a*u,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function wy(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function My(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var gn=Object.freeze({__proto__:null,DEG2RAD:Yi,RAD2DEG:uo,generateUUID:Zt,clamp:ht,euclideanModulo:gh,mapLinear:ly,inverseLerp:uy,lerp:Js,damp:hy,pingpong:fy,smoothstep:dy,smootherstep:py,randInt:my,randFloat:gy,randFloatSpread:vy,seededRandom:_y,degToRad:yy,radToDeg:xy,isPowerOfTwo:Mu,ceilPowerOfTwo:wg,floorPowerOfTwo:ac,setQuaternionFromProperEuler:by,normalize:My,denormalize:wy});class q{constructor(e=0,t=0){q.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ft{constructor(){Ft.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,c,l){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=c,u[6]=n,u[7]=o,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],m=i[0],g=i[3],v=i[6],_=i[1],y=i[4],x=i[7],w=i[2],M=i[5],P=i[8];return s[0]=o*m+a*_+c*w,s[3]=o*g+a*y+c*M,s[6]=o*v+a*x+c*P,s[1]=l*m+u*_+h*w,s[4]=l*g+u*y+h*M,s[7]=l*v+u*x+h*P,s[2]=f*m+d*_+p*w,s[5]=f*g+d*y+p*M,s[8]=f*v+d*x+p*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8];return t*o*u-t*a*l-n*s*u+n*a*c+i*s*l-i*o*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=u*o-a*l,f=a*c-u*s,d=l*s-o*c,p=t*h+n*f+i*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=h*m,e[1]=(i*l-u*n)*m,e[2]=(a*n-i*o)*m,e[3]=f*m,e[4]=(u*t-i*c)*m,e[5]=(i*s-a*t)*m,e[6]=d*m,e[7]=(n*c-l*t)*m,e[8]=(o*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const c=Math.cos(s),l=Math.sin(s);return this.set(n*c,n*l,-n*(c*o+l*a)+o+e,-i*l,i*c,-i*(-l*o+c*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],o=i[3],a=i[6],c=i[1],l=i[4],u=i[7];return i[0]=t*s+n*c,i[3]=t*o+n*l,i[6]=t*a+n*u,i[1]=-n*s+t*c,i[4]=-n*o+t*l,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function Mg(r){for(let e=r.length-1;e>=0;--e)if(r[e]>65535)return!0;return!1}const Sy={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Zr(r,e){return new Sy[r](e)}function ho(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Zi(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Ua(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const Kc={[En]:{[hi]:Zi},[hi]:{[En]:Ua}},tn={legacyMode:!0,get workingColorSpace(){return hi},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(Kc[e]&&Kc[e][t]!==void 0){const n=Kc[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},Sg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},yt={r:0,g:0,b:0},un={h:0,s:0,l:0},Uo={h:0,s:0,l:0};function Qc(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function Vo(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class oe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=En){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,tn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=hi){return this.r=e,this.g=t,this.b=n,tn.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=hi){if(e=gh(e,1),t=ht(t,0,1),n=ht(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=Qc(o,s,e+1/3),this.g=Qc(o,s,e),this.b=Qc(o,s,e-1/3)}return tn.toWorkingColorSpace(this,i),this}setStyle(e,t=En){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,tn.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,tn.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const c=parseFloat(s[1])/360,l=parseInt(s[2],10)/100,u=parseInt(s[3],10)/100;return n(s[4]),this.setHSL(c,l,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,tn.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,tn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=En){const n=Sg[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Zi(e.r),this.g=Zi(e.g),this.b=Zi(e.b),this}copyLinearToSRGB(e){return this.r=Ua(e.r),this.g=Ua(e.g),this.b=Ua(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=En){return tn.fromWorkingColorSpace(Vo(this,yt),e),ht(yt.r*255,0,255)<<16^ht(yt.g*255,0,255)<<8^ht(yt.b*255,0,255)<<0}getHexString(e=En){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=hi){tn.fromWorkingColorSpace(Vo(this,yt),t);const n=yt.r,i=yt.g,s=yt.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let c,l;const u=(a+o)/2;if(a===o)c=0,l=0;else{const h=o-a;switch(l=u<=.5?h/(o+a):h/(2-o-a),o){case n:c=(i-s)/h+(i<s?6:0);break;case i:c=(s-n)/h+2;break;case s:c=(n-i)/h+4;break}c/=6}return e.h=c,e.s=l,e.l=u,e}getRGB(e,t=hi){return tn.fromWorkingColorSpace(Vo(this,yt),t),e.r=yt.r,e.g=yt.g,e.b=yt.b,e}getStyle(e=En){return tn.fromWorkingColorSpace(Vo(this,yt),e),e!==En?`color(${e} ${yt.r} ${yt.g} ${yt.b})`:`rgb(${yt.r*255|0},${yt.g*255|0},${yt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(un),un.h+=e,un.s+=t,un.l+=n,this.setHSL(un.h,un.s,un.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(un),e.getHSL(Uo);const n=Js(un.h,Uo.h,t),i=Js(un.s,Uo.s,t),s=Js(un.l,Uo.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}oe.NAMES=Sg;let Ar;class vh{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ar===void 0&&(Ar=ho("canvas")),Ar.width=e.width,Ar.height=e.height;const n=Ar.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ar}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ho("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=Zi(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Zi(t[n]/255)*255):t[n]=Zi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Xi{constructor(e=null){this.isSource=!0,this.uuid=Zt(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(el(i[o].image)):s.push(el(i[o]))}else s=el(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function el(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?vh.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Ay=0;class pt extends Kn{constructor(e=pt.DEFAULT_IMAGE,t=pt.DEFAULT_MAPPING,n=St,i=St,s=rt,o=dr,a=Yt,c=_i,l=1,u=yi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Ay++}),this.uuid=Zt(),this.name="",this.source=new Xi(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new q(0,0),this.repeat=new q(1,1),this.center=new q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ft,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==yc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ir:e.x=e.x-Math.floor(e.x);break;case St:e.x=e.x<0?0:1;break;case oo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ir:e.y=e.y-Math.floor(e.y);break;case St:e.y=e.y<0?0:1;break;case oo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}pt.DEFAULT_IMAGE=null;pt.DEFAULT_MAPPING=yc;class He{constructor(e=0,t=0,n=0,i=1){He.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const c=e.elements,l=c[0],u=c[4],h=c[8],f=c[1],d=c[5],p=c[9],m=c[2],g=c[6],v=c[10];if(Math.abs(u-f)<.01&&Math.abs(h-m)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+m)<.1&&Math.abs(p+g)<.1&&Math.abs(l+d+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(l+1)/2,x=(d+1)/2,w=(v+1)/2,M=(u+f)/4,P=(h+m)/4,b=(p+g)/4;return y>x&&y>w?y<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(y),i=M/n,s=P/n):x>w?x<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(x),n=M/i,s=b/i):w<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(w),n=P/s,i=b/s),this.set(n,i,s,t),this}let _=Math.sqrt((g-p)*(g-p)+(h-m)*(h-m)+(f-u)*(f-u));return Math.abs(_)<.001&&(_=1),this.x=(g-p)/_,this.y=(h-m)/_,this.z=(f-u)/_,this.w=Math.acos((l+d+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Gt extends Kn{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new He(0,0,e,t),this.scissorTest=!1,this.viewport=new He(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new pt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:rt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Xi(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class To extends pt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ut,this.minFilter=ut,this.wrapR=St,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ty extends Gt{constructor(e,t,n){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new To(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class bc extends pt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ut,this.minFilter=ut,this.wrapR=St,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ey extends Gt{constructor(e,t,n){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new bc(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Cy extends Gt{constructor(e,t,n,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class _t{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,o,a){let c=n[i+0],l=n[i+1],u=n[i+2],h=n[i+3];const f=s[o+0],d=s[o+1],p=s[o+2],m=s[o+3];if(a===0){e[t+0]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=m;return}if(h!==m||c!==f||l!==d||u!==p){let g=1-a;const v=c*f+l*d+u*p+h*m,_=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){const w=Math.sqrt(y),M=Math.atan2(w,v*_);g=Math.sin(g*M)/w,a=Math.sin(a*M)/w}const x=a*_;if(c=c*g+f*x,l=l*g+d*x,u=u*g+p*x,h=h*g+m*x,g===1-a){const w=1/Math.sqrt(c*c+l*l+u*u+h*h);c*=w,l*=w,u*=w,h*=w}}e[t]=c,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],c=n[i+1],l=n[i+2],u=n[i+3],h=s[o],f=s[o+1],d=s[o+2],p=s[o+3];return e[t]=a*p+u*h+c*d-l*f,e[t+1]=c*p+u*f+l*h-a*d,e[t+2]=l*p+u*d+a*f-c*h,e[t+3]=u*p-a*h-c*f-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,c=Math.sin,l=a(n/2),u=a(i/2),h=a(s/2),f=c(n/2),d=c(i/2),p=c(s/2);switch(o){case"XYZ":this._x=f*u*h+l*d*p,this._y=l*d*h-f*u*p,this._z=l*u*p+f*d*h,this._w=l*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+l*d*p,this._y=l*d*h-f*u*p,this._z=l*u*p-f*d*h,this._w=l*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-l*d*p,this._y=l*d*h+f*u*p,this._z=l*u*p+f*d*h,this._w=l*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-l*d*p,this._y=l*d*h+f*u*p,this._z=l*u*p-f*d*h,this._w=l*u*h+f*d*p;break;case"YZX":this._x=f*u*h+l*d*p,this._y=l*d*h+f*u*p,this._z=l*u*p-f*d*h,this._w=l*u*h-f*d*p;break;case"XZY":this._x=f*u*h-l*d*p,this._y=l*d*h-f*u*p,this._z=l*u*p+f*d*h,this._w=l*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],c=t[9],l=t[2],u=t[6],h=t[10],f=n+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-c)*d,this._y=(s-l)*d,this._z=(o-i)*d}else if(n>a&&n>h){const d=2*Math.sqrt(1+n-a-h);this._w=(u-c)/d,this._x=.25*d,this._y=(i+o)/d,this._z=(s+l)/d}else if(a>h){const d=2*Math.sqrt(1+a-n-h);this._w=(s-l)/d,this._x=(i+o)/d,this._y=.25*d,this._z=(c+u)/d}else{const d=2*Math.sqrt(1+h-n-a);this._w=(o-i)/d,this._x=(s+l)/d,this._y=(c+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ht(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,c=t._y,l=t._z,u=t._w;return this._x=n*u+o*a+i*l-s*c,this._y=i*u+o*c+s*a-n*l,this._z=s*u+o*l+n*c-i*a,this._w=o*u-n*a-i*c-s*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const c=1-a*a;if(c<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*n+t*this._x,this._y=d*i+t*this._y,this._z=d*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(c),u=Math.atan2(l,a),h=Math.sin((1-t)*u)/l,f=Math.sin(t*u)/l;return this._w=o*h+this._w*f,this._x=n*h+this._x*f,this._y=i*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class A{constructor(e=0,t=0,n=0){A.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Wf.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Wf.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,c=e.w,l=c*t+o*i-a*n,u=c*n+a*t-s*i,h=c*i+s*n-o*t,f=-s*t-o*n-a*i;return this.x=l*c+f*-s+u*-a-h*-o,this.y=u*c+f*-o+h*-s-l*-a,this.z=h*c+f*-a+l*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,c=t.z;return this.x=i*c-s*a,this.y=s*o-n*c,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return tl.copy(this).projectOnVector(e),this.sub(tl)}reflect(e){return this.sub(tl.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ht(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const tl=new A,Wf=new _t;class pr{constructor(e=new A(1/0,1/0,1/0),t=new A(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,l=e.length;c<l;c+=3){const u=e[c],h=e[c+1],f=e[c+2];u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,l=e.count;c<l;c++){const u=e.getX(c),h=e.getY(c),f=e.getZ(c);u<t&&(t=u),h<n&&(n=h),f<i&&(i=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ci.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Ci.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Ci)}else n.boundingBox===null&&n.computeBoundingBox(),nl.copy(n.boundingBox),nl.applyMatrix4(e.matrixWorld),this.union(nl);const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ci),Ci.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Bs),Go.subVectors(this.max,Bs),Tr.subVectors(e.a,Bs),Er.subVectors(e.b,Bs),Cr.subVectors(e.c,Bs),ei.subVectors(Er,Tr),ti.subVectors(Cr,Er),Pi.subVectors(Tr,Cr);let t=[0,-ei.z,ei.y,0,-ti.z,ti.y,0,-Pi.z,Pi.y,ei.z,0,-ei.x,ti.z,0,-ti.x,Pi.z,0,-Pi.x,-ei.y,ei.x,0,-ti.y,ti.x,0,-Pi.y,Pi.x,0];return!il(t,Tr,Er,Cr,Go)||(t=[1,0,0,0,1,0,0,0,1],!il(t,Tr,Er,Cr,Go))?!1:(Ho.crossVectors(ei,ti),t=[Ho.x,Ho.y,Ho.z],il(t,Tr,Er,Cr,Go))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ci.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ci).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(On[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),On[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),On[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),On[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),On[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),On[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),On[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),On[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(On),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const On=[new A,new A,new A,new A,new A,new A,new A,new A],Ci=new A,nl=new pr,Tr=new A,Er=new A,Cr=new A,ei=new A,ti=new A,Pi=new A,Bs=new A,Go=new A,Ho=new A,Li=new A;function il(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){Li.fromArray(r,s);const a=i.x*Math.abs(Li.x)+i.y*Math.abs(Li.y)+i.z*Math.abs(Li.z),c=e.dot(Li),l=t.dot(Li),u=n.dot(Li);if(Math.max(-Math.max(c,l,u),Math.min(c,l,u))>a)return!1}return!0}const Py=new pr,Xf=new A,Wo=new A,rl=new A;class mr{constructor(e=new A,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Py.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){rl.subVectors(e,this.center);const t=rl.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(rl.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?Wo.set(0,0,1).multiplyScalar(e.radius):Wo.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Xf.copy(e.center).add(Wo)),this.expandByPoint(Xf.copy(e.center).sub(Wo)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Nn=new A,sl=new A,Xo=new A,ni=new A,ol=new A,$o=new A,al=new A;class Eo{constructor(e=new A,t=new A(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Nn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Nn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Nn.copy(this.direction).multiplyScalar(t).add(this.origin),Nn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){sl.copy(e).add(t).multiplyScalar(.5),Xo.copy(t).sub(e).normalize(),ni.copy(this.origin).sub(sl);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Xo),a=ni.dot(this.direction),c=-ni.dot(Xo),l=ni.lengthSq(),u=Math.abs(1-o*o);let h,f,d,p;if(u>0)if(h=o*c-a,f=o*a-c,p=s*u,h>=0)if(f>=-p)if(f<=p){const m=1/u;h*=m,f*=m,d=h*(h+o*f+2*a)+f*(o*h+f+2*c)+l}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*c)+l;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*c)+l;else f<=-p?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-c),s),d=-h*h+f*(f+2*c)+l):f<=p?(h=0,f=Math.min(Math.max(-s,-c),s),d=f*(f+2*c)+l):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-c),s),d=-h*h+f*(f+2*c)+l);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*c)+l;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Xo).multiplyScalar(f).add(sl),d}intersectSphere(e,t){Nn.subVectors(e.center,this.origin);const n=Nn.dot(this.direction),i=Nn.dot(Nn)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,c=n+o;return a<0&&c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,c;const l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return l>=0?(n=(e.min.x-f.x)*l,i=(e.max.x-f.x)*l):(n=(e.max.x-f.x)*l,i=(e.min.x-f.x)*l),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||s>i||((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),h>=0?(a=(e.min.z-f.z)*h,c=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,c=(e.min.z-f.z)*h),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Nn)!==null}intersectTriangle(e,t,n,i,s){ol.subVectors(t,e),$o.subVectors(n,e),al.crossVectors(ol,$o);let o=this.direction.dot(al),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ni.subVectors(this.origin,e);const c=a*this.direction.dot($o.crossVectors(ni,$o));if(c<0)return null;const l=a*this.direction.dot(ol.cross(ni));if(l<0||c+l>o)return null;const u=-a*ni.dot(al);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class xe{constructor(){xe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,c,l,u,h,f,d,p,m,g){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=o,v[9]=a,v[13]=c,v[2]=l,v[6]=u,v[10]=h,v[14]=f,v[3]=d,v[7]=p,v[11]=m,v[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new xe().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Pr.setFromMatrixColumn(e,0).length(),s=1/Pr.setFromMatrixColumn(e,1).length(),o=1/Pr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),l=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,d=o*h,p=a*u,m=a*h;t[0]=c*u,t[4]=-c*h,t[8]=l,t[1]=d+p*l,t[5]=f-m*l,t[9]=-a*c,t[2]=m-f*l,t[6]=p+d*l,t[10]=o*c}else if(e.order==="YXZ"){const f=c*u,d=c*h,p=l*u,m=l*h;t[0]=f+m*a,t[4]=p*a-d,t[8]=o*l,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=m+f*a,t[10]=o*c}else if(e.order==="ZXY"){const f=c*u,d=c*h,p=l*u,m=l*h;t[0]=f-m*a,t[4]=-o*h,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=m-f*a,t[2]=-o*l,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const f=o*u,d=o*h,p=a*u,m=a*h;t[0]=c*u,t[4]=p*l-d,t[8]=f*l+m,t[1]=c*h,t[5]=m*l+f,t[9]=d*l-p,t[2]=-l,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const f=o*c,d=o*l,p=a*c,m=a*l;t[0]=c*u,t[4]=m-f*h,t[8]=p*h+d,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-l*u,t[6]=d*h+p,t[10]=f-m*h}else if(e.order==="XZY"){const f=o*c,d=o*l,p=a*c,m=a*l;t[0]=c*u,t[4]=-h,t[8]=l*u,t[1]=f*h+m,t[5]=o*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=a*u,t[10]=m*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ly,e,Iy)}lookAt(e,t,n){const i=this.elements;return Xt.subVectors(e,t),Xt.lengthSq()===0&&(Xt.z=1),Xt.normalize(),ii.crossVectors(n,Xt),ii.lengthSq()===0&&(Math.abs(n.z)===1?Xt.x+=1e-4:Xt.z+=1e-4,Xt.normalize(),ii.crossVectors(n,Xt)),ii.normalize(),qo.crossVectors(Xt,ii),i[0]=ii.x,i[4]=qo.x,i[8]=Xt.x,i[1]=ii.y,i[5]=qo.y,i[9]=Xt.y,i[2]=ii.z,i[6]=qo.z,i[10]=Xt.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],m=n[6],g=n[10],v=n[14],_=n[3],y=n[7],x=n[11],w=n[15],M=i[0],P=i[4],b=i[8],T=i[12],I=i[1],F=i[5],B=i[9],j=i[13],D=i[2],k=i[6],O=i[10],G=i[14],$=i[3],z=i[7],V=i[11],Q=i[15];return s[0]=o*M+a*I+c*D+l*$,s[4]=o*P+a*F+c*k+l*z,s[8]=o*b+a*B+c*O+l*V,s[12]=o*T+a*j+c*G+l*Q,s[1]=u*M+h*I+f*D+d*$,s[5]=u*P+h*F+f*k+d*z,s[9]=u*b+h*B+f*O+d*V,s[13]=u*T+h*j+f*G+d*Q,s[2]=p*M+m*I+g*D+v*$,s[6]=p*P+m*F+g*k+v*z,s[10]=p*b+m*B+g*O+v*V,s[14]=p*T+m*j+g*G+v*Q,s[3]=_*M+y*I+x*D+w*$,s[7]=_*P+y*F+x*k+w*z,s[11]=_*b+y*B+x*O+w*V,s[15]=_*T+y*j+x*G+w*Q,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],c=e[9],l=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],m=e[7],g=e[11],v=e[15];return p*(+s*c*h-i*l*h-s*a*f+n*l*f+i*a*d-n*c*d)+m*(+t*c*d-t*l*f+s*o*f-i*o*d+i*l*u-s*c*u)+g*(+t*l*h-t*a*d-s*o*h+n*o*d+s*a*u-n*l*u)+v*(-i*a*u-t*c*h+t*a*f+i*o*h-n*o*f+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],l=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],m=e[13],g=e[14],v=e[15],_=h*g*l-m*f*l+m*c*d-a*g*d-h*c*v+a*f*v,y=p*f*l-u*g*l-p*c*d+o*g*d+u*c*v-o*f*v,x=u*m*l-p*h*l+p*a*d-o*m*d-u*a*v+o*h*v,w=p*h*c-u*m*c-p*a*f+o*m*f+u*a*g-o*h*g,M=t*_+n*y+i*x+s*w;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/M;return e[0]=_*P,e[1]=(m*f*s-h*g*s-m*i*d+n*g*d+h*i*v-n*f*v)*P,e[2]=(a*g*s-m*c*s+m*i*l-n*g*l-a*i*v+n*c*v)*P,e[3]=(h*c*s-a*f*s-h*i*l+n*f*l+a*i*d-n*c*d)*P,e[4]=y*P,e[5]=(u*g*s-p*f*s+p*i*d-t*g*d-u*i*v+t*f*v)*P,e[6]=(p*c*s-o*g*s-p*i*l+t*g*l+o*i*v-t*c*v)*P,e[7]=(o*f*s-u*c*s+u*i*l-t*f*l-o*i*d+t*c*d)*P,e[8]=x*P,e[9]=(p*h*s-u*m*s-p*n*d+t*m*d+u*n*v-t*h*v)*P,e[10]=(o*m*s-p*a*s+p*n*l-t*m*l-o*n*v+t*a*v)*P,e[11]=(u*a*s-o*h*s-u*n*l+t*h*l+o*n*d-t*a*d)*P,e[12]=w*P,e[13]=(u*m*i-p*h*i+p*n*f-t*m*f-u*n*g+t*h*g)*P,e[14]=(p*a*i-o*m*i-p*n*c+t*m*c+o*n*g-t*a*g)*P,e[15]=(o*h*i-u*a*i+u*n*c-t*h*c-o*n*f+t*a*f)*P,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,c=e.z,l=s*o,u=s*a;return this.set(l*o+n,l*a-i*c,l*c+i*a,0,l*a+i*c,u*a+n,u*c-i*o,0,l*c-i*a,u*c+i*o,s*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,c=t._w,l=s+s,u=o+o,h=a+a,f=s*l,d=s*u,p=s*h,m=o*u,g=o*h,v=a*h,_=c*l,y=c*u,x=c*h,w=n.x,M=n.y,P=n.z;return i[0]=(1-(m+v))*w,i[1]=(d+x)*w,i[2]=(p-y)*w,i[3]=0,i[4]=(d-x)*M,i[5]=(1-(f+v))*M,i[6]=(g+_)*M,i[7]=0,i[8]=(p+y)*P,i[9]=(g-_)*P,i[10]=(1-(f+m))*P,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Pr.set(i[0],i[1],i[2]).length();const o=Pr.set(i[4],i[5],i[6]).length(),a=Pr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],hn.copy(this);const l=1/s,u=1/o,h=1/a;return hn.elements[0]*=l,hn.elements[1]*=l,hn.elements[2]*=l,hn.elements[4]*=u,hn.elements[5]*=u,hn.elements[6]*=u,hn.elements[8]*=h,hn.elements[9]*=h,hn.elements[10]*=h,t.setFromRotationMatrix(hn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,c=2*s/(t-e),l=2*s/(n-i),u=(t+e)/(t-e),h=(n+i)/(n-i),f=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=c,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,c=1/(t-e),l=1/(n-i),u=1/(o-s),h=(t+e)*c,f=(n+i)*l,d=(o+s)*u;return a[0]=2*c,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Pr=new A,hn=new xe,Ly=new A(0,0,0),Iy=new A(1,1,1),ii=new A,qo=new A,Xt=new A,$f=new xe,qf=new _t;class vn{constructor(e=0,t=0,n=0,i=vn.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],a=i[8],c=i[1],l=i[5],u=i[9],h=i[2],f=i[6],d=i[10];switch(t){case"XYZ":this._y=Math.asin(ht(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,l),this._z=0);break;case"YXZ":this._x=Math.asin(-ht(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(ht(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-ht(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(ht(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-ht(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return $f.makeRotationFromQuaternion(e),this.setFromRotationMatrix($f,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return qf.setFromEuler(this),this.setFromQuaternion(qf,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}vn.DefaultOrder="XYZ";vn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class wc{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Ry=0;const jf=new A,Lr=new _t,zn=new xe,jo=new A,Us=new A,Dy=new A,Fy=new _t,Yf=new A(1,0,0),Zf=new A(0,1,0),Jf=new A(0,0,1),Oy={type:"added"},Kf={type:"removed"};class Xe extends Kn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ry++}),this.uuid=Zt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Xe.DefaultUp.clone();const e=new A,t=new vn,n=new _t,i=new A(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new xe},normalMatrix:{value:new Ft}}),this.matrix=new xe,this.matrixWorld=new xe,this.matrixAutoUpdate=Xe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new wc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Lr.setFromAxisAngle(e,t),this.quaternion.multiply(Lr),this}rotateOnWorldAxis(e,t){return Lr.setFromAxisAngle(e,t),this.quaternion.premultiply(Lr),this}rotateX(e){return this.rotateOnAxis(Yf,e)}rotateY(e){return this.rotateOnAxis(Zf,e)}rotateZ(e){return this.rotateOnAxis(Jf,e)}translateOnAxis(e,t){return jf.copy(e).applyQuaternion(this.quaternion),this.position.add(jf.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Yf,e)}translateY(e){return this.translateOnAxis(Zf,e)}translateZ(e){return this.translateOnAxis(Jf,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(zn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?jo.copy(e):jo.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Us.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?zn.lookAt(Us,jo,this.up):zn.lookAt(jo,Us,this.up),this.quaternion.setFromRotationMatrix(zn),i&&(zn.extractRotation(i.matrixWorld),Lr.setFromRotationMatrix(zn),this.quaternion.premultiply(Lr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Oy)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Kf)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Kf)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),zn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),zn.multiply(e.parent.matrixWorld)),e.applyMatrix4(zn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Us,e,Dy),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Us,Fy,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,u=c.length;l<u;l++){const h=c[l];s(e.shapes,h)}else s(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(s(e.materials,this.material[c]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(s(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),l=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),d=o(e.animations),p=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const c=[];for(const l in a){const u=a[l];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Xe.DefaultUp=new A(0,1,0);Xe.DefaultMatrixAutoUpdate=!0;const fn=new A,kn=new A,cl=new A,Bn=new A,Ir=new A,Rr=new A,Qf=new A,ll=new A,ul=new A,hl=new A;class rn{constructor(e=new A,t=new A,n=new A){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),fn.subVectors(e,t),i.cross(fn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){fn.subVectors(i,t),kn.subVectors(n,t),cl.subVectors(e,t);const o=fn.dot(fn),a=fn.dot(kn),c=fn.dot(cl),l=kn.dot(kn),u=kn.dot(cl),h=o*l-a*a;if(h===0)return s.set(-2,-1,-1);const f=1/h,d=(l*c-a*u)*f,p=(o*u-a*c)*f;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Bn),Bn.x>=0&&Bn.y>=0&&Bn.x+Bn.y<=1}static getUV(e,t,n,i,s,o,a,c){return this.getBarycoord(e,t,n,i,Bn),c.set(0,0),c.addScaledVector(s,Bn.x),c.addScaledVector(o,Bn.y),c.addScaledVector(a,Bn.z),c}static isFrontFacing(e,t,n,i){return fn.subVectors(n,t),kn.subVectors(e,t),fn.cross(kn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return fn.subVectors(this.c,this.b),kn.subVectors(this.a,this.b),fn.cross(kn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return rn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return rn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return rn.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return rn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return rn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,a;Ir.subVectors(i,n),Rr.subVectors(s,n),ll.subVectors(e,n);const c=Ir.dot(ll),l=Rr.dot(ll);if(c<=0&&l<=0)return t.copy(n);ul.subVectors(e,i);const u=Ir.dot(ul),h=Rr.dot(ul);if(u>=0&&h<=u)return t.copy(i);const f=c*h-u*l;if(f<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(Ir,o);hl.subVectors(e,s);const d=Ir.dot(hl),p=Rr.dot(hl);if(p>=0&&d<=p)return t.copy(s);const m=d*l-c*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(n).addScaledVector(Rr,a);const g=u*p-d*h;if(g<=0&&h-u>=0&&d-p>=0)return Qf.subVectors(s,i),a=(h-u)/(h-u+(d-p)),t.copy(i).addScaledVector(Qf,a);const v=1/(g+m+f);return o=m*v,a=f*v,t.copy(n).addScaledVector(Ir,o).addScaledVector(Rr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Ny=0;class Ct extends Kn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Ny++}),this.uuid=Zt(),this.name="",this.type="Material",this.blending=qi,this.side=tr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=rh,this.blendDst=sh,this.blendEquation=Vi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=tc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=bg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ba,this.stencilZFail=Ba,this.stencilZPass=Ba,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Om;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==qi&&(n.blending=this.blending),this.side!==tr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const c=s[a];delete c.metadata,o.push(c)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Si extends Ct{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=nr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const gt=new A,Yo=new q;class et{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=sc,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new oe),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new q),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new A),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new He),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Yo.fromBufferAttribute(this,t),Yo.applyMatrix3(e),this.setXY(t,Yo.x,Yo.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.applyMatrix3(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.applyMatrix4(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.applyNormalMatrix(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.transformDirection(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==sc&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class zy extends et{constructor(e,t,n){super(new Int8Array(e),t,n)}}class ky extends et{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class By extends et{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Uy extends et{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Mc extends et{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Vy extends et{constructor(e,t,n){super(new Int32Array(e),t,n)}}class _h extends et{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Gy extends et{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}}class _e extends et{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Hy extends et{constructor(e,t,n){super(new Float64Array(e),t,n)}}let Wy=0;const Qt=new xe,fl=new Xe,Dr=new A,$t=new pr,Vs=new pr,wt=new A;class Pe extends Kn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Wy++}),this.uuid=Zt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Mg(e)?_h:Mc)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Ft().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Qt.makeRotationFromQuaternion(e),this.applyMatrix4(Qt),this}rotateX(e){return Qt.makeRotationX(e),this.applyMatrix4(Qt),this}rotateY(e){return Qt.makeRotationY(e),this.applyMatrix4(Qt),this}rotateZ(e){return Qt.makeRotationZ(e),this.applyMatrix4(Qt),this}translate(e,t,n){return Qt.makeTranslation(e,t,n),this.applyMatrix4(Qt),this}scale(e,t,n){return Qt.makeScale(e,t,n),this.applyMatrix4(Qt),this}lookAt(e){return fl.lookAt(e),fl.updateMatrix(),this.applyMatrix4(fl.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Dr).negate(),this.translate(Dr.x,Dr.y,Dr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new _e(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new pr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new A(-1/0,-1/0,-1/0),new A(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];$t.setFromBufferAttribute(s),this.morphTargetsRelative?(wt.addVectors(this.boundingBox.min,$t.min),this.boundingBox.expandByPoint(wt),wt.addVectors(this.boundingBox.max,$t.max),this.boundingBox.expandByPoint(wt)):(this.boundingBox.expandByPoint($t.min),this.boundingBox.expandByPoint($t.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new mr);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new A,1/0);return}if(e){const n=this.boundingSphere.center;if($t.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Vs.setFromBufferAttribute(a),this.morphTargetsRelative?(wt.addVectors($t.min,Vs.min),$t.expandByPoint(wt),wt.addVectors($t.max,Vs.max),$t.expandByPoint(wt)):($t.expandByPoint(Vs.min),$t.expandByPoint(Vs.max))}$t.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)wt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(wt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],c=this.morphTargetsRelative;for(let l=0,u=a.count;l<u;l++)wt.fromBufferAttribute(a,l),c&&(Dr.fromBufferAttribute(e,l),wt.add(Dr)),i=Math.max(i,n.distanceToSquared(wt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new et(new Float32Array(4*a),4));const c=this.getAttribute("tangent").array,l=[],u=[];for(let I=0;I<a;I++)l[I]=new A,u[I]=new A;const h=new A,f=new A,d=new A,p=new q,m=new q,g=new q,v=new A,_=new A;function y(I,F,B){h.fromArray(i,I*3),f.fromArray(i,F*3),d.fromArray(i,B*3),p.fromArray(o,I*2),m.fromArray(o,F*2),g.fromArray(o,B*2),f.sub(h),d.sub(h),m.sub(p),g.sub(p);const j=1/(m.x*g.y-g.x*m.y);!isFinite(j)||(v.copy(f).multiplyScalar(g.y).addScaledVector(d,-m.y).multiplyScalar(j),_.copy(d).multiplyScalar(m.x).addScaledVector(f,-g.x).multiplyScalar(j),l[I].add(v),l[F].add(v),l[B].add(v),u[I].add(_),u[F].add(_),u[B].add(_))}let x=this.groups;x.length===0&&(x=[{start:0,count:n.length}]);for(let I=0,F=x.length;I<F;++I){const B=x[I],j=B.start,D=B.count;for(let k=j,O=j+D;k<O;k+=3)y(n[k+0],n[k+1],n[k+2])}const w=new A,M=new A,P=new A,b=new A;function T(I){P.fromArray(s,I*3),b.copy(P);const F=l[I];w.copy(F),w.sub(P.multiplyScalar(P.dot(F))).normalize(),M.crossVectors(b,F);const j=M.dot(u[I])<0?-1:1;c[I*4]=w.x,c[I*4+1]=w.y,c[I*4+2]=w.z,c[I*4+3]=j}for(let I=0,F=x.length;I<F;++I){const B=x[I],j=B.start,D=B.count;for(let k=j,O=j+D;k<O;k+=3)T(n[k+0]),T(n[k+1]),T(n[k+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new et(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const i=new A,s=new A,o=new A,a=new A,c=new A,l=new A,u=new A,h=new A;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),m=e.getX(f+1),g=e.getX(f+2);i.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),o.fromBufferAttribute(t,g),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),a.fromBufferAttribute(n,p),c.fromBufferAttribute(n,m),l.fromBufferAttribute(n,g),a.add(u),c.add(u),l.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(m,c.x,c.y,c.z),n.setXYZ(g,l.x,l.y,l.z)}else for(let f=0,d=t.count;f<d;f+=3)i.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const o=n[i].array,a=e.attributes[i],c=a.array,l=a.itemSize*t,u=Math.min(c.length,o.length-l);for(let h=0,f=l;h<u;h++,f++)o[f]=c[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)wt.fromBufferAttribute(e,t),wt.normalize(),e.setXYZ(t,wt.x,wt.y,wt.z)}toNonIndexed(){function e(a,c){const l=a.array,u=a.itemSize,h=a.normalized,f=new l.constructor(c.length*u);let d=0,p=0;for(let m=0,g=c.length;m<g;m++){a.isInterleavedBufferAttribute?d=c[m]*a.data.stride+a.offset:d=c[m]*u;for(let v=0;v<u;v++)f[p++]=l[d++]}return new et(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Pe,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],l=e(c,n);t.setAttribute(a,l)}const s=this.morphAttributes;for(const a in s){const c=[],l=s[a];for(let u=0,h=l.length;u<h;u++){const f=l[u],d=e(f,n);c.push(d)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const i={};let s=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],u=[];for(let h=0,f=l.length;h<f;h++){const d=l[h];u.push(d.toJSON(e.data))}u.length>0&&(i[c]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const l in i){const u=i[l];this.setAttribute(l,u.clone(t))}const s=e.morphAttributes;for(const l in s){const u=[],h=s[l];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let l=0,u=o.length;l<u;l++){const h=o[l];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const ed=new xe,Fr=new Eo,dl=new mr,ri=new A,si=new A,oi=new A,pl=new A,ml=new A,gl=new A,Zo=new A,Jo=new A,Ko=new A,Qo=new q,ea=new q,ta=new q,vl=new A,na=new A;class bt extends Xe{constructor(e=new Pe,t=new Si){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),dl.copy(n.boundingSphere),dl.applyMatrix4(s),e.ray.intersectsSphere(dl)===!1)||(ed.copy(s).invert(),Fr.copy(e.ray).applyMatrix4(ed),n.boundingBox!==null&&Fr.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,c=n.attributes.position,l=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,f=n.attributes.uv2,d=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(i))for(let m=0,g=d.length;m<g;m++){const v=d[m],_=i[v.materialIndex],y=Math.max(v.start,p.start),x=Math.min(a.count,Math.min(v.start+v.count,p.start+p.count));for(let w=y,M=x;w<M;w+=3){const P=a.getX(w),b=a.getX(w+1),T=a.getX(w+2);o=ia(this,_,e,Fr,c,l,u,h,f,P,b,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const m=Math.max(0,p.start),g=Math.min(a.count,p.start+p.count);for(let v=m,_=g;v<_;v+=3){const y=a.getX(v),x=a.getX(v+1),w=a.getX(v+2);o=ia(this,i,e,Fr,c,l,u,h,f,y,x,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}else if(c!==void 0)if(Array.isArray(i))for(let m=0,g=d.length;m<g;m++){const v=d[m],_=i[v.materialIndex],y=Math.max(v.start,p.start),x=Math.min(c.count,Math.min(v.start+v.count,p.start+p.count));for(let w=y,M=x;w<M;w+=3){const P=w,b=w+1,T=w+2;o=ia(this,_,e,Fr,c,l,u,h,f,P,b,T),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const m=Math.max(0,p.start),g=Math.min(c.count,p.start+p.count);for(let v=m,_=g;v<_;v+=3){const y=v,x=v+1,w=v+2;o=ia(this,i,e,Fr,c,l,u,h,f,y,x,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}}}function Xy(r,e,t,n,i,s,o,a){let c;if(e.side===Ut?c=n.intersectTriangle(o,s,i,!0,a):c=n.intersectTriangle(i,s,o,e.side!==mi,a),c===null)return null;na.copy(a),na.applyMatrix4(r.matrixWorld);const l=t.ray.origin.distanceTo(na);return l<t.near||l>t.far?null:{distance:l,point:na.clone(),object:r}}function ia(r,e,t,n,i,s,o,a,c,l,u,h){ri.fromBufferAttribute(i,l),si.fromBufferAttribute(i,u),oi.fromBufferAttribute(i,h);const f=r.morphTargetInfluences;if(s&&f){Zo.set(0,0,0),Jo.set(0,0,0),Ko.set(0,0,0);for(let p=0,m=s.length;p<m;p++){const g=f[p],v=s[p];g!==0&&(pl.fromBufferAttribute(v,l),ml.fromBufferAttribute(v,u),gl.fromBufferAttribute(v,h),o?(Zo.addScaledVector(pl,g),Jo.addScaledVector(ml,g),Ko.addScaledVector(gl,g)):(Zo.addScaledVector(pl.sub(ri),g),Jo.addScaledVector(ml.sub(si),g),Ko.addScaledVector(gl.sub(oi),g)))}ri.add(Zo),si.add(Jo),oi.add(Ko)}r.isSkinnedMesh&&(r.boneTransform(l,ri),r.boneTransform(u,si),r.boneTransform(h,oi));const d=Xy(r,e,t,n,ri,si,oi,vl);if(d){a&&(Qo.fromBufferAttribute(a,l),ea.fromBufferAttribute(a,u),ta.fromBufferAttribute(a,h),d.uv=rn.getUV(vl,ri,si,oi,Qo,ea,ta,new q)),c&&(Qo.fromBufferAttribute(c,l),ea.fromBufferAttribute(c,u),ta.fromBufferAttribute(c,h),d.uv2=rn.getUV(vl,ri,si,oi,Qo,ea,ta,new q));const p={a:l,b:u,c:h,normal:new A,materialIndex:0};rn.getNormal(ri,si,oi,p.normal),d.face=p}return d}class jn extends Pe{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const c=[],l=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,o,s,0),p("z","y","x",1,-1,n,t,-e,o,s,1),p("x","z","y",1,1,e,n,t,i,o,2),p("x","z","y",1,-1,e,n,-t,i,o,3),p("x","y","z",1,-1,e,t,n,i,s,4),p("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(c),this.setAttribute("position",new _e(l,3)),this.setAttribute("normal",new _e(u,3)),this.setAttribute("uv",new _e(h,2));function p(m,g,v,_,y,x,w,M,P,b,T){const I=x/P,F=w/b,B=x/2,j=w/2,D=M/2,k=P+1,O=b+1;let G=0,$=0;const z=new A;for(let V=0;V<O;V++){const Q=V*F-j;for(let Y=0;Y<k;Y++){const ne=Y*I-B;z[m]=ne*_,z[g]=Q*y,z[v]=D,l.push(z.x,z.y,z.z),z[m]=0,z[g]=0,z[v]=M>0?1:-1,u.push(z.x,z.y,z.z),h.push(Y/P),h.push(1-V/b),G+=1}}for(let V=0;V<b;V++)for(let Q=0;Q<P;Q++){const Y=f+Q+k*V,ne=f+Q+k*(V+1),fe=f+(Q+1)+k*(V+1),ge=f+(Q+1)+k*V;c.push(Y,ne,ge),c.push(ne,fe,ge),$+=6}a.addGroup(d,$,T),d+=$,f+=G}}static fromJSON(e){return new jn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function os(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Tt(r){const e={};for(let t=0;t<r.length;t++){const n=os(r[t]);for(const i in n)e[i]=n[i]}return e}const Co={clone:os,merge:Tt};var $y=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,qy=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ot extends Ct{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=$y,this.fragmentShader=qy,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=os(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Sc extends Xe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new xe,this.projectionMatrix=new xe,this.projectionMatrixInverse=new xe}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class xt extends Sc{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=uo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Yi*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return uo*2*Math.atan(Math.tan(Yi*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Yi*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;s+=o.offsetX*i/c,t-=o.offsetY*n/l,i*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Or=90,Nr=1;class Ag extends Xe{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new xt(Or,Nr,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new A(1,0,0)),this.add(i);const s=new xt(Or,Nr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new A(-1,0,0)),this.add(s);const o=new xt(Or,Nr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new A(0,1,0)),this.add(o);const a=new xt(Or,Nr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new A(0,-1,0)),this.add(a);const c=new xt(Or,Nr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new A(0,0,1)),this.add(c);const l=new xt(Or,Nr,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new A(0,0,-1)),this.add(l)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,c,l]=this.children,u=e.getRenderTarget(),h=e.toneMapping,f=e.xr.enabled;e.toneMapping=yn,e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(u),e.toneMapping=h,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}class Po extends pt{constructor(e,t,n,i,s,o,a,c,l,u){e=e!==void 0?e:[],t=t!==void 0?t:gi,super(e,t,n,i,s,o,a,c,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Tg extends Gt{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Po(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:rt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new jn(5,5,5),s=new Ot({name:"CubemapFromEquirect",uniforms:os(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ut,blending:qn});s.uniforms.tEquirect.value=t;const o=new bt(i,s),a=t.minFilter;return t.minFilter===dr&&(t.minFilter=rt),new Ag(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}const _l=new A,jy=new A,Yy=new Ft;class li{constructor(e=new A(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=_l.subVectors(n,t).cross(jy.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(_l),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Yy.getNormalMatrix(e),i=this.coplanarPoint(_l).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const zr=new mr,ra=new A;class Ac{constructor(e=new li,t=new li,n=new li,i=new li,s=new li,o=new li){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],c=n[4],l=n[5],u=n[6],h=n[7],f=n[8],d=n[9],p=n[10],m=n[11],g=n[12],v=n[13],_=n[14],y=n[15];return t[0].setComponents(a-i,h-c,m-f,y-g).normalize(),t[1].setComponents(a+i,h+c,m+f,y+g).normalize(),t[2].setComponents(a+s,h+l,m+d,y+v).normalize(),t[3].setComponents(a-s,h-l,m-d,y-v).normalize(),t[4].setComponents(a-o,h-u,m-p,y-_).normalize(),t[5].setComponents(a+o,h+u,m+p,y+_).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),zr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(zr)}intersectsSprite(e){return zr.center.set(0,0,0),zr.radius=.7071067811865476,zr.applyMatrix4(e.matrixWorld),this.intersectsSphere(zr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(ra.x=i.normal.x>0?e.max.x:e.min.x,ra.y=i.normal.y>0?e.max.y:e.min.y,ra.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(ra)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Eg(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function Zy(r,e){const t=e.isWebGL2,n=new WeakMap;function i(l,u){const h=l.array,f=l.usage,d=r.createBuffer();r.bindBuffer(u,d),r.bufferData(u,h,f),l.onUploadCallback();let p;if(h instanceof Float32Array)p=5126;else if(h instanceof Uint16Array)if(l.isFloat16BufferAttribute)if(t)p=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else p=5123;else if(h instanceof Int16Array)p=5122;else if(h instanceof Uint32Array)p=5125;else if(h instanceof Int32Array)p=5124;else if(h instanceof Int8Array)p=5120;else if(h instanceof Uint8Array)p=5121;else if(h instanceof Uint8ClampedArray)p=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:l.version}}function s(l,u,h){const f=u.array,d=u.updateRange;r.bindBuffer(h,l),d.count===-1?r.bufferSubData(h,0,f):(t?r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),n.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);const u=n.get(l);u&&(r.deleteBuffer(u.buffer),n.delete(l))}function c(l,u){if(l.isGLBufferAttribute){const f=n.get(l);(!f||f.version<l.version)&&n.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const h=n.get(l);h===void 0?n.set(l,i(l,u)):h.version<l.version&&(s(h.buffer,l,u),h.version=l.version)}return{get:o,remove:a,update:c}}class sr extends Pe{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),c=Math.floor(i),l=a+1,u=c+1,h=e/a,f=t/c,d=[],p=[],m=[],g=[];for(let v=0;v<u;v++){const _=v*f-o;for(let y=0;y<l;y++){const x=y*h-s;p.push(x,-_,0),m.push(0,0,1),g.push(y/a),g.push(1-v/c)}}for(let v=0;v<c;v++)for(let _=0;_<a;_++){const y=_+l*v,x=_+l*(v+1),w=_+1+l*(v+1),M=_+1+l*v;d.push(y,x,M),d.push(x,w,M)}this.setIndex(d),this.setAttribute("position",new _e(p,3)),this.setAttribute("normal",new _e(m,3)),this.setAttribute("uv",new _e(g,2))}static fromJSON(e){return new sr(e.width,e.height,e.widthSegments,e.heightSegments)}}var Jy=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Ky=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Qy=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,ex=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,tx=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,nx=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,ix="vec3 transformed = vec3( position );",rx=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,sx=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,ox=`#ifdef USE_IRIDESCENCE
const mat3 XYZ_TO_REC709 = mat3(
    3.2404542, -0.9692660,  0.0556434,
   -1.5371385,  1.8760108, -0.2040259,
   -0.4985314,  0.0415560,  1.0572252
);
vec3 Fresnel0ToIor( vec3 fresnel0 ) {
   vec3 sqrtF0 = sqrt( fresnel0 );
   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
}
vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
}
float IorToFresnel0( float transmittedIor, float incidentIor ) {
   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
}
vec3 evalSensitivity( float OPD, vec3 shift ) {
   float phase = 2.0 * PI * OPD * 1.0e-9;
   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );
   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );
   xyz /= 1.0685e-7;
   vec3 srgb = XYZ_TO_REC709 * xyz;
   return srgb;
}
vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
   vec3 I;
   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
   float cosTheta2Sq = 1.0 - sinTheta2Sq;
   if ( cosTheta2Sq < 0.0 ) {
       return vec3( 1.0 );
   }
   float cosTheta2 = sqrt( cosTheta2Sq );
   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
   float R12 = F_Schlick( R0, 1.0, cosTheta1 );
   float R21 = R12;
   float T121 = 1.0 - R12;
   float phi12 = 0.0;
   if ( iridescenceIOR < outsideIOR ) phi12 = PI;
   float phi21 = PI - phi12;
   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
   vec3 phi23 = vec3( 0.0 );
   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;
   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;
   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;
   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
   vec3 phi = vec3( phi21 ) + phi23;
   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
   vec3 r123 = sqrt( R123 );
   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
   vec3 C0 = R12 + Rs;
   I = C0;
   vec3 Cm = Rs - T121;
   for ( int m = 1; m <= 2; ++m ) {
       Cm *= r123;
       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
       I += Cm * Sm;
   }
   return max( I, vec3( 0.0 ) );
}
#endif`,ax=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,cx=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,lx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,ux=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,hx=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,fx=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,dx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,px=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,mx=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,gx=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,vx=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,_x=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,yx=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,xx=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,bx=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,wx=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Mx="gl_FragColor = linearToOutputTexel( gl_FragColor );",Sx=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Ax=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Tx=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Ex=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Cx=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Px=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Lx=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Ix=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Rx=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Dx=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Fx=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,Ox=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Nx=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,zx=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,kx=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Bx=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Ux=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Vx=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Gx=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Hx=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Wx=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Xx=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,$x=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
float dotNVi = saturate( dot( normal, geometry.viewDir ) );
if ( material.iridescenceThickness == 0.0 ) {
	material.iridescence = 0.0;
} else {
	material.iridescence = saturate( material.iridescence );
}
if ( material.iridescence > 0.0 ) {
	material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
	material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,qx=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,jx=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Yx=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Zx=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Jx=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Kx=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Qx=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,eb=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,tb=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,nb=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ib=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,rb=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,sb=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,ob=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,ab=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,cb=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,lb=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,ub=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,hb=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,fb=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,db=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,pb=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,mb=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,gb=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,vb=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,_b=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,yb=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,xb=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,bb=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,wb=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Mb=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Sb=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Ab=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Tb=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Eb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Cb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Pb=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Lb=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Ib=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Rb=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,Db=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Fb=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Ob=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Nb=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,zb=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,kb=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Bb=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,Ub=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Vb=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Gb=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Hb=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Wb=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Xb=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,$b=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,qb=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const jb=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Yb=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Zb=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Jb=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Kb=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Qb=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,ew=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,tw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,nw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,iw=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,rw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ow=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,aw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,cw=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lw=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,hw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,dw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,pw=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,vw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_w=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,yw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xw=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,bw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ww=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Mw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Sw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Aw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ze={alphamap_fragment:Jy,alphamap_pars_fragment:Ky,alphatest_fragment:Qy,alphatest_pars_fragment:ex,aomap_fragment:tx,aomap_pars_fragment:nx,begin_vertex:ix,beginnormal_vertex:rx,bsdfs:sx,iridescence_fragment:ox,bumpmap_pars_fragment:ax,clipping_planes_fragment:cx,clipping_planes_pars_fragment:lx,clipping_planes_pars_vertex:ux,clipping_planes_vertex:hx,color_fragment:fx,color_pars_fragment:dx,color_pars_vertex:px,color_vertex:mx,common:gx,cube_uv_reflection_fragment:vx,defaultnormal_vertex:_x,displacementmap_pars_vertex:yx,displacementmap_vertex:xx,emissivemap_fragment:bx,emissivemap_pars_fragment:wx,encodings_fragment:Mx,encodings_pars_fragment:Sx,envmap_fragment:Ax,envmap_common_pars_fragment:Tx,envmap_pars_fragment:Ex,envmap_pars_vertex:Cx,envmap_physical_pars_fragment:Bx,envmap_vertex:Px,fog_vertex:Lx,fog_pars_vertex:Ix,fog_fragment:Rx,fog_pars_fragment:Dx,gradientmap_pars_fragment:Fx,lightmap_fragment:Ox,lightmap_pars_fragment:Nx,lights_lambert_vertex:zx,lights_pars_begin:kx,lights_toon_fragment:Ux,lights_toon_pars_fragment:Vx,lights_phong_fragment:Gx,lights_phong_pars_fragment:Hx,lights_physical_fragment:Wx,lights_physical_pars_fragment:Xx,lights_fragment_begin:$x,lights_fragment_maps:qx,lights_fragment_end:jx,logdepthbuf_fragment:Yx,logdepthbuf_pars_fragment:Zx,logdepthbuf_pars_vertex:Jx,logdepthbuf_vertex:Kx,map_fragment:Qx,map_pars_fragment:eb,map_particle_fragment:tb,map_particle_pars_fragment:nb,metalnessmap_fragment:ib,metalnessmap_pars_fragment:rb,morphcolor_vertex:sb,morphnormal_vertex:ob,morphtarget_pars_vertex:ab,morphtarget_vertex:cb,normal_fragment_begin:lb,normal_fragment_maps:ub,normal_pars_fragment:hb,normal_pars_vertex:fb,normal_vertex:db,normalmap_pars_fragment:pb,clearcoat_normal_fragment_begin:mb,clearcoat_normal_fragment_maps:gb,clearcoat_pars_fragment:vb,iridescence_pars_fragment:_b,output_fragment:yb,packing:xb,premultiplied_alpha_fragment:bb,project_vertex:wb,dithering_fragment:Mb,dithering_pars_fragment:Sb,roughnessmap_fragment:Ab,roughnessmap_pars_fragment:Tb,shadowmap_pars_fragment:Eb,shadowmap_pars_vertex:Cb,shadowmap_vertex:Pb,shadowmask_pars_fragment:Lb,skinbase_vertex:Ib,skinning_pars_vertex:Rb,skinning_vertex:Db,skinnormal_vertex:Fb,specularmap_fragment:Ob,specularmap_pars_fragment:Nb,tonemapping_fragment:zb,tonemapping_pars_fragment:kb,transmission_fragment:Bb,transmission_pars_fragment:Ub,uv_pars_fragment:Vb,uv_pars_vertex:Gb,uv_vertex:Hb,uv2_pars_fragment:Wb,uv2_pars_vertex:Xb,uv2_vertex:$b,worldpos_vertex:qb,background_vert:jb,background_frag:Yb,cube_vert:Zb,cube_frag:Jb,depth_vert:Kb,depth_frag:Qb,distanceRGBA_vert:ew,distanceRGBA_frag:tw,equirect_vert:nw,equirect_frag:iw,linedashed_vert:rw,linedashed_frag:sw,meshbasic_vert:ow,meshbasic_frag:aw,meshlambert_vert:cw,meshlambert_frag:lw,meshmatcap_vert:uw,meshmatcap_frag:hw,meshnormal_vert:fw,meshnormal_frag:dw,meshphong_vert:pw,meshphong_frag:mw,meshphysical_vert:gw,meshphysical_frag:vw,meshtoon_vert:_w,meshtoon_frag:yw,points_vert:xw,points_frag:bw,shadow_vert:ww,shadow_frag:Mw,sprite_vert:Sw,sprite_frag:Aw},de={common:{diffuse:{value:new oe(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Ft},uv2Transform:{value:new Ft},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new q(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new oe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new oe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ft}},sprite:{diffuse:{value:new oe(16777215)},opacity:{value:1},center:{value:new q(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ft}}},Et={basic:{uniforms:Tt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.fog]),vertexShader:ze.meshbasic_vert,fragmentShader:ze.meshbasic_frag},lambert:{uniforms:Tt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.fog,de.lights,{emissive:{value:new oe(0)}}]),vertexShader:ze.meshlambert_vert,fragmentShader:ze.meshlambert_frag},phong:{uniforms:Tt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.fog,de.lights,{emissive:{value:new oe(0)},specular:{value:new oe(1118481)},shininess:{value:30}}]),vertexShader:ze.meshphong_vert,fragmentShader:ze.meshphong_frag},standard:{uniforms:Tt([de.common,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.roughnessmap,de.metalnessmap,de.fog,de.lights,{emissive:{value:new oe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ze.meshphysical_vert,fragmentShader:ze.meshphysical_frag},toon:{uniforms:Tt([de.common,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.gradientmap,de.fog,de.lights,{emissive:{value:new oe(0)}}]),vertexShader:ze.meshtoon_vert,fragmentShader:ze.meshtoon_frag},matcap:{uniforms:Tt([de.common,de.bumpmap,de.normalmap,de.displacementmap,de.fog,{matcap:{value:null}}]),vertexShader:ze.meshmatcap_vert,fragmentShader:ze.meshmatcap_frag},points:{uniforms:Tt([de.points,de.fog]),vertexShader:ze.points_vert,fragmentShader:ze.points_frag},dashed:{uniforms:Tt([de.common,de.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ze.linedashed_vert,fragmentShader:ze.linedashed_frag},depth:{uniforms:Tt([de.common,de.displacementmap]),vertexShader:ze.depth_vert,fragmentShader:ze.depth_frag},normal:{uniforms:Tt([de.common,de.bumpmap,de.normalmap,de.displacementmap,{opacity:{value:1}}]),vertexShader:ze.meshnormal_vert,fragmentShader:ze.meshnormal_frag},sprite:{uniforms:Tt([de.sprite,de.fog]),vertexShader:ze.sprite_vert,fragmentShader:ze.sprite_frag},background:{uniforms:{uvTransform:{value:new Ft},t2D:{value:null}},vertexShader:ze.background_vert,fragmentShader:ze.background_frag},cube:{uniforms:Tt([de.envmap,{opacity:{value:1}}]),vertexShader:ze.cube_vert,fragmentShader:ze.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ze.equirect_vert,fragmentShader:ze.equirect_frag},distanceRGBA:{uniforms:Tt([de.common,de.displacementmap,{referencePosition:{value:new A},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ze.distanceRGBA_vert,fragmentShader:ze.distanceRGBA_frag},shadow:{uniforms:Tt([de.lights,de.fog,{color:{value:new oe(0)},opacity:{value:1}}]),vertexShader:ze.shadow_vert,fragmentShader:ze.shadow_frag}};Et.physical={uniforms:Tt([Et.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new q(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new oe(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new q},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new oe(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new oe(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ze.meshphysical_vert,fragmentShader:ze.meshphysical_frag};function Tw(r,e,t,n,i,s){const o=new oe(0);let a=i===!0?0:1,c,l,u=null,h=0,f=null;function d(m,g){let v=!1,_=g.isScene===!0?g.background:null;_&&_.isTexture&&(_=e.get(_));const y=r.xr,x=y.getSession&&y.getSession();x&&x.environmentBlendMode==="additive"&&(_=null),_===null?p(o,a):_&&_.isColor&&(p(_,1),v=!0),(r.autoClear||v)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),_&&(_.isCubeTexture||_.mapping===Es)?(l===void 0&&(l=new bt(new jn(1,1,1),new Ot({name:"BackgroundCubeMaterial",uniforms:os(Et.cube.uniforms),vertexShader:Et.cube.vertexShader,fragmentShader:Et.cube.fragmentShader,side:Ut,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(w,M,P){this.matrixWorld.copyPosition(P.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=_,l.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,(u!==_||h!==_.version||f!==r.toneMapping)&&(l.material.needsUpdate=!0,u=_,h=_.version,f=r.toneMapping),l.layers.enableAll(),m.unshift(l,l.geometry,l.material,0,0,null)):_&&_.isTexture&&(c===void 0&&(c=new bt(new sr(2,2),new Ot({name:"BackgroundMaterial",uniforms:os(Et.background.uniforms),vertexShader:Et.background.vertexShader,fragmentShader:Et.background.fragmentShader,side:tr,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=_,_.matrixAutoUpdate===!0&&_.updateMatrix(),c.material.uniforms.uvTransform.value.copy(_.matrix),(u!==_||h!==_.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,u=_,h=_.version,f=r.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function p(m,g){t.buffers.color.setClear(m.r,m.g,m.b,g,s)}return{getClearColor:function(){return o},setClearColor:function(m,g=1){o.set(m),a=g,p(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(m){a=m,p(o,a)},render:d}}function Ew(r,e,t,n){const i=r.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},c=g(null);let l=c,u=!1;function h(D,k,O,G,$){let z=!1;if(o){const V=m(G,O,k);l!==V&&(l=V,d(l.object)),z=v(D,G,O,$),z&&_(D,G,O,$)}else{const V=k.wireframe===!0;(l.geometry!==G.id||l.program!==O.id||l.wireframe!==V)&&(l.geometry=G.id,l.program=O.id,l.wireframe=V,z=!0)}$!==null&&t.update($,34963),(z||u)&&(u=!1,b(D,k,O,G),$!==null&&r.bindBuffer(34963,t.get($).buffer))}function f(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function d(D){return n.isWebGL2?r.bindVertexArray(D):s.bindVertexArrayOES(D)}function p(D){return n.isWebGL2?r.deleteVertexArray(D):s.deleteVertexArrayOES(D)}function m(D,k,O){const G=O.wireframe===!0;let $=a[D.id];$===void 0&&($={},a[D.id]=$);let z=$[k.id];z===void 0&&(z={},$[k.id]=z);let V=z[G];return V===void 0&&(V=g(f()),z[G]=V),V}function g(D){const k=[],O=[],G=[];for(let $=0;$<i;$++)k[$]=0,O[$]=0,G[$]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:k,enabledAttributes:O,attributeDivisors:G,object:D,attributes:{},index:null}}function v(D,k,O,G){const $=l.attributes,z=k.attributes;let V=0;const Q=O.getAttributes();for(const Y in Q)if(Q[Y].location>=0){const fe=$[Y];let ge=z[Y];if(ge===void 0&&(Y==="instanceMatrix"&&D.instanceMatrix&&(ge=D.instanceMatrix),Y==="instanceColor"&&D.instanceColor&&(ge=D.instanceColor)),fe===void 0||fe.attribute!==ge||ge&&fe.data!==ge.data)return!0;V++}return l.attributesNum!==V||l.index!==G}function _(D,k,O,G){const $={},z=k.attributes;let V=0;const Q=O.getAttributes();for(const Y in Q)if(Q[Y].location>=0){let fe=z[Y];fe===void 0&&(Y==="instanceMatrix"&&D.instanceMatrix&&(fe=D.instanceMatrix),Y==="instanceColor"&&D.instanceColor&&(fe=D.instanceColor));const ge={};ge.attribute=fe,fe&&fe.data&&(ge.data=fe.data),$[Y]=ge,V++}l.attributes=$,l.attributesNum=V,l.index=G}function y(){const D=l.newAttributes;for(let k=0,O=D.length;k<O;k++)D[k]=0}function x(D){w(D,0)}function w(D,k){const O=l.newAttributes,G=l.enabledAttributes,$=l.attributeDivisors;O[D]=1,G[D]===0&&(r.enableVertexAttribArray(D),G[D]=1),$[D]!==k&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,k),$[D]=k)}function M(){const D=l.newAttributes,k=l.enabledAttributes;for(let O=0,G=k.length;O<G;O++)k[O]!==D[O]&&(r.disableVertexAttribArray(O),k[O]=0)}function P(D,k,O,G,$,z){n.isWebGL2===!0&&(O===5124||O===5125)?r.vertexAttribIPointer(D,k,O,$,z):r.vertexAttribPointer(D,k,O,G,$,z)}function b(D,k,O,G){if(n.isWebGL2===!1&&(D.isInstancedMesh||G.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const $=G.attributes,z=O.getAttributes(),V=k.defaultAttributeValues;for(const Q in z){const Y=z[Q];if(Y.location>=0){let ne=$[Q];if(ne===void 0&&(Q==="instanceMatrix"&&D.instanceMatrix&&(ne=D.instanceMatrix),Q==="instanceColor"&&D.instanceColor&&(ne=D.instanceColor)),ne!==void 0){const fe=ne.normalized,ge=ne.itemSize,X=t.get(ne);if(X===void 0)continue;const Ue=X.buffer,Se=X.type,Ce=X.bytesPerElement;if(ne.isInterleavedBufferAttribute){const he=ne.data,Ie=he.stride,J=ne.offset;if(he.isInstancedInterleavedBuffer){for(let Z=0;Z<Y.locationSize;Z++)w(Y.location+Z,he.meshPerAttribute);D.isInstancedMesh!==!0&&G._maxInstanceCount===void 0&&(G._maxInstanceCount=he.meshPerAttribute*he.count)}else for(let Z=0;Z<Y.locationSize;Z++)x(Y.location+Z);r.bindBuffer(34962,Ue);for(let Z=0;Z<Y.locationSize;Z++)P(Y.location+Z,ge/Y.locationSize,Se,fe,Ie*Ce,(J+ge/Y.locationSize*Z)*Ce)}else{if(ne.isInstancedBufferAttribute){for(let he=0;he<Y.locationSize;he++)w(Y.location+he,ne.meshPerAttribute);D.isInstancedMesh!==!0&&G._maxInstanceCount===void 0&&(G._maxInstanceCount=ne.meshPerAttribute*ne.count)}else for(let he=0;he<Y.locationSize;he++)x(Y.location+he);r.bindBuffer(34962,Ue);for(let he=0;he<Y.locationSize;he++)P(Y.location+he,ge/Y.locationSize,Se,fe,ge*Ce,ge/Y.locationSize*he*Ce)}}else if(V!==void 0){const fe=V[Q];if(fe!==void 0)switch(fe.length){case 2:r.vertexAttrib2fv(Y.location,fe);break;case 3:r.vertexAttrib3fv(Y.location,fe);break;case 4:r.vertexAttrib4fv(Y.location,fe);break;default:r.vertexAttrib1fv(Y.location,fe)}}}}M()}function T(){B();for(const D in a){const k=a[D];for(const O in k){const G=k[O];for(const $ in G)p(G[$].object),delete G[$];delete k[O]}delete a[D]}}function I(D){if(a[D.id]===void 0)return;const k=a[D.id];for(const O in k){const G=k[O];for(const $ in G)p(G[$].object),delete G[$];delete k[O]}delete a[D.id]}function F(D){for(const k in a){const O=a[k];if(O[D.id]===void 0)continue;const G=O[D.id];for(const $ in G)p(G[$].object),delete G[$];delete O[D.id]}}function B(){j(),u=!0,l!==c&&(l=c,d(l.object))}function j(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:h,reset:B,resetDefaultState:j,dispose:T,releaseStatesOfGeometry:I,releaseStatesOfProgram:F,initAttributes:y,enableAttribute:x,disableUnusedAttributes:M}}function Cw(r,e,t,n){const i=n.isWebGL2;let s;function o(l){s=l}function a(l,u){r.drawArrays(s,l,u),t.update(u,s,1)}function c(l,u,h){if(h===0)return;let f,d;if(i)f=r,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,l,u,h),t.update(u,s,h)}this.setMode=o,this.render=a,this.renderInstances=c}function Pw(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const P=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(P){if(P==="highp"){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";P="mediump"}return P==="mediump"&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&r instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const c=s(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const l=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=r.getParameter(34930),f=r.getParameter(35660),d=r.getParameter(3379),p=r.getParameter(34076),m=r.getParameter(34921),g=r.getParameter(36347),v=r.getParameter(36348),_=r.getParameter(36349),y=f>0,x=o||e.has("OES_texture_float"),w=y&&x,M=o?r.getParameter(36183):0;return{isWebGL2:o,drawBuffers:l,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:g,maxVaryings:v,maxFragmentUniforms:_,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:w,maxSamples:M}}function Lw(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new li,a=new Ft,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,d){const p=h.length!==0||f||n!==0||i;return i=f,t=u(h,d,0),n=h.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,l()},this.setState=function(h,f,d){const p=h.clippingPlanes,m=h.clipIntersection,g=h.clipShadows,v=r.get(h);if(!i||p===null||p.length===0||s&&!g)s?u(null):l();else{const _=s?0:n,y=_*4;let x=v.clippingState||null;c.value=x,x=u(p,f,y,d);for(let w=0;w!==y;++w)x[w]=t[w];v.clippingState=x,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=_}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,f,d,p){const m=h!==null?h.length:0;let g=null;if(m!==0){if(g=c.value,p!==!0||g===null){const v=d+m*4,_=f.matrixWorldInverse;a.getNormalMatrix(_),(g===null||g.length<v)&&(g=new Float32Array(v));for(let y=0,x=d;y!==m;++y,x+=4)o.copy(h[y]).applyMatrix4(_,a),o.normal.toArray(g,x),g[x+3]=o.constant}c.value=g,c.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,g}}function Iw(r){let e=new WeakMap;function t(o,a){return a===rs?o.mapping=gi:a===so&&(o.mapping=vi),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===rs||a===so)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const l=new Tg(c.height/2);return l.fromEquirectangularTexture(r,o),e.set(o,l),o.addEventListener("dispose",i),t(l.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class gr extends Sc{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=l*this.view.offsetX,o=s+l*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Jr=4,td=[.125,.215,.35,.446,.526,.582],Gi=20,yl=new gr,nd=new oe;let xl=null;const Bi=(1+Math.sqrt(5))/2,kr=1/Bi,id=[new A(1,1,1),new A(-1,1,1),new A(1,1,-1),new A(-1,1,-1),new A(0,Bi,kr),new A(0,Bi,-kr),new A(kr,0,Bi),new A(-kr,0,Bi),new A(Bi,kr,0),new A(-Bi,kr,0)];class Su{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){xl=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=od(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=sd(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(xl),e.scissorTest=!1,sa(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===gi||e.mapping===vi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),xl=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:rt,minFilter:rt,generateMipmaps:!1,type:ss,format:Yt,encoding:yi,depthBuffer:!1},i=rd(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=rd(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Rw(s)),this._blurMaterial=Dw(s,e,t)}return i}_compileMaterial(e){const t=new bt(this._lodPlanes[0],e);this._renderer.compile(t,yl)}_sceneToCubeUV(e,t,n,i){const a=new xt(90,1,t,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(nd),u.toneMapping=yn,u.autoClear=!1;const d=new Si({name:"PMREM.Background",side:Ut,depthWrite:!1,depthTest:!1}),p=new bt(new jn,d);let m=!1;const g=e.background;g?g.isColor&&(d.color.copy(g),e.background=null,m=!0):(d.color.copy(nd),m=!0);for(let v=0;v<6;v++){const _=v%3;_===0?(a.up.set(0,c[v],0),a.lookAt(l[v],0,0)):_===1?(a.up.set(0,0,c[v]),a.lookAt(0,l[v],0)):(a.up.set(0,c[v],0),a.lookAt(0,0,l[v]));const y=this._cubeSize;sa(i,_*y,v>2?y:0,y,y),u.setRenderTarget(i),m&&u.render(p,a),u.render(e,a)}p.geometry.dispose(),p.material.dispose(),u.toneMapping=f,u.autoClear=h,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===gi||e.mapping===vi;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=od()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=sd());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new bt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const c=this._cubeSize;sa(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,yl)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=id[(i-1)%id.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new bt(this._lodPlanes[i],l),f=l.uniforms,d=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*Gi-1),m=s/p,g=isFinite(s)?1+Math.floor(u*m):Gi;g>Gi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Gi}`);const v=[];let _=0;for(let P=0;P<Gi;++P){const b=P/m,T=Math.exp(-b*b/2);v.push(T),P===0?_+=T:P<g&&(_+=2*T)}for(let P=0;P<v.length;P++)v[P]=v[P]/_;f.envMap.value=e.texture,f.samples.value=g,f.weights.value=v,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:y}=this;f.dTheta.value=p,f.mipInt.value=y-n;const x=this._sizeLods[i],w=3*x*(i>y-Jr?i-y+Jr:0),M=4*(this._cubeSize-x);sa(t,w,M,3*x,2*x),c.setRenderTarget(t),c.render(h,yl)}}function Rw(r){const e=[],t=[],n=[];let i=r;const s=r-Jr+1+td.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);t.push(a);let c=1/a;o>r-Jr?c=td[o-r+Jr-1]:o===0&&(c=0),n.push(c);const l=1/(a-2),u=-l,h=1+l,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,p=6,m=3,g=2,v=1,_=new Float32Array(m*p*d),y=new Float32Array(g*p*d),x=new Float32Array(v*p*d);for(let M=0;M<d;M++){const P=M%3*2/3-1,b=M>2?0:-1,T=[P,b,0,P+2/3,b,0,P+2/3,b+1,0,P,b,0,P+2/3,b+1,0,P,b+1,0];_.set(T,m*p*M),y.set(f,g*p*M);const I=[M,M,M,M,M,M];x.set(I,v*p*M)}const w=new Pe;w.setAttribute("position",new et(_,m)),w.setAttribute("uv",new et(y,g)),w.setAttribute("faceIndex",new et(x,v)),e.push(w),i>Jr&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function rd(r,e,t){const n=new Gt(r,e,t);return n.texture.mapping=Es,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function sa(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Dw(r,e,t){const n=new Float32Array(Gi),i=new A(0,1,0);return new Ot({name:"SphericalGaussianBlur",defines:{n:Gi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:yh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:qn,depthTest:!1,depthWrite:!1})}function sd(){return new Ot({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:yh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:qn,depthTest:!1,depthWrite:!1})}function od(){return new Ot({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:yh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:qn,depthTest:!1,depthWrite:!1})}function yh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Fw(r){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const c=a.mapping,l=c===rs||c===so,u=c===gi||c===vi;if(l||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=e.get(a);return t===null&&(t=new Su(r)),h=l?t.fromEquirectangular(a,h):t.fromCubemap(a,h),e.set(a,h),h.texture}else{if(e.has(a))return e.get(a).texture;{const h=a.image;if(l&&h&&h.height>0||u&&h&&i(h)){t===null&&(t=new Su(r));const f=l?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,f),a.addEventListener("dispose",s),f.texture}else return null}}}return a}function i(a){let c=0;const l=6;for(let u=0;u<l;u++)a[u]!==void 0&&c++;return c===l}function s(a){const c=a.target;c.removeEventListener("dispose",s);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Ow(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Nw(r,e,t,n){const i={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete i[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return i[f.id]===!0||(f.addEventListener("dispose",o),i[f.id]=!0,t.memory.geometries++),f}function c(h){const f=h.attributes;for(const p in f)e.update(f[p],34962);const d=h.morphAttributes;for(const p in d){const m=d[p];for(let g=0,v=m.length;g<v;g++)e.update(m[g],34962)}}function l(h){const f=[],d=h.index,p=h.attributes.position;let m=0;if(d!==null){const _=d.array;m=d.version;for(let y=0,x=_.length;y<x;y+=3){const w=_[y+0],M=_[y+1],P=_[y+2];f.push(w,M,M,P,P,w)}}else{const _=p.array;m=p.version;for(let y=0,x=_.length/3-1;y<x;y+=3){const w=y+0,M=y+1,P=y+2;f.push(w,M,M,P,P,w)}}const g=new(Mg(f)?_h:Mc)(f,1);g.version=m;const v=s.get(h);v&&e.remove(v),s.set(h,g)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&l(h)}else l(h);return s.get(h)}return{get:a,update:c,getWireframeAttribute:u}}function zw(r,e,t,n){const i=n.isWebGL2;let s;function o(f){s=f}let a,c;function l(f){a=f.type,c=f.bytesPerElement}function u(f,d){r.drawElements(s,d,a,f*c),t.update(d,s,1)}function h(f,d,p){if(p===0)return;let m,g;if(i)m=r,g="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](s,d,a,f*c,p),t.update(d,s,p)}this.setMode=o,this.setIndex=l,this.render=u,this.renderInstances=h}function kw(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Bw(r,e){return r[0]-e[0]}function Uw(r,e){return Math.abs(e[1])-Math.abs(r[1])}function bl(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Uint8Array?t=255:n instanceof Uint16Array?t=65535:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function Vw(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new He,a=[];for(let l=0;l<8;l++)a[l]=[l,0];function c(l,u,h,f){const d=l.morphTargetInfluences;if(e.isWebGL2===!0){const p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,m=p!==void 0?p.length:0;let g=s.get(u);if(g===void 0||g.count!==m){let k=function(){j.dispose(),s.delete(u),u.removeEventListener("dispose",k)};g!==void 0&&g.texture.dispose();const y=u.morphAttributes.position!==void 0,x=u.morphAttributes.normal!==void 0,w=u.morphAttributes.color!==void 0,M=u.morphAttributes.position||[],P=u.morphAttributes.normal||[],b=u.morphAttributes.color||[];let T=0;y===!0&&(T=1),x===!0&&(T=2),w===!0&&(T=3);let I=u.attributes.position.count*T,F=1;I>e.maxTextureSize&&(F=Math.ceil(I/e.maxTextureSize),I=e.maxTextureSize);const B=new Float32Array(I*F*4*m),j=new To(B,I,F,m);j.type=Gn,j.needsUpdate=!0;const D=T*4;for(let O=0;O<m;O++){const G=M[O],$=P[O],z=b[O],V=I*F*4*O;for(let Q=0;Q<G.count;Q++){const Y=Q*D;y===!0&&(o.fromBufferAttribute(G,Q),G.normalized===!0&&bl(o,G),B[V+Y+0]=o.x,B[V+Y+1]=o.y,B[V+Y+2]=o.z,B[V+Y+3]=0),x===!0&&(o.fromBufferAttribute($,Q),$.normalized===!0&&bl(o,$),B[V+Y+4]=o.x,B[V+Y+5]=o.y,B[V+Y+6]=o.z,B[V+Y+7]=0),w===!0&&(o.fromBufferAttribute(z,Q),z.normalized===!0&&bl(o,z),B[V+Y+8]=o.x,B[V+Y+9]=o.y,B[V+Y+10]=o.z,B[V+Y+11]=z.itemSize===4?o.w:1)}}g={count:m,texture:j,size:new q(I,F)},s.set(u,g),u.addEventListener("dispose",k)}let v=0;for(let y=0;y<d.length;y++)v+=d[y];const _=u.morphTargetsRelative?1:1-v;f.getUniforms().setValue(r,"morphTargetBaseInfluence",_),f.getUniforms().setValue(r,"morphTargetInfluences",d),f.getUniforms().setValue(r,"morphTargetsTexture",g.texture,t),f.getUniforms().setValue(r,"morphTargetsTextureSize",g.size)}else{const p=d===void 0?0:d.length;let m=n[u.id];if(m===void 0||m.length!==p){m=[];for(let x=0;x<p;x++)m[x]=[x,0];n[u.id]=m}for(let x=0;x<p;x++){const w=m[x];w[0]=x,w[1]=d[x]}m.sort(Uw);for(let x=0;x<8;x++)x<p&&m[x][1]?(a[x][0]=m[x][0],a[x][1]=m[x][1]):(a[x][0]=Number.MAX_SAFE_INTEGER,a[x][1]=0);a.sort(Bw);const g=u.morphAttributes.position,v=u.morphAttributes.normal;let _=0;for(let x=0;x<8;x++){const w=a[x],M=w[0],P=w[1];M!==Number.MAX_SAFE_INTEGER&&P?(g&&u.getAttribute("morphTarget"+x)!==g[M]&&u.setAttribute("morphTarget"+x,g[M]),v&&u.getAttribute("morphNormal"+x)!==v[M]&&u.setAttribute("morphNormal"+x,v[M]),i[x]=P,_+=P):(g&&u.hasAttribute("morphTarget"+x)===!0&&u.deleteAttribute("morphTarget"+x),v&&u.hasAttribute("morphNormal"+x)===!0&&u.deleteAttribute("morphNormal"+x),i[x]=0)}const y=u.morphTargetsRelative?1:1-_;f.getUniforms().setValue(r,"morphTargetBaseInfluence",y),f.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:c}}function Gw(r,e,t,n){let i=new WeakMap;function s(c){const l=n.render.frame,u=c.geometry,h=e.get(c,u);return i.get(h)!==l&&(e.update(h),i.set(h,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),t.update(c.instanceMatrix,34962),c.instanceColor!==null&&t.update(c.instanceColor,34962)),h}function o(){i=new WeakMap}function a(c){const l=c.target;l.removeEventListener("dispose",a),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:s,dispose:o}}const Cg=new pt,Pg=new To,Lg=new bc,Ig=new Po,ad=[],cd=[],ld=new Float32Array(16),ud=new Float32Array(9),hd=new Float32Array(4);function Cs(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=ad[i];if(s===void 0&&(s=new Float32Array(i),ad[i]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function Nt(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function zt(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Tc(r,e){let t=cd[e];t===void 0&&(t=new Int32Array(e),cd[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Hw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function Ww(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Nt(t,e))return;r.uniform2fv(this.addr,e),zt(t,e)}}function Xw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Nt(t,e))return;r.uniform3fv(this.addr,e),zt(t,e)}}function $w(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Nt(t,e))return;r.uniform4fv(this.addr,e),zt(t,e)}}function qw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),zt(t,e)}else{if(Nt(t,n))return;hd.set(n),r.uniformMatrix2fv(this.addr,!1,hd),zt(t,n)}}function jw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),zt(t,e)}else{if(Nt(t,n))return;ud.set(n),r.uniformMatrix3fv(this.addr,!1,ud),zt(t,n)}}function Yw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),zt(t,e)}else{if(Nt(t,n))return;ld.set(n),r.uniformMatrix4fv(this.addr,!1,ld),zt(t,n)}}function Zw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function Jw(r,e){const t=this.cache;Nt(t,e)||(r.uniform2iv(this.addr,e),zt(t,e))}function Kw(r,e){const t=this.cache;Nt(t,e)||(r.uniform3iv(this.addr,e),zt(t,e))}function Qw(r,e){const t=this.cache;Nt(t,e)||(r.uniform4iv(this.addr,e),zt(t,e))}function eM(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function tM(r,e){const t=this.cache;Nt(t,e)||(r.uniform2uiv(this.addr,e),zt(t,e))}function nM(r,e){const t=this.cache;Nt(t,e)||(r.uniform3uiv(this.addr,e),zt(t,e))}function iM(r,e){const t=this.cache;Nt(t,e)||(r.uniform4uiv(this.addr,e),zt(t,e))}function rM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Cg,i)}function sM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Lg,i)}function oM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Ig,i)}function aM(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Pg,i)}function cM(r){switch(r){case 5126:return Hw;case 35664:return Ww;case 35665:return Xw;case 35666:return $w;case 35674:return qw;case 35675:return jw;case 35676:return Yw;case 5124:case 35670:return Zw;case 35667:case 35671:return Jw;case 35668:case 35672:return Kw;case 35669:case 35673:return Qw;case 5125:return eM;case 36294:return tM;case 36295:return nM;case 36296:return iM;case 35678:case 36198:case 36298:case 36306:case 35682:return rM;case 35679:case 36299:case 36307:return sM;case 35680:case 36300:case 36308:case 36293:return oM;case 36289:case 36303:case 36311:case 36292:return aM}}function lM(r,e){r.uniform1fv(this.addr,e)}function uM(r,e){const t=Cs(e,this.size,2);r.uniform2fv(this.addr,t)}function hM(r,e){const t=Cs(e,this.size,3);r.uniform3fv(this.addr,t)}function fM(r,e){const t=Cs(e,this.size,4);r.uniform4fv(this.addr,t)}function dM(r,e){const t=Cs(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function pM(r,e){const t=Cs(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function mM(r,e){const t=Cs(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function gM(r,e){r.uniform1iv(this.addr,e)}function vM(r,e){r.uniform2iv(this.addr,e)}function _M(r,e){r.uniform3iv(this.addr,e)}function yM(r,e){r.uniform4iv(this.addr,e)}function xM(r,e){r.uniform1uiv(this.addr,e)}function bM(r,e){r.uniform2uiv(this.addr,e)}function wM(r,e){r.uniform3uiv(this.addr,e)}function MM(r,e){r.uniform4uiv(this.addr,e)}function SM(r,e,t){const n=e.length,i=Tc(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||Cg,i[s])}function AM(r,e,t){const n=e.length,i=Tc(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Lg,i[s])}function TM(r,e,t){const n=e.length,i=Tc(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Ig,i[s])}function EM(r,e,t){const n=e.length,i=Tc(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||Pg,i[s])}function CM(r){switch(r){case 5126:return lM;case 35664:return uM;case 35665:return hM;case 35666:return fM;case 35674:return dM;case 35675:return pM;case 35676:return mM;case 5124:case 35670:return gM;case 35667:case 35671:return vM;case 35668:case 35672:return _M;case 35669:case 35673:return yM;case 5125:return xM;case 36294:return bM;case 36295:return wM;case 36296:return MM;case 35678:case 36198:case 36298:case 36306:case 35682:return SM;case 35679:case 36299:case 36307:return AM;case 35680:case 36300:case 36308:case 36293:return TM;case 36289:case 36303:case 36311:case 36292:return EM}}class PM{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=cM(t.type)}}class LM{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=CM(t.type)}}class IM{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const a=i[s];a.setValue(e,t[a.id],n)}}}const wl=/(\w+)(\])?(\[|\.)?/g;function fd(r,e){r.seq.push(e),r.map[e.id]=e}function RM(r,e,t){const n=r.name,i=n.length;for(wl.lastIndex=0;;){const s=wl.exec(n),o=wl.lastIndex;let a=s[1];const c=s[2]==="]",l=s[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===i){fd(t,l===void 0?new PM(a,r,e):new LM(a,r,e));break}else{let h=t.map[a];h===void 0&&(h=new IM(a),fd(t,h)),t=h}}}class Va{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),o=e.getUniformLocation(t,s.name);RM(s,o,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,o=t.length;s!==o;++s){const a=t[s],c=n[a.id];c.needsUpdate!==!1&&a.setValue(e,c.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function dd(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let DM=0;function FM(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function OM(r){switch(r){case yi:return["Linear","( value )"];case Ge:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function pd(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+FM(r.getShaderSource(e),o)}else return i}function NM(r,e){const t=OM(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function zM(r,e){let t;switch(e){case ah:t="Linear";break;case ch:t="Reinhard";break;case lh:t="OptimizedCineon";break;case uh:t="ACESFilmic";break;case tg:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function kM(r){return[r.extensionDerivatives||!!r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(js).join(`
`)}function BM(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function UM(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function js(r){return r!==""}function md(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function gd(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const VM=/^[ \t]*#include +<([\w\d./]+)>/gm;function Au(r){return r.replace(VM,GM)}function GM(r,e){const t=ze[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Au(t)}const HM=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,WM=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function vd(r){return r.replace(WM,Rg).replace(HM,XM)}function XM(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Rg(r,e,t,n)}function Rg(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function _d(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function $M(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===ih?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Fm?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Yr&&(e="SHADOWMAP_TYPE_VSM"),e}function qM(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case gi:case vi:e="ENVMAP_TYPE_CUBE";break;case Es:e="ENVMAP_TYPE_CUBE_UV";break}return e}function jM(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case vi:e="ENVMAP_MODE_REFRACTION";break}return e}function YM(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case nr:e="ENVMAP_BLENDING_MULTIPLY";break;case eg:e="ENVMAP_BLENDING_MIX";break;case nc:e="ENVMAP_BLENDING_ADD";break}return e}function ZM(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function JM(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const c=$M(t),l=qM(t),u=jM(t),h=YM(t),f=ZM(t),d=t.isWebGL2?"":kM(t),p=BM(s),m=i.createProgram();let g,v,_=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=[p].filter(js).join(`
`),g.length>0&&(g+=`
`),v=[d,p].filter(js).join(`
`),v.length>0&&(v+=`
`)):(g=[_d(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(js).join(`
`),v=[d,_d(t),"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==yn?"#define TONE_MAPPING":"",t.toneMapping!==yn?ze.tonemapping_pars_fragment:"",t.toneMapping!==yn?zM("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ze.encodings_pars_fragment,NM("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(js).join(`
`)),o=Au(o),o=md(o,t),o=gd(o,t),a=Au(a),a=md(a,t),a=gd(a,t),o=vd(o),a=vd(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,v=["#define varying in",t.glslVersion===wu?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===wu?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const y=_+g+o,x=_+v+a,w=dd(i,35633,y),M=dd(i,35632,x);if(i.attachShader(m,w),i.attachShader(m,M),t.index0AttributeName!==void 0?i.bindAttribLocation(m,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),r.debug.checkShaderErrors){const T=i.getProgramInfoLog(m).trim(),I=i.getShaderInfoLog(w).trim(),F=i.getShaderInfoLog(M).trim();let B=!0,j=!0;if(i.getProgramParameter(m,35714)===!1){B=!1;const D=pd(i,w,"vertex"),k=pd(i,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,35715)+`

Program Info Log: `+T+`
`+D+`
`+k)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(I===""||F==="")&&(j=!1);j&&(this.diagnostics={runnable:B,programLog:T,vertexShader:{log:I,prefix:g},fragmentShader:{log:F,prefix:v}})}i.deleteShader(w),i.deleteShader(M);let P;this.getUniforms=function(){return P===void 0&&(P=new Va(i,m)),P};let b;return this.getAttributes=function(){return b===void 0&&(b=UM(i,m)),b},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=t.shaderName,this.id=DM++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=w,this.fragmentShader=M,this}let KM=0;class QM{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new e1(e);t.set(e,n)}return t.get(e)}}class e1{constructor(e){this.id=KM++,this.code=e,this.usedTimes=0}}function t1(r,e,t,n,i,s,o){const a=new wc,c=new QM,l=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,f=i.vertexTextures;let d=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(b,T,I,F,B){const j=F.fog,D=B.geometry,k=b.isMeshStandardMaterial?F.environment:null,O=(b.isMeshStandardMaterial?t:e).get(b.envMap||k),G=!!O&&O.mapping===Es?O.image.height:null,$=p[b.type];b.precision!==null&&(d=i.getMaxPrecision(b.precision),d!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",d,"instead."));const z=D.morphAttributes.position||D.morphAttributes.normal||D.morphAttributes.color,V=z!==void 0?z.length:0;let Q=0;D.morphAttributes.position!==void 0&&(Q=1),D.morphAttributes.normal!==void 0&&(Q=2),D.morphAttributes.color!==void 0&&(Q=3);let Y,ne,fe,ge;if($){const Ie=Et[$];Y=Ie.vertexShader,ne=Ie.fragmentShader}else Y=b.vertexShader,ne=b.fragmentShader,c.update(b),fe=c.getVertexShaderID(b),ge=c.getFragmentShaderID(b);const X=r.getRenderTarget(),Ue=b.alphaTest>0,Se=b.clearcoat>0,Ce=b.iridescence>0;return{isWebGL2:u,shaderID:$,shaderName:b.type,vertexShader:Y,fragmentShader:ne,defines:b.defines,customVertexShaderID:fe,customFragmentShaderID:ge,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:d,instancing:B.isInstancedMesh===!0,instancingColor:B.isInstancedMesh===!0&&B.instanceColor!==null,supportsVertexTextures:f,outputEncoding:X===null?r.outputEncoding:X.isXRRenderTarget===!0?X.texture.encoding:yi,map:!!b.map,matcap:!!b.matcap,envMap:!!O,envMapMode:O&&O.mapping,envMapCubeUVHeight:G,lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===xg,tangentSpaceNormalMap:b.normalMapType===Mi,decodeVideoTexture:!!b.map&&b.map.isVideoTexture===!0&&b.map.encoding===Ge,clearcoat:Se,clearcoatMap:Se&&!!b.clearcoatMap,clearcoatRoughnessMap:Se&&!!b.clearcoatRoughnessMap,clearcoatNormalMap:Se&&!!b.clearcoatNormalMap,iridescence:Ce,iridescenceMap:Ce&&!!b.iridescenceMap,iridescenceThicknessMap:Ce&&!!b.iridescenceThicknessMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,specularIntensityMap:!!b.specularIntensityMap,specularColorMap:!!b.specularColorMap,opaque:b.transparent===!1&&b.blending===qi,alphaMap:!!b.alphaMap,alphaTest:Ue,gradientMap:!!b.gradientMap,sheen:b.sheen>0,sheenColorMap:!!b.sheenColorMap,sheenRoughnessMap:!!b.sheenRoughnessMap,transmission:b.transmission>0,transmissionMap:!!b.transmissionMap,thicknessMap:!!b.thicknessMap,combine:b.combine,vertexTangents:!!b.normalMap&&!!D.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!D.attributes.color&&D.attributes.color.itemSize===4,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||!!b.displacementMap||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||!!b.sheenColorMap||!!b.sheenRoughnessMap,uvsVertexOnly:!(!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||b.transmission>0||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||b.sheen>0||!!b.sheenColorMap||!!b.sheenRoughnessMap)&&!!b.displacementMap,fog:!!j,useFog:b.fog===!0,fogExp2:j&&j.isFogExp2,flatShading:!!b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:h,skinning:B.isSkinnedMesh===!0,morphTargets:D.morphAttributes.position!==void 0,morphNormals:D.morphAttributes.normal!==void 0,morphColors:D.morphAttributes.color!==void 0,morphTargetsCount:V,morphTextureStride:Q,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&I.length>0,shadowMapType:r.shadowMap.type,toneMapping:b.toneMapped?r.toneMapping:yn,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===mi,flipSided:b.side===Ut,useDepthPacking:!!b.depthPacking,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function g(b){const T=[];if(b.shaderID?T.push(b.shaderID):(T.push(b.customVertexShaderID),T.push(b.customFragmentShaderID)),b.defines!==void 0)for(const I in b.defines)T.push(I),T.push(b.defines[I]);return b.isRawShaderMaterial===!1&&(v(T,b),_(T,b),T.push(r.outputEncoding)),T.push(b.customProgramCacheKey),T.join()}function v(b,T){b.push(T.precision),b.push(T.outputEncoding),b.push(T.envMapMode),b.push(T.envMapCubeUVHeight),b.push(T.combine),b.push(T.vertexUvs),b.push(T.fogExp2),b.push(T.sizeAttenuation),b.push(T.morphTargetsCount),b.push(T.morphAttributeCount),b.push(T.numDirLights),b.push(T.numPointLights),b.push(T.numSpotLights),b.push(T.numHemiLights),b.push(T.numRectAreaLights),b.push(T.numDirLightShadows),b.push(T.numPointLightShadows),b.push(T.numSpotLightShadows),b.push(T.shadowMapType),b.push(T.toneMapping),b.push(T.numClippingPlanes),b.push(T.numClipIntersection),b.push(T.depthPacking)}function _(b,T){a.disableAll(),T.isWebGL2&&a.enable(0),T.supportsVertexTextures&&a.enable(1),T.instancing&&a.enable(2),T.instancingColor&&a.enable(3),T.map&&a.enable(4),T.matcap&&a.enable(5),T.envMap&&a.enable(6),T.lightMap&&a.enable(7),T.aoMap&&a.enable(8),T.emissiveMap&&a.enable(9),T.bumpMap&&a.enable(10),T.normalMap&&a.enable(11),T.objectSpaceNormalMap&&a.enable(12),T.tangentSpaceNormalMap&&a.enable(13),T.clearcoat&&a.enable(14),T.clearcoatMap&&a.enable(15),T.clearcoatRoughnessMap&&a.enable(16),T.clearcoatNormalMap&&a.enable(17),T.iridescence&&a.enable(18),T.iridescenceMap&&a.enable(19),T.iridescenceThicknessMap&&a.enable(20),T.displacementMap&&a.enable(21),T.specularMap&&a.enable(22),T.roughnessMap&&a.enable(23),T.metalnessMap&&a.enable(24),T.gradientMap&&a.enable(25),T.alphaMap&&a.enable(26),T.alphaTest&&a.enable(27),T.vertexColors&&a.enable(28),T.vertexAlphas&&a.enable(29),T.vertexUvs&&a.enable(30),T.vertexTangents&&a.enable(31),T.uvsVertexOnly&&a.enable(32),T.fog&&a.enable(33),b.push(a.mask),a.disableAll(),T.useFog&&a.enable(0),T.flatShading&&a.enable(1),T.logarithmicDepthBuffer&&a.enable(2),T.skinning&&a.enable(3),T.morphTargets&&a.enable(4),T.morphNormals&&a.enable(5),T.morphColors&&a.enable(6),T.premultipliedAlpha&&a.enable(7),T.shadowMapEnabled&&a.enable(8),T.physicallyCorrectLights&&a.enable(9),T.doubleSided&&a.enable(10),T.flipSided&&a.enable(11),T.useDepthPacking&&a.enable(12),T.dithering&&a.enable(13),T.specularIntensityMap&&a.enable(14),T.specularColorMap&&a.enable(15),T.transmission&&a.enable(16),T.transmissionMap&&a.enable(17),T.thicknessMap&&a.enable(18),T.sheen&&a.enable(19),T.sheenColorMap&&a.enable(20),T.sheenRoughnessMap&&a.enable(21),T.decodeVideoTexture&&a.enable(22),T.opaque&&a.enable(23),b.push(a.mask)}function y(b){const T=p[b.type];let I;if(T){const F=Et[T];I=Co.clone(F.uniforms)}else I=b.uniforms;return I}function x(b,T){let I;for(let F=0,B=l.length;F<B;F++){const j=l[F];if(j.cacheKey===T){I=j,++I.usedTimes;break}}return I===void 0&&(I=new JM(r,T,b,s),l.push(I)),I}function w(b){if(--b.usedTimes===0){const T=l.indexOf(b);l[T]=l[l.length-1],l.pop(),b.destroy()}}function M(b){c.remove(b)}function P(){c.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:y,acquireProgram:x,releaseProgram:w,releaseShaderCache:M,programs:l,dispose:P}}function n1(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function i1(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function yd(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function xd(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(h,f,d,p,m,g){let v=r[e];return v===void 0?(v={id:h.id,object:h,geometry:f,material:d,groupOrder:p,renderOrder:h.renderOrder,z:m,group:g},r[e]=v):(v.id=h.id,v.object=h,v.geometry=f,v.material=d,v.groupOrder=p,v.renderOrder=h.renderOrder,v.z=m,v.group=g),e++,v}function a(h,f,d,p,m,g){const v=o(h,f,d,p,m,g);d.transmission>0?n.push(v):d.transparent===!0?i.push(v):t.push(v)}function c(h,f,d,p,m,g){const v=o(h,f,d,p,m,g);d.transmission>0?n.unshift(v):d.transparent===!0?i.unshift(v):t.unshift(v)}function l(h,f){t.length>1&&t.sort(h||i1),n.length>1&&n.sort(f||yd),i.length>1&&i.sort(f||yd)}function u(){for(let h=e,f=r.length;h<f;h++){const d=r[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:a,unshift:c,finish:u,sort:l}}function r1(){let r=new WeakMap;function e(n,i){let s;return r.has(n)===!1?(s=new xd,r.set(n,[s])):i>=r.get(n).length?(s=new xd,r.get(n).push(s)):s=r.get(n)[i],s}function t(){r=new WeakMap}return{get:e,dispose:t}}function s1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new A,color:new oe};break;case"SpotLight":t={position:new A,direction:new A,color:new oe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new A,color:new oe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new A,skyColor:new oe,groundColor:new oe};break;case"RectAreaLight":t={color:new oe,position:new A,halfWidth:new A,halfHeight:new A};break}return r[e.id]=t,t}}}function o1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new q,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let a1=0;function c1(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function l1(r,e){const t=new s1,n=o1(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new A);const s=new A,o=new xe,a=new xe;function c(u,h){let f=0,d=0,p=0;for(let T=0;T<9;T++)i.probe[T].set(0,0,0);let m=0,g=0,v=0,_=0,y=0,x=0,w=0,M=0;u.sort(c1);const P=h!==!0?Math.PI:1;for(let T=0,I=u.length;T<I;T++){const F=u[T],B=F.color,j=F.intensity,D=F.distance,k=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)f+=B.r*j*P,d+=B.g*j*P,p+=B.b*j*P;else if(F.isLightProbe)for(let O=0;O<9;O++)i.probe[O].addScaledVector(F.sh.coefficients[O],j);else if(F.isDirectionalLight){const O=t.get(F);if(O.color.copy(F.color).multiplyScalar(F.intensity*P),F.castShadow){const G=F.shadow,$=n.get(F);$.shadowBias=G.bias,$.shadowNormalBias=G.normalBias,$.shadowRadius=G.radius,$.shadowMapSize=G.mapSize,i.directionalShadow[m]=$,i.directionalShadowMap[m]=k,i.directionalShadowMatrix[m]=F.shadow.matrix,x++}i.directional[m]=O,m++}else if(F.isSpotLight){const O=t.get(F);if(O.position.setFromMatrixPosition(F.matrixWorld),O.color.copy(B).multiplyScalar(j*P),O.distance=D,O.coneCos=Math.cos(F.angle),O.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),O.decay=F.decay,F.castShadow){const G=F.shadow,$=n.get(F);$.shadowBias=G.bias,$.shadowNormalBias=G.normalBias,$.shadowRadius=G.radius,$.shadowMapSize=G.mapSize,i.spotShadow[v]=$,i.spotShadowMap[v]=k,i.spotShadowMatrix[v]=F.shadow.matrix,M++}i.spot[v]=O,v++}else if(F.isRectAreaLight){const O=t.get(F);O.color.copy(B).multiplyScalar(j),O.halfWidth.set(F.width*.5,0,0),O.halfHeight.set(0,F.height*.5,0),i.rectArea[_]=O,_++}else if(F.isPointLight){const O=t.get(F);if(O.color.copy(F.color).multiplyScalar(F.intensity*P),O.distance=F.distance,O.decay=F.decay,F.castShadow){const G=F.shadow,$=n.get(F);$.shadowBias=G.bias,$.shadowNormalBias=G.normalBias,$.shadowRadius=G.radius,$.shadowMapSize=G.mapSize,$.shadowCameraNear=G.camera.near,$.shadowCameraFar=G.camera.far,i.pointShadow[g]=$,i.pointShadowMap[g]=k,i.pointShadowMatrix[g]=F.shadow.matrix,w++}i.point[g]=O,g++}else if(F.isHemisphereLight){const O=t.get(F);O.skyColor.copy(F.color).multiplyScalar(j*P),O.groundColor.copy(F.groundColor).multiplyScalar(j*P),i.hemi[y]=O,y++}}_>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=de.LTC_FLOAT_1,i.rectAreaLTC2=de.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=de.LTC_HALF_1,i.rectAreaLTC2=de.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=d,i.ambient[2]=p;const b=i.hash;(b.directionalLength!==m||b.pointLength!==g||b.spotLength!==v||b.rectAreaLength!==_||b.hemiLength!==y||b.numDirectionalShadows!==x||b.numPointShadows!==w||b.numSpotShadows!==M)&&(i.directional.length=m,i.spot.length=v,i.rectArea.length=_,i.point.length=g,i.hemi.length=y,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=w,i.pointShadowMap.length=w,i.spotShadow.length=M,i.spotShadowMap.length=M,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=w,i.spotShadowMatrix.length=M,b.directionalLength=m,b.pointLength=g,b.spotLength=v,b.rectAreaLength=_,b.hemiLength=y,b.numDirectionalShadows=x,b.numPointShadows=w,b.numSpotShadows=M,i.version=a1++)}function l(u,h){let f=0,d=0,p=0,m=0,g=0;const v=h.matrixWorldInverse;for(let _=0,y=u.length;_<y;_++){const x=u[_];if(x.isDirectionalLight){const w=i.directional[f];w.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(v),f++}else if(x.isSpotLight){const w=i.spot[p];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(v),w.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(v),p++}else if(x.isRectAreaLight){const w=i.rectArea[m];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(v),a.identity(),o.copy(x.matrixWorld),o.premultiply(v),a.extractRotation(o),w.halfWidth.set(x.width*.5,0,0),w.halfHeight.set(0,x.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),m++}else if(x.isPointLight){const w=i.point[d];w.position.setFromMatrixPosition(x.matrixWorld),w.position.applyMatrix4(v),d++}else if(x.isHemisphereLight){const w=i.hemi[g];w.direction.setFromMatrixPosition(x.matrixWorld),w.direction.transformDirection(v),g++}}}return{setup:c,setupView:l,state:i}}function bd(r,e){const t=new l1(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function c(h){t.setup(n,h)}function l(h){t.setupView(n,h)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:c,setupLightsView:l,pushLight:o,pushShadow:a}}function u1(r,e){let t=new WeakMap;function n(s,o=0){let a;return t.has(s)===!1?(a=new bd(r,e),t.set(s,[a])):o>=t.get(s).length?(a=new bd(r,e),t.get(s).push(a)):a=t.get(s)[o],a}function i(){t=new WeakMap}return{get:n,dispose:i}}class xh extends Ct{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=_g,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class bh extends Ct{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new A,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const h1=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,f1=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function d1(r,e,t){let n=new Ac;const i=new q,s=new q,o=new He,a=new xh({depthPacking:yg}),c=new bh,l={},u=t.maxTextureSize,h={0:Ut,1:tr,2:mi},f=new Ot({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new q},radius:{value:4}},vertexShader:h1,fragmentShader:f1}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new Pe;p.setAttribute("position",new et(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new bt(p,f),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ih,this.render=function(x,w,M){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||x.length===0)return;const P=r.getRenderTarget(),b=r.getActiveCubeFace(),T=r.getActiveMipmapLevel(),I=r.state;I.setBlending(qn),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);for(let F=0,B=x.length;F<B;F++){const j=x[F],D=j.shadow;if(D===void 0){console.warn("THREE.WebGLShadowMap:",j,"has no shadow.");continue}if(D.autoUpdate===!1&&D.needsUpdate===!1)continue;i.copy(D.mapSize);const k=D.getFrameExtents();if(i.multiply(k),s.copy(D.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/k.x),i.x=s.x*k.x,D.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/k.y),i.y=s.y*k.y,D.mapSize.y=s.y)),D.map===null){const G=this.type!==Yr?{minFilter:ut,magFilter:ut}:{};D.map=new Gt(i.x,i.y,G),D.map.texture.name=j.name+".shadowMap",D.camera.updateProjectionMatrix()}r.setRenderTarget(D.map),r.clear();const O=D.getViewportCount();for(let G=0;G<O;G++){const $=D.getViewport(G);o.set(s.x*$.x,s.y*$.y,s.x*$.z,s.y*$.w),I.viewport(o),D.updateMatrices(j,G),n=D.getFrustum(),y(w,M,D.camera,j,this.type)}D.isPointLightShadow!==!0&&this.type===Yr&&v(D,M),D.needsUpdate=!1}g.needsUpdate=!1,r.setRenderTarget(P,b,T)};function v(x,w){const M=e.update(m);f.defines.VSM_SAMPLES!==x.blurSamples&&(f.defines.VSM_SAMPLES=x.blurSamples,d.defines.VSM_SAMPLES=x.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),x.mapPass===null&&(x.mapPass=new Gt(i.x,i.y)),f.uniforms.shadow_pass.value=x.map.texture,f.uniforms.resolution.value=x.mapSize,f.uniforms.radius.value=x.radius,r.setRenderTarget(x.mapPass),r.clear(),r.renderBufferDirect(w,null,M,f,m,null),d.uniforms.shadow_pass.value=x.mapPass.texture,d.uniforms.resolution.value=x.mapSize,d.uniforms.radius.value=x.radius,r.setRenderTarget(x.map),r.clear(),r.renderBufferDirect(w,null,M,d,m,null)}function _(x,w,M,P,b,T){let I=null;const F=M.isPointLight===!0?x.customDistanceMaterial:x.customDepthMaterial;if(F!==void 0?I=F:I=M.isPointLight===!0?c:a,r.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0){const B=I.uuid,j=w.uuid;let D=l[B];D===void 0&&(D={},l[B]=D);let k=D[j];k===void 0&&(k=I.clone(),D[j]=k),I=k}return I.visible=w.visible,I.wireframe=w.wireframe,T===Yr?I.side=w.shadowSide!==null?w.shadowSide:w.side:I.side=w.shadowSide!==null?w.shadowSide:h[w.side],I.alphaMap=w.alphaMap,I.alphaTest=w.alphaTest,I.clipShadows=w.clipShadows,I.clippingPlanes=w.clippingPlanes,I.clipIntersection=w.clipIntersection,I.displacementMap=w.displacementMap,I.displacementScale=w.displacementScale,I.displacementBias=w.displacementBias,I.wireframeLinewidth=w.wireframeLinewidth,I.linewidth=w.linewidth,M.isPointLight===!0&&I.isMeshDistanceMaterial===!0&&(I.referencePosition.setFromMatrixPosition(M.matrixWorld),I.nearDistance=P,I.farDistance=b),I}function y(x,w,M,P,b){if(x.visible===!1)return;if(x.layers.test(w.layers)&&(x.isMesh||x.isLine||x.isPoints)&&(x.castShadow||x.receiveShadow&&b===Yr)&&(!x.frustumCulled||n.intersectsObject(x))){x.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,x.matrixWorld);const F=e.update(x),B=x.material;if(Array.isArray(B)){const j=F.groups;for(let D=0,k=j.length;D<k;D++){const O=j[D],G=B[O.materialIndex];if(G&&G.visible){const $=_(x,G,P,M.near,M.far,b);r.renderBufferDirect(M,null,F,$,x,O)}}}else if(B.visible){const j=_(x,B,P,M.near,M.far,b);r.renderBufferDirect(M,null,F,j,x,null)}}const I=x.children;for(let F=0,B=I.length;F<B;F++)y(I[F],w,M,P,b)}}function p1(r,e,t){const n=t.isWebGL2;function i(){let R=!1;const le=new He;let se=null;const Te=new He(0,0,0,0);return{setMask:function(ve){se!==ve&&!R&&(r.colorMask(ve,ve,ve,ve),se=ve)},setLocked:function(ve){R=ve},setClear:function(ve,we,ue,De,Ze){Ze===!0&&(ve*=De,we*=De,ue*=De),le.set(ve,we,ue,De),Te.equals(le)===!1&&(r.clearColor(ve,we,ue,De),Te.copy(le))},reset:function(){R=!1,se=null,Te.set(-1,0,0,0)}}}function s(){let R=!1,le=null,se=null,Te=null;return{setTest:function(ve){ve?ge(2929):X(2929)},setMask:function(ve){le!==ve&&!R&&(r.depthMask(ve),le=ve)},setFunc:function(ve){if(se!==ve){if(ve)switch(ve){case jm:r.depthFunc(512);break;case Ym:r.depthFunc(519);break;case oh:r.depthFunc(513);break;case tc:r.depthFunc(515);break;case Zm:r.depthFunc(514);break;case Jm:r.depthFunc(518);break;case Km:r.depthFunc(516);break;case Qm:r.depthFunc(517);break;default:r.depthFunc(515)}else r.depthFunc(515);se=ve}},setLocked:function(ve){R=ve},setClear:function(ve){Te!==ve&&(r.clearDepth(ve),Te=ve)},reset:function(){R=!1,le=null,se=null,Te=null}}}function o(){let R=!1,le=null,se=null,Te=null,ve=null,we=null,ue=null,De=null,Ze=null;return{setTest:function(Je){R||(Je?ge(2960):X(2960))},setMask:function(Je){le!==Je&&!R&&(r.stencilMask(Je),le=Je)},setFunc:function(Je,Lt,wn){(se!==Je||Te!==Lt||ve!==wn)&&(r.stencilFunc(Je,Lt,wn),se=Je,Te=Lt,ve=wn)},setOp:function(Je,Lt,wn){(we!==Je||ue!==Lt||De!==wn)&&(r.stencilOp(Je,Lt,wn),we=Je,ue=Lt,De=wn)},setLocked:function(Je){R=Je},setClear:function(Je){Ze!==Je&&(r.clearStencil(Je),Ze=Je)},reset:function(){R=!1,le=null,se=null,Te=null,ve=null,we=null,ue=null,De=null,Ze=null}}}const a=new i,c=new s,l=new o;let u={},h={},f=new WeakMap,d=[],p=null,m=!1,g=null,v=null,_=null,y=null,x=null,w=null,M=null,P=!1,b=null,T=null,I=null,F=null,B=null;const j=r.getParameter(35661);let D=!1,k=0;const O=r.getParameter(7938);O.indexOf("WebGL")!==-1?(k=parseFloat(/^WebGL (\d)/.exec(O)[1]),D=k>=1):O.indexOf("OpenGL ES")!==-1&&(k=parseFloat(/^OpenGL ES (\d)/.exec(O)[1]),D=k>=2);let G=null,$={};const z=r.getParameter(3088),V=r.getParameter(2978),Q=new He().fromArray(z),Y=new He().fromArray(V);function ne(R,le,se){const Te=new Uint8Array(4),ve=r.createTexture();r.bindTexture(R,ve),r.texParameteri(R,10241,9728),r.texParameteri(R,10240,9728);for(let we=0;we<se;we++)r.texImage2D(le+we,0,6408,1,1,0,6408,5121,Te);return ve}const fe={};fe[3553]=ne(3553,3553,1),fe[34067]=ne(34067,34069,6),a.setClear(0,0,0,1),c.setClear(1),l.setClear(0),ge(2929),c.setFunc(tc),ie(!1),ye(Zl),ge(2884),J(qn);function ge(R){u[R]!==!0&&(r.enable(R),u[R]=!0)}function X(R){u[R]!==!1&&(r.disable(R),u[R]=!1)}function Ue(R,le){return h[R]!==le?(r.bindFramebuffer(R,le),h[R]=le,n&&(R===36009&&(h[36160]=le),R===36160&&(h[36009]=le)),!0):!1}function Se(R,le){let se=d,Te=!1;if(R)if(se=f.get(le),se===void 0&&(se=[],f.set(le,se)),R.isWebGLMultipleRenderTargets){const ve=R.texture;if(se.length!==ve.length||se[0]!==36064){for(let we=0,ue=ve.length;we<ue;we++)se[we]=36064+we;se.length=ve.length,Te=!0}}else se[0]!==36064&&(se[0]=36064,Te=!0);else se[0]!==1029&&(se[0]=1029,Te=!0);Te&&(t.isWebGL2?r.drawBuffers(se):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(se))}function Ce(R){return p!==R?(r.useProgram(R),p=R,!0):!1}const he={[Vi]:32774,[zm]:32778,[km]:32779};if(n)he[Ql]=32775,he[eu]=32776;else{const R=e.get("EXT_blend_minmax");R!==null&&(he[Ql]=R.MIN_EXT,he[eu]=R.MAX_EXT)}const Ie={[Bm]:0,[Um]:1,[Vm]:768,[rh]:770,[qm]:776,[Xm]:774,[Hm]:772,[Gm]:769,[sh]:771,[$m]:775,[Wm]:773};function J(R,le,se,Te,ve,we,ue,De){if(R===qn){m===!0&&(X(3042),m=!1);return}if(m===!1&&(ge(3042),m=!0),R!==Nm){if(R!==g||De!==P){if((v!==Vi||x!==Vi)&&(r.blendEquation(32774),v=Vi,x=Vi),De)switch(R){case qi:r.blendFuncSeparate(1,771,1,771);break;case ec:r.blendFunc(1,1);break;case Jl:r.blendFuncSeparate(0,769,0,1);break;case Kl:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}else switch(R){case qi:r.blendFuncSeparate(770,771,1,771);break;case ec:r.blendFunc(770,1);break;case Jl:r.blendFuncSeparate(0,769,0,1);break;case Kl:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}_=null,y=null,w=null,M=null,g=R,P=De}return}ve=ve||le,we=we||se,ue=ue||Te,(le!==v||ve!==x)&&(r.blendEquationSeparate(he[le],he[ve]),v=le,x=ve),(se!==_||Te!==y||we!==w||ue!==M)&&(r.blendFuncSeparate(Ie[se],Ie[Te],Ie[we],Ie[ue]),_=se,y=Te,w=we,M=ue),g=R,P=null}function Z(R,le){R.side===mi?X(2884):ge(2884);let se=R.side===Ut;le&&(se=!se),ie(se),R.blending===qi&&R.transparent===!1?J(qn):J(R.blending,R.blendEquation,R.blendSrc,R.blendDst,R.blendEquationAlpha,R.blendSrcAlpha,R.blendDstAlpha,R.premultipliedAlpha),c.setFunc(R.depthFunc),c.setTest(R.depthTest),c.setMask(R.depthWrite),a.setMask(R.colorWrite);const Te=R.stencilWrite;l.setTest(Te),Te&&(l.setMask(R.stencilWriteMask),l.setFunc(R.stencilFunc,R.stencilRef,R.stencilFuncMask),l.setOp(R.stencilFail,R.stencilZFail,R.stencilZPass)),Re(R.polygonOffset,R.polygonOffsetFactor,R.polygonOffsetUnits),R.alphaToCoverage===!0?ge(32926):X(32926)}function ie(R){b!==R&&(R?r.frontFace(2304):r.frontFace(2305),b=R)}function ye(R){R!==Rm?(ge(2884),R!==T&&(R===Zl?r.cullFace(1029):R===Dm?r.cullFace(1028):r.cullFace(1032))):X(2884),T=R}function pe(R){R!==I&&(D&&r.lineWidth(R),I=R)}function Re(R,le,se){R?(ge(32823),(F!==le||B!==se)&&(r.polygonOffset(le,se),F=le,B=se)):X(32823)}function Ae(R){R?ge(3089):X(3089)}function Me(R){R===void 0&&(R=33984+j-1),G!==R&&(r.activeTexture(R),G=R)}function Qe(R,le){G===null&&Me();let se=$[G];se===void 0&&(se={type:void 0,texture:void 0},$[G]=se),(se.type!==R||se.texture!==le)&&(r.bindTexture(R,le||fe[R]),se.type=R,se.texture=le)}function qe(){const R=$[G];R!==void 0&&R.type!==void 0&&(r.bindTexture(R.type,null),R.type=void 0,R.texture=void 0)}function L(){try{r.compressedTexImage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function S(){try{r.texSubImage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function H(){try{r.texSubImage3D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function te(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function re(){try{r.texStorage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function me(){try{r.texStorage3D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function Ee(){try{r.texImage2D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function E(){try{r.texImage3D.apply(r,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function ee(R){Q.equals(R)===!1&&(r.scissor(R.x,R.y,R.z,R.w),Q.copy(R))}function ae(R){Y.equals(R)===!1&&(r.viewport(R.x,R.y,R.z,R.w),Y.copy(R))}function ce(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),n===!0&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},G=null,$={},h={},f=new WeakMap,d=[],p=null,m=!1,g=null,v=null,_=null,y=null,x=null,w=null,M=null,P=!1,b=null,T=null,I=null,F=null,B=null,Q.set(0,0,r.canvas.width,r.canvas.height),Y.set(0,0,r.canvas.width,r.canvas.height),a.reset(),c.reset(),l.reset()}return{buffers:{color:a,depth:c,stencil:l},enable:ge,disable:X,bindFramebuffer:Ue,drawBuffers:Se,useProgram:Ce,setBlending:J,setMaterial:Z,setFlipSided:ie,setCullFace:ye,setLineWidth:pe,setPolygonOffset:Re,setScissorTest:Ae,activeTexture:Me,bindTexture:Qe,unbindTexture:qe,compressedTexImage2D:L,texImage2D:Ee,texImage3D:E,texStorage2D:re,texStorage3D:me,texSubImage2D:S,texSubImage3D:H,compressedTexSubImage2D:te,scissor:ee,viewport:ae,reset:ce}}function m1(r,e,t,n,i,s,o){const a=i.isWebGL2,c=i.maxTextures,l=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(L,S){return v?new OffscreenCanvas(L,S):ho("canvas")}function y(L,S,H,te){let re=1;if((L.width>te||L.height>te)&&(re=te/Math.max(L.width,L.height)),re<1||S===!0)if(typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&L instanceof ImageBitmap){const me=S?ac:Math.floor,Ee=me(re*L.width),E=me(re*L.height);m===void 0&&(m=_(Ee,E));const ee=H?_(Ee,E):m;return ee.width=Ee,ee.height=E,ee.getContext("2d").drawImage(L,0,0,Ee,E),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+L.width+"x"+L.height+") to ("+Ee+"x"+E+")."),ee}else return"data"in L&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+L.width+"x"+L.height+")."),L;return L}function x(L){return Mu(L.width)&&Mu(L.height)}function w(L){return a?!1:L.wrapS!==St||L.wrapT!==St||L.minFilter!==ut&&L.minFilter!==rt}function M(L,S){return L.generateMipmaps&&S&&L.minFilter!==ut&&L.minFilter!==rt}function P(L){r.generateMipmap(L)}function b(L,S,H,te,re=!1){if(a===!1)return S;if(L!==null){if(r[L]!==void 0)return r[L];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'")}let me=S;return S===6403&&(H===5126&&(me=33326),H===5131&&(me=33325),H===5121&&(me=33321)),S===33319&&(H===5126&&(me=33328),H===5131&&(me=33327),H===5121&&(me=33323)),S===6408&&(H===5126&&(me=34836),H===5131&&(me=34842),H===5121&&(me=te===Ge&&re===!1?35907:32856),H===32819&&(me=32854),H===32820&&(me=32855)),(me===33325||me===33326||me===33327||me===33328||me===34842||me===34836)&&e.get("EXT_color_buffer_float"),me}function T(L,S,H){return M(L,H)===!0||L.isFramebufferTexture&&L.minFilter!==ut&&L.minFilter!==rt?Math.log2(Math.max(S.width,S.height))+1:L.mipmaps!==void 0&&L.mipmaps.length>0?L.mipmaps.length:L.isCompressedTexture&&Array.isArray(L.image)?S.mipmaps.length:1}function I(L){return L===ut||L===ic||L===rc?9728:9729}function F(L){const S=L.target;S.removeEventListener("dispose",F),j(S),S.isVideoTexture&&p.delete(S)}function B(L){const S=L.target;S.removeEventListener("dispose",B),k(S)}function j(L){const S=n.get(L);if(S.__webglInit===void 0)return;const H=L.source,te=g.get(H);if(te){const re=te[S.__cacheKey];re.usedTimes--,re.usedTimes===0&&D(L),Object.keys(te).length===0&&g.delete(H)}n.remove(L)}function D(L){const S=n.get(L);r.deleteTexture(S.__webglTexture);const H=L.source,te=g.get(H);delete te[S.__cacheKey],o.memory.textures--}function k(L){const S=L.texture,H=n.get(L),te=n.get(S);if(te.__webglTexture!==void 0&&(r.deleteTexture(te.__webglTexture),o.memory.textures--),L.depthTexture&&L.depthTexture.dispose(),L.isWebGLCubeRenderTarget)for(let re=0;re<6;re++)r.deleteFramebuffer(H.__webglFramebuffer[re]),H.__webglDepthbuffer&&r.deleteRenderbuffer(H.__webglDepthbuffer[re]);else{if(r.deleteFramebuffer(H.__webglFramebuffer),H.__webglDepthbuffer&&r.deleteRenderbuffer(H.__webglDepthbuffer),H.__webglMultisampledFramebuffer&&r.deleteFramebuffer(H.__webglMultisampledFramebuffer),H.__webglColorRenderbuffer)for(let re=0;re<H.__webglColorRenderbuffer.length;re++)H.__webglColorRenderbuffer[re]&&r.deleteRenderbuffer(H.__webglColorRenderbuffer[re]);H.__webglDepthRenderbuffer&&r.deleteRenderbuffer(H.__webglDepthRenderbuffer)}if(L.isWebGLMultipleRenderTargets)for(let re=0,me=S.length;re<me;re++){const Ee=n.get(S[re]);Ee.__webglTexture&&(r.deleteTexture(Ee.__webglTexture),o.memory.textures--),n.remove(S[re])}n.remove(S),n.remove(L)}let O=0;function G(){O=0}function $(){const L=O;return L>=c&&console.warn("THREE.WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+c),O+=1,L}function z(L){const S=[];return S.push(L.wrapS),S.push(L.wrapT),S.push(L.magFilter),S.push(L.minFilter),S.push(L.anisotropy),S.push(L.internalFormat),S.push(L.format),S.push(L.type),S.push(L.generateMipmaps),S.push(L.premultiplyAlpha),S.push(L.flipY),S.push(L.unpackAlignment),S.push(L.encoding),S.join()}function V(L,S){const H=n.get(L);if(L.isVideoTexture&&Qe(L),L.isRenderTargetTexture===!1&&L.version>0&&H.__version!==L.version){const te=L.image;if(te===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(te.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Se(H,L,S);return}}t.activeTexture(33984+S),t.bindTexture(3553,H.__webglTexture)}function Q(L,S){const H=n.get(L);if(L.version>0&&H.__version!==L.version){Se(H,L,S);return}t.activeTexture(33984+S),t.bindTexture(35866,H.__webglTexture)}function Y(L,S){const H=n.get(L);if(L.version>0&&H.__version!==L.version){Se(H,L,S);return}t.activeTexture(33984+S),t.bindTexture(32879,H.__webglTexture)}function ne(L,S){const H=n.get(L);if(L.version>0&&H.__version!==L.version){Ce(H,L,S);return}t.activeTexture(33984+S),t.bindTexture(34067,H.__webglTexture)}const fe={[ir]:10497,[St]:33071,[oo]:33648},ge={[ut]:9728,[ic]:9984,[rc]:9986,[rt]:9729,[hh]:9985,[dr]:9987};function X(L,S,H){if(H?(r.texParameteri(L,10242,fe[S.wrapS]),r.texParameteri(L,10243,fe[S.wrapT]),(L===32879||L===35866)&&r.texParameteri(L,32882,fe[S.wrapR]),r.texParameteri(L,10240,ge[S.magFilter]),r.texParameteri(L,10241,ge[S.minFilter])):(r.texParameteri(L,10242,33071),r.texParameteri(L,10243,33071),(L===32879||L===35866)&&r.texParameteri(L,32882,33071),(S.wrapS!==St||S.wrapT!==St)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(L,10240,I(S.magFilter)),r.texParameteri(L,10241,I(S.minFilter)),S.minFilter!==ut&&S.minFilter!==rt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const te=e.get("EXT_texture_filter_anisotropic");if(S.type===Gn&&e.has("OES_texture_float_linear")===!1||a===!1&&S.type===ss&&e.has("OES_texture_half_float_linear")===!1)return;(S.anisotropy>1||n.get(S).__currentAnisotropy)&&(r.texParameterf(L,te.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,i.getMaxAnisotropy())),n.get(S).__currentAnisotropy=S.anisotropy)}}function Ue(L,S){let H=!1;L.__webglInit===void 0&&(L.__webglInit=!0,S.addEventListener("dispose",F));const te=S.source;let re=g.get(te);re===void 0&&(re={},g.set(te,re));const me=z(S);if(me!==L.__cacheKey){re[me]===void 0&&(re[me]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,H=!0),re[me].usedTimes++;const Ee=re[L.__cacheKey];Ee!==void 0&&(re[L.__cacheKey].usedTimes--,Ee.usedTimes===0&&D(S)),L.__cacheKey=me,L.__webglTexture=re[me].texture}return H}function Se(L,S,H){let te=3553;S.isDataArrayTexture&&(te=35866),S.isData3DTexture&&(te=32879);const re=Ue(L,S),me=S.source;if(t.activeTexture(33984+H),t.bindTexture(te,L.__webglTexture),me.version!==me.__currentVersion||re===!0){r.pixelStorei(37440,S.flipY),r.pixelStorei(37441,S.premultiplyAlpha),r.pixelStorei(3317,S.unpackAlignment),r.pixelStorei(37443,0);const Ee=w(S)&&x(S.image)===!1;let E=y(S.image,Ee,!1,u);E=qe(S,E);const ee=x(E)||a,ae=s.convert(S.format,S.encoding);let ce=s.convert(S.type),R=b(S.internalFormat,ae,ce,S.encoding,S.isVideoTexture);X(te,S,ee);let le;const se=S.mipmaps,Te=a&&S.isVideoTexture!==!0,ve=me.__currentVersion===void 0||re===!0,we=T(S,E,ee);if(S.isDepthTexture)R=6402,a?S.type===Gn?R=36012:S.type===ui?R=33190:S.type===ji?R=35056:R=33189:S.type===Gn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),S.format===di&&R===6402&&S.type!==fh&&S.type!==ui&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),S.type=ui,ce=s.convert(S.type)),S.format===rr&&R===6402&&(R=34041,S.type!==ji&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),S.type=ji,ce=s.convert(S.type))),ve&&(Te?t.texStorage2D(3553,1,R,E.width,E.height):t.texImage2D(3553,0,R,E.width,E.height,0,ae,ce,null));else if(S.isDataTexture)if(se.length>0&&ee){Te&&ve&&t.texStorage2D(3553,we,R,se[0].width,se[0].height);for(let ue=0,De=se.length;ue<De;ue++)le=se[ue],Te?t.texSubImage2D(3553,ue,0,0,le.width,le.height,ae,ce,le.data):t.texImage2D(3553,ue,R,le.width,le.height,0,ae,ce,le.data);S.generateMipmaps=!1}else Te?(ve&&t.texStorage2D(3553,we,R,E.width,E.height),t.texSubImage2D(3553,0,0,0,E.width,E.height,ae,ce,E.data)):t.texImage2D(3553,0,R,E.width,E.height,0,ae,ce,E.data);else if(S.isCompressedTexture){Te&&ve&&t.texStorage2D(3553,we,R,se[0].width,se[0].height);for(let ue=0,De=se.length;ue<De;ue++)le=se[ue],S.format!==Yt?ae!==null?Te?t.compressedTexSubImage2D(3553,ue,0,0,le.width,le.height,ae,le.data):t.compressedTexImage2D(3553,ue,R,le.width,le.height,0,le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Te?t.texSubImage2D(3553,ue,0,0,le.width,le.height,ae,ce,le.data):t.texImage2D(3553,ue,R,le.width,le.height,0,ae,ce,le.data)}else if(S.isDataArrayTexture)Te?(ve&&t.texStorage3D(35866,we,R,E.width,E.height,E.depth),t.texSubImage3D(35866,0,0,0,0,E.width,E.height,E.depth,ae,ce,E.data)):t.texImage3D(35866,0,R,E.width,E.height,E.depth,0,ae,ce,E.data);else if(S.isData3DTexture)Te?(ve&&t.texStorage3D(32879,we,R,E.width,E.height,E.depth),t.texSubImage3D(32879,0,0,0,0,E.width,E.height,E.depth,ae,ce,E.data)):t.texImage3D(32879,0,R,E.width,E.height,E.depth,0,ae,ce,E.data);else if(S.isFramebufferTexture){if(ve)if(Te)t.texStorage2D(3553,we,R,E.width,E.height);else{let ue=E.width,De=E.height;for(let Ze=0;Ze<we;Ze++)t.texImage2D(3553,Ze,R,ue,De,0,ae,ce,null),ue>>=1,De>>=1}}else if(se.length>0&&ee){Te&&ve&&t.texStorage2D(3553,we,R,se[0].width,se[0].height);for(let ue=0,De=se.length;ue<De;ue++)le=se[ue],Te?t.texSubImage2D(3553,ue,0,0,ae,ce,le):t.texImage2D(3553,ue,R,ae,ce,le);S.generateMipmaps=!1}else Te?(ve&&t.texStorage2D(3553,we,R,E.width,E.height),t.texSubImage2D(3553,0,0,0,ae,ce,E)):t.texImage2D(3553,0,R,ae,ce,E);M(S,ee)&&P(te),me.__currentVersion=me.version,S.onUpdate&&S.onUpdate(S)}L.__version=S.version}function Ce(L,S,H){if(S.image.length!==6)return;const te=Ue(L,S),re=S.source;if(t.activeTexture(33984+H),t.bindTexture(34067,L.__webglTexture),re.version!==re.__currentVersion||te===!0){r.pixelStorei(37440,S.flipY),r.pixelStorei(37441,S.premultiplyAlpha),r.pixelStorei(3317,S.unpackAlignment),r.pixelStorei(37443,0);const me=S.isCompressedTexture||S.image[0].isCompressedTexture,Ee=S.image[0]&&S.image[0].isDataTexture,E=[];for(let ue=0;ue<6;ue++)!me&&!Ee?E[ue]=y(S.image[ue],!1,!0,l):E[ue]=Ee?S.image[ue].image:S.image[ue],E[ue]=qe(S,E[ue]);const ee=E[0],ae=x(ee)||a,ce=s.convert(S.format,S.encoding),R=s.convert(S.type),le=b(S.internalFormat,ce,R,S.encoding),se=a&&S.isVideoTexture!==!0,Te=re.__currentVersion===void 0||te===!0;let ve=T(S,ee,ae);X(34067,S,ae);let we;if(me){se&&Te&&t.texStorage2D(34067,ve,le,ee.width,ee.height);for(let ue=0;ue<6;ue++){we=E[ue].mipmaps;for(let De=0;De<we.length;De++){const Ze=we[De];S.format!==Yt?ce!==null?se?t.compressedTexSubImage2D(34069+ue,De,0,0,Ze.width,Ze.height,ce,Ze.data):t.compressedTexImage2D(34069+ue,De,le,Ze.width,Ze.height,0,Ze.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):se?t.texSubImage2D(34069+ue,De,0,0,Ze.width,Ze.height,ce,R,Ze.data):t.texImage2D(34069+ue,De,le,Ze.width,Ze.height,0,ce,R,Ze.data)}}}else{we=S.mipmaps,se&&Te&&(we.length>0&&ve++,t.texStorage2D(34067,ve,le,E[0].width,E[0].height));for(let ue=0;ue<6;ue++)if(Ee){se?t.texSubImage2D(34069+ue,0,0,0,E[ue].width,E[ue].height,ce,R,E[ue].data):t.texImage2D(34069+ue,0,le,E[ue].width,E[ue].height,0,ce,R,E[ue].data);for(let De=0;De<we.length;De++){const Je=we[De].image[ue].image;se?t.texSubImage2D(34069+ue,De+1,0,0,Je.width,Je.height,ce,R,Je.data):t.texImage2D(34069+ue,De+1,le,Je.width,Je.height,0,ce,R,Je.data)}}else{se?t.texSubImage2D(34069+ue,0,0,0,ce,R,E[ue]):t.texImage2D(34069+ue,0,le,ce,R,E[ue]);for(let De=0;De<we.length;De++){const Ze=we[De];se?t.texSubImage2D(34069+ue,De+1,0,0,ce,R,Ze.image[ue]):t.texImage2D(34069+ue,De+1,le,ce,R,Ze.image[ue])}}}M(S,ae)&&P(34067),re.__currentVersion=re.version,S.onUpdate&&S.onUpdate(S)}L.__version=S.version}function he(L,S,H,te,re){const me=s.convert(H.format,H.encoding),Ee=s.convert(H.type),E=b(H.internalFormat,me,Ee,H.encoding);n.get(S).__hasExternalTextures||(re===32879||re===35866?t.texImage3D(re,0,E,S.width,S.height,S.depth,0,me,Ee,null):t.texImage2D(re,0,E,S.width,S.height,0,me,Ee,null)),t.bindFramebuffer(36160,L),Me(S)?f.framebufferTexture2DMultisampleEXT(36160,te,re,n.get(H).__webglTexture,0,Ae(S)):r.framebufferTexture2D(36160,te,re,n.get(H).__webglTexture,0),t.bindFramebuffer(36160,null)}function Ie(L,S,H){if(r.bindRenderbuffer(36161,L),S.depthBuffer&&!S.stencilBuffer){let te=33189;if(H||Me(S)){const re=S.depthTexture;re&&re.isDepthTexture&&(re.type===Gn?te=36012:re.type===ui&&(te=33190));const me=Ae(S);Me(S)?f.renderbufferStorageMultisampleEXT(36161,me,te,S.width,S.height):r.renderbufferStorageMultisample(36161,me,te,S.width,S.height)}else r.renderbufferStorage(36161,te,S.width,S.height);r.framebufferRenderbuffer(36160,36096,36161,L)}else if(S.depthBuffer&&S.stencilBuffer){const te=Ae(S);H&&Me(S)===!1?r.renderbufferStorageMultisample(36161,te,35056,S.width,S.height):Me(S)?f.renderbufferStorageMultisampleEXT(36161,te,35056,S.width,S.height):r.renderbufferStorage(36161,34041,S.width,S.height),r.framebufferRenderbuffer(36160,33306,36161,L)}else{const te=S.isWebGLMultipleRenderTargets===!0?S.texture:[S.texture];for(let re=0;re<te.length;re++){const me=te[re],Ee=s.convert(me.format,me.encoding),E=s.convert(me.type),ee=b(me.internalFormat,Ee,E,me.encoding),ae=Ae(S);H&&Me(S)===!1?r.renderbufferStorageMultisample(36161,ae,ee,S.width,S.height):Me(S)?f.renderbufferStorageMultisampleEXT(36161,ae,ee,S.width,S.height):r.renderbufferStorage(36161,ee,S.width,S.height)}}r.bindRenderbuffer(36161,null)}function J(L,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,L),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(S.depthTexture).__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),V(S.depthTexture,0);const te=n.get(S.depthTexture).__webglTexture,re=Ae(S);if(S.depthTexture.format===di)Me(S)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,te,0,re):r.framebufferTexture2D(36160,36096,3553,te,0);else if(S.depthTexture.format===rr)Me(S)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,te,0,re):r.framebufferTexture2D(36160,33306,3553,te,0);else throw new Error("Unknown depthTexture format")}function Z(L){const S=n.get(L),H=L.isWebGLCubeRenderTarget===!0;if(L.depthTexture&&!S.__autoAllocateDepthBuffer){if(H)throw new Error("target.depthTexture not supported in Cube render targets");J(S.__webglFramebuffer,L)}else if(H){S.__webglDepthbuffer=[];for(let te=0;te<6;te++)t.bindFramebuffer(36160,S.__webglFramebuffer[te]),S.__webglDepthbuffer[te]=r.createRenderbuffer(),Ie(S.__webglDepthbuffer[te],L,!1)}else t.bindFramebuffer(36160,S.__webglFramebuffer),S.__webglDepthbuffer=r.createRenderbuffer(),Ie(S.__webglDepthbuffer,L,!1);t.bindFramebuffer(36160,null)}function ie(L,S,H){const te=n.get(L);S!==void 0&&he(te.__webglFramebuffer,L,L.texture,36064,3553),H!==void 0&&Z(L)}function ye(L){const S=L.texture,H=n.get(L),te=n.get(S);L.addEventListener("dispose",B),L.isWebGLMultipleRenderTargets!==!0&&(te.__webglTexture===void 0&&(te.__webglTexture=r.createTexture()),te.__version=S.version,o.memory.textures++);const re=L.isWebGLCubeRenderTarget===!0,me=L.isWebGLMultipleRenderTargets===!0,Ee=x(L)||a;if(re){H.__webglFramebuffer=[];for(let E=0;E<6;E++)H.__webglFramebuffer[E]=r.createFramebuffer()}else{if(H.__webglFramebuffer=r.createFramebuffer(),me)if(i.drawBuffers){const E=L.texture;for(let ee=0,ae=E.length;ee<ae;ee++){const ce=n.get(E[ee]);ce.__webglTexture===void 0&&(ce.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&L.samples>0&&Me(L)===!1){const E=me?S:[S];H.__webglMultisampledFramebuffer=r.createFramebuffer(),H.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,H.__webglMultisampledFramebuffer);for(let ee=0;ee<E.length;ee++){const ae=E[ee];H.__webglColorRenderbuffer[ee]=r.createRenderbuffer(),r.bindRenderbuffer(36161,H.__webglColorRenderbuffer[ee]);const ce=s.convert(ae.format,ae.encoding),R=s.convert(ae.type),le=b(ae.internalFormat,ce,R,ae.encoding),se=Ae(L);r.renderbufferStorageMultisample(36161,se,le,L.width,L.height),r.framebufferRenderbuffer(36160,36064+ee,36161,H.__webglColorRenderbuffer[ee])}r.bindRenderbuffer(36161,null),L.depthBuffer&&(H.__webglDepthRenderbuffer=r.createRenderbuffer(),Ie(H.__webglDepthRenderbuffer,L,!0)),t.bindFramebuffer(36160,null)}}if(re){t.bindTexture(34067,te.__webglTexture),X(34067,S,Ee);for(let E=0;E<6;E++)he(H.__webglFramebuffer[E],L,S,36064,34069+E);M(S,Ee)&&P(34067),t.unbindTexture()}else if(me){const E=L.texture;for(let ee=0,ae=E.length;ee<ae;ee++){const ce=E[ee],R=n.get(ce);t.bindTexture(3553,R.__webglTexture),X(3553,ce,Ee),he(H.__webglFramebuffer,L,ce,36064+ee,3553),M(ce,Ee)&&P(3553)}t.unbindTexture()}else{let E=3553;(L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(a?E=L.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(E,te.__webglTexture),X(E,S,Ee),he(H.__webglFramebuffer,L,S,36064,E),M(S,Ee)&&P(E),t.unbindTexture()}L.depthBuffer&&Z(L)}function pe(L){const S=x(L)||a,H=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let te=0,re=H.length;te<re;te++){const me=H[te];if(M(me,S)){const Ee=L.isWebGLCubeRenderTarget?34067:3553,E=n.get(me).__webglTexture;t.bindTexture(Ee,E),P(Ee),t.unbindTexture()}}}function Re(L){if(a&&L.samples>0&&Me(L)===!1){const S=L.isWebGLMultipleRenderTargets?L.texture:[L.texture],H=L.width,te=L.height;let re=16384;const me=[],Ee=L.stencilBuffer?33306:36096,E=n.get(L),ee=L.isWebGLMultipleRenderTargets===!0;if(ee)for(let ae=0;ae<S.length;ae++)t.bindFramebuffer(36160,E.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+ae,36161,null),t.bindFramebuffer(36160,E.__webglFramebuffer),r.framebufferTexture2D(36009,36064+ae,3553,null,0);t.bindFramebuffer(36008,E.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,E.__webglFramebuffer);for(let ae=0;ae<S.length;ae++){me.push(36064+ae),L.depthBuffer&&me.push(Ee);const ce=E.__ignoreDepthValues!==void 0?E.__ignoreDepthValues:!1;if(ce===!1&&(L.depthBuffer&&(re|=256),L.stencilBuffer&&(re|=1024)),ee&&r.framebufferRenderbuffer(36008,36064,36161,E.__webglColorRenderbuffer[ae]),ce===!0&&(r.invalidateFramebuffer(36008,[Ee]),r.invalidateFramebuffer(36009,[Ee])),ee){const R=n.get(S[ae]).__webglTexture;r.framebufferTexture2D(36009,36064,3553,R,0)}r.blitFramebuffer(0,0,H,te,0,0,H,te,re,9728),d&&r.invalidateFramebuffer(36008,me)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),ee)for(let ae=0;ae<S.length;ae++){t.bindFramebuffer(36160,E.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064+ae,36161,E.__webglColorRenderbuffer[ae]);const ce=n.get(S[ae]).__webglTexture;t.bindFramebuffer(36160,E.__webglFramebuffer),r.framebufferTexture2D(36009,36064+ae,3553,ce,0)}t.bindFramebuffer(36009,E.__webglMultisampledFramebuffer)}}function Ae(L){return Math.min(h,L.samples)}function Me(L){const S=n.get(L);return a&&L.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&S.__useRenderToTexture!==!1}function Qe(L){const S=o.render.frame;p.get(L)!==S&&(p.set(L,S),L.update())}function qe(L,S){const H=L.encoding,te=L.format,re=L.type;return L.isCompressedTexture===!0||L.isVideoTexture===!0||L.format===oc||H!==yi&&(H===Ge?a===!1?e.has("EXT_sRGB")===!0&&te===Yt?(L.format=oc,L.minFilter=rt,L.generateMipmaps=!1):S=vh.sRGBToLinear(S):(te!==Yt||re!==_i)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",H)),S}this.allocateTextureUnit=$,this.resetTextureUnits=G,this.setTexture2D=V,this.setTexture2DArray=Q,this.setTexture3D=Y,this.setTextureCube=ne,this.rebindTextures=ie,this.setupRenderTarget=ye,this.updateRenderTargetMipmap=pe,this.updateMultisampleRenderTarget=Re,this.setupDepthRenderbuffer=Z,this.setupFrameBufferTexture=he,this.useMultisampledRTT=Me}function Dg(r,e,t){const n=t.isWebGL2;function i(s,o=null){let a;if(s===_i)return 5121;if(s===sg)return 32819;if(s===og)return 32820;if(s===ng)return 5120;if(s===ig)return 5122;if(s===fh)return 5123;if(s===rg)return 5124;if(s===ui)return 5125;if(s===Gn)return 5126;if(s===ss)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===ag)return 6406;if(s===Yt)return 6408;if(s===dh)return 6409;if(s===lg)return 6410;if(s===di)return 6402;if(s===rr)return 34041;if(s===ug)return 6403;if(s===cg)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===oc)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===hg)return 36244;if(s===fg)return 33319;if(s===dg)return 33320;if(s===pg)return 36249;if(s===Fa||s===Oa||s===Na||s===za)if(o===Ge)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Fa)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Oa)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Na)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===za)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Fa)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Oa)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Na)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===za)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===tu||s===nu||s===iu||s===ru)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===tu)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===nu)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===iu)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===ru)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===mg)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===su||s===ou)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===su)return o===Ge?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===ou)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===au||s===cu||s===lu||s===uu||s===hu||s===fu||s===du||s===pu||s===mu||s===gu||s===vu||s===_u||s===yu||s===xu)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===au)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===cu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===lu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===uu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===hu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===fu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===du)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===pu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===mu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===gu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===vu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===_u)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===yu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===xu)return o===Ge?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===bu)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===bu)return o===Ge?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===ji?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class Fg extends xt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class fi extends Xe{constructor(){super(),this.isGroup=!0,this.type="Group"}}const g1={type:"move"};class Ml{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new fi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new fi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new A,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new A),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new fi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new A,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new A),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){o=!0;for(const m of e.hand.values()){const g=t.getJointPose(m,n);if(l.joints[m.jointName]===void 0){const _=new fi;_.matrixAutoUpdate=!1,_.visible=!1,l.joints[m.jointName]=_,l.add(_)}const v=l.joints[m.jointName];g!==null&&(v.matrix.fromArray(g.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=g.radius),v.visible=g!==null}const u=l.joints["index-finger-tip"],h=l.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;l.inputState.pinching&&f>d+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&f<=d-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(c.matrix.fromArray(s.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),s.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(s.linearVelocity)):c.hasLinearVelocity=!1,s.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(s.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(g1)))}return a!==null&&(a.visible=i!==null),c!==null&&(c.visible=s!==null),l!==null&&(l.visible=o!==null),this}}class Og extends pt{constructor(e,t,n,i,s,o,a,c,l,u){if(u=u!==void 0?u:di,u!==di&&u!==rr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===di&&(n=ui),n===void 0&&u===rr&&(n=ji),super(null,i,s,o,a,c,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:ut,this.minFilter=c!==void 0?c:ut,this.flipY=!1,this.generateMipmaps=!1}}class v1 extends Kn{constructor(e,t){super();const n=this;let i=null,s=1,o=null,a="local-floor",c=null,l=null,u=null,h=null,f=null,d=null;const p=t.getContextAttributes();let m=null,g=null;const v=[],_=[],y=new xt;y.layers.enable(1),y.viewport=new He;const x=new xt;x.layers.enable(2),x.viewport=new He;const w=[y,x],M=new Fg;M.layers.enable(1),M.layers.enable(2);let P=null,b=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(z){let V=v[z];return V===void 0&&(V=new Ml,v[z]=V),V.getTargetRaySpace()},this.getControllerGrip=function(z){let V=v[z];return V===void 0&&(V=new Ml,v[z]=V),V.getGripSpace()},this.getHand=function(z){let V=v[z];return V===void 0&&(V=new Ml,v[z]=V),V.getHandSpace()};function T(z){const V=_.indexOf(z.inputSource);if(V===-1)return;const Q=v[V];Q!==void 0&&Q.dispatchEvent({type:z.type,data:z.inputSource})}function I(){i.removeEventListener("select",T),i.removeEventListener("selectstart",T),i.removeEventListener("selectend",T),i.removeEventListener("squeeze",T),i.removeEventListener("squeezestart",T),i.removeEventListener("squeezeend",T),i.removeEventListener("end",I),i.removeEventListener("inputsourceschange",F);for(let z=0;z<v.length;z++){const V=_[z];V!==null&&(_[z]=null,v[z].disconnect(V))}P=null,b=null,e.setRenderTarget(m),f=null,h=null,u=null,i=null,g=null,$.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(z){s=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(z){a=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(z){c=z},this.getBaseLayer=function(){return h!==null?h:f},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(z){if(i=z,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",T),i.addEventListener("selectstart",T),i.addEventListener("selectend",T),i.addEventListener("squeeze",T),i.addEventListener("squeezestart",T),i.addEventListener("squeezeend",T),i.addEventListener("end",I),i.addEventListener("inputsourceschange",F),p.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const V={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,V),i.updateRenderState({baseLayer:f}),g=new Gt(f.framebufferWidth,f.framebufferHeight,{format:Yt,type:_i,encoding:e.outputEncoding})}else{let V=null,Q=null,Y=null;p.depth&&(Y=p.stencil?35056:33190,V=p.stencil?rr:di,Q=p.stencil?ji:ui);const ne={colorFormat:32856,depthFormat:Y,scaleFactor:s};u=new XRWebGLBinding(i,t),h=u.createProjectionLayer(ne),i.updateRenderState({layers:[h]}),g=new Gt(h.textureWidth,h.textureHeight,{format:Yt,type:_i,depthTexture:new Og(h.textureWidth,h.textureHeight,Q,void 0,void 0,void 0,void 0,void 0,void 0,V),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const fe=e.properties.get(g);fe.__ignoreDepthValues=h.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(1),c=null,o=await i.requestReferenceSpace(a),$.setContext(i),$.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function F(z){for(let V=0;V<z.removed.length;V++){const Q=z.removed[V],Y=_.indexOf(Q);Y>=0&&(_[Y]=null,v[Y].dispatchEvent({type:"disconnected",data:Q}))}for(let V=0;V<z.added.length;V++){const Q=z.added[V];let Y=_.indexOf(Q);if(Y===-1){for(let fe=0;fe<v.length;fe++)if(fe>=_.length){_.push(Q),Y=fe;break}else if(_[fe]===null){_[fe]=Q,Y=fe;break}if(Y===-1)break}const ne=v[Y];ne&&ne.dispatchEvent({type:"connected",data:Q})}}const B=new A,j=new A;function D(z,V,Q){B.setFromMatrixPosition(V.matrixWorld),j.setFromMatrixPosition(Q.matrixWorld);const Y=B.distanceTo(j),ne=V.projectionMatrix.elements,fe=Q.projectionMatrix.elements,ge=ne[14]/(ne[10]-1),X=ne[14]/(ne[10]+1),Ue=(ne[9]+1)/ne[5],Se=(ne[9]-1)/ne[5],Ce=(ne[8]-1)/ne[0],he=(fe[8]+1)/fe[0],Ie=ge*Ce,J=ge*he,Z=Y/(-Ce+he),ie=Z*-Ce;V.matrixWorld.decompose(z.position,z.quaternion,z.scale),z.translateX(ie),z.translateZ(Z),z.matrixWorld.compose(z.position,z.quaternion,z.scale),z.matrixWorldInverse.copy(z.matrixWorld).invert();const ye=ge+Z,pe=X+Z,Re=Ie-ie,Ae=J+(Y-ie),Me=Ue*X/pe*ye,Qe=Se*X/pe*ye;z.projectionMatrix.makePerspective(Re,Ae,Me,Qe,ye,pe)}function k(z,V){V===null?z.matrixWorld.copy(z.matrix):z.matrixWorld.multiplyMatrices(V.matrixWorld,z.matrix),z.matrixWorldInverse.copy(z.matrixWorld).invert()}this.updateCamera=function(z){if(i===null)return;M.near=x.near=y.near=z.near,M.far=x.far=y.far=z.far,(P!==M.near||b!==M.far)&&(i.updateRenderState({depthNear:M.near,depthFar:M.far}),P=M.near,b=M.far);const V=z.parent,Q=M.cameras;k(M,V);for(let ne=0;ne<Q.length;ne++)k(Q[ne],V);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),z.position.copy(M.position),z.quaternion.copy(M.quaternion),z.scale.copy(M.scale),z.matrix.copy(M.matrix),z.matrixWorld.copy(M.matrixWorld);const Y=z.children;for(let ne=0,fe=Y.length;ne<fe;ne++)Y[ne].updateMatrixWorld(!0);Q.length===2?D(M,y,x):M.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){if(h!==null)return h.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(z){h!==null&&(h.fixedFoveation=z),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=z)};let O=null;function G(z,V){if(l=V.getViewerPose(c||o),d=V,l!==null){const Q=l.views;f!==null&&(e.setRenderTargetFramebuffer(g,f.framebuffer),e.setRenderTarget(g));let Y=!1;Q.length!==M.cameras.length&&(M.cameras.length=0,Y=!0);for(let ne=0;ne<Q.length;ne++){const fe=Q[ne];let ge=null;if(f!==null)ge=f.getViewport(fe);else{const Ue=u.getViewSubImage(h,fe);ge=Ue.viewport,ne===0&&(e.setRenderTargetTextures(g,Ue.colorTexture,h.ignoreDepthValues?void 0:Ue.depthStencilTexture),e.setRenderTarget(g))}let X=w[ne];X===void 0&&(X=new xt,X.layers.enable(ne),X.viewport=new He,w[ne]=X),X.matrix.fromArray(fe.transform.matrix),X.projectionMatrix.fromArray(fe.projectionMatrix),X.viewport.set(ge.x,ge.y,ge.width,ge.height),ne===0&&M.matrix.copy(X.matrix),Y===!0&&M.cameras.push(X)}}for(let Q=0;Q<v.length;Q++){const Y=_[Q],ne=v[Q];Y!==null&&ne!==void 0&&ne.update(Y,V,c||o)}O&&O(z,V),d=null}const $=new Eg;$.setAnimationLoop(G),this.setAnimationLoop=function(z){O=z},this.dispose=function(){}}}function _1(r,e){function t(m,g){m.fogColor.value.copy(g.color),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function n(m,g,v,_,y){g.isMeshBasicMaterial||g.isMeshLambertMaterial?i(m,g):g.isMeshToonMaterial?(i(m,g),u(m,g)):g.isMeshPhongMaterial?(i(m,g),l(m,g)):g.isMeshStandardMaterial?(i(m,g),h(m,g),g.isMeshPhysicalMaterial&&f(m,g,y)):g.isMeshMatcapMaterial?(i(m,g),d(m,g)):g.isMeshDepthMaterial?i(m,g):g.isMeshDistanceMaterial?(i(m,g),p(m,g)):g.isMeshNormalMaterial?i(m,g):g.isLineBasicMaterial?(s(m,g),g.isLineDashedMaterial&&o(m,g)):g.isPointsMaterial?a(m,g,v,_):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===Ut&&(m.bumpScale.value*=-1)),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===Ut&&m.normalScale.value.negate()),g.specularMap&&(m.specularMap.value=g.specularMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const v=e.get(g).envMap;if(v&&(m.envMap.value=v,m.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap){m.lightMap.value=g.lightMap;const x=r.physicallyCorrectLights!==!0?Math.PI:1;m.lightMapIntensity.value=g.lightMapIntensity*x}g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity);let _;g.map?_=g.map:g.specularMap?_=g.specularMap:g.displacementMap?_=g.displacementMap:g.normalMap?_=g.normalMap:g.bumpMap?_=g.bumpMap:g.roughnessMap?_=g.roughnessMap:g.metalnessMap?_=g.metalnessMap:g.alphaMap?_=g.alphaMap:g.emissiveMap?_=g.emissiveMap:g.clearcoatMap?_=g.clearcoatMap:g.clearcoatNormalMap?_=g.clearcoatNormalMap:g.clearcoatRoughnessMap?_=g.clearcoatRoughnessMap:g.iridescenceMap?_=g.iridescenceMap:g.iridescenceThicknessMap?_=g.iridescenceThicknessMap:g.specularIntensityMap?_=g.specularIntensityMap:g.specularColorMap?_=g.specularColorMap:g.transmissionMap?_=g.transmissionMap:g.thicknessMap?_=g.thicknessMap:g.sheenColorMap?_=g.sheenColorMap:g.sheenRoughnessMap&&(_=g.sheenRoughnessMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),m.uvTransform.value.copy(_.matrix));let y;g.aoMap?y=g.aoMap:g.lightMap&&(y=g.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),m.uv2Transform.value.copy(y.matrix))}function s(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity}function o(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function a(m,g,v,_){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*v,m.scale.value=_*.5,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let y;g.map?y=g.map:g.alphaMap&&(y=g.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),m.uvTransform.value.copy(y.matrix))}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let v;g.map?v=g.map:g.alphaMap&&(v=g.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),m.uvTransform.value.copy(v.matrix))}function l(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function h(m,g){m.roughness.value=g.roughness,m.metalness.value=g.metalness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap),e.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,v){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),m.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===Ut&&m.clearcoatNormalScale.value.negate())),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap)),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=v.texture,m.transmissionSamplerSize.value.set(v.width,v.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap)}function d(m,g){g.matcap&&(m.matcap.value=g.matcap)}function p(m,g){m.referencePosition.value.copy(g.referencePosition),m.nearDistance.value=g.nearDistance,m.farDistance.value=g.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function y1(){const r=ho("canvas");return r.style.display="block",r}function wh(r={}){this.isWebGLRenderer=!0;const e=r.canvas!==void 0?r.canvas:y1(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,a=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,c=r.powerPreference!==void 0?r.powerPreference:"default",l=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let h=null,f=null;const d=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=yi,this.physicallyCorrectLights=!1,this.toneMapping=yn,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const m=this;let g=!1,v=0,_=0,y=null,x=-1,w=null;const M=new He,P=new He;let b=null,T=e.width,I=e.height,F=1,B=null,j=null;const D=new He(0,0,T,I),k=new He(0,0,T,I);let O=!1;const G=new Ac;let $=!1,z=!1,V=null;const Q=new xe,Y=new q,ne=new A,fe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ge(){return y===null?F:1}let X=t;function Ue(C,N){for(let W=0;W<C.length;W++){const U=C[W],K=e.getContext(U,N);if(K!==null)return K}return null}try{const C={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:c,failIfMajorPerformanceCaveat:l};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${_c}`),e.addEventListener("webglcontextlost",R,!1),e.addEventListener("webglcontextrestored",le,!1),e.addEventListener("webglcontextcreationerror",se,!1),X===null){const N=["webgl2","webgl","experimental-webgl"];if(m.isWebGL1Renderer===!0&&N.shift(),X=Ue(N,C),X===null)throw Ue(N)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}X.getShaderPrecisionFormat===void 0&&(X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Se,Ce,he,Ie,J,Z,ie,ye,pe,Re,Ae,Me,Qe,qe,L,S,H,te,re,me,Ee,E,ee;function ae(){Se=new Ow(X),Ce=new Pw(X,Se,r),Se.init(Ce),E=new Dg(X,Se,Ce),he=new p1(X,Se,Ce),Ie=new kw,J=new n1,Z=new m1(X,Se,he,J,Ce,E,Ie),ie=new Iw(m),ye=new Fw(m),pe=new Zy(X,Ce),ee=new Ew(X,Se,pe,Ce),Re=new Nw(X,pe,Ie,ee),Ae=new Gw(X,Re,pe,Ie),re=new Vw(X,Ce,Z),S=new Lw(J),Me=new t1(m,ie,ye,Se,Ce,ee,S),Qe=new _1(m,J),qe=new r1,L=new u1(Se,Ce),te=new Tw(m,ie,he,Ae,u,o),H=new d1(m,Ae,Ce),me=new Cw(X,Se,Ie,Ce),Ee=new zw(X,Se,Ie,Ce),Ie.programs=Me.programs,m.capabilities=Ce,m.extensions=Se,m.properties=J,m.renderLists=qe,m.shadowMap=H,m.state=he,m.info=Ie}ae();const ce=new v1(m,X);this.xr=ce,this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){const C=Se.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Se.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return F},this.setPixelRatio=function(C){C!==void 0&&(F=C,this.setSize(T,I,!1))},this.getSize=function(C){return C.set(T,I)},this.setSize=function(C,N,W){if(ce.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}T=C,I=N,e.width=Math.floor(C*F),e.height=Math.floor(N*F),W!==!1&&(e.style.width=C+"px",e.style.height=N+"px"),this.setViewport(0,0,C,N)},this.getDrawingBufferSize=function(C){return C.set(T*F,I*F).floor()},this.setDrawingBufferSize=function(C,N,W){T=C,I=N,F=W,e.width=Math.floor(C*W),e.height=Math.floor(N*W),this.setViewport(0,0,C,N)},this.getCurrentViewport=function(C){return C.copy(M)},this.getViewport=function(C){return C.copy(D)},this.setViewport=function(C,N,W,U){C.isVector4?D.set(C.x,C.y,C.z,C.w):D.set(C,N,W,U),he.viewport(M.copy(D).multiplyScalar(F).floor())},this.getScissor=function(C){return C.copy(k)},this.setScissor=function(C,N,W,U){C.isVector4?k.set(C.x,C.y,C.z,C.w):k.set(C,N,W,U),he.scissor(P.copy(k).multiplyScalar(F).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(C){he.setScissorTest(O=C)},this.setOpaqueSort=function(C){B=C},this.setTransparentSort=function(C){j=C},this.getClearColor=function(C){return C.copy(te.getClearColor())},this.setClearColor=function(){te.setClearColor.apply(te,arguments)},this.getClearAlpha=function(){return te.getClearAlpha()},this.setClearAlpha=function(){te.setClearAlpha.apply(te,arguments)},this.clear=function(C=!0,N=!0,W=!0){let U=0;C&&(U|=16384),N&&(U|=256),W&&(U|=1024),X.clear(U)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",R,!1),e.removeEventListener("webglcontextrestored",le,!1),e.removeEventListener("webglcontextcreationerror",se,!1),qe.dispose(),L.dispose(),J.dispose(),ie.dispose(),ye.dispose(),Ae.dispose(),ee.dispose(),Me.dispose(),ce.dispose(),ce.removeEventListener("sessionstart",Ze),ce.removeEventListener("sessionend",Je),V&&(V.dispose(),V=null),Lt.stop()};function R(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function le(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const C=Ie.autoReset,N=H.enabled,W=H.autoUpdate,U=H.needsUpdate,K=H.type;ae(),Ie.autoReset=C,H.enabled=N,H.autoUpdate=W,H.needsUpdate=U,H.type=K}function se(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function Te(C){const N=C.target;N.removeEventListener("dispose",Te),ve(N)}function ve(C){we(C),J.remove(C)}function we(C){const N=J.get(C).programs;N!==void 0&&(N.forEach(function(W){Me.releaseProgram(W)}),C.isShaderMaterial&&Me.releaseShaderCache(C))}this.renderBufferDirect=function(C,N,W,U,K,Le){N===null&&(N=fe);const Fe=K.isMesh&&K.matrixWorld.determinant()<0,Ne=zv(C,N,W,U,K);he.setMaterial(U,Fe);let Oe=W.index;const Ke=W.attributes.position;if(Oe===null){if(Ke===void 0||Ke.count===0)return}else if(Oe.count===0)return;let We=1;U.wireframe===!0&&(Oe=Re.getWireframeAttribute(W),We=2),ee.setup(K,U,Ne,W,Oe);let $e,ot=me;Oe!==null&&($e=pe.get(Oe),ot=Ee,ot.setIndex($e));const Ei=Oe!==null?Oe.count:Ke.count,wr=W.drawRange.start*We,Mr=W.drawRange.count*We,Mn=Le!==null?Le.start*We:0,je=Le!==null?Le.count*We:1/0,Sr=Math.max(wr,Mn),mt=Math.min(Ei,wr+Mr,Mn+je)-1,Sn=Math.max(0,mt-Sr+1);if(Sn!==0){if(K.isMesh)U.wireframe===!0?(he.setLineWidth(U.wireframeLinewidth*ge()),ot.setMode(1)):ot.setMode(4);else if(K.isLine){let Qn=U.linewidth;Qn===void 0&&(Qn=1),he.setLineWidth(Qn*ge()),K.isLineSegments?ot.setMode(1):K.isLineLoop?ot.setMode(2):ot.setMode(3)}else K.isPoints?ot.setMode(0):K.isSprite&&ot.setMode(4);if(K.isInstancedMesh)ot.renderInstances(Sr,Sn,K.count);else if(W.isInstancedBufferGeometry){const Qn=Math.min(W.instanceCount,W._maxInstanceCount);ot.renderInstances(Sr,Sn,Qn)}else ot.render(Sr,Sn)}},this.compile=function(C,N){f=L.get(C),f.init(),p.push(f),C.traverseVisible(function(W){W.isLight&&W.layers.test(N.layers)&&(f.pushLight(W),W.castShadow&&f.pushShadow(W))}),f.setupLights(m.physicallyCorrectLights),C.traverse(function(W){const U=W.material;if(U)if(Array.isArray(U))for(let K=0;K<U.length;K++){const Le=U[K];Wc(Le,C,W)}else Wc(U,C,W)}),p.pop(),f=null};let ue=null;function De(C){ue&&ue(C)}function Ze(){Lt.stop()}function Je(){Lt.start()}const Lt=new Eg;Lt.setAnimationLoop(De),typeof self<"u"&&Lt.setContext(self),this.setAnimationLoop=function(C){ue=C,ce.setAnimationLoop(C),C===null?Lt.stop():Lt.start()},ce.addEventListener("sessionstart",Ze),ce.addEventListener("sessionend",Je),this.render=function(C,N){if(N!==void 0&&N.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(g===!0)return;C.autoUpdate===!0&&C.updateMatrixWorld(),N.parent===null&&N.updateMatrixWorld(),ce.enabled===!0&&ce.isPresenting===!0&&(ce.cameraAutoUpdate===!0&&ce.updateCamera(N),N=ce.getCamera()),C.isScene===!0&&C.onBeforeRender(m,C,N,y),f=L.get(C,p.length),f.init(),p.push(f),Q.multiplyMatrices(N.projectionMatrix,N.matrixWorldInverse),G.setFromProjectionMatrix(Q),z=this.localClippingEnabled,$=S.init(this.clippingPlanes,z,N),h=qe.get(C,d.length),h.init(),d.push(h),wn(C,N,0,m.sortObjects),h.finish(),m.sortObjects===!0&&h.sort(B,j),$===!0&&S.beginShadows();const W=f.state.shadowsArray;if(H.render(W,C,N),$===!0&&S.endShadows(),this.info.autoReset===!0&&this.info.reset(),te.render(h,C),f.setupLights(m.physicallyCorrectLights),N.isArrayCamera){const U=N.cameras;for(let K=0,Le=U.length;K<Le;K++){const Fe=U[K];hf(h,C,Fe,Fe.viewport)}}else hf(h,C,N);y!==null&&(Z.updateMultisampleRenderTarget(y),Z.updateRenderTargetMipmap(y)),C.isScene===!0&&C.onAfterRender(m,C,N),ee.resetDefaultState(),x=-1,w=null,p.pop(),p.length>0?f=p[p.length-1]:f=null,d.pop(),d.length>0?h=d[d.length-1]:h=null};function wn(C,N,W,U){if(C.visible===!1)return;if(C.layers.test(N.layers)){if(C.isGroup)W=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(N);else if(C.isLight)f.pushLight(C),C.castShadow&&f.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||G.intersectsSprite(C)){U&&ne.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Q);const Fe=Ae.update(C),Ne=C.material;Ne.visible&&h.push(C,Fe,Ne,W,ne.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==Ie.render.frame&&(C.skeleton.update(),C.skeleton.frame=Ie.render.frame),!C.frustumCulled||G.intersectsObject(C))){U&&ne.setFromMatrixPosition(C.matrixWorld).applyMatrix4(Q);const Fe=Ae.update(C),Ne=C.material;if(Array.isArray(Ne)){const Oe=Fe.groups;for(let Ke=0,We=Oe.length;Ke<We;Ke++){const $e=Oe[Ke],ot=Ne[$e.materialIndex];ot&&ot.visible&&h.push(C,Fe,ot,W,ne.z,$e)}}else Ne.visible&&h.push(C,Fe,Ne,W,ne.z,null)}}const Le=C.children;for(let Fe=0,Ne=Le.length;Fe<Ne;Fe++)wn(Le[Fe],N,W,U)}function hf(C,N,W,U){const K=C.opaque,Le=C.transmissive,Fe=C.transparent;f.setupLightsView(W),Le.length>0&&Ov(K,N,W),U&&he.viewport(M.copy(U)),K.length>0&&Bo(K,N,W),Le.length>0&&Bo(Le,N,W),Fe.length>0&&Bo(Fe,N,W),he.buffers.depth.setTest(!0),he.buffers.depth.setMask(!0),he.buffers.color.setMask(!0),he.setPolygonOffset(!1)}function Ov(C,N,W){const U=Ce.isWebGL2;V===null&&(V=new Gt(1,1,{generateMipmaps:!0,type:Se.has("EXT_color_buffer_half_float")?ss:_i,minFilter:dr,samples:U&&s===!0?4:0})),m.getDrawingBufferSize(Y),U?V.setSize(Y.x,Y.y):V.setSize(ac(Y.x),ac(Y.y));const K=m.getRenderTarget();m.setRenderTarget(V),m.clear();const Le=m.toneMapping;m.toneMapping=yn,Bo(C,N,W),m.toneMapping=Le,Z.updateMultisampleRenderTarget(V),Z.updateRenderTargetMipmap(V),m.setRenderTarget(K)}function Bo(C,N,W){const U=N.isScene===!0?N.overrideMaterial:null;for(let K=0,Le=C.length;K<Le;K++){const Fe=C[K],Ne=Fe.object,Oe=Fe.geometry,Ke=U===null?Fe.material:U,We=Fe.group;Ne.layers.test(W.layers)&&Nv(Ne,N,W,Oe,Ke,We)}}function Nv(C,N,W,U,K,Le){C.onBeforeRender(m,N,W,U,K,Le),C.modelViewMatrix.multiplyMatrices(W.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),K.onBeforeRender(m,N,W,U,C,Le),K.transparent===!0&&K.side===mi?(K.side=Ut,K.needsUpdate=!0,m.renderBufferDirect(W,N,U,K,C,Le),K.side=tr,K.needsUpdate=!0,m.renderBufferDirect(W,N,U,K,C,Le),K.side=mi):m.renderBufferDirect(W,N,U,K,C,Le),C.onAfterRender(m,N,W,U,K,Le)}function Wc(C,N,W){N.isScene!==!0&&(N=fe);const U=J.get(C),K=f.state.lights,Le=f.state.shadowsArray,Fe=K.state.version,Ne=Me.getParameters(C,K.state,Le,N,W),Oe=Me.getProgramCacheKey(Ne);let Ke=U.programs;U.environment=C.isMeshStandardMaterial?N.environment:null,U.fog=N.fog,U.envMap=(C.isMeshStandardMaterial?ye:ie).get(C.envMap||U.environment),Ke===void 0&&(C.addEventListener("dispose",Te),Ke=new Map,U.programs=Ke);let We=Ke.get(Oe);if(We!==void 0){if(U.currentProgram===We&&U.lightsStateVersion===Fe)return ff(C,Ne),We}else Ne.uniforms=Me.getUniforms(C),C.onBuild(W,Ne,m),C.onBeforeCompile(Ne,m),We=Me.acquireProgram(Ne,Oe),Ke.set(Oe,We),U.uniforms=Ne.uniforms;const $e=U.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&($e.clippingPlanes=S.uniform),ff(C,Ne),U.needsLights=Bv(C),U.lightsStateVersion=Fe,U.needsLights&&($e.ambientLightColor.value=K.state.ambient,$e.lightProbe.value=K.state.probe,$e.directionalLights.value=K.state.directional,$e.directionalLightShadows.value=K.state.directionalShadow,$e.spotLights.value=K.state.spot,$e.spotLightShadows.value=K.state.spotShadow,$e.rectAreaLights.value=K.state.rectArea,$e.ltc_1.value=K.state.rectAreaLTC1,$e.ltc_2.value=K.state.rectAreaLTC2,$e.pointLights.value=K.state.point,$e.pointLightShadows.value=K.state.pointShadow,$e.hemisphereLights.value=K.state.hemi,$e.directionalShadowMap.value=K.state.directionalShadowMap,$e.directionalShadowMatrix.value=K.state.directionalShadowMatrix,$e.spotShadowMap.value=K.state.spotShadowMap,$e.spotShadowMatrix.value=K.state.spotShadowMatrix,$e.pointShadowMap.value=K.state.pointShadowMap,$e.pointShadowMatrix.value=K.state.pointShadowMatrix);const ot=We.getUniforms(),Ei=Va.seqWithValue(ot.seq,$e);return U.currentProgram=We,U.uniformsList=Ei,We}function ff(C,N){const W=J.get(C);W.outputEncoding=N.outputEncoding,W.instancing=N.instancing,W.skinning=N.skinning,W.morphTargets=N.morphTargets,W.morphNormals=N.morphNormals,W.morphColors=N.morphColors,W.morphTargetsCount=N.morphTargetsCount,W.numClippingPlanes=N.numClippingPlanes,W.numIntersection=N.numClipIntersection,W.vertexAlphas=N.vertexAlphas,W.vertexTangents=N.vertexTangents,W.toneMapping=N.toneMapping}function zv(C,N,W,U,K){N.isScene!==!0&&(N=fe),Z.resetTextureUnits();const Le=N.fog,Fe=U.isMeshStandardMaterial?N.environment:null,Ne=y===null?m.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:yi,Oe=(U.isMeshStandardMaterial?ye:ie).get(U.envMap||Fe),Ke=U.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,We=!!U.normalMap&&!!W.attributes.tangent,$e=!!W.morphAttributes.position,ot=!!W.morphAttributes.normal,Ei=!!W.morphAttributes.color,wr=U.toneMapped?m.toneMapping:yn,Mr=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,Mn=Mr!==void 0?Mr.length:0,je=J.get(U),Sr=f.state.lights;if($===!0&&(z===!0||C!==w)){const An=C===w&&U.id===x;S.setState(U,C,An)}let mt=!1;U.version===je.__version?(je.needsLights&&je.lightsStateVersion!==Sr.state.version||je.outputEncoding!==Ne||K.isInstancedMesh&&je.instancing===!1||!K.isInstancedMesh&&je.instancing===!0||K.isSkinnedMesh&&je.skinning===!1||!K.isSkinnedMesh&&je.skinning===!0||je.envMap!==Oe||U.fog===!0&&je.fog!==Le||je.numClippingPlanes!==void 0&&(je.numClippingPlanes!==S.numPlanes||je.numIntersection!==S.numIntersection)||je.vertexAlphas!==Ke||je.vertexTangents!==We||je.morphTargets!==$e||je.morphNormals!==ot||je.morphColors!==Ei||je.toneMapping!==wr||Ce.isWebGL2===!0&&je.morphTargetsCount!==Mn)&&(mt=!0):(mt=!0,je.__version=U.version);let Sn=je.currentProgram;mt===!0&&(Sn=Wc(U,N,K));let Qn=!1,zs=!1,Xc=!1;const It=Sn.getUniforms(),ks=je.uniforms;if(he.useProgram(Sn.program)&&(Qn=!0,zs=!0,Xc=!0),U.id!==x&&(x=U.id,zs=!0),Qn||w!==C){if(It.setValue(X,"projectionMatrix",C.projectionMatrix),Ce.logarithmicDepthBuffer&&It.setValue(X,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),w!==C&&(w=C,zs=!0,Xc=!0),U.isShaderMaterial||U.isMeshPhongMaterial||U.isMeshToonMaterial||U.isMeshStandardMaterial||U.envMap){const An=It.map.cameraPosition;An!==void 0&&An.setValue(X,ne.setFromMatrixPosition(C.matrixWorld))}(U.isMeshPhongMaterial||U.isMeshToonMaterial||U.isMeshLambertMaterial||U.isMeshBasicMaterial||U.isMeshStandardMaterial||U.isShaderMaterial)&&It.setValue(X,"isOrthographic",C.isOrthographicCamera===!0),(U.isMeshPhongMaterial||U.isMeshToonMaterial||U.isMeshLambertMaterial||U.isMeshBasicMaterial||U.isMeshStandardMaterial||U.isShaderMaterial||U.isShadowMaterial||K.isSkinnedMesh)&&It.setValue(X,"viewMatrix",C.matrixWorldInverse)}if(K.isSkinnedMesh){It.setOptional(X,K,"bindMatrix"),It.setOptional(X,K,"bindMatrixInverse");const An=K.skeleton;An&&(Ce.floatVertexTextures?(An.boneTexture===null&&An.computeBoneTexture(),It.setValue(X,"boneTexture",An.boneTexture,Z),It.setValue(X,"boneTextureSize",An.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const $c=W.morphAttributes;return($c.position!==void 0||$c.normal!==void 0||$c.color!==void 0&&Ce.isWebGL2===!0)&&re.update(K,W,U,Sn),(zs||je.receiveShadow!==K.receiveShadow)&&(je.receiveShadow=K.receiveShadow,It.setValue(X,"receiveShadow",K.receiveShadow)),zs&&(It.setValue(X,"toneMappingExposure",m.toneMappingExposure),je.needsLights&&kv(ks,Xc),Le&&U.fog===!0&&Qe.refreshFogUniforms(ks,Le),Qe.refreshMaterialUniforms(ks,U,F,I,V),Va.upload(X,je.uniformsList,ks,Z)),U.isShaderMaterial&&U.uniformsNeedUpdate===!0&&(Va.upload(X,je.uniformsList,ks,Z),U.uniformsNeedUpdate=!1),U.isSpriteMaterial&&It.setValue(X,"center",K.center),It.setValue(X,"modelViewMatrix",K.modelViewMatrix),It.setValue(X,"normalMatrix",K.normalMatrix),It.setValue(X,"modelMatrix",K.matrixWorld),Sn}function kv(C,N){C.ambientLightColor.needsUpdate=N,C.lightProbe.needsUpdate=N,C.directionalLights.needsUpdate=N,C.directionalLightShadows.needsUpdate=N,C.pointLights.needsUpdate=N,C.pointLightShadows.needsUpdate=N,C.spotLights.needsUpdate=N,C.spotLightShadows.needsUpdate=N,C.rectAreaLights.needsUpdate=N,C.hemisphereLights.needsUpdate=N}function Bv(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(C,N,W){J.get(C.texture).__webglTexture=N,J.get(C.depthTexture).__webglTexture=W;const U=J.get(C);U.__hasExternalTextures=!0,U.__hasExternalTextures&&(U.__autoAllocateDepthBuffer=W===void 0,U.__autoAllocateDepthBuffer||Se.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),U.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,N){const W=J.get(C);W.__webglFramebuffer=N,W.__useDefaultFramebuffer=N===void 0},this.setRenderTarget=function(C,N=0,W=0){y=C,v=N,_=W;let U=!0;if(C){const Oe=J.get(C);Oe.__useDefaultFramebuffer!==void 0?(he.bindFramebuffer(36160,null),U=!1):Oe.__webglFramebuffer===void 0?Z.setupRenderTarget(C):Oe.__hasExternalTextures&&Z.rebindTextures(C,J.get(C.texture).__webglTexture,J.get(C.depthTexture).__webglTexture)}let K=null,Le=!1,Fe=!1;if(C){const Oe=C.texture;(Oe.isData3DTexture||Oe.isDataArrayTexture)&&(Fe=!0);const Ke=J.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(K=Ke[N],Le=!0):Ce.isWebGL2&&C.samples>0&&Z.useMultisampledRTT(C)===!1?K=J.get(C).__webglMultisampledFramebuffer:K=Ke,M.copy(C.viewport),P.copy(C.scissor),b=C.scissorTest}else M.copy(D).multiplyScalar(F).floor(),P.copy(k).multiplyScalar(F).floor(),b=O;if(he.bindFramebuffer(36160,K)&&Ce.drawBuffers&&U&&he.drawBuffers(C,K),he.viewport(M),he.scissor(P),he.setScissorTest(b),Le){const Oe=J.get(C.texture);X.framebufferTexture2D(36160,36064,34069+N,Oe.__webglTexture,W)}else if(Fe){const Oe=J.get(C.texture),Ke=N||0;X.framebufferTextureLayer(36160,36064,Oe.__webglTexture,W||0,Ke)}x=-1},this.readRenderTargetPixels=function(C,N,W,U,K,Le,Fe){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ne=J.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Fe!==void 0&&(Ne=Ne[Fe]),Ne){he.bindFramebuffer(36160,Ne);try{const Oe=C.texture,Ke=Oe.format,We=Oe.type;if(Ke!==Yt&&E.convert(Ke)!==X.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const $e=We===ss&&(Se.has("EXT_color_buffer_half_float")||Ce.isWebGL2&&Se.has("EXT_color_buffer_float"));if(We!==_i&&E.convert(We)!==X.getParameter(35738)&&!(We===Gn&&(Ce.isWebGL2||Se.has("OES_texture_float")||Se.has("WEBGL_color_buffer_float")))&&!$e){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}N>=0&&N<=C.width-U&&W>=0&&W<=C.height-K&&X.readPixels(N,W,U,K,E.convert(Ke),E.convert(We),Le)}finally{const Oe=y!==null?J.get(y).__webglFramebuffer:null;he.bindFramebuffer(36160,Oe)}}},this.copyFramebufferToTexture=function(C,N,W=0){const U=Math.pow(2,-W),K=Math.floor(N.image.width*U),Le=Math.floor(N.image.height*U);Z.setTexture2D(N,0),X.copyTexSubImage2D(3553,W,0,0,C.x,C.y,K,Le),he.unbindTexture()},this.copyTextureToTexture=function(C,N,W,U=0){const K=N.image.width,Le=N.image.height,Fe=E.convert(W.format),Ne=E.convert(W.type);Z.setTexture2D(W,0),X.pixelStorei(37440,W.flipY),X.pixelStorei(37441,W.premultiplyAlpha),X.pixelStorei(3317,W.unpackAlignment),N.isDataTexture?X.texSubImage2D(3553,U,C.x,C.y,K,Le,Fe,Ne,N.image.data):N.isCompressedTexture?X.compressedTexSubImage2D(3553,U,C.x,C.y,N.mipmaps[0].width,N.mipmaps[0].height,Fe,N.mipmaps[0].data):X.texSubImage2D(3553,U,C.x,C.y,Fe,Ne,N.image),U===0&&W.generateMipmaps&&X.generateMipmap(3553),he.unbindTexture()},this.copyTextureToTexture3D=function(C,N,W,U,K=0){if(m.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Le=C.max.x-C.min.x+1,Fe=C.max.y-C.min.y+1,Ne=C.max.z-C.min.z+1,Oe=E.convert(U.format),Ke=E.convert(U.type);let We;if(U.isData3DTexture)Z.setTexture3D(U,0),We=32879;else if(U.isDataArrayTexture)Z.setTexture2DArray(U,0),We=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}X.pixelStorei(37440,U.flipY),X.pixelStorei(37441,U.premultiplyAlpha),X.pixelStorei(3317,U.unpackAlignment);const $e=X.getParameter(3314),ot=X.getParameter(32878),Ei=X.getParameter(3316),wr=X.getParameter(3315),Mr=X.getParameter(32877),Mn=W.isCompressedTexture?W.mipmaps[0]:W.image;X.pixelStorei(3314,Mn.width),X.pixelStorei(32878,Mn.height),X.pixelStorei(3316,C.min.x),X.pixelStorei(3315,C.min.y),X.pixelStorei(32877,C.min.z),W.isDataTexture||W.isData3DTexture?X.texSubImage3D(We,K,N.x,N.y,N.z,Le,Fe,Ne,Oe,Ke,Mn.data):W.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),X.compressedTexSubImage3D(We,K,N.x,N.y,N.z,Le,Fe,Ne,Oe,Mn.data)):X.texSubImage3D(We,K,N.x,N.y,N.z,Le,Fe,Ne,Oe,Ke,Mn),X.pixelStorei(3314,$e),X.pixelStorei(32878,ot),X.pixelStorei(3316,Ei),X.pixelStorei(3315,wr),X.pixelStorei(32877,Mr),K===0&&U.generateMipmaps&&X.generateMipmap(We),he.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?Z.setTextureCube(C,0):C.isData3DTexture?Z.setTexture3D(C,0):C.isDataArrayTexture?Z.setTexture2DArray(C,0):Z.setTexture2D(C,0),he.unbindTexture()},this.resetState=function(){v=0,_=0,y=null,he.reset(),ee.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Ng extends wh{}Ng.prototype.isWebGL1Renderer=!0;class Ec{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new oe(e),this.density=t}clone(){return new Ec(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Cc{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new oe(e),this.near=t,this.far=n}clone(){return new Cc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Mh extends Xe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}class Pc{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=sc,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Zt()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Zt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Zt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Rt=new A;class or{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Rt.fromBufferAttribute(this,t),Rt.applyMatrix4(e),this.setXYZ(t,Rt.x,Rt.y,Rt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Rt.fromBufferAttribute(this,t),Rt.applyNormalMatrix(e),this.setXYZ(t,Rt.x,Rt.y,Rt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Rt.fromBufferAttribute(this,t),Rt.transformDirection(e),this.setXYZ(t,Rt.x,Rt.y,Rt.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new et(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new or(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Sh extends Ct{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new oe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Br;const Gs=new A,Ur=new A,Vr=new A,Gr=new q,Hs=new q,zg=new xe,oa=new A,Ws=new A,aa=new A,wd=new q,Sl=new q,Md=new q;class kg extends Xe{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Br===void 0){Br=new Pe;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Pc(t,5);Br.setIndex([0,1,2,0,2,3]),Br.setAttribute("position",new or(n,3,0,!1)),Br.setAttribute("uv",new or(n,2,3,!1))}this.geometry=Br,this.material=e!==void 0?e:new Sh,this.center=new q(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ur.setFromMatrixScale(this.matrixWorld),zg.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Vr.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ur.multiplyScalar(-Vr.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;ca(oa.set(-.5,-.5,0),Vr,o,Ur,i,s),ca(Ws.set(.5,-.5,0),Vr,o,Ur,i,s),ca(aa.set(.5,.5,0),Vr,o,Ur,i,s),wd.set(0,0),Sl.set(1,0),Md.set(1,1);let a=e.ray.intersectTriangle(oa,Ws,aa,!1,Gs);if(a===null&&(ca(Ws.set(-.5,.5,0),Vr,o,Ur,i,s),Sl.set(0,1),a=e.ray.intersectTriangle(oa,aa,Ws,!1,Gs),a===null))return;const c=e.ray.origin.distanceTo(Gs);c<e.near||c>e.far||t.push({distance:c,point:Gs.clone(),uv:rn.getUV(Gs,oa,Ws,aa,wd,Sl,Md,new q),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function ca(r,e,t,n,i,s){Gr.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Hs.x=s*Gr.x-i*Gr.y,Hs.y=i*Gr.x+s*Gr.y):Hs.copy(Gr),r.copy(e),r.x+=Hs.x,r.y+=Hs.y,r.applyMatrix4(zg)}const la=new A,Sd=new A;class Bg extends Xe{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){la.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(la);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){la.setFromMatrixPosition(e.matrixWorld),Sd.setFromMatrixPosition(this.matrixWorld);const n=la.distanceTo(Sd)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}const Ad=new A,Td=new He,Ed=new He,x1=new A,Cd=new xe;class Ah extends bt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new xe,this.bindMatrixInverse=new xe}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new He,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Td.fromBufferAttribute(i.attributes.skinIndex,e),Ed.fromBufferAttribute(i.attributes.skinWeight,e),Ad.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=Ed.getComponent(s);if(o!==0){const a=Td.getComponent(s);Cd.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(x1.copy(Ad).applyMatrix4(Cd),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class fo extends Xe{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ji extends pt{constructor(e=null,t=1,n=1,i,s,o,a,c,l=ut,u=ut,h,f){super(null,o,a,c,l,u,i,s,h,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Pd=new xe,b1=new xe;class Lo{constructor(e=[],t=[]){this.uuid=Zt(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new xe)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new xe;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:b1;Pd.multiplyMatrices(a,t[s]),Pd.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Lo(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=wg(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ji(t,e,e,Yt,Gn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new fo),this.bones.push(o),this.boneInverses.push(new xe().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class as extends et{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Ld=new xe,Id=new xe,ua=[],Xs=new bt;class Ug extends bt{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new as(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Xs.geometry=this.geometry,Xs.material=this.material,Xs.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,Ld),Id.multiplyMatrices(n,Ld),Xs.matrixWorld=Id,Xs.raycast(e,ua);for(let o=0,a=ua.length;o<a;o++){const c=ua[o];c.instanceId=s,c.object=this,t.push(c)}ua.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new as(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Pt extends Ct{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new oe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Rd=new A,Dd=new A,Fd=new xe,Al=new Eo,ha=new mr;class Yn extends Xe{constructor(e=new Pe,t=new Pt){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Rd.fromBufferAttribute(t,i-1),Dd.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Rd.distanceTo(Dd);e.setAttribute("lineDistance",new _e(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ha.copy(n.boundingSphere),ha.applyMatrix4(i),ha.radius+=s,e.ray.intersectsSphere(ha)===!1)return;Fd.copy(i).invert(),Al.copy(e.ray).applyMatrix4(Fd);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=new A,u=new A,h=new A,f=new A,d=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,o.start),_=Math.min(p.count,o.start+o.count);for(let y=v,x=_-1;y<x;y+=d){const w=p.getX(y),M=p.getX(y+1);if(l.fromBufferAttribute(g,w),u.fromBufferAttribute(g,M),Al.distanceSqToSegment(l,u,f,h)>c)continue;f.applyMatrix4(this.matrixWorld);const b=e.ray.origin.distanceTo(f);b<e.near||b>e.far||t.push({distance:b,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,o.start),_=Math.min(g.count,o.start+o.count);for(let y=v,x=_-1;y<x;y+=d){if(l.fromBufferAttribute(g,y),u.fromBufferAttribute(g,y+1),Al.distanceSqToSegment(l,u,f,h)>c)continue;f.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(f);M<e.near||M>e.far||t.push({distance:M,point:h.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}const Od=new A,Nd=new A;class Fn extends Yn{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Od.fromBufferAttribute(t,i),Nd.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Od.distanceTo(Nd);e.setAttribute("lineDistance",new _e(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Vg extends Yn{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Th extends Ct{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new oe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const zd=new xe,Tu=new Eo,fa=new mr,da=new A;class Eh extends Xe{constructor(e=new Pe,t=new Th){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),fa.copy(n.boundingSphere),fa.applyMatrix4(i),fa.radius+=s,e.ray.intersectsSphere(fa)===!1)return;zd.copy(i).invert(),Tu.copy(e.ray).applyMatrix4(zd);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=n.index,h=n.attributes.position;if(l!==null){const f=Math.max(0,o.start),d=Math.min(l.count,o.start+o.count);for(let p=f,m=d;p<m;p++){const g=l.getX(p);da.fromBufferAttribute(h,g),kd(da,g,c,i,e,t,this)}}else{const f=Math.max(0,o.start),d=Math.min(h.count,o.start+o.count);for(let p=f,m=d;p<m;p++)da.fromBufferAttribute(h,p),kd(da,p,c,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function kd(r,e,t,n,i,s,o){const a=Tu.distanceSqToPoint(r);if(a<t){const c=new A;Tu.closestPointToPoint(r,c),c.applyMatrix4(n);const l=i.ray.origin.distanceTo(c);if(l<i.near||l>i.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:e,face:null,object:o})}}class w1 extends pt{constructor(e,t,n,i,s,o,a,c,l){super(e,t,n,i,s,o,a,c,l),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:rt,this.magFilter=s!==void 0?s:rt,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class M1 extends pt{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=ut,this.minFilter=ut,this.generateMipmaps=!1,this.needsUpdate=!0}}class Gg extends pt{constructor(e,t,n,i,s,o,a,c,l,u,h,f){super(null,o,a,c,l,u,i,s,h,f),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class S1 extends pt{constructor(e,t,n,i,s,o,a,c,l){super(e,t,n,i,s,o,a,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class cn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,c=s-1,l;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),l=n[i]-o,l<0)a=i+1;else if(l>0)c=i-1;else{c=i;break}if(i=c,n[i]===o)return i/(s-1);const u=n[i],f=n[i+1]-u,d=(o-u)/f;return(i+d)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),c=t||(o.isVector2?new q:new A);return c.copy(a).sub(o).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new A,i=[],s=[],o=[],a=new A,c=new xe;for(let d=0;d<=e;d++){const p=d/e;i[d]=this.getTangentAt(p,new A)}s[0]=new A,o[0]=new A;let l=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=l&&(l=u,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),f<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(i[d-1],i[d]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(ht(i[d-1].dot(i[d]),-1,1));s[d].applyMatrix4(c.makeRotationAxis(a,p))}o[d].crossVectors(i[d],s[d])}if(t===!0){let d=Math.acos(ht(s[0].dot(s[e]),-1,1));d/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(d=-d);for(let p=1;p<=e;p++)s[p].applyMatrix4(c.makeRotationAxis(i[p],d*p)),o[p].crossVectors(i[p],s[p])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Lc extends cn{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,c=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=c}getPoint(e,t){const n=t||new q,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let c=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=c-this.aX,d=l-this.aY;c=f*u-d*h+this.aX,l=f*h+d*u+this.aY}return n.set(c,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Hg extends Lc{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Ch(){let r=0,e=0,t=0,n=0;function i(s,o,a,c){r=s,e=a,t=-3*s+3*o-2*a-c,n=2*s-2*o+a+c}return{initCatmullRom:function(s,o,a,c,l){i(o,a,l*(a-s),l*(c-o))},initNonuniformCatmullRom:function(s,o,a,c,l,u,h){let f=(o-s)/l-(a-s)/(l+u)+(a-o)/u,d=(a-o)/u-(c-o)/(u+h)+(c-a)/h;f*=u,d*=u,i(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return r+e*s+t*o+n*a}}}const pa=new A,Tl=new Ch,El=new Ch,Cl=new Ch;class Wg extends cn{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new A){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),c=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:c===0&&a===s-1&&(a=s-2,c=1);let l,u;this.closed||a>0?l=i[(a-1)%s]:(pa.subVectors(i[0],i[1]).add(i[0]),l=pa);const h=i[a%s],f=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(pa.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=pa),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(h),d),m=Math.pow(h.distanceToSquared(f),d),g=Math.pow(f.distanceToSquared(u),d);m<1e-4&&(m=1),p<1e-4&&(p=m),g<1e-4&&(g=m),Tl.initNonuniformCatmullRom(l.x,h.x,f.x,u.x,p,m,g),El.initNonuniformCatmullRom(l.y,h.y,f.y,u.y,p,m,g),Cl.initNonuniformCatmullRom(l.z,h.z,f.z,u.z,p,m,g)}else this.curveType==="catmullrom"&&(Tl.initCatmullRom(l.x,h.x,f.x,u.x,this.tension),El.initCatmullRom(l.y,h.y,f.y,u.y,this.tension),Cl.initCatmullRom(l.z,h.z,f.z,u.z,this.tension));return n.set(Tl.calc(c),El.calc(c),Cl.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new A().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Bd(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,a=r*r,c=r*a;return(2*t-2*n+s+o)*c+(-3*t+3*n-2*s-o)*a+s*r+t}function A1(r,e){const t=1-r;return t*t*e}function T1(r,e){return 2*(1-r)*r*e}function E1(r,e){return r*r*e}function Ks(r,e,t,n){return A1(r,e)+T1(r,t)+E1(r,n)}function C1(r,e){const t=1-r;return t*t*t*e}function P1(r,e){const t=1-r;return 3*t*t*r*e}function L1(r,e){return 3*(1-r)*r*r*e}function I1(r,e){return r*r*r*e}function Qs(r,e,t,n,i){return C1(r,e)+P1(r,t)+L1(r,n)+I1(r,i)}class Ph extends cn{constructor(e=new q,t=new q,n=new q,i=new q){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new q){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Qs(e,i.x,s.x,o.x,a.x),Qs(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Xg extends cn{constructor(e=new A,t=new A,n=new A,i=new A){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new A){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Qs(e,i.x,s.x,o.x,a.x),Qs(e,i.y,s.y,o.y,a.y),Qs(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Ic extends cn{constructor(e=new q,t=new q){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new q){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new q;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $g extends cn{constructor(e=new A,t=new A){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new A){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Lh extends cn{constructor(e=new q,t=new q,n=new q){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new q){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Ks(e,i.x,s.x,o.x),Ks(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ih extends cn{constructor(e=new A,t=new A,n=new A){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new A){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Ks(e,i.x,s.x,o.x),Ks(e,i.y,s.y,o.y),Ks(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Rh extends cn{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new q){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,c=i[o===0?o:o-1],l=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Bd(a,c.x,l.x,u.x,h.x),Bd(a,c.y,l.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new q().fromArray(i))}return this}}var Dh=Object.freeze({__proto__:null,ArcCurve:Hg,CatmullRomCurve3:Wg,CubicBezierCurve:Ph,CubicBezierCurve3:Xg,EllipseCurve:Lc,LineCurve:Ic,LineCurve3:$g,QuadraticBezierCurve:Lh,QuadraticBezierCurve3:Ih,SplineCurve:Rh});class qg extends cn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Ic(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],c=a.getLength(),l=c===0?0:1-o/c;return a.getPointAt(l,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,c=o.getPoints(a);for(let l=0;l<c.length;l++){const u=c[l];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Dh[i.type]().fromJSON(i))}return this}}class po extends qg{constructor(e){super(),this.type="Path",this.currentPoint=new q,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Ic(this.currentPoint.clone(),new q(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Lh(this.currentPoint.clone(),new q(e,t),new q(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new Ph(this.currentPoint.clone(),new q(e,t),new q(n,i),new q(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Rh(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const a=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+a,t+c,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,c){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,n,i,s,o,a,c),this}absellipse(e,t,n,i,s,o,a,c){const l=new Lc(e,t,n,i,s,o,a,c);if(this.curves.length>0){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);const u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class ar extends Pe{constructor(e=[new q(0,.5),new q(.5,0),new q(0,-.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=ht(i,0,Math.PI*2);const s=[],o=[],a=[],c=[],l=[],u=1/t,h=new A,f=new q,d=new A,p=new A,m=new A;let g=0,v=0;for(let _=0;_<=e.length-1;_++)switch(_){case 0:g=e[_+1].x-e[_].x,v=e[_+1].y-e[_].y,d.x=v*1,d.y=-g,d.z=v*0,m.copy(d),d.normalize(),c.push(d.x,d.y,d.z);break;case e.length-1:c.push(m.x,m.y,m.z);break;default:g=e[_+1].x-e[_].x,v=e[_+1].y-e[_].y,d.x=v*1,d.y=-g,d.z=v*0,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),c.push(d.x,d.y,d.z),m.copy(p)}for(let _=0;_<=t;_++){const y=n+_*u*i,x=Math.sin(y),w=Math.cos(y);for(let M=0;M<=e.length-1;M++){h.x=e[M].x*x,h.y=e[M].y,h.z=e[M].x*w,o.push(h.x,h.y,h.z),f.x=_/t,f.y=M/(e.length-1),a.push(f.x,f.y);const P=c[3*M+0]*x,b=c[3*M+1],T=c[3*M+0]*w;l.push(P,b,T)}}for(let _=0;_<t;_++)for(let y=0;y<e.length-1;y++){const x=y+_*e.length,w=x,M=x+e.length,P=x+e.length+1,b=x+1;s.push(w,M,b),s.push(P,b,M)}this.setIndex(s),this.setAttribute("position",new _e(o,3)),this.setAttribute("uv",new _e(a,2)),this.setAttribute("normal",new _e(l,3))}static fromJSON(e){return new ar(e.points,e.segments,e.phiStart,e.phiLength)}}class cs extends ar{constructor(e=1,t=1,n=4,i=8){const s=new po;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new cs(e.radius,e.length,e.capSegments,e.radialSegments)}}class ls extends Pe{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],a=[],c=[],l=new A,u=new q;o.push(0,0,0),a.push(0,0,1),c.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=n+h/t*i;l.x=e*Math.cos(d),l.y=e*Math.sin(d),o.push(l.x,l.y,l.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,c.push(u.x,u.y)}for(let h=1;h<=t;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new _e(o,3)),this.setAttribute("normal",new _e(a,3)),this.setAttribute("uv",new _e(c,2))}static fromJSON(e){return new ls(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class xi extends Pe{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:c};const l=this;i=Math.floor(i),s=Math.floor(s);const u=[],h=[],f=[],d=[];let p=0;const m=[],g=n/2;let v=0;_(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new _e(h,3)),this.setAttribute("normal",new _e(f,3)),this.setAttribute("uv",new _e(d,2));function _(){const x=new A,w=new A;let M=0;const P=(t-e)/n;for(let b=0;b<=s;b++){const T=[],I=b/s,F=I*(t-e)+e;for(let B=0;B<=i;B++){const j=B/i,D=j*c+a,k=Math.sin(D),O=Math.cos(D);w.x=F*k,w.y=-I*n+g,w.z=F*O,h.push(w.x,w.y,w.z),x.set(k,P,O).normalize(),f.push(x.x,x.y,x.z),d.push(j,1-I),T.push(p++)}m.push(T)}for(let b=0;b<i;b++)for(let T=0;T<s;T++){const I=m[T][b],F=m[T+1][b],B=m[T+1][b+1],j=m[T][b+1];u.push(I,F,j),u.push(F,B,j),M+=6}l.addGroup(v,M,0),v+=M}function y(x){const w=p,M=new q,P=new A;let b=0;const T=x===!0?e:t,I=x===!0?1:-1;for(let B=1;B<=i;B++)h.push(0,g*I,0),f.push(0,I,0),d.push(.5,.5),p++;const F=p;for(let B=0;B<=i;B++){const D=B/i*c+a,k=Math.cos(D),O=Math.sin(D);P.x=T*O,P.y=g*I,P.z=T*k,h.push(P.x,P.y,P.z),f.push(0,I,0),M.x=k*.5+.5,M.y=O*.5*I+.5,d.push(M.x,M.y),p++}for(let B=0;B<i;B++){const j=w+B,D=F+B;x===!0?u.push(D,D+1,j):u.push(D+1,D,j),b+=3}l.addGroup(v,b,x===!0?1:2),v+=b}}static fromJSON(e){return new xi(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class us extends xi{constructor(e=1,t=1,n=8,i=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new us(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class In extends Pe{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];a(i),l(n),u(),this.setAttribute("position",new _e(s,3)),this.setAttribute("normal",new _e(s.slice(),3)),this.setAttribute("uv",new _e(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(_){const y=new A,x=new A,w=new A;for(let M=0;M<t.length;M+=3)d(t[M+0],y),d(t[M+1],x),d(t[M+2],w),c(y,x,w,_)}function c(_,y,x,w){const M=w+1,P=[];for(let b=0;b<=M;b++){P[b]=[];const T=_.clone().lerp(x,b/M),I=y.clone().lerp(x,b/M),F=M-b;for(let B=0;B<=F;B++)B===0&&b===M?P[b][B]=T:P[b][B]=T.clone().lerp(I,B/F)}for(let b=0;b<M;b++)for(let T=0;T<2*(M-b)-1;T++){const I=Math.floor(T/2);T%2===0?(f(P[b][I+1]),f(P[b+1][I]),f(P[b][I])):(f(P[b][I+1]),f(P[b+1][I+1]),f(P[b+1][I]))}}function l(_){const y=new A;for(let x=0;x<s.length;x+=3)y.x=s[x+0],y.y=s[x+1],y.z=s[x+2],y.normalize().multiplyScalar(_),s[x+0]=y.x,s[x+1]=y.y,s[x+2]=y.z}function u(){const _=new A;for(let y=0;y<s.length;y+=3){_.x=s[y+0],_.y=s[y+1],_.z=s[y+2];const x=g(_)/2/Math.PI+.5,w=v(_)/Math.PI+.5;o.push(x,1-w)}p(),h()}function h(){for(let _=0;_<o.length;_+=6){const y=o[_+0],x=o[_+2],w=o[_+4],M=Math.max(y,x,w),P=Math.min(y,x,w);M>.9&&P<.1&&(y<.2&&(o[_+0]+=1),x<.2&&(o[_+2]+=1),w<.2&&(o[_+4]+=1))}}function f(_){s.push(_.x,_.y,_.z)}function d(_,y){const x=_*3;y.x=e[x+0],y.y=e[x+1],y.z=e[x+2]}function p(){const _=new A,y=new A,x=new A,w=new A,M=new q,P=new q,b=new q;for(let T=0,I=0;T<s.length;T+=9,I+=6){_.set(s[T+0],s[T+1],s[T+2]),y.set(s[T+3],s[T+4],s[T+5]),x.set(s[T+6],s[T+7],s[T+8]),M.set(o[I+0],o[I+1]),P.set(o[I+2],o[I+3]),b.set(o[I+4],o[I+5]),w.copy(_).add(y).add(x).divideScalar(3);const F=g(w);m(M,I+0,_,F),m(P,I+2,y,F),m(b,I+4,x,F)}}function m(_,y,x,w){w<0&&_.x===1&&(o[y]=_.x-1),x.x===0&&x.z===0&&(o[y]=w/2/Math.PI+.5)}function g(_){return Math.atan2(_.z,-_.x)}function v(_){return Math.atan2(-_.y,Math.sqrt(_.x*_.x+_.z*_.z))}}static fromJSON(e){return new In(e.vertices,e.indices,e.radius,e.details)}}class hs extends In{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new hs(e.radius,e.detail)}}const ma=new A,ga=new A,Pl=new A,va=new rn;class jg extends Pe{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Yi*t),o=e.getIndex(),a=e.getAttribute("position"),c=o?o.count:a.count,l=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<c;p+=3){o?(l[0]=o.getX(p),l[1]=o.getX(p+1),l[2]=o.getX(p+2)):(l[0]=p,l[1]=p+1,l[2]=p+2);const{a:m,b:g,c:v}=va;if(m.fromBufferAttribute(a,l[0]),g.fromBufferAttribute(a,l[1]),v.fromBufferAttribute(a,l[2]),va.getNormal(Pl),h[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,h[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,h[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let _=0;_<3;_++){const y=(_+1)%3,x=h[_],w=h[y],M=va[u[_]],P=va[u[y]],b=`${x}_${w}`,T=`${w}_${x}`;T in f&&f[T]?(Pl.dot(f[T].normal)<=s&&(d.push(M.x,M.y,M.z),d.push(P.x,P.y,P.z)),f[T]=null):b in f||(f[b]={index0:l[_],index1:l[y],normal:Pl.clone()})}}for(const p in f)if(f[p]){const{index0:m,index1:g}=f[p];ma.fromBufferAttribute(a,m),ga.fromBufferAttribute(a,g),d.push(ma.x,ma.y,ma.z),d.push(ga.x,ga.y,ga.z)}this.setAttribute("position",new _e(d,3))}}}class Ki extends po{constructor(e){super(e),this.uuid=Zt(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new po().fromJSON(i))}return this}}const R1={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Yg(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,c,l,u,h,f,d;if(n&&(s=z1(r,e,s,t)),r.length>80*t){a=l=r[0],c=u=r[1];for(let p=t;p<i;p+=t)h=r[p],f=r[p+1],h<a&&(a=h),f<c&&(c=f),h>l&&(l=h),f>u&&(u=f);d=Math.max(l-a,u-c),d=d!==0?1/d:0}return mo(s,o,t,a,c,d),o}};function Yg(r,e,t,n,i){let s,o;if(i===j1(r,e,t,n)>0)for(s=e;s<t;s+=n)o=Ud(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=Ud(s,r[s],r[s+1],o);return o&&Rc(o,o.next)&&(vo(o),o=o.next),o}function bi(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Rc(t,t.next)||st(t.prev,t,t.next)===0)){if(vo(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function mo(r,e,t,n,i,s,o){if(!r)return;!o&&s&&G1(r,n,i,s);let a=r,c,l;for(;r.prev!==r.next;){if(c=r.prev,l=r.next,s?F1(r,n,i,s):D1(r)){e.push(c.i/t),e.push(r.i/t),e.push(l.i/t),vo(r),r=l.next,a=l.next;continue}if(r=l,r===a){o?o===1?(r=O1(bi(r),e,t),mo(r,e,t,n,i,s,2)):o===2&&N1(r,e,t,n,i,s):mo(bi(r),e,t,n,i,s,1);break}}}function D1(r){const e=r.prev,t=r,n=r.next;if(st(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(Kr(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&st(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function F1(r,e,t,n){const i=r.prev,s=r,o=r.next;if(st(i,s,o)>=0)return!1;const a=i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,c=i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,l=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,h=Eu(a,c,e,t,n),f=Eu(l,u,e,t,n);let d=r.prevZ,p=r.nextZ;for(;d&&d.z>=h&&p&&p.z<=f;){if(d!==r.prev&&d!==r.next&&Kr(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&st(d.prev,d,d.next)>=0||(d=d.prevZ,p!==r.prev&&p!==r.next&&Kr(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&st(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=h;){if(d!==r.prev&&d!==r.next&&Kr(i.x,i.y,s.x,s.y,o.x,o.y,d.x,d.y)&&st(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==r.prev&&p!==r.next&&Kr(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&st(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function O1(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Rc(i,s)&&Zg(i,n,n.next,s)&&go(i,s)&&go(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),vo(n),vo(n.next),n=r=s),n=n.next}while(n!==r);return bi(n)}function N1(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&X1(o,a)){let c=Jg(o,a);o=bi(o,o.next),c=bi(c,c.next),mo(o,e,t,n,i,s),mo(c,e,t,n,i,s);return}a=a.next}o=o.next}while(o!==r)}function z1(r,e,t,n){const i=[];let s,o,a,c,l;for(s=0,o=e.length;s<o;s++)a=e[s]*n,c=s<o-1?e[s+1]*n:r.length,l=Yg(r,a,c,n,!1),l===l.next&&(l.steiner=!0),i.push(W1(l));for(i.sort(k1),s=0;s<i.length;s++)B1(i[s],t),t=bi(t,t.next);return t}function k1(r,e){return r.x-e.x}function B1(r,e){if(e=U1(r,e),e){const t=Jg(e,r);bi(e,e.next),bi(t,t.next)}}function U1(r,e){let t=e;const n=r.x,i=r.y;let s=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const f=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=n&&f>s){if(s=f,f===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===s)return o;const a=o,c=o.x,l=o.y;let u=1/0,h;t=o;do n>=t.x&&t.x>=c&&n!==t.x&&Kr(i<l?n:s,i,c,l,i<l?s:n,i,t.x,t.y)&&(h=Math.abs(i-t.y)/(n-t.x),go(t,r)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&V1(o,t)))&&(o=t,u=h)),t=t.next;while(t!==a);return o}function V1(r,e){return st(r.prev,r,e.prev)<0&&st(e.next,r,r.next)<0}function G1(r,e,t,n){let i=r;do i.z===null&&(i.z=Eu(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,H1(i)}function H1(r){let e,t,n,i,s,o,a,c,l=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<l&&(a++,n=n.nextZ,!!n);e++);for(c=l;a>0||c>0&&n;)a!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,c--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,l*=2}while(o>1);return r}function Eu(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function W1(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Kr(r,e,t,n,i,s,o,a){return(i-o)*(e-a)-(r-o)*(s-a)>=0&&(r-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(i-o)*(n-a)>=0}function X1(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!$1(r,e)&&(go(r,e)&&go(e,r)&&q1(r,e)&&(st(r.prev,r,e.prev)||st(r,e.prev,e))||Rc(r,e)&&st(r.prev,r,r.next)>0&&st(e.prev,e,e.next)>0)}function st(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Rc(r,e){return r.x===e.x&&r.y===e.y}function Zg(r,e,t,n){const i=ya(st(r,e,t)),s=ya(st(r,e,n)),o=ya(st(t,n,r)),a=ya(st(t,n,e));return!!(i!==s&&o!==a||i===0&&_a(r,t,e)||s===0&&_a(r,n,e)||o===0&&_a(t,r,n)||a===0&&_a(t,e,n))}function _a(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function ya(r){return r>0?1:r<0?-1:0}function $1(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Zg(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function go(r,e){return st(r.prev,r,r.next)<0?st(r,e,r.next)>=0&&st(r,r.prev,e)>=0:st(r,e,r.prev)<0||st(r,r.next,e)<0}function q1(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function Jg(r,e){const t=new Cu(r.i,r.x,r.y),n=new Cu(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Ud(r,e,t,n){const i=new Cu(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function vo(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Cu(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function j1(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Pn{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Pn.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Vd(e),Gd(n,e);let o=e.length;t.forEach(Vd);for(let c=0;c<t.length;c++)i.push(o),o+=t[c].length,Gd(n,t[c]);const a=R1.triangulate(n,i);for(let c=0;c<a.length;c+=3)s.push(a.slice(c,c+3));return s}}function Vd(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Gd(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class fs extends Pe{constructor(e=new Ki([new q(.5,.5),new q(-.5,.5),new q(-.5,-.5),new q(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,c=e.length;a<c;a++){const l=e[a];o(l)}this.setAttribute("position",new _e(i,3)),this.setAttribute("uv",new _e(s,2)),this.computeVertexNormals();function o(a){const c=[],l=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:1,f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,_=t.UVGenerator!==void 0?t.UVGenerator:Y1;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let y,x=!1,w,M,P,b;v&&(y=v.getSpacedPoints(u),x=!0,f=!1,w=v.computeFrenetFrames(u,!1),M=new A,P=new A,b=new A),f||(g=0,d=0,p=0,m=0);const T=a.extractPoints(l);let I=T.shape;const F=T.holes;if(!Pn.isClockWise(I)){I=I.reverse();for(let J=0,Z=F.length;J<Z;J++){const ie=F[J];Pn.isClockWise(ie)&&(F[J]=ie.reverse())}}const j=Pn.triangulateShape(I,F),D=I;for(let J=0,Z=F.length;J<Z;J++){const ie=F[J];I=I.concat(ie)}function k(J,Z,ie){return Z||console.error("THREE.ExtrudeGeometry: vec does not exist"),Z.clone().multiplyScalar(ie).add(J)}const O=I.length,G=j.length;function $(J,Z,ie){let ye,pe,Re;const Ae=J.x-Z.x,Me=J.y-Z.y,Qe=ie.x-J.x,qe=ie.y-J.y,L=Ae*Ae+Me*Me,S=Ae*qe-Me*Qe;if(Math.abs(S)>Number.EPSILON){const H=Math.sqrt(L),te=Math.sqrt(Qe*Qe+qe*qe),re=Z.x-Me/H,me=Z.y+Ae/H,Ee=ie.x-qe/te,E=ie.y+Qe/te,ee=((Ee-re)*qe-(E-me)*Qe)/(Ae*qe-Me*Qe);ye=re+Ae*ee-J.x,pe=me+Me*ee-J.y;const ae=ye*ye+pe*pe;if(ae<=2)return new q(ye,pe);Re=Math.sqrt(ae/2)}else{let H=!1;Ae>Number.EPSILON?Qe>Number.EPSILON&&(H=!0):Ae<-Number.EPSILON?Qe<-Number.EPSILON&&(H=!0):Math.sign(Me)===Math.sign(qe)&&(H=!0),H?(ye=-Me,pe=Ae,Re=Math.sqrt(L)):(ye=Ae,pe=Me,Re=Math.sqrt(L/2))}return new q(ye/Re,pe/Re)}const z=[];for(let J=0,Z=D.length,ie=Z-1,ye=J+1;J<Z;J++,ie++,ye++)ie===Z&&(ie=0),ye===Z&&(ye=0),z[J]=$(D[J],D[ie],D[ye]);const V=[];let Q,Y=z.concat();for(let J=0,Z=F.length;J<Z;J++){const ie=F[J];Q=[];for(let ye=0,pe=ie.length,Re=pe-1,Ae=ye+1;ye<pe;ye++,Re++,Ae++)Re===pe&&(Re=0),Ae===pe&&(Ae=0),Q[ye]=$(ie[ye],ie[Re],ie[Ae]);V.push(Q),Y=Y.concat(Q)}for(let J=0;J<g;J++){const Z=J/g,ie=d*Math.cos(Z*Math.PI/2),ye=p*Math.sin(Z*Math.PI/2)+m;for(let pe=0,Re=D.length;pe<Re;pe++){const Ae=k(D[pe],z[pe],ye);Ue(Ae.x,Ae.y,-ie)}for(let pe=0,Re=F.length;pe<Re;pe++){const Ae=F[pe];Q=V[pe];for(let Me=0,Qe=Ae.length;Me<Qe;Me++){const qe=k(Ae[Me],Q[Me],ye);Ue(qe.x,qe.y,-ie)}}}const ne=p+m;for(let J=0;J<O;J++){const Z=f?k(I[J],Y[J],ne):I[J];x?(P.copy(w.normals[0]).multiplyScalar(Z.x),M.copy(w.binormals[0]).multiplyScalar(Z.y),b.copy(y[0]).add(P).add(M),Ue(b.x,b.y,b.z)):Ue(Z.x,Z.y,0)}for(let J=1;J<=u;J++)for(let Z=0;Z<O;Z++){const ie=f?k(I[Z],Y[Z],ne):I[Z];x?(P.copy(w.normals[J]).multiplyScalar(ie.x),M.copy(w.binormals[J]).multiplyScalar(ie.y),b.copy(y[J]).add(P).add(M),Ue(b.x,b.y,b.z)):Ue(ie.x,ie.y,h/u*J)}for(let J=g-1;J>=0;J--){const Z=J/g,ie=d*Math.cos(Z*Math.PI/2),ye=p*Math.sin(Z*Math.PI/2)+m;for(let pe=0,Re=D.length;pe<Re;pe++){const Ae=k(D[pe],z[pe],ye);Ue(Ae.x,Ae.y,h+ie)}for(let pe=0,Re=F.length;pe<Re;pe++){const Ae=F[pe];Q=V[pe];for(let Me=0,Qe=Ae.length;Me<Qe;Me++){const qe=k(Ae[Me],Q[Me],ye);x?Ue(qe.x,qe.y+y[u-1].y,y[u-1].x+ie):Ue(qe.x,qe.y,h+ie)}}}fe(),ge();function fe(){const J=i.length/3;if(f){let Z=0,ie=O*Z;for(let ye=0;ye<G;ye++){const pe=j[ye];Se(pe[2]+ie,pe[1]+ie,pe[0]+ie)}Z=u+g*2,ie=O*Z;for(let ye=0;ye<G;ye++){const pe=j[ye];Se(pe[0]+ie,pe[1]+ie,pe[2]+ie)}}else{for(let Z=0;Z<G;Z++){const ie=j[Z];Se(ie[2],ie[1],ie[0])}for(let Z=0;Z<G;Z++){const ie=j[Z];Se(ie[0]+O*u,ie[1]+O*u,ie[2]+O*u)}}n.addGroup(J,i.length/3-J,0)}function ge(){const J=i.length/3;let Z=0;X(D,Z),Z+=D.length;for(let ie=0,ye=F.length;ie<ye;ie++){const pe=F[ie];X(pe,Z),Z+=pe.length}n.addGroup(J,i.length/3-J,1)}function X(J,Z){let ie=J.length;for(;--ie>=0;){const ye=ie;let pe=ie-1;pe<0&&(pe=J.length-1);for(let Re=0,Ae=u+g*2;Re<Ae;Re++){const Me=O*Re,Qe=O*(Re+1),qe=Z+ye+Me,L=Z+pe+Me,S=Z+pe+Qe,H=Z+ye+Qe;Ce(qe,L,S,H)}}}function Ue(J,Z,ie){c.push(J),c.push(Z),c.push(ie)}function Se(J,Z,ie){he(J),he(Z),he(ie);const ye=i.length/3,pe=_.generateTopUV(n,i,ye-3,ye-2,ye-1);Ie(pe[0]),Ie(pe[1]),Ie(pe[2])}function Ce(J,Z,ie,ye){he(J),he(Z),he(ye),he(Z),he(ie),he(ye);const pe=i.length/3,Re=_.generateSideWallUV(n,i,pe-6,pe-3,pe-2,pe-1);Ie(Re[0]),Ie(Re[1]),Ie(Re[3]),Ie(Re[1]),Ie(Re[2]),Ie(Re[3])}function he(J){i.push(c[J*3+0]),i.push(c[J*3+1]),i.push(c[J*3+2])}function Ie(J){s.push(J.x),s.push(J.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Z1(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Dh[i.type]().fromJSON(i)),new fs(n,e.options)}}const Y1={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],a=e[n*3],c=e[n*3+1],l=e[i*3],u=e[i*3+1];return[new q(s,o),new q(a,c),new q(l,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],a=e[t*3+1],c=e[t*3+2],l=e[n*3],u=e[n*3+1],h=e[n*3+2],f=e[i*3],d=e[i*3+1],p=e[i*3+2],m=e[s*3],g=e[s*3+1],v=e[s*3+2];return Math.abs(a-u)<Math.abs(o-l)?[new q(o,1-c),new q(l,1-h),new q(f,1-p),new q(m,1-v)]:[new q(a,1-c),new q(u,1-h),new q(d,1-p),new q(g,1-v)]}};function Z1(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class ds extends In{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ds(e.radius,e.detail)}}class cr extends In{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new cr(e.radius,e.detail)}}class ps extends Pe{constructor(e=.5,t=1,n=8,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],c=[],l=[],u=[];let h=e;const f=(t-e)/i,d=new A,p=new q;for(let m=0;m<=i;m++){for(let g=0;g<=n;g++){const v=s+g/n*o;d.x=h*Math.cos(v),d.y=h*Math.sin(v),c.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let m=0;m<i;m++){const g=m*(n+1);for(let v=0;v<n;v++){const _=v+g,y=_,x=_+n+1,w=_+n+2,M=_+1;a.push(y,x,M),a.push(x,w,M)}}this.setIndex(a),this.setAttribute("position",new _e(c,3)),this.setAttribute("normal",new _e(l,3)),this.setAttribute("uv",new _e(u,2))}static fromJSON(e){return new ps(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class ms extends Pe{constructor(e=new Ki([new q(0,.5),new q(-.5,-.5),new q(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,c=0;if(Array.isArray(e)===!1)l(e);else for(let u=0;u<e.length;u++)l(e[u]),this.addGroup(a,c,u),a+=c,c=0;this.setIndex(n),this.setAttribute("position",new _e(i,3)),this.setAttribute("normal",new _e(s,3)),this.setAttribute("uv",new _e(o,2));function l(u){const h=i.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;Pn.isClockWise(d)===!1&&(d=d.reverse());for(let g=0,v=p.length;g<v;g++){const _=p[g];Pn.isClockWise(_)===!0&&(p[g]=_.reverse())}const m=Pn.triangulateShape(d,p);for(let g=0,v=p.length;g<v;g++){const _=p[g];d=d.concat(_)}for(let g=0,v=d.length;g<v;g++){const _=d[g];i.push(_.x,_.y,0),s.push(0,0,1),o.push(_.x,_.y)}for(let g=0,v=m.length;g<v;g++){const _=m[g],y=_[0]+h,x=_[1]+h,w=_[2]+h;n.push(y,x,w),c+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return J1(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new ms(n,e.curveSegments)}}function J1(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class lr extends Pe{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const u=[],h=new A,f=new A,d=[],p=[],m=[],g=[];for(let v=0;v<=n;v++){const _=[],y=v/n;let x=0;v==0&&o==0?x=.5/t:v==n&&c==Math.PI&&(x=-.5/t);for(let w=0;w<=t;w++){const M=w/t;h.x=-e*Math.cos(i+M*s)*Math.sin(o+y*a),h.y=e*Math.cos(o+y*a),h.z=e*Math.sin(i+M*s)*Math.sin(o+y*a),p.push(h.x,h.y,h.z),f.copy(h).normalize(),m.push(f.x,f.y,f.z),g.push(M+x,1-y),_.push(l++)}u.push(_)}for(let v=0;v<n;v++)for(let _=0;_<t;_++){const y=u[v][_+1],x=u[v][_],w=u[v+1][_],M=u[v+1][_+1];(v!==0||o>0)&&d.push(y,x,M),(v!==n-1||c<Math.PI)&&d.push(x,w,M)}this.setIndex(d),this.setAttribute("position",new _e(p,3)),this.setAttribute("normal",new _e(m,3)),this.setAttribute("uv",new _e(g,2))}static fromJSON(e){return new lr(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class gs extends In{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new gs(e.radius,e.detail)}}class vs extends Pe{constructor(e=1,t=.4,n=8,i=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],c=[],l=[],u=new A,h=new A,f=new A;for(let d=0;d<=n;d++)for(let p=0;p<=i;p++){const m=p/i*s,g=d/n*Math.PI*2;h.x=(e+t*Math.cos(g))*Math.cos(m),h.y=(e+t*Math.cos(g))*Math.sin(m),h.z=t*Math.sin(g),a.push(h.x,h.y,h.z),u.x=e*Math.cos(m),u.y=e*Math.sin(m),f.subVectors(h,u).normalize(),c.push(f.x,f.y,f.z),l.push(p/i),l.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=i;p++){const m=(i+1)*d+p-1,g=(i+1)*(d-1)+p-1,v=(i+1)*(d-1)+p,_=(i+1)*d+p;o.push(m,g,_),o.push(g,v,_)}this.setIndex(o),this.setAttribute("position",new _e(a,3)),this.setAttribute("normal",new _e(c,3)),this.setAttribute("uv",new _e(l,2))}static fromJSON(e){return new vs(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class _s extends Pe{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],l=[],u=[],h=new A,f=new A,d=new A,p=new A,m=new A,g=new A,v=new A;for(let y=0;y<=n;++y){const x=y/n*s*Math.PI*2;_(x,s,o,e,d),_(x+.01,s,o,e,p),g.subVectors(p,d),v.addVectors(p,d),m.crossVectors(g,v),v.crossVectors(m,g),m.normalize(),v.normalize();for(let w=0;w<=i;++w){const M=w/i*Math.PI*2,P=-t*Math.cos(M),b=t*Math.sin(M);h.x=d.x+(P*v.x+b*m.x),h.y=d.y+(P*v.y+b*m.y),h.z=d.z+(P*v.z+b*m.z),c.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),l.push(f.x,f.y,f.z),u.push(y/n),u.push(w/i)}}for(let y=1;y<=n;y++)for(let x=1;x<=i;x++){const w=(i+1)*(y-1)+(x-1),M=(i+1)*y+(x-1),P=(i+1)*y+x,b=(i+1)*(y-1)+x;a.push(w,M,b),a.push(M,P,b)}this.setIndex(a),this.setAttribute("position",new _e(c,3)),this.setAttribute("normal",new _e(l,3)),this.setAttribute("uv",new _e(u,2));function _(y,x,w,M,P){const b=Math.cos(y),T=Math.sin(y),I=w/x*y,F=Math.cos(I);P.x=M*(2+F)*.5*b,P.y=M*(2+F)*T*.5,P.z=M*Math.sin(I)*.5}}static fromJSON(e){return new _s(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ys extends Pe{constructor(e=new Ih(new A(-1,-1,0),new A(-1,1,0),new A(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new A,c=new A,l=new q;let u=new A;const h=[],f=[],d=[],p=[];m(),this.setIndex(p),this.setAttribute("position",new _e(h,3)),this.setAttribute("normal",new _e(f,3)),this.setAttribute("uv",new _e(d,2));function m(){for(let y=0;y<t;y++)g(y);g(s===!1?t:0),_(),v()}function g(y){u=e.getPointAt(y/t,u);const x=o.normals[y],w=o.binormals[y];for(let M=0;M<=i;M++){const P=M/i*Math.PI*2,b=Math.sin(P),T=-Math.cos(P);c.x=T*x.x+b*w.x,c.y=T*x.y+b*w.y,c.z=T*x.z+b*w.z,c.normalize(),f.push(c.x,c.y,c.z),a.x=u.x+n*c.x,a.y=u.y+n*c.y,a.z=u.z+n*c.z,h.push(a.x,a.y,a.z)}}function v(){for(let y=1;y<=t;y++)for(let x=1;x<=i;x++){const w=(i+1)*(y-1)+(x-1),M=(i+1)*y+(x-1),P=(i+1)*y+x,b=(i+1)*(y-1)+x;p.push(w,M,b),p.push(M,P,b)}}function _(){for(let y=0;y<=t;y++)for(let x=0;x<=i;x++)l.x=y/t,l.y=x/i,d.push(l.x,l.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ys(new Dh[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Kg extends Pe{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new A,s=new A;if(e.index!==null){const o=e.attributes.position,a=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:a.count,materialIndex:0}]);for(let l=0,u=c.length;l<u;++l){const h=c[l],f=h.start,d=h.count;for(let p=f,m=f+d;p<m;p+=3)for(let g=0;g<3;g++){const v=a.getX(p+g),_=a.getX(p+(g+1)%3);i.fromBufferAttribute(o,v),s.fromBufferAttribute(o,_),Hd(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,c=o.count/3;a<c;a++)for(let l=0;l<3;l++){const u=3*a+l,h=3*a+(l+1)%3;i.fromBufferAttribute(o,u),s.fromBufferAttribute(o,h),Hd(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new _e(t,3))}}}function Hd(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Wd=Object.freeze({__proto__:null,BoxGeometry:jn,BoxBufferGeometry:jn,CapsuleGeometry:cs,CapsuleBufferGeometry:cs,CircleGeometry:ls,CircleBufferGeometry:ls,ConeGeometry:us,ConeBufferGeometry:us,CylinderGeometry:xi,CylinderBufferGeometry:xi,DodecahedronGeometry:hs,DodecahedronBufferGeometry:hs,EdgesGeometry:jg,ExtrudeGeometry:fs,ExtrudeBufferGeometry:fs,IcosahedronGeometry:ds,IcosahedronBufferGeometry:ds,LatheGeometry:ar,LatheBufferGeometry:ar,OctahedronGeometry:cr,OctahedronBufferGeometry:cr,PlaneGeometry:sr,PlaneBufferGeometry:sr,PolyhedronGeometry:In,PolyhedronBufferGeometry:In,RingGeometry:ps,RingBufferGeometry:ps,ShapeGeometry:ms,ShapeBufferGeometry:ms,SphereGeometry:lr,SphereBufferGeometry:lr,TetrahedronGeometry:gs,TetrahedronBufferGeometry:gs,TorusGeometry:vs,TorusBufferGeometry:vs,TorusKnotGeometry:_s,TorusKnotBufferGeometry:_s,TubeGeometry:ys,TubeBufferGeometry:ys,WireframeGeometry:Kg});class Qg extends Ct{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new oe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class e0 extends Ot{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Fh extends Ct{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new oe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mi,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class t0 extends Fh{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new q(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ht(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new oe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new oe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new oe(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class eo extends Ct{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new oe(16777215),this.specular=new oe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mi,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=nr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class n0 extends Ct{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new oe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mi,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class i0 extends Ct{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mi,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Oh extends Ct{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=nr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class r0 extends Ct{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new oe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mi,this.normalScale=new q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class s0 extends Pt{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}const tt={arraySlice:function(r,e,t){return tt.isTypedArray(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let c=0;c!==e;++c)i[o++]=r[a+c]}return i},flattenJSON:function(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)},subclip:function(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let c=0;c<s.tracks.length;++c){const l=s.tracks[c],u=l.getValueSize(),h=[],f=[];for(let d=0;d<l.times.length;++d){const p=l.times[d]*i;if(!(p<t||p>=n)){h.push(l.times[d]);for(let m=0;m<u;++m)f.push(l.values[d*u+m])}}h.length!==0&&(l.times=tt.convertArray(h,l.times.constructor),l.values=tt.convertArray(f,l.values.constructor),o.push(l))}s.tracks=o;let a=1/0;for(let c=0;c<s.tracks.length;++c)a>s.tracks[c].times[0]&&(a=s.tracks[c].times[0]);for(let c=0;c<s.tracks.length;++c)s.tracks[c].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const l=r.tracks.find(function(v){return v.name===a.name&&v.ValueTypeName===c});if(l===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let m;if(s<=a.times[0]){const v=u,_=h-u;m=tt.arraySlice(a.values,v,_)}else if(s>=a.times[p]){const v=p*h+u,_=v+h-u;m=tt.arraySlice(a.values,v,_)}else{const v=a.createInterpolant(),_=u,y=h-u;v.evaluate(s),m=tt.arraySlice(v.resultBuffer,_,y)}c==="quaternion"&&new _t().fromArray(m).normalize().conjugate().toArray(m);const g=l.times.length;for(let v=0;v<g;++v){const _=v*d+f;if(c==="quaternion")_t.multiplyQuaternionsFlat(l.values,_,m,0,l.values,_);else{const y=d-f*2;for(let x=0;x<y;++x)l.values[_+x]-=m[x]}}}return r.blendMode=mh,r}};class Io{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let c=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===c)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class o0 extends Io{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Hi,endingEnd:Hi}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],c=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Wi:s=e,a=2*t-n;break;case lo:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(c===void 0)switch(this.getSettings_().endingEnd){case Wi:o=e,c=2*n-t;break;case lo:o=1,c=n+i[1]-i[0];break;default:o=e-1,c=t}const l=(n-t)*.5,u=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(c-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,l=c-a,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),m=p*p,g=m*p,v=-f*g+2*f*m-f*p,_=(1+f)*g+(-1.5-2*f)*m+(-.5+f)*p+1,y=(-1-d)*g+(1.5+d)*m+.5*p,x=d*g-d*m;for(let w=0;w!==a;++w)s[w]=v*o[u+w]+_*o[l+w]+y*o[c+w]+x*o[h+w];return s}}class Nh extends Io{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,l=c-a,u=(n-t)/(i-t),h=1-u;for(let f=0;f!==a;++f)s[f]=o[l+f]*h+o[c+f]*u;return s}}class a0 extends Io{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class bn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=tt.convertArray(t,this.TimeBufferType),this.values=tt.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:tt.convertArray(e.times,Array),values:tt.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new a0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Nh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new o0(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ao:t=this.InterpolantFactoryMethodDiscrete;break;case co:t=this.InterpolantFactoryMethodLinear;break;case ka:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ao;case this.InterpolantFactoryMethodLinear:return co;case this.InterpolantFactoryMethodSmooth:return ka}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=tt.arraySlice(n,s,o),this.values=tt.arraySlice(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const c=n[a];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,c),e=!1;break}if(o!==null&&o>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,c,o),e=!1;break}o=c}if(i!==void 0&&tt.isTypedArray(i))for(let a=0,c=i.length;a!==c;++a){const l=i[a];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,l),e=!1;break}}return e}optimize(){const e=tt.arraySlice(this.times),t=tt.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===ka,s=e.length-1;let o=1;for(let a=1;a<s;++a){let c=!1;const l=e[a],u=e[a+1];if(l!==u&&(a!==1||l!==e[0]))if(i)c=!0;else{const h=a*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const m=t[h+p];if(m!==t[f+p]||m!==t[d+p]){c=!0;break}}}if(c){if(a!==o){e[o]=e[a];const h=a*n,f=o*n;for(let d=0;d!==n;++d)t[f+d]=t[h+d]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,c=o*n,l=0;l!==n;++l)t[c+l]=t[a+l];++o}return o!==e.length?(this.times=tt.arraySlice(e,0,o),this.values=tt.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=tt.arraySlice(this.times,0),t=tt.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}bn.prototype.TimeBufferType=Float32Array;bn.prototype.ValueBufferType=Float32Array;bn.prototype.DefaultInterpolation=co;class vr extends bn{}vr.prototype.ValueTypeName="bool";vr.prototype.ValueBufferType=Array;vr.prototype.DefaultInterpolation=ao;vr.prototype.InterpolantFactoryMethodLinear=void 0;vr.prototype.InterpolantFactoryMethodSmooth=void 0;class zh extends bn{}zh.prototype.ValueTypeName="color";class xs extends bn{}xs.prototype.ValueTypeName="number";class c0 extends Io{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=(n-t)/(i-t);let l=e*a;for(let u=l+a;l!==u;l+=4)_t.slerpFlat(s,0,o,l-a,o,l,c);return s}}class _r extends bn{InterpolantFactoryMethodLinear(e){return new c0(this.times,this.values,this.getValueSize(),e)}}_r.prototype.ValueTypeName="quaternion";_r.prototype.DefaultInterpolation=co;_r.prototype.InterpolantFactoryMethodSmooth=void 0;class yr extends bn{}yr.prototype.ValueTypeName="string";yr.prototype.ValueBufferType=Array;yr.prototype.DefaultInterpolation=ao;yr.prototype.InterpolantFactoryMethodLinear=void 0;yr.prototype.InterpolantFactoryMethodSmooth=void 0;class bs extends bn{}bs.prototype.ValueTypeName="vector";class ur{constructor(e,t=-1,n,i=xc){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Zt(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(Q1(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(bn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let c=[],l=[];c.push((a+s-1)%s,a,(a+1)%s),l.push(0,1,0);const u=tt.getKeyframeOrder(c);c=tt.sortedArray(c,1,u),l=tt.sortedArray(l,1,u),!i&&c[0]===0&&(c.push(s),l.push(l[0])),o.push(new xs(".morphTargetInfluences["+t[a].name+"]",c,l).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,c=e.length;a<c;a++){const l=e[a],u=l.name.match(s);if(u&&u.length>1){const h=u[1];let f=i[h];f||(i[h]=f=[]),f.push(l)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,m){if(d.length!==0){const g=[],v=[];tt.flattenJSON(d,g,v,p),g.length!==0&&m.push(new h(f,g,v))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let c=e.length||-1;const l=e.hierarchy||[];for(let h=0;h<l.length;h++){const f=l[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let m=0;m<f[p].morphTargets.length;m++)d[f[p].morphTargets[m]]=-1;for(const m in d){const g=[],v=[];for(let _=0;_!==f[p].morphTargets.length;++_){const y=f[p];g.push(y.time),v.push(y.morphTarget===m?1:0)}i.push(new xs(".morphTargetInfluence["+m+"]",g,v))}c=d.length*o}else{const d=".bones["+t[h].name+"]";n(bs,d+".position",f,"pos",i),n(_r,d+".quaternion",f,"rot",i),n(bs,d+".scale",f,"scl",i)}}return i.length===0?null:new this(s,c,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function K1(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return xs;case"vector":case"vector2":case"vector3":case"vector4":return bs;case"color":return zh;case"quaternion":return _r;case"bool":case"boolean":return vr;case"string":return yr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function Q1(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=K1(r.type);if(r.times===void 0){const t=[],n=[];tt.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const hr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class kh{constructor(e,t,n){const i=this;let s=!1,o=0,a=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,h){return l.push(u,h),this},this.removeHandler=function(u){const h=l.indexOf(u);return h!==-1&&l.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=l.length;h<f;h+=2){const d=l[h],p=l[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const l0=new kh;class Wt{constructor(e){this.manager=e!==void 0?e:l0,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Un={};class Rn extends Wt{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=hr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Un[e]!==void 0){Un[e].push({onLoad:t,onProgress:n,onError:i});return}Un[e]=[],Un[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,c=this.responseType;fetch(o).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const u=Un[e],h=l.body.getReader(),f=l.headers.get("Content-Length"),d=f?parseInt(f):0,p=d!==0;let m=0;const g=new ReadableStream({start(v){_();function _(){h.read().then(({done:y,value:x})=>{if(y)v.close();else{m+=x.byteLength;const w=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:d});for(let M=0,P=u.length;M<P;M++){const b=u[M];b.onProgress&&b.onProgress(w)}v.enqueue(x),_()}})}}});return new Response(g)}else throw Error(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`)}).then(l=>{switch(c){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return l.json();default:if(a===void 0)return l.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return l.arrayBuffer().then(p=>d.decode(p))}}}).then(l=>{hr.add(e,l);const u=Un[e];delete Un[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(l)}}).catch(l=>{const u=Un[e];if(u===void 0)throw this.manager.itemError(e),l;delete Un[e];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(l)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class eS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Rn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=ur.parse(e[n]);t.push(i)}return t}}class tS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],a=new Gg,c=new Rn(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(s.withCredentials);let l=0;function u(h){c.load(e[h],function(f){const d=s.parse(f,!0);o[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},l+=1,l===6&&(d.mipmapCount===1&&(a.minFilter=rt),a.image=o,a.format=d.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else c.load(e,function(h){const f=s.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){o[p]={mipmaps:[]};for(let m=0;m<f.mipmapCount;m++)o[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+m]),o[p].format=f.format,o[p].width=f.width,o[p].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=rt),a.format=f.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class _o extends Wt{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=hr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=ho("img");function c(){u(),hr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function l(h){u(),i&&i(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",c,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",l,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class u0 extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=new Po,o=new _o(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function c(l){o.load(e[l],function(u){s.images[l]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let l=0;l<e.length;++l)c(l);return s}}class nS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ji,a=new Rn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(c){const l=s.parse(c);!l||(l.image!==void 0?o.image=l.image:l.data!==void 0&&(o.image.width=l.width,o.image.height=l.height,o.image.data=l.data),o.wrapS=l.wrapS!==void 0?l.wrapS:St,o.wrapT=l.wrapT!==void 0?l.wrapT:St,o.magFilter=l.magFilter!==void 0?l.magFilter:rt,o.minFilter=l.minFilter!==void 0?l.minFilter:rt,o.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.encoding!==void 0&&(o.encoding=l.encoding),l.flipY!==void 0&&(o.flipY=l.flipY),l.format!==void 0&&(o.format=l.format),l.type!==void 0&&(o.type=l.type),l.mipmaps!==void 0&&(o.mipmaps=l.mipmaps,o.minFilter=dr),l.mipmapCount===1&&(o.minFilter=rt),l.generateMipmaps!==void 0&&(o.generateMipmaps=l.generateMipmaps),o.needsUpdate=!0,t&&t(o,l))},n,i),o}}class xr extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=new pt,o=new _o(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Ai extends Xe{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new oe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class h0 extends Ai{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Xe.DefaultUp),this.updateMatrix(),this.groundColor=new oe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Xd=new xe,$d=new A,qd=new A;class Bh{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new q(512,512),this.map=null,this.mapPass=null,this.matrix=new xe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ac,this._frameExtents=new q(1,1),this._viewportCount=1,this._viewports=[new He(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;$d.setFromMatrixPosition(e.matrixWorld),t.position.copy($d),qd.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(qd),t.updateMatrixWorld(),Xd.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Xd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class iS extends Bh{constructor(){super(new xt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=uo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Uh extends Ai{constructor(e,t,n=0,i=Math.PI/3,s=0,o=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Xe.DefaultUp),this.updateMatrix(),this.target=new Xe,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.shadow=new iS}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const jd=new xe,$s=new A,Ll=new A;class rS extends Bh{constructor(){super(new xt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new q(4,2),this._viewportCount=6,this._viewports=[new He(2,1,1,1),new He(0,1,1,1),new He(3,1,1,1),new He(1,1,1,1),new He(3,0,1,1),new He(1,0,1,1)],this._cubeDirections=[new A(1,0,0),new A(-1,0,0),new A(0,0,1),new A(0,0,-1),new A(0,1,0),new A(0,-1,0)],this._cubeUps=[new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,0,1),new A(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),$s.setFromMatrixPosition(e.matrixWorld),n.position.copy($s),Ll.copy(n.position),Ll.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Ll),n.updateMatrixWorld(),i.makeTranslation(-$s.x,-$s.y,-$s.z),jd.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(jd)}}class yo extends Ai{constructor(e,t,n=0,i=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new rS}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class sS extends Bh{constructor(){super(new gr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Dc extends Ai{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Xe.DefaultUp),this.updateMatrix(),this.target=new Xe,this.shadow=new sS}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Fc extends Ai{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class f0 extends Ai{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class d0{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new A)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Oc extends Ai{constructor(e=new d0,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Nc extends Wt{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,o=new Rn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Nc.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new oe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new oe().setHex(o.value);break;case"v2":i.uniforms[s].value=new q().fromArray(o.value);break;case"v3":i.uniforms[s].value=new A().fromArray(o.value);break;case"v4":i.uniforms[s].value=new He().fromArray(o.value);break;case"m3":i.uniforms[s].value=new Ft().fromArray(o.value);break;case"m4":i.uniforms[s].value=new xe().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new q().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new q().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Qg,SpriteMaterial:Sh,RawShaderMaterial:e0,ShaderMaterial:Ot,PointsMaterial:Th,MeshPhysicalMaterial:t0,MeshStandardMaterial:Fh,MeshPhongMaterial:eo,MeshToonMaterial:n0,MeshNormalMaterial:i0,MeshLambertMaterial:Oh,MeshDepthMaterial:xh,MeshDistanceMaterial:bh,MeshBasicMaterial:Si,MeshMatcapMaterial:r0,LineDashedMaterial:s0,LineBasicMaterial:Pt,Material:Ct};return new t[e]}}class ws{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class p0 extends Pe{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class m0 extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Rn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(d,p){if(t[p]!==void 0)return t[p];const g=d.interleavedBuffers[p],v=s(d,g.buffer),_=Zr(g.type,v),y=new Pc(_,g.stride);return y.uuid=g.uuid,t[p]=y,y}function s(d,p){if(n[p]!==void 0)return n[p];const g=d.arrayBuffers[p],v=new Uint32Array(g).buffer;return n[p]=v,v}const o=e.isInstancedBufferGeometry?new p0:new Pe,a=e.data.index;if(a!==void 0){const d=Zr(a.type,a.array);o.setIndex(new et(d,1))}const c=e.data.attributes;for(const d in c){const p=c[d];let m;if(p.isInterleavedBufferAttribute){const g=i(e.data,p.data);m=new or(g,p.itemSize,p.offset,p.normalized)}else{const g=Zr(p.type,p.array),v=p.isInstancedBufferAttribute?as:et;m=new v(g,p.itemSize,p.normalized)}p.name!==void 0&&(m.name=p.name),p.usage!==void 0&&m.setUsage(p.usage),p.updateRange!==void 0&&(m.updateRange.offset=p.updateRange.offset,m.updateRange.count=p.updateRange.count),o.setAttribute(d,m)}const l=e.data.morphAttributes;if(l)for(const d in l){const p=l[d],m=[];for(let g=0,v=p.length;g<v;g++){const _=p[g];let y;if(_.isInterleavedBufferAttribute){const x=i(e.data,_.data);y=new or(x,_.itemSize,_.offset,_.normalized)}else{const x=Zr(_.type,_.array);y=new et(x,_.itemSize,_.normalized)}_.name!==void 0&&(y.name=_.name),m.push(y)}o.morphAttributes[d]=m}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const m=h[d];o.addGroup(m.start,m.count,m.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new A;f.center!==void 0&&d.fromArray(f.center),o.boundingSphere=new mr(d,f.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class oS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?ws.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Rn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){let l=null;try{l=JSON.parse(c)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=l.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(l,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?ws.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Rn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),c=a.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(l)}),a=this.parseTextures(e.textures,o),c=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,s,c,a,n),u=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,u),t!==void 0){let h=!1;for(const f in o)if(o[f].data instanceof HTMLImageElement){h=!0;break}h===!1&&t(l)}return l}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,i,a,o,t),l=this.parseSkeletons(e.skeletons,c);return this.bindSkeletons(c,l),c}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Ki().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new Lo().fromJSON(e[s],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new m0;for(let s=0,o=e.length;s<o;s++){let a;const c=e[s];switch(c.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(c);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:c.type in Wd?a=Wd[c.type].fromJSON(c,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${c.type}"`)}a.uuid=c.uuid,c.name!==void 0&&(a.name=c.name),a.isBufferGeometry===!0&&c.userData!==void 0&&(a.userData=c.userData),n[c.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Nc;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const c=e[o];if(c.type==="MultiMaterial"){const l=[];for(let u=0;u<c.materials.length;u++){const h=c.materials[u];n[h.uuid]===void 0&&(n[h.uuid]=s.parse(h)),l.push(n[h.uuid])}i[c.uuid]=l}else n[c.uuid]===void 0&&(n[c.uuid]=s.parse(c)),i[c.uuid]=n[c.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=ur.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(c){return n.manager.itemStart(c),s.load(c,function(){n.manager.itemEnd(c)},void 0,function(){n.manager.itemError(c),n.manager.itemEnd(c)})}function a(c){if(typeof c=="string"){const l=c,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l)?l:n.resourcePath+l;return o(u)}else return c.data?{data:Zr(c.type,c.data),width:c.width,height:c.height}:null}if(e!==void 0&&e.length>0){const c=new kh(t);s=new _o(c),s.setCrossOrigin(this.crossOrigin);for(let l=0,u=e.length;l<u;l++){const h=e[l],f=h.url;if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=a(g);v!==null&&(v instanceof HTMLImageElement?d.push(v):d.push(new Ji(v.data,v.width,v.height)))}i[h.uuid]=new Xi(d)}else{const d=a(h.url);i[h.uuid]=new Xi(d)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(c)}else return o.data?{data:Zr(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new _o(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const c=e[o],l=c.url;if(Array.isArray(l)){const u=[];for(let h=0,f=l.length;h<f;h++){const d=l[h],p=await s(d);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new Ji(p.data,p.width,p.height)))}n[c.uuid]=new Xi(u)}else{const u=await s(c.url);n[c.uuid]=new Xi(u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const c=t[a.image],l=c.data;let u;Array.isArray(l)?(u=new Po,l.length===6&&(u.needsUpdate=!0)):(l&&l.data?u=new Ji:u=new pt,l&&(u.needsUpdate=!0)),u.source=c,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,aS)),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],Yd),u.wrapT=n(a.wrap[1],Yd)),a.format!==void 0&&(u.format=a.format),a.type!==void 0&&(u.type=a.type),a.encoding!==void 0&&(u.encoding=a.encoding),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,Zd)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,Zd)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(e,t,n,i,s){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function c(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,m=f.length;p<m;p++){const g=f[p];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),d.push(n[g])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function l(f){return i[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),i[f]}let u,h;switch(e.type){case"Scene":o=new Mh,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new oe(e.background):o.background=l(e.background)),e.environment!==void 0&&(o.environment=l(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Cc(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Ec(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new xt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new gr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Fc(e.color,e.intensity);break;case"DirectionalLight":o=new Dc(e.color,e.intensity);break;case"PointLight":o=new yo(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new f0(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Uh(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new h0(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Oc().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=c(e.material),o=new Ah(u,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=c(e.material),o=new bt(u,h);break;case"InstancedMesh":u=a(e.geometry),h=c(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;o=new Ug(u,h,f),o.instanceMatrix=new as(new Float32Array(d.array),16),p!==void 0&&(o.instanceColor=new as(new Float32Array(p.array),p.itemSize));break;case"LOD":o=new Bg;break;case"Line":o=new Yn(a(e.geometry),c(e.material));break;case"LineLoop":o=new Vg(a(e.geometry),c(e.material));break;case"LineSegments":o=new Fn(a(e.geometry),c(e.material));break;case"PointCloud":case"Points":o=new Eh(a(e.geometry),c(e.material));break;case"Sprite":o=new kg(c(e.material));break;case"Group":o=new fi;break;case"Bone":o=new fo;break;default:o=new Xe}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)o.add(this.parseObject(f[d],t,n,i,s))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];o.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],m=o.getObjectByProperty("uuid",p.object);m!==void 0&&o.addLevel(m,p.distance)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const aS={UVMapping:yc,CubeReflectionMapping:gi,CubeRefractionMapping:vi,EquirectangularReflectionMapping:rs,EquirectangularRefractionMapping:so,CubeUVReflectionMapping:Es},Yd={RepeatWrapping:ir,ClampToEdgeWrapping:St,MirroredRepeatWrapping:oo},Zd={NearestFilter:ut,NearestMipmapNearestFilter:ic,NearestMipmapLinearFilter:rc,LinearFilter:rt,LinearMipmapNearestFilter:hh,LinearMipmapLinearFilter:dr};class cS extends Wt{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=hr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){hr.add(e,c),t&&t(c),s.manager.itemEnd(e)}).catch(function(c){i&&i(c),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let xa;const Vh={getContext:function(){return xa===void 0&&(xa=new(window.AudioContext||window.webkitAudioContext)),xa},setContext:function(r){xa=r}};class lS extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Rn(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const c=a.slice(0);Vh.getContext().decodeAudioData(c,function(u){t(u)})}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}}class uS extends Oc{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new oe().set(e),s=new oe().set(t),o=new A(i.r,i.g,i.b),a=new A(s.r,s.g,s.b),c=Math.sqrt(Math.PI),l=c*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(c),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(l)}}class hS extends Oc{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new oe().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const Jd=new xe,Kd=new xe,Ii=new xe;class fS{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new xt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new xt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ii.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(Yi*t.fov*.5)/t.zoom;let a,c;Kd.elements[12]=-i,Jd.elements[12]=i,a=-o*t.aspect+s,c=o*t.aspect+s,Ii.elements[0]=2*t.near/(c-a),Ii.elements[8]=(c+a)/(c-a),this.cameraL.projectionMatrix.copy(Ii),a=-o*t.aspect-s,c=o*t.aspect-s,Ii.elements[0]=2*t.near/(c-a),Ii.elements[8]=(c+a)/(c-a),this.cameraR.projectionMatrix.copy(Ii)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Kd),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Jd)}}class zc{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Qd(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Qd();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Qd(){return(typeof performance>"u"?Date:performance).now()}const Ri=new A,ep=new _t,dS=new A,Di=new A;class pS extends Xe{constructor(){super(),this.type="AudioListener",this.context=Vh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new zc}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ri,ep,dS),Di.set(0,0,-1).applyQuaternion(ep),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ri.x,i),t.positionY.linearRampToValueAtTime(Ri.y,i),t.positionZ.linearRampToValueAtTime(Ri.z,i),t.forwardX.linearRampToValueAtTime(Di.x,i),t.forwardY.linearRampToValueAtTime(Di.y,i),t.forwardZ.linearRampToValueAtTime(Di.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Ri.x,Ri.y,Ri.z),t.setOrientation(Di.x,Di.y,Di.z,n.x,n.y,n.z)}}class g0 extends Xe{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Fi=new A,tp=new _t,mS=new A,Oi=new A;class gS extends g0{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Fi,tp,mS),Oi.set(0,0,1).applyQuaternion(tp);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Fi.x,n),t.positionY.linearRampToValueAtTime(Fi.y,n),t.positionZ.linearRampToValueAtTime(Fi.z,n),t.orientationX.linearRampToValueAtTime(Oi.x,n),t.orientationY.linearRampToValueAtTime(Oi.y,n),t.orientationZ.linearRampToValueAtTime(Oi.z,n)}else t.setPosition(Fi.x,Fi.y,Fi.z),t.setOrientation(Oi.x,Oi.y,Oi.z)}}class vS{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class v0{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,l=t+t;c!==l;++c)if(n[c]!==n[c+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){_t.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;_t.multiplyQuaternionsFlat(e,o,e,t,e,n),_t.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const c=t+a;e[c]=e[c]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const Gh="\\[\\]\\.:\\/",_S=new RegExp("["+Gh+"]","g"),Hh="[^"+Gh+"]",yS="[^"+Gh.replace("\\.","")+"]",xS=/((?:WC+[\/:])*)/.source.replace("WC",Hh),bS=/(WCOD+)?/.source.replace("WCOD",yS),wS=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Hh),MS=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Hh),SS=new RegExp("^"+xS+bS+wS+MS+"$"),AS=["material","materials","bones"];class TS{constructor(e,t,n){const i=n||Be.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Be{constructor(e,t,n){this.path=t,this.parsedPath=n||Be.parseTrackName(t),this.node=Be.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Be.Composite(e,t,n):new Be(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(_S,"")}static parseTrackName(e){const t=SS.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);AS.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const c=n(a.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Be.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let l=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===l){l=u;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(l!==void 0){if(e[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[l]}}const o=e[i];if(o===void 0){const l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}c=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(c=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Be.Composite=TS;Be.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Be.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Be.prototype.GetterByBindingType=[Be.prototype._getValue_direct,Be.prototype._getValue_array,Be.prototype._getValue_arrayElement,Be.prototype._getValue_toArray];Be.prototype.SetterByBindingTypeAndVersioning=[[Be.prototype._setValue_direct,Be.prototype._setValue_direct_setNeedsUpdate,Be.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Be.prototype._setValue_array,Be.prototype._setValue_array_setNeedsUpdate,Be.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Be.prototype._setValue_arrayElement,Be.prototype._setValue_arrayElement_setNeedsUpdate,Be.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Be.prototype._setValue_fromArray,Be.prototype._setValue_fromArray_setNeedsUpdate,Be.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class ES{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Zt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,c=e.length,l=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=c++,t[d]=p,e.push(f);for(let m=0,g=o;m!==g;++m)s[m].push(new Be(f,n[m],i[m]))}else if(p<l){a=e[p];const m=--l,g=e[m];t[g.uuid]=p,e[p]=g,t[d]=m,e[m]=f;for(let v=0,_=o;v!==_;++v){const y=s[v],x=y[m];let w=y[p];y[p]=x,w===void 0&&(w=new Be(f,n[v],i[v])),y[m]=w}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const c=arguments[o],l=c.uuid,u=t[l];if(u!==void 0&&u>=s){const h=s++,f=e[h];t[f.uuid]=u,e[u]=f,t[l]=h,e[h]=c;for(let d=0,p=i;d!==p;++d){const m=n[d],g=m[h],v=m[u];m[u]=g,m[h]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,c=arguments.length;a!==c;++a){const l=arguments[a],u=l.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<s){const f=--s,d=e[f],p=--o,m=e[p];t[d.uuid]=h,e[h]=d,t[m.uuid]=f,e[f]=m,e.pop();for(let g=0,v=i;g!==v;++g){const _=n[g],y=_[f],x=_[p];_[h]=y,_[f]=x,_.pop()}}else{const f=--o,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,m=i;p!==m;++p){const g=n[p];g[h]=g[f],g.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,c=this._objects,l=c.length,u=this.nCachedObjects_,h=new Array(l);i=s.length,n[e]=i,o.push(e),a.push(t),s.push(h);for(let f=u,d=c.length;f!==d;++f){const p=c[f];h[f]=new Be(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,c=o[a],l=e[a];t[l]=n,o[n]=c,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class CS{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),c={endingStart:Hi,endingEnd:Hi};for(let l=0;l!==o;++l){const u=s[l].createInterpolant(null);a[l]=u,u.settings=c}this._interpolantSettings=c,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ph,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,a=i/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const c=a.parameterPositions,l=a.sampleValues;return c[0]=s,c[1]=s+n,l[0]=e/o,l[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const c=(e-s)*n;if(c<0||n===0)return;this._startTime=null,t=n*c}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const c=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case mh:for(let u=0,h=c.length;u!==h;++u)c[u].evaluate(o),l[u].accumulateAdditive(a);break;case xc:default:for(let u=0,h=c.length;u!==h;++u)c[u].evaluate(o),l[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===vg;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===gg){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const c=this.repetitions-s;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const l=e<0;this._setEndings(l,!l,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Wi,i.endingEnd=Wi):(e?i.endingStart=this.zeroSlopeAtStart?Wi:Hi:i.endingStart=lo,t?i.endingEnd=this.zeroSlopeAtEnd?Wi:Hi:i.endingEnd=lo)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=s,c[0]=t,a[1]=s+e,c[1]=n,this}}const PS=new Float32Array(1);class _0 extends Kn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,c=n.uuid,l=this._bindingsByRootAndName;let u=l[c];u===void 0&&(u={},l[c]=u);for(let h=0;h!==s;++h){const f=i[h],d=f.name;let p=u[d];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,c,d));continue}const m=t&&t._propertyBindings[h].binding.parsedPath;p=new v0(Be.create(n,d,m),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,c,d),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],c=a.knownActions,l=c[c.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,c[u]=l,c.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],c.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],c=t[t.length-1],l=e._cacheIndex;c._cacheIndex=l,t[l]=c,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Nh(new Float32Array(2),new Float32Array(2),1,PS),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?ur.findByName(i,e):e;const a=o!==null?o.uuid:e,c=this._actionsByClip[a];let l=null;if(n===void 0&&(o!==null?n=o.blendMode:n=xc),c!==void 0){const h=c.actionByRoot[s];if(h!==void 0&&h.blendMode===n)return h;l=c.knownActions[0],o===null&&(o=l._clip)}if(o===null)return null;const u=new CS(this,o,t,n);return this._bindAction(u,l),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?ur.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let l=0;l!==n;++l)t[l]._update(i,e,s,o);const a=this._bindings,c=this._nActiveBindings;for(let l=0;l!==c;++l)a[l].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,c=o.length;a!==c;++a){const l=o[a];this._deactivateAction(l);const u=l._cacheIndex,h=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,c=a[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Wh{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Wh(this.value.clone===void 0?this.value:this.value.clone())}}class LS extends Pc{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class IS{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class RS{constructor(e,t,n=0,i=1/0){this.ray=new Eo(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new wc,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Pu(e,this,n,t),n.sort(np),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Pu(e[i],this,n,t);return n.sort(np),n}}function np(r,e){return r.distance-e.distance}function Pu(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)Pu(i[s],e,t,!0)}}class Lu{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(ht(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class DS{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const ip=new q;class FS{constructor(e=new q(1/0,1/0),t=new q(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ip.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return ip.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const rp=new A,ba=new A;class OS{constructor(e=new A,t=new A){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){rp.subVectors(e,this.start),ba.subVectors(this.end,this.start);const n=ba.dot(ba);let s=ba.dot(rp)/n;return t&&(s=ht(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const sp=new A;class NS extends Xe{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new Pe,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,c=32;o<c;o++,a++){const l=o/c*Math.PI*2,u=a/c*Math.PI*2;i.push(Math.cos(l),Math.sin(l),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new _e(i,3));const s=new Pt({fog:!1,toneMapped:!1});this.cone=new Fn(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),sp.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(sp),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ai=new A,wa=new xe,Il=new xe;class zS extends Fn{constructor(e){const t=y0(e),n=new Pe,i=[],s=[],o=new oe(0,0,1),a=new oe(0,1,0);for(let l=0;l<t.length;l++){const u=t[l];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new _e(i,3)),n.setAttribute("color",new _e(s,3));const c=new Pt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,c),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Il.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(wa.multiplyMatrices(Il,a.matrixWorld),ai.setFromMatrixPosition(wa),i.setXYZ(o,ai.x,ai.y,ai.z),wa.multiplyMatrices(Il,a.parent.matrixWorld),ai.setFromMatrixPosition(wa),i.setXYZ(o+1,ai.x,ai.y,ai.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function y0(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,y0(r.children[t]));return e}class x0 extends bt{constructor(e,t,n){const i=new lr(t,4,2),s=new Si({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const kS=new A,op=new oe,ap=new oe;class BS extends Xe{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new cr(t);i.rotateY(Math.PI*.5),this.material=new Si({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new et(o,3)),this.add(new bt(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");op.copy(this.light.color),ap.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?op:ap;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(kS.setFromMatrixPosition(this.light.matrixWorld).negate())}}class US extends Fn{constructor(e=10,t=10,n=4473924,i=8947848){n=new oe(n),i=new oe(i);const s=t/2,o=e/t,a=e/2,c=[],l=[];for(let f=0,d=0,p=-a;f<=t;f++,p+=o){c.push(-a,0,p,a,0,p),c.push(p,0,-a,p,0,a);const m=f===s?n:i;m.toArray(l,d),d+=3,m.toArray(l,d),d+=3,m.toArray(l,d),d+=3,m.toArray(l,d),d+=3}const u=new Pe;u.setAttribute("position",new _e(c,3)),u.setAttribute("color",new _e(l,3));const h=new Pt({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}}class VS extends Fn{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new oe(s),o=new oe(o);const a=[],c=[];for(let h=0;h<=t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,p);const m=h&1?s:o;c.push(m.r,m.g,m.b),c.push(m.r,m.g,m.b)}for(let h=0;h<=n;h++){const f=h&1?s:o,d=e-e/n*h;for(let p=0;p<i;p++){let m=p/i*(Math.PI*2),g=Math.sin(m)*d,v=Math.cos(m)*d;a.push(g,0,v),c.push(f.r,f.g,f.b),m=(p+1)/i*(Math.PI*2),g=Math.sin(m)*d,v=Math.cos(m)*d,a.push(g,0,v),c.push(f.r,f.g,f.b)}}const l=new Pe;l.setAttribute("position",new _e(a,3)),l.setAttribute("color",new _e(c,3));const u=new Pt({vertexColors:!0,toneMapped:!1});super(l,u),this.type="PolarGridHelper"}}const cp=new A,Ma=new A,lp=new A;class b0 extends Xe{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new Pe;i.setAttribute("position",new _e([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Pt({fog:!1,toneMapped:!1});this.lightPlane=new Yn(i,s),this.add(this.lightPlane),i=new Pe,i.setAttribute("position",new _e([0,0,0,0,0,1],3)),this.targetLine=new Yn(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){cp.setFromMatrixPosition(this.light.matrixWorld),Ma.setFromMatrixPosition(this.light.target.matrixWorld),lp.subVectors(Ma,cp),this.lightPlane.lookAt(Ma),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ma),this.targetLine.scale.z=lp.length()}}const Sa=new A,at=new Sc;class GS extends Fn{constructor(e){const t=new Pe,n=new Pt({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,m){c(p),c(m)}function c(p){i.push(0,0,0),s.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(i.length/3-1)}t.setAttribute("position",new _e(i,3)),t.setAttribute("color",new _e(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const l=new oe(16755200),u=new oe(16711680),h=new oe(43775),f=new oe(16777215),d=new oe(3355443);this.setColors(l,u,h,f,d)}setColors(e,t,n,i,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;at.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),ct("c",t,e,at,0,0,-1),ct("t",t,e,at,0,0,1),ct("n1",t,e,at,-n,-i,-1),ct("n2",t,e,at,n,-i,-1),ct("n3",t,e,at,-n,i,-1),ct("n4",t,e,at,n,i,-1),ct("f1",t,e,at,-n,-i,1),ct("f2",t,e,at,n,-i,1),ct("f3",t,e,at,-n,i,1),ct("f4",t,e,at,n,i,1),ct("u1",t,e,at,n*.7,i*1.1,-1),ct("u2",t,e,at,-n*.7,i*1.1,-1),ct("u3",t,e,at,0,i*2,-1),ct("cf1",t,e,at,-n,0,1),ct("cf2",t,e,at,n,0,1),ct("cf3",t,e,at,0,-i,1),ct("cf4",t,e,at,0,i,1),ct("cn1",t,e,at,-n,0,-1),ct("cn2",t,e,at,n,0,-1),ct("cn3",t,e,at,0,-i,-1),ct("cn4",t,e,at,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function ct(r,e,t,n,i,s,o){Sa.set(i,s,o).unproject(n);const a=e[r];if(a!==void 0){const c=t.getAttribute("position");for(let l=0,u=a.length;l<u;l++)c.setXYZ(a[l],Sa.x,Sa.y,Sa.z)}}const Aa=new pr;class HS extends Fn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new Pe;s.setIndex(new et(n,1)),s.setAttribute("position",new et(i,3)),super(s,new Pt({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Aa.setFromObject(this.object),Aa.isEmpty())return;const t=Aa.min,n=Aa.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}}class WS extends Fn{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Pe;s.setIndex(new et(n,1)),s.setAttribute("position",new _e(i,3)),super(s,new Pt({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class XS extends Yn{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new Pe;o.setAttribute("position",new _e(s,3)),o.computeBoundingSphere(),super(o,new Pt({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],c=new Pe;c.setAttribute("position",new _e(a,3)),c.computeBoundingSphere(),this.add(new bt(c,new Si({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?Ut:tr,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const up=new A;let Ta,Rl;class $S extends Xe{constructor(e=new A(0,0,1),t=new A(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Ta===void 0&&(Ta=new Pe,Ta.setAttribute("position",new _e([0,0,0,0,1,0],3)),Rl=new xi(0,.5,1,5,1),Rl.translate(0,-.5,0)),this.position.copy(t),this.line=new Yn(Ta,new Pt({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new bt(Rl,new Si({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{up.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(up,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class qS extends Fn{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Pe;i.setAttribute("position",new _e(t,3)),i.setAttribute("color",new _e(n,3));const s=new Pt({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new oe,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class jS{constructor(){this.type="ShapePath",this.color=new oe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new po,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(_){const y=[];for(let x=0,w=_.length;x<w;x++){const M=_[x],P=new Ki;P.curves=M.curves,y.push(P)}return y}function i(_,y){const x=y.length;let w=!1;for(let M=x-1,P=0;P<x;M=P++){let b=y[M],T=y[P],I=T.x-b.x,F=T.y-b.y;if(Math.abs(F)>Number.EPSILON){if(F<0&&(b=y[P],I=-I,T=y[M],F=-F),_.y<b.y||_.y>T.y)continue;if(_.y===b.y){if(_.x===b.x)return!0}else{const B=F*(_.x-b.x)-I*(_.y-b.y);if(B===0)return!0;if(B<0)continue;w=!w}}else{if(_.y!==b.y)continue;if(T.x<=_.x&&_.x<=b.x||b.x<=_.x&&_.x<=T.x)return!0}}return w}const s=Pn.isClockWise,o=this.subPaths;if(o.length===0)return[];if(t===!0)return n(o);let a,c,l;const u=[];if(o.length===1)return c=o[0],l=new Ki,l.curves=c.curves,u.push(l),u;let h=!s(o[0].getPoints());h=e?!h:h;const f=[],d=[];let p=[],m=0,g;d[m]=void 0,p[m]=[];for(let _=0,y=o.length;_<y;_++)c=o[_],g=c.getPoints(),a=s(g),a=e?!a:a,a?(!h&&d[m]&&m++,d[m]={s:new Ki,p:g},d[m].s.curves=c.curves,h&&m++,p[m]=[]):p[m].push({h:c,p:g[0]});if(!d[0])return n(o);if(d.length>1){let _=!1,y=0;for(let x=0,w=d.length;x<w;x++)f[x]=[];for(let x=0,w=d.length;x<w;x++){const M=p[x];for(let P=0;P<M.length;P++){const b=M[P];let T=!0;for(let I=0;I<d.length;I++)i(b.p,d[I].p)&&(x!==I&&y++,T?(T=!1,f[I].push(b)):_=!0);T&&f[x].push(b)}}y>0&&_===!1&&(p=f)}let v;for(let _=0,y=d.length;_<y;_++){l=d[_].s,u.push(l),v=p[_];for(let x=0,w=v.length;x<w;x++)l.holes.push(v[x].h)}return u}}const{floatView:w0,uint32View:M0,baseTable:YS,shiftTable:ZS,mantissaTable:JS,exponentTable:KS,offsetTable:QS}=eA();function eA(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let c=0;c<256;++c){const l=c-127;l<-27?(n[c]=0,n[c|256]=32768,i[c]=24,i[c|256]=24):l<-14?(n[c]=1024>>-l-14,n[c|256]=1024>>-l-14|32768,i[c]=-l-1,i[c|256]=-l-1):l<=15?(n[c]=l+15<<10,n[c|256]=l+15<<10|32768,i[c]=13,i[c|256]=13):l<128?(n[c]=31744,n[c|256]=64512,i[c]=24,i[c|256]=24):(n[c]=31744,n[c|256]=64512,i[c]=13,i[c|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let c=1;c<1024;++c){let l=c<<13,u=0;for(;(l&8388608)===0;)l<<=1,u-=8388608;l&=-8388609,u+=947912704,s[c]=l|u}for(let c=1024;c<2048;++c)s[c]=939524096+(c-1024<<13);for(let c=1;c<31;++c)o[c]=c<<23;o[31]=1199570944,o[32]=2147483648;for(let c=33;c<63;++c)o[c]=2147483648+(c-32<<23);o[63]=3347054592;for(let c=1;c<64;++c)c!==32&&(a[c]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:a}}function tA(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=ht(r,-65504,65504),w0[0]=r;const e=M0[0],t=e>>23&511;return YS[t]+((e&8388607)>>ZS[t])}function nA(r){const e=r>>10;return M0[0]=JS[QS[e]+(r&1023)]+KS[e],w0[0]}var iA=Object.freeze({__proto__:null,toHalfFloat:tA,fromHalfFloat:nA});class rA extends Pe{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class sA extends Pe{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function oA(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function aA(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function cA(){console.error("THREE.ImmediateRenderObject has been removed.")}class lA extends Gt{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class uA extends To{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class hA extends bc{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:_c}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=_c);const S0=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:uh,AddEquation:Vi,AddOperation:nc,AdditiveAnimationBlendMode:mh,AdditiveBlending:ec,AlphaFormat:ag,AlwaysDepth:Ym,AlwaysStencilFunc:bg,AmbientLight:Fc,AmbientLightProbe:hS,AnimationClip:ur,AnimationLoader:eS,AnimationMixer:_0,AnimationObjectGroup:ES,AnimationUtils:tt,ArcCurve:Hg,ArrayCamera:Fg,ArrowHelper:$S,Audio:g0,AudioAnalyser:vS,AudioContext:Vh,AudioListener:pS,AudioLoader:lS,AxesHelper:qS,BackSide:Ut,BasicDepthPacking:_g,BasicShadowMap:L_,Bone:fo,BooleanKeyframeTrack:vr,Box2:FS,Box3:pr,Box3Helper:WS,BoxBufferGeometry:jn,BoxGeometry:jn,BoxHelper:HS,BufferAttribute:et,BufferGeometry:Pe,BufferGeometryLoader:m0,ByteType:ng,Cache:hr,Camera:Sc,CameraHelper:GS,CanvasTexture:S1,CapsuleBufferGeometry:cs,CapsuleGeometry:cs,CatmullRomCurve3:Wg,CineonToneMapping:lh,CircleBufferGeometry:ls,CircleGeometry:ls,ClampToEdgeWrapping:St,Clock:zc,Color:oe,ColorKeyframeTrack:zh,ColorManagement:tn,CompressedTexture:Gg,CompressedTextureLoader:tS,ConeBufferGeometry:us,ConeGeometry:us,CubeCamera:Ag,CubeReflectionMapping:gi,CubeRefractionMapping:vi,CubeTexture:Po,CubeTextureLoader:u0,CubeUVReflectionMapping:Es,CubicBezierCurve:Ph,CubicBezierCurve3:Xg,CubicInterpolant:o0,CullFaceBack:Zl,CullFaceFront:Dm,CullFaceFrontBack:P_,CullFaceNone:Rm,Curve:cn,CurvePath:qg,CustomBlending:Nm,CustomToneMapping:tg,CylinderBufferGeometry:xi,CylinderGeometry:xi,Cylindrical:DS,Data3DTexture:bc,DataArrayTexture:To,DataTexture:Ji,DataTexture2DArray:uA,DataTexture3D:hA,DataTextureLoader:nS,DataUtils:iA,DecrementStencilOp:H_,DecrementWrapStencilOp:X_,DefaultLoadingManager:l0,DepthFormat:di,DepthStencilFormat:rr,DepthTexture:Og,DirectionalLight:Dc,DirectionalLightHelper:b0,DiscreteInterpolant:a0,DodecahedronBufferGeometry:hs,DodecahedronGeometry:hs,DoubleSide:mi,DstAlphaFactor:Hm,DstColorFactor:Xm,DynamicCopyUsage:oy,DynamicDrawUsage:ey,DynamicReadUsage:iy,EdgesGeometry:jg,EllipseCurve:Lc,EqualDepth:Zm,EqualStencilFunc:Y_,EquirectangularReflectionMapping:rs,EquirectangularRefractionMapping:so,Euler:vn,EventDispatcher:Kn,ExtrudeBufferGeometry:fs,ExtrudeGeometry:fs,FileLoader:Rn,FlatShading:Om,Float16BufferAttribute:Gy,Float32BufferAttribute:_e,Float64BufferAttribute:Hy,FloatType:Gn,Fog:Cc,FogExp2:Ec,Font:aA,FontLoader:oA,FramebufferTexture:M1,FrontSide:tr,Frustum:Ac,GLBufferAttribute:IS,GLSL1:cy,GLSL3:wu,GreaterDepth:Km,GreaterEqualDepth:Jm,GreaterEqualStencilFunc:Q_,GreaterStencilFunc:J_,GridHelper:US,Group:fi,HalfFloatType:ss,HemisphereLight:h0,HemisphereLightHelper:BS,HemisphereLightProbe:uS,IcosahedronBufferGeometry:ds,IcosahedronGeometry:ds,ImageBitmapLoader:cS,ImageLoader:_o,ImageUtils:vh,ImmediateRenderObject:cA,IncrementStencilOp:G_,IncrementWrapStencilOp:W_,InstancedBufferAttribute:as,InstancedBufferGeometry:p0,InstancedInterleavedBuffer:LS,InstancedMesh:Ug,Int16BufferAttribute:Uy,Int32BufferAttribute:Vy,Int8BufferAttribute:zy,IntType:rg,InterleavedBuffer:Pc,InterleavedBufferAttribute:or,Interpolant:Io,InterpolateDiscrete:ao,InterpolateLinear:co,InterpolateSmooth:ka,InvertStencilOp:$_,KeepStencilOp:Ba,KeyframeTrack:bn,LOD:Bg,LatheBufferGeometry:ar,LatheGeometry:ar,Layers:wc,LessDepth:oh,LessEqualDepth:tc,LessEqualStencilFunc:Z_,LessStencilFunc:j_,Light:Ai,LightProbe:Oc,Line:Yn,Line3:OS,LineBasicMaterial:Pt,LineCurve:Ic,LineCurve3:$g,LineDashedMaterial:s0,LineLoop:Vg,LineSegments:Fn,LinearEncoding:yi,LinearFilter:rt,LinearInterpolant:Nh,LinearMipMapLinearFilter:O_,LinearMipMapNearestFilter:F_,LinearMipmapLinearFilter:dr,LinearMipmapNearestFilter:hh,LinearSRGBColorSpace:hi,LinearToneMapping:ah,Loader:Wt,LoaderUtils:ws,LoadingManager:kh,LoopOnce:gg,LoopPingPong:vg,LoopRepeat:ph,LuminanceAlphaFormat:lg,LuminanceFormat:dh,MOUSE:zi,Material:Ct,MaterialLoader:Nc,MathUtils:gn,Matrix3:Ft,Matrix4:xe,MaxEquation:eu,Mesh:bt,MeshBasicMaterial:Si,MeshDepthMaterial:xh,MeshDistanceMaterial:bh,MeshLambertMaterial:Oh,MeshMatcapMaterial:r0,MeshNormalMaterial:i0,MeshPhongMaterial:eo,MeshPhysicalMaterial:t0,MeshStandardMaterial:Fh,MeshToonMaterial:n0,MinEquation:Ql,MirroredRepeatWrapping:oo,MixOperation:eg,MultiplyBlending:Kl,MultiplyOperation:nr,NearestFilter:ut,NearestMipMapLinearFilter:D_,NearestMipMapNearestFilter:R_,NearestMipmapLinearFilter:rc,NearestMipmapNearestFilter:ic,NeverDepth:jm,NeverStencilFunc:q_,NoBlending:qn,NoColorSpace:B_,NoToneMapping:yn,NormalAnimationBlendMode:xc,NormalBlending:qi,NotEqualDepth:Qm,NotEqualStencilFunc:K_,NumberKeyframeTrack:xs,Object3D:Xe,ObjectLoader:oS,ObjectSpaceNormalMap:xg,OctahedronBufferGeometry:cr,OctahedronGeometry:cr,OneFactor:Um,OneMinusDstAlphaFactor:Wm,OneMinusDstColorFactor:$m,OneMinusSrcAlphaFactor:sh,OneMinusSrcColorFactor:Gm,OrthographicCamera:gr,PCFShadowMap:ih,PCFSoftShadowMap:Fm,PMREMGenerator:Su,ParametricGeometry:rA,Path:po,PerspectiveCamera:xt,Plane:li,PlaneBufferGeometry:sr,PlaneGeometry:sr,PlaneHelper:XS,PointLight:yo,PointLightHelper:x0,Points:Eh,PointsMaterial:Th,PolarGridHelper:VS,PolyhedronBufferGeometry:In,PolyhedronGeometry:In,PositionalAudio:gS,PropertyBinding:Be,PropertyMixer:v0,QuadraticBezierCurve:Lh,QuadraticBezierCurve3:Ih,Quaternion:_t,QuaternionKeyframeTrack:_r,QuaternionLinearInterpolant:c0,REVISION:_c,RGBADepthPacking:yg,RGBAFormat:Yt,RGBAIntegerFormat:pg,RGBA_ASTC_10x10_Format:_u,RGBA_ASTC_10x5_Format:mu,RGBA_ASTC_10x6_Format:gu,RGBA_ASTC_10x8_Format:vu,RGBA_ASTC_12x10_Format:yu,RGBA_ASTC_12x12_Format:xu,RGBA_ASTC_4x4_Format:au,RGBA_ASTC_5x4_Format:cu,RGBA_ASTC_5x5_Format:lu,RGBA_ASTC_6x5_Format:uu,RGBA_ASTC_6x6_Format:hu,RGBA_ASTC_8x5_Format:fu,RGBA_ASTC_8x6_Format:du,RGBA_ASTC_8x8_Format:pu,RGBA_BPTC_Format:bu,RGBA_ETC2_EAC_Format:ou,RGBA_PVRTC_2BPPV1_Format:ru,RGBA_PVRTC_4BPPV1_Format:iu,RGBA_S3TC_DXT1_Format:Oa,RGBA_S3TC_DXT3_Format:Na,RGBA_S3TC_DXT5_Format:za,RGBFormat:cg,RGB_ETC1_Format:mg,RGB_ETC2_Format:su,RGB_PVRTC_2BPPV1_Format:nu,RGB_PVRTC_4BPPV1_Format:tu,RGB_S3TC_DXT1_Format:Fa,RGFormat:fg,RGIntegerFormat:dg,RawShaderMaterial:e0,Ray:Eo,Raycaster:RS,RectAreaLight:f0,RedFormat:ug,RedIntegerFormat:hg,ReinhardToneMapping:ch,RepeatWrapping:ir,ReplaceStencilOp:V_,ReverseSubtractEquation:km,RingBufferGeometry:ps,RingGeometry:ps,SRGBColorSpace:En,Scene:Mh,ShaderChunk:ze,ShaderLib:Et,ShaderMaterial:Ot,ShadowMaterial:Qg,Shape:Ki,ShapeBufferGeometry:ms,ShapeGeometry:ms,ShapePath:jS,ShapeUtils:Pn,ShortType:ig,Skeleton:Lo,SkeletonHelper:zS,SkinnedMesh:Ah,SmoothShading:I_,Source:Xi,Sphere:mr,SphereBufferGeometry:lr,SphereGeometry:lr,Spherical:Lu,SphericalHarmonics3:d0,SplineCurve:Rh,SpotLight:Uh,SpotLightHelper:NS,Sprite:kg,SpriteMaterial:Sh,SrcAlphaFactor:rh,SrcAlphaSaturateFactor:qm,SrcColorFactor:Vm,StaticCopyUsage:sy,StaticDrawUsage:sc,StaticReadUsage:ny,StereoCamera:fS,StreamCopyUsage:ay,StreamDrawUsage:ty,StreamReadUsage:ry,StringKeyframeTrack:yr,SubtractEquation:zm,SubtractiveBlending:Jl,TOUCH:ki,TangentSpaceNormalMap:Mi,TetrahedronBufferGeometry:gs,TetrahedronGeometry:gs,TextGeometry:sA,Texture:pt,TextureLoader:xr,TorusBufferGeometry:vs,TorusGeometry:vs,TorusKnotBufferGeometry:_s,TorusKnotGeometry:_s,Triangle:rn,TriangleFanDrawMode:k_,TriangleStripDrawMode:z_,TrianglesDrawMode:N_,TubeBufferGeometry:ys,TubeGeometry:ys,UVMapping:yc,Uint16BufferAttribute:Mc,Uint32BufferAttribute:_h,Uint8BufferAttribute:ky,Uint8ClampedBufferAttribute:By,Uniform:Wh,UniformsLib:de,UniformsUtils:Co,UnsignedByteType:_i,UnsignedInt248Type:ji,UnsignedIntType:ui,UnsignedShort4444Type:sg,UnsignedShort5551Type:og,UnsignedShortType:fh,VSMShadowMap:Yr,Vector2:q,Vector3:A,Vector4:He,VectorKeyframeTrack:bs,VideoTexture:w1,WebGL1Renderer:Ng,WebGL3DRenderTarget:Ey,WebGLArrayRenderTarget:Ty,WebGLCubeRenderTarget:Tg,WebGLMultipleRenderTargets:Cy,WebGLMultisampleRenderTarget:lA,WebGLRenderTarget:Gt,WebGLRenderer:wh,WebGLUtils:Dg,WireframeGeometry:Kg,WrapAroundEnding:lo,ZeroCurvatureEnding:Hi,ZeroFactor:Bm,ZeroSlopeEnding:Wi,ZeroStencilOp:U_,_SRGBAFormat:oc,sRGBEncoding:Ge},Symbol.toStringTag,{value:"Module"})),hp={type:"change"},Dl={type:"start"},fp={type:"end"};class fA extends Kn{constructor(e,t){super(),t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new A,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:zi.ROTATE,MIDDLE:zi.DOLLY,RIGHT:zi.PAN},this.touches={ONE:ki.ROTATE,TWO:ki.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(E){E.addEventListener("keydown",qe),this._domElementKeyEvents=E},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(hp),n.update(),s=i.NONE},this.update=function(){const E=new A,ee=new _t().setFromUnitVectors(e.up,new A(0,1,0)),ae=ee.clone().invert(),ce=new A,R=new _t,le=2*Math.PI;return function(){const Te=n.object.position;E.copy(Te).sub(n.target),E.applyQuaternion(ee),a.setFromVector3(E),n.autoRotate&&s===i.NONE&&T(P()),n.enableDamping?(a.theta+=c.theta*n.dampingFactor,a.phi+=c.phi*n.dampingFactor):(a.theta+=c.theta,a.phi+=c.phi);let ve=n.minAzimuthAngle,we=n.maxAzimuthAngle;return isFinite(ve)&&isFinite(we)&&(ve<-Math.PI?ve+=le:ve>Math.PI&&(ve-=le),we<-Math.PI?we+=le:we>Math.PI&&(we-=le),ve<=we?a.theta=Math.max(ve,Math.min(we,a.theta)):a.theta=a.theta>(ve+we)/2?Math.max(ve,a.theta):Math.min(we,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=l,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),E.setFromSpherical(a),E.applyQuaternion(ae),Te.copy(n.target).add(E),n.object.lookAt(n.target),n.enableDamping===!0?(c.theta*=1-n.dampingFactor,c.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(c.set(0,0,0),u.set(0,0,0)),l=1,h||ce.distanceToSquared(n.object.position)>o||8*(1-R.dot(n.object.quaternion))>o?(n.dispatchEvent(hp),ce.copy(n.object.position),R.copy(n.object.quaternion),h=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",H),n.domElement.removeEventListener("pointerdown",ie),n.domElement.removeEventListener("pointercancel",Re),n.domElement.removeEventListener("wheel",Qe),n.domElement.removeEventListener("pointermove",ye),n.domElement.removeEventListener("pointerup",pe),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",qe)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=i.NONE;const o=1e-6,a=new Lu,c=new Lu;let l=1;const u=new A;let h=!1;const f=new q,d=new q,p=new q,m=new q,g=new q,v=new q,_=new q,y=new q,x=new q,w=[],M={};function P(){return 2*Math.PI/60/60*n.autoRotateSpeed}function b(){return Math.pow(.95,n.zoomSpeed)}function T(E){c.theta-=E}function I(E){c.phi-=E}const F=function(){const E=new A;return function(ae,ce){E.setFromMatrixColumn(ce,0),E.multiplyScalar(-ae),u.add(E)}}(),B=function(){const E=new A;return function(ae,ce){n.screenSpacePanning===!0?E.setFromMatrixColumn(ce,1):(E.setFromMatrixColumn(ce,0),E.crossVectors(n.object.up,E)),E.multiplyScalar(ae),u.add(E)}}(),j=function(){const E=new A;return function(ae,ce){const R=n.domElement;if(n.object.isPerspectiveCamera){const le=n.object.position;E.copy(le).sub(n.target);let se=E.length();se*=Math.tan(n.object.fov/2*Math.PI/180),F(2*ae*se/R.clientHeight,n.object.matrix),B(2*ce*se/R.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(F(ae*(n.object.right-n.object.left)/n.object.zoom/R.clientWidth,n.object.matrix),B(ce*(n.object.top-n.object.bottom)/n.object.zoom/R.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function D(E){n.object.isPerspectiveCamera?l/=E:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*E)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(E){n.object.isPerspectiveCamera?l*=E:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/E)),n.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function O(E){f.set(E.clientX,E.clientY)}function G(E){_.set(E.clientX,E.clientY)}function $(E){m.set(E.clientX,E.clientY)}function z(E){d.set(E.clientX,E.clientY),p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const ee=n.domElement;T(2*Math.PI*p.x/ee.clientHeight),I(2*Math.PI*p.y/ee.clientHeight),f.copy(d),n.update()}function V(E){y.set(E.clientX,E.clientY),x.subVectors(y,_),x.y>0?D(b()):x.y<0&&k(b()),_.copy(y),n.update()}function Q(E){g.set(E.clientX,E.clientY),v.subVectors(g,m).multiplyScalar(n.panSpeed),j(v.x,v.y),m.copy(g),n.update()}function Y(E){E.deltaY<0?k(b()):E.deltaY>0&&D(b()),n.update()}function ne(E){let ee=!1;switch(E.code){case n.keys.UP:j(0,n.keyPanSpeed),ee=!0;break;case n.keys.BOTTOM:j(0,-n.keyPanSpeed),ee=!0;break;case n.keys.LEFT:j(n.keyPanSpeed,0),ee=!0;break;case n.keys.RIGHT:j(-n.keyPanSpeed,0),ee=!0;break}ee&&(E.preventDefault(),n.update())}function fe(){if(w.length===1)f.set(w[0].pageX,w[0].pageY);else{const E=.5*(w[0].pageX+w[1].pageX),ee=.5*(w[0].pageY+w[1].pageY);f.set(E,ee)}}function ge(){if(w.length===1)m.set(w[0].pageX,w[0].pageY);else{const E=.5*(w[0].pageX+w[1].pageX),ee=.5*(w[0].pageY+w[1].pageY);m.set(E,ee)}}function X(){const E=w[0].pageX-w[1].pageX,ee=w[0].pageY-w[1].pageY,ae=Math.sqrt(E*E+ee*ee);_.set(0,ae)}function Ue(){n.enableZoom&&X(),n.enablePan&&ge()}function Se(){n.enableZoom&&X(),n.enableRotate&&fe()}function Ce(E){if(w.length==1)d.set(E.pageX,E.pageY);else{const ae=Ee(E),ce=.5*(E.pageX+ae.x),R=.5*(E.pageY+ae.y);d.set(ce,R)}p.subVectors(d,f).multiplyScalar(n.rotateSpeed);const ee=n.domElement;T(2*Math.PI*p.x/ee.clientHeight),I(2*Math.PI*p.y/ee.clientHeight),f.copy(d)}function he(E){if(w.length===1)g.set(E.pageX,E.pageY);else{const ee=Ee(E),ae=.5*(E.pageX+ee.x),ce=.5*(E.pageY+ee.y);g.set(ae,ce)}v.subVectors(g,m).multiplyScalar(n.panSpeed),j(v.x,v.y),m.copy(g)}function Ie(E){const ee=Ee(E),ae=E.pageX-ee.x,ce=E.pageY-ee.y,R=Math.sqrt(ae*ae+ce*ce);y.set(0,R),x.set(0,Math.pow(y.y/_.y,n.zoomSpeed)),D(x.y),_.copy(y)}function J(E){n.enableZoom&&Ie(E),n.enablePan&&he(E)}function Z(E){n.enableZoom&&Ie(E),n.enableRotate&&Ce(E)}function ie(E){n.enabled!==!1&&(w.length===0&&(n.domElement.setPointerCapture(E.pointerId),n.domElement.addEventListener("pointermove",ye),n.domElement.addEventListener("pointerup",pe)),te(E),E.pointerType==="touch"?L(E):Ae(E))}function ye(E){n.enabled!==!1&&(E.pointerType==="touch"?S(E):Me(E))}function pe(E){re(E),w.length===0&&(n.domElement.releasePointerCapture(E.pointerId),n.domElement.removeEventListener("pointermove",ye),n.domElement.removeEventListener("pointerup",pe)),n.dispatchEvent(fp),s=i.NONE}function Re(E){re(E)}function Ae(E){let ee;switch(E.button){case 0:ee=n.mouseButtons.LEFT;break;case 1:ee=n.mouseButtons.MIDDLE;break;case 2:ee=n.mouseButtons.RIGHT;break;default:ee=-1}switch(ee){case zi.DOLLY:if(n.enableZoom===!1)return;G(E),s=i.DOLLY;break;case zi.ROTATE:if(E.ctrlKey||E.metaKey||E.shiftKey){if(n.enablePan===!1)return;$(E),s=i.PAN}else{if(n.enableRotate===!1)return;O(E),s=i.ROTATE}break;case zi.PAN:if(E.ctrlKey||E.metaKey||E.shiftKey){if(n.enableRotate===!1)return;O(E),s=i.ROTATE}else{if(n.enablePan===!1)return;$(E),s=i.PAN}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Dl)}function Me(E){if(n.enabled!==!1)switch(s){case i.ROTATE:if(n.enableRotate===!1)return;z(E);break;case i.DOLLY:if(n.enableZoom===!1)return;V(E);break;case i.PAN:if(n.enablePan===!1)return;Q(E);break}}function Qe(E){n.enabled===!1||n.enableZoom===!1||s!==i.NONE||(E.preventDefault(),n.dispatchEvent(Dl),Y(E),n.dispatchEvent(fp))}function qe(E){n.enabled===!1||n.enablePan===!1||ne(E)}function L(E){switch(me(E),w.length){case 1:switch(n.touches.ONE){case ki.ROTATE:if(n.enableRotate===!1)return;fe(),s=i.TOUCH_ROTATE;break;case ki.PAN:if(n.enablePan===!1)return;ge(),s=i.TOUCH_PAN;break;default:s=i.NONE}break;case 2:switch(n.touches.TWO){case ki.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ue(),s=i.TOUCH_DOLLY_PAN;break;case ki.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Se(),s=i.TOUCH_DOLLY_ROTATE;break;default:s=i.NONE}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Dl)}function S(E){switch(me(E),s){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;Ce(E),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;he(E),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;J(E),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Z(E),n.update();break;default:s=i.NONE}}function H(E){n.enabled!==!1&&E.preventDefault()}function te(E){w.push(E)}function re(E){delete M[E.pointerId];for(let ee=0;ee<w.length;ee++)if(w[ee].pointerId==E.pointerId){w.splice(ee,1);return}}function me(E){let ee=M[E.pointerId];ee===void 0&&(ee=new q,M[E.pointerId]=ee),ee.set(E.pageX,E.pageY)}function Ee(E){const ee=E.pointerId===w[0].pointerId?w[1]:w[0];return M[ee.pointerId]}n.domElement.addEventListener("contextmenu",H),n.domElement.addEventListener("pointerdown",ie),n.domElement.addEventListener("pointercancel",Re),n.domElement.addEventListener("wheel",Qe,{passive:!1}),this.update()}}const A0="fbx",T0="animations",dA="img/textures/matcap",kc="data";/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/var dp={},Iu=function(r){return URL.createObjectURL(new Blob([r],{type:"text/javascript"}))},E0=function(r){return new Worker(r)};try{URL.revokeObjectURL(Iu(""))}catch{Iu=function(e){return"data:application/javascript;charset=UTF-8,"+encodeURI(e)},E0=function(e){return new Worker(e,{type:"module"})}}var pA=function(r,e,t,n,i){var s=E0(dp[e]||(dp[e]=Iu(r)));return s.onerror=function(o){return i(o.error,null)},s.onmessage=function(o){return i(null,o.data)},s.postMessage(t,n),s},Ve=Uint8Array,Mt=Uint16Array,Zn=Uint32Array,Ps=new Ve([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Ls=new Ve([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),xo=new Ve([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),C0=function(r,e){for(var t=new Mt(31),n=0;n<31;++n)t[n]=e+=1<<r[n-1];for(var i=new Zn(t[30]),n=1;n<30;++n)for(var s=t[n];s<t[n+1];++s)i[s]=s-t[n]<<5|n;return[t,i]},P0=C0(Ps,2),Xh=P0[0],cc=P0[1];Xh[28]=258,cc[258]=28;var L0=C0(Ls,0),I0=L0[0],Ru=L0[1],bo=new Mt(32768);for(var nt=0;nt<32768;++nt){var ci=(nt&43690)>>>1|(nt&21845)<<1;ci=(ci&52428)>>>2|(ci&13107)<<2,ci=(ci&61680)>>>4|(ci&3855)<<4,bo[nt]=((ci&65280)>>>8|(ci&255)<<8)>>>1}var sn=function(r,e,t){for(var n=r.length,i=0,s=new Mt(e);i<n;++i)++s[r[i]-1];var o=new Mt(e);for(i=0;i<e;++i)o[i]=o[i-1]+s[i-1]<<1;var a;if(t){a=new Mt(1<<e);var c=15-e;for(i=0;i<n;++i)if(r[i])for(var l=i<<4|r[i],u=e-r[i],h=o[r[i]-1]++<<u,f=h|(1<<u)-1;h<=f;++h)a[bo[h]>>>c]=l}else for(a=new Mt(n),i=0;i<n;++i)r[i]&&(a[i]=bo[o[r[i]-1]++]>>>15-r[i]);return a},Jn=new Ve(288);for(var nt=0;nt<144;++nt)Jn[nt]=8;for(var nt=144;nt<256;++nt)Jn[nt]=9;for(var nt=256;nt<280;++nt)Jn[nt]=7;for(var nt=280;nt<288;++nt)Jn[nt]=8;var Ms=new Ve(32);for(var nt=0;nt<32;++nt)Ms[nt]=5;var R0=sn(Jn,9,0),D0=sn(Jn,9,1),F0=sn(Ms,5,0),O0=sn(Ms,5,1),Ga=function(r){for(var e=r[0],t=1;t<r.length;++t)r[t]>e&&(e=r[t]);return e},nn=function(r,e,t){var n=e/8|0;return(r[n]|r[n+1]<<8)>>(e&7)&t},Ha=function(r,e){var t=e/8|0;return(r[t]|r[t+1]<<8|r[t+2]<<16)>>(e&7)},Ro=function(r){return(r/8|0)+(r&7&&1)},on=function(r,e,t){(e==null||e<0)&&(e=0),(t==null||t>r.length)&&(t=r.length);var n=new(r instanceof Mt?Mt:r instanceof Zn?Zn:Ve)(t-e);return n.set(r.subarray(e,t)),n},Do=function(r,e,t){var n=r.length;if(!n||t&&!t.l&&n<5)return e||new Ve(0);var i=!e||t,s=!t||t.i;t||(t={}),e||(e=new Ve(n*3));var o=function(X){var Ue=e.length;if(X>Ue){var Se=new Ve(Math.max(Ue*2,X));Se.set(e),e=Se}},a=t.f||0,c=t.p||0,l=t.b||0,u=t.l,h=t.d,f=t.m,d=t.n,p=n*8;do{if(!u){t.f=a=nn(r,c,1);var m=nn(r,c+1,3);if(c+=3,m)if(m==1)u=D0,h=O0,f=9,d=5;else if(m==2){var y=nn(r,c,31)+257,x=nn(r,c+10,15)+4,w=y+nn(r,c+5,31)+1;c+=14;for(var M=new Ve(w),P=new Ve(19),b=0;b<x;++b)P[xo[b]]=nn(r,c+b*3,7);c+=x*3;for(var T=Ga(P),I=(1<<T)-1,F=sn(P,T,1),b=0;b<w;){var B=F[nn(r,c,I)];c+=B&15;var g=B>>>4;if(g<16)M[b++]=g;else{var j=0,D=0;for(g==16?(D=3+nn(r,c,3),c+=2,j=M[b-1]):g==17?(D=3+nn(r,c,7),c+=3):g==18&&(D=11+nn(r,c,127),c+=7);D--;)M[b++]=j}}var k=M.subarray(0,y),O=M.subarray(y);f=Ga(k),d=Ga(O),u=sn(k,f,1),h=sn(O,d,1)}else throw"invalid block type";else{var g=Ro(c)+4,v=r[g-4]|r[g-3]<<8,_=g+v;if(_>n){if(s)throw"unexpected EOF";break}i&&o(l+v),e.set(r.subarray(g,_),l),t.b=l+=v,t.p=c=_*8;continue}if(c>p){if(s)throw"unexpected EOF";break}}i&&o(l+131072);for(var G=(1<<f)-1,$=(1<<d)-1,z=c;;z=c){var j=u[Ha(r,c)&G],V=j>>>4;if(c+=j&15,c>p){if(s)throw"unexpected EOF";break}if(!j)throw"invalid length/literal";if(V<256)e[l++]=V;else if(V==256){z=c,u=null;break}else{var Q=V-254;if(V>264){var b=V-257,Y=Ps[b];Q=nn(r,c,(1<<Y)-1)+Xh[b],c+=Y}var ne=h[Ha(r,c)&$],fe=ne>>>4;if(!ne)throw"invalid distance";c+=ne&15;var O=I0[fe];if(fe>3){var Y=Ls[fe];O+=Ha(r,c)&(1<<Y)-1,c+=Y}if(c>p){if(s)throw"unexpected EOF";break}i&&o(l+131072);for(var ge=l+Q;l<ge;l+=4)e[l]=e[l-O],e[l+1]=e[l+1-O],e[l+2]=e[l+2-O],e[l+3]=e[l+3-O];l=ge}}t.l=u,t.p=z,t.b=l,u&&(a=1,t.m=f,t.d=h,t.n=d)}while(!a);return l==e.length?e:on(e,0,l)},Tn=function(r,e,t){t<<=e&7;var n=e/8|0;r[n]|=t,r[n+1]|=t>>>8},Wr=function(r,e,t){t<<=e&7;var n=e/8|0;r[n]|=t,r[n+1]|=t>>>8,r[n+2]|=t>>>16},Wa=function(r,e){for(var t=[],n=0;n<r.length;++n)r[n]&&t.push({s:n,f:r[n]});var i=t.length,s=t.slice();if(!i)return[Hn,0];if(i==1){var o=new Ve(t[0].s+1);return o[t[0].s]=1,[o,1]}t.sort(function(w,M){return w.f-M.f}),t.push({s:-1,f:25001});var a=t[0],c=t[1],l=0,u=1,h=2;for(t[0]={s:-1,f:a.f+c.f,l:a,r:c};u!=i-1;)a=t[t[l].f<t[h].f?l++:h++],c=t[l!=u&&t[l].f<t[h].f?l++:h++],t[u++]={s:-1,f:a.f+c.f,l:a,r:c};for(var f=s[0].s,n=1;n<i;++n)s[n].s>f&&(f=s[n].s);var d=new Mt(f+1),p=lc(t[u-1],d,0);if(p>e){var n=0,m=0,g=p-e,v=1<<g;for(s.sort(function(M,P){return d[P.s]-d[M.s]||M.f-P.f});n<i;++n){var _=s[n].s;if(d[_]>e)m+=v-(1<<p-d[_]),d[_]=e;else break}for(m>>>=g;m>0;){var y=s[n].s;d[y]<e?m-=1<<e-d[y]++-1:++n}for(;n>=0&&m;--n){var x=s[n].s;d[x]==e&&(--d[x],++m)}p=e}return[new Ve(d),p]},lc=function(r,e,t){return r.s==-1?Math.max(lc(r.l,e,t+1),lc(r.r,e,t+1)):e[r.s]=t},Du=function(r){for(var e=r.length;e&&!r[--e];);for(var t=new Mt(++e),n=0,i=r[0],s=1,o=function(c){t[n++]=c},a=1;a<=e;++a)if(r[a]==i&&a!=e)++s;else{if(!i&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(i),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(i);s=1,i=r[a]}return[t.subarray(0,n),e]},Xr=function(r,e){for(var t=0,n=0;n<e.length;++n)t+=r[n]*e[n];return t},to=function(r,e,t){var n=t.length,i=Ro(e+2);r[i]=n&255,r[i+1]=n>>>8,r[i+2]=r[i]^255,r[i+3]=r[i+1]^255;for(var s=0;s<n;++s)r[i+s+4]=t[s];return(i+4+n)*8},Fu=function(r,e,t,n,i,s,o,a,c,l,u){Tn(e,u++,t),++i[256];for(var h=Wa(i,15),f=h[0],d=h[1],p=Wa(s,15),m=p[0],g=p[1],v=Du(f),_=v[0],y=v[1],x=Du(m),w=x[0],M=x[1],P=new Mt(19),b=0;b<_.length;++b)P[_[b]&31]++;for(var b=0;b<w.length;++b)P[w[b]&31]++;for(var T=Wa(P,7),I=T[0],F=T[1],B=19;B>4&&!I[xo[B-1]];--B);var j=l+5<<3,D=Xr(i,Jn)+Xr(s,Ms)+o,k=Xr(i,f)+Xr(s,m)+o+14+3*B+Xr(P,I)+(2*P[16]+3*P[17]+7*P[18]);if(j<=D&&j<=k)return to(e,u,r.subarray(c,c+l));var O,G,$,z;if(Tn(e,u,1+(k<D)),u+=2,k<D){O=sn(f,d,0),G=f,$=sn(m,g,0),z=m;var V=sn(I,F,0);Tn(e,u,y-257),Tn(e,u+5,M-1),Tn(e,u+10,B-4),u+=14;for(var b=0;b<B;++b)Tn(e,u+3*b,I[xo[b]]);u+=3*B;for(var Q=[_,w],Y=0;Y<2;++Y)for(var ne=Q[Y],b=0;b<ne.length;++b){var fe=ne[b]&31;Tn(e,u,V[fe]),u+=I[fe],fe>15&&(Tn(e,u,ne[b]>>>5&127),u+=ne[b]>>>12)}}else O=R0,G=Jn,$=F0,z=Ms;for(var b=0;b<a;++b)if(n[b]>255){var fe=n[b]>>>18&31;Wr(e,u,O[fe+257]),u+=G[fe+257],fe>7&&(Tn(e,u,n[b]>>>23&31),u+=Ps[fe]);var ge=n[b]&31;Wr(e,u,$[ge]),u+=z[ge],ge>3&&(Wr(e,u,n[b]>>>5&8191),u+=Ls[ge])}else Wr(e,u,O[n[b]]),u+=G[n[b]];return Wr(e,u,O[256]),u+G[256]},N0=new Zn([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),Hn=new Ve(0),z0=function(r,e,t,n,i,s){var o=r.length,a=new Ve(n+o+5*(1+Math.ceil(o/7e3))+i),c=a.subarray(n,a.length-i),l=0;if(!e||o<8)for(var u=0;u<=o;u+=65535){var h=u+65535;h<o?l=to(c,l,r.subarray(u,h)):(c[u]=s,l=to(c,l,r.subarray(u,o)))}else{for(var f=N0[e-1],d=f>>>13,p=f&8191,m=(1<<t)-1,g=new Mt(32768),v=new Mt(m+1),_=Math.ceil(t/3),y=2*_,x=function(ie){return(r[ie]^r[ie+1]<<_^r[ie+2]<<y)&m},w=new Zn(25e3),M=new Mt(288),P=new Mt(32),b=0,T=0,u=0,I=0,F=0,B=0;u<o;++u){var j=x(u),D=u&32767,k=v[j];if(g[D]=k,v[j]=D,F<=u){var O=o-u;if((b>7e3||I>24576)&&O>423){l=Fu(r,c,0,w,M,P,T,I,B,u-B,l),I=b=T=0,B=u;for(var G=0;G<286;++G)M[G]=0;for(var G=0;G<30;++G)P[G]=0}var $=2,z=0,V=p,Q=D-k&32767;if(O>2&&j==x(u-Q))for(var Y=Math.min(d,O)-1,ne=Math.min(32767,u),fe=Math.min(258,O);Q<=ne&&--V&&D!=k;){if(r[u+$]==r[u+$-Q]){for(var ge=0;ge<fe&&r[u+ge]==r[u+ge-Q];++ge);if(ge>$){if($=ge,z=Q,ge>Y)break;for(var X=Math.min(Q,ge-2),Ue=0,G=0;G<X;++G){var Se=u-Q+G+32768&32767,Ce=g[Se],he=Se-Ce+32768&32767;he>Ue&&(Ue=he,k=Se)}}}D=k,k=g[D],Q+=D-k+32768&32767}if(z){w[I++]=268435456|cc[$]<<18|Ru[z];var Ie=cc[$]&31,J=Ru[z]&31;T+=Ps[Ie]+Ls[J],++M[257+Ie],++P[J],F=u+$,++b}else w[I++]=r[u],++M[r[u]]}}l=Fu(r,c,s,w,M,P,T,I,B,u-B,l),!s&&l&7&&(l=to(c,l+1,Hn))}return on(a,0,n+Ro(l)+i)},k0=function(){for(var r=new Zn(256),e=0;e<256;++e){for(var t=e,n=9;--n;)t=(t&1&&3988292384)^t>>>1;r[e]=t}return r}(),Is=function(){var r=-1;return{p:function(e){for(var t=r,n=0;n<e.length;++n)t=k0[t&255^e[n]]^t>>>8;r=t},d:function(){return~r}}},$h=function(){var r=1,e=0;return{p:function(t){for(var n=r,i=e,s=t.length,o=0;o!=s;){for(var a=Math.min(o+2655,s);o<a;++o)i+=n+=t[o];n=(n&65535)+15*(n>>16),i=(i&65535)+15*(i>>16)}r=n,e=i},d:function(){return r%=65521,e%=65521,(r&255)<<24|r>>>8<<16|(e&255)<<8|e>>>8}}},br=function(r,e,t,n,i){return z0(r,e.level==null?6:e.level,e.mem==null?Math.ceil(Math.max(8,Math.min(13,Math.log(r.length)))*1.5):12+e.mem,t,n,!i)},Fo=function(r,e){var t={};for(var n in r)t[n]=r[n];for(var n in e)t[n]=e[n];return t},pp=function(r,e,t){for(var n=r(),i=r.toString(),s=i.slice(i.indexOf("[")+1,i.lastIndexOf("]")).replace(/ /g,"").split(","),o=0;o<n.length;++o){var a=n[o],c=s[o];if(typeof a=="function"){e+=";"+c+"=";var l=a.toString();if(a.prototype)if(l.indexOf("[native code]")!=-1){var u=l.indexOf(" ",8)+1;e+=l.slice(u,l.indexOf("(",u))}else{e+=l;for(var h in a.prototype)e+=";"+c+".prototype."+h+"="+a.prototype[h].toString()}else e+=l}else t[c]=a}return[e,t]},Ea=[],mA=function(r){var e=[];for(var t in r)(r[t]instanceof Ve||r[t]instanceof Mt||r[t]instanceof Zn)&&e.push((r[t]=new r[t].constructor(r[t])).buffer);return e},B0=function(r,e,t,n){var i;if(!Ea[t]){for(var s="",o={},a=r.length-1,c=0;c<a;++c)i=pp(r[c],s,o),s=i[0],o=i[1];Ea[t]=pp(r[a],s,o)}var l=Fo({},Ea[t][1]);return pA(Ea[t][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",t,l,mA(l),n)},Rs=function(){return[Ve,Mt,Zn,Ps,Ls,xo,Xh,I0,D0,O0,bo,sn,Ga,nn,Ha,Ro,on,Do,Ns,Ti,qh]},Ds=function(){return[Ve,Mt,Zn,Ps,Ls,xo,cc,Ru,R0,Jn,F0,Ms,bo,N0,Hn,sn,Tn,Wr,Wa,lc,Du,Xr,to,Fu,Ro,on,z0,br,Oo,Ti]},U0=function(){return[jh,Zh,Ye,Is,k0]},V0=function(){return[Yh,W0]},G0=function(){return[Jh,Ye,$h]},H0=function(){return[X0]},Ti=function(r){return postMessage(r,[r.buffer])},qh=function(r){return r&&r.size&&new Ve(r.size)},Fs=function(r,e,t,n,i,s){var o=B0(t,n,i,function(a,c){o.terminate(),s(a,c)});return o.postMessage([r,e],e.consume?[r.buffer]:[]),function(){o.terminate()}},an=function(r){return r.ondata=function(e,t){return postMessage([e,t],[e.buffer])},function(e){return r.push(e.data[0],e.data[1])}},Os=function(r,e,t,n,i){var s,o=B0(r,n,i,function(a,c){a?(o.terminate(),e.ondata.call(e,a)):(c[1]&&o.terminate(),e.ondata.call(e,a,c[0],c[1]))});o.postMessage(t),e.push=function(a,c){if(s)throw"stream finished";if(!e.ondata)throw"no stream handler";o.postMessage([a,s=c],[a.buffer])},e.terminate=function(){o.terminate()}},Dt=function(r,e){return r[e]|r[e+1]<<8},ft=function(r,e){return(r[e]|r[e+1]<<8|r[e+2]<<16|r[e+3]<<24)>>>0},Fl=function(r,e){return ft(r,e)+ft(r,e+4)*4294967296},Ye=function(r,e,t){for(;t;++e)r[e]=t,t>>>=8},jh=function(r,e){var t=e.filename;if(r[0]=31,r[1]=139,r[2]=8,r[8]=e.level<2?4:e.level==9?2:0,r[9]=3,e.mtime!=0&&Ye(r,4,Math.floor(new Date(e.mtime||Date.now())/1e3)),t){r[3]=8;for(var n=0;n<=t.length;++n)r[n+10]=t.charCodeAt(n)}},Yh=function(r){if(r[0]!=31||r[1]!=139||r[2]!=8)throw"invalid gzip data";var e=r[3],t=10;e&4&&(t+=r[10]|(r[11]<<8)+2);for(var n=(e>>3&1)+(e>>4&1);n>0;n-=!r[t++]);return t+(e&2)},W0=function(r){var e=r.length;return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0},Zh=function(r){return 10+(r.filename&&r.filename.length+1||0)},Jh=function(r,e){var t=e.level,n=t==0?0:t<6?1:t==9?3:2;r[0]=120,r[1]=n<<6|(n?32-2*n:1)},X0=function(r){if((r[0]&15)!=8||r[0]>>>4>7||(r[0]<<8|r[1])%31)throw"invalid zlib data";if(r[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function Kh(r,e){return!e&&typeof r=="function"&&(e=r,r={}),this.ondata=e,r}var Dn=function(){function r(e,t){!t&&typeof e=="function"&&(t=e,e={}),this.ondata=t,this.o=e||{}}return r.prototype.p=function(e,t){this.ondata(br(e,this.o,0,0,!t),t)},r.prototype.push=function(e,t){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=t,this.p(e,t||!1)},r}(),$0=function(){function r(e,t){Os([Ds,function(){return[an,Dn]}],this,Kh.call(this,e,t),function(n){var i=new Dn(n.data);onmessage=an(i)},6)}return r}();function q0(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Fs(r,e,[Ds],function(n){return Ti(Oo(n.data[0],n.data[1]))},0,t)}function Oo(r,e){return br(r,e||{},0,0)}var Vt=function(){function r(e){this.s={},this.p=new Ve(0),this.ondata=e}return r.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var t=this.p.length,n=new Ve(t+e.length);n.set(this.p),n.set(e,t),this.p=n},r.prototype.c=function(e){this.d=this.s.i=e||!1;var t=this.s.b,n=Do(this.p,this.o,this.s);this.ondata(on(n,t,this.s.b),this.d),this.o=on(n,this.s.b-32768),this.s.b=this.o.length,this.p=on(this.p,this.s.p/8|0),this.s.p&=7},r.prototype.push=function(e,t){this.e(e),this.c(t)},r}(),Qh=function(){function r(e){this.ondata=e,Os([Rs,function(){return[an,Vt]}],this,0,function(){var t=new Vt;onmessage=an(t)},7)}return r}();function ef(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Fs(r,e,[Rs],function(n){return Ti(Ns(n.data[0],qh(n.data[1])))},1,t)}function Ns(r,e){return Do(r,e)}var uc=function(){function r(e,t){this.c=Is(),this.l=0,this.v=1,Dn.call(this,e,t)}return r.prototype.push=function(e,t){Dn.prototype.push.call(this,e,t)},r.prototype.p=function(e,t){this.c.p(e),this.l+=e.length;var n=br(e,this.o,this.v&&Zh(this.o),t&&8,!t);this.v&&(jh(n,this.o),this.v=0),t&&(Ye(n,n.length-8,this.c.d()),Ye(n,n.length-4,this.l)),this.ondata(n,t)},r}(),mp=function(){function r(e,t){Os([Ds,U0,function(){return[an,Dn,uc]}],this,Kh.call(this,e,t),function(n){var i=new uc(n.data);onmessage=an(i)},8)}return r}();function gp(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Fs(r,e,[Ds,U0,function(){return[hc]}],function(n){return Ti(hc(n.data[0],n.data[1]))},2,t)}function hc(r,e){e||(e={});var t=Is(),n=r.length;t.p(r);var i=br(r,e,Zh(e),8),s=i.length;return jh(i,e),Ye(i,s-8,t.d()),Ye(i,s-4,n),i}var fc=function(){function r(e){this.v=1,Vt.call(this,e)}return r.prototype.push=function(e,t){if(Vt.prototype.e.call(this,e),this.v){var n=this.p.length>3?Yh(this.p):4;if(n>=this.p.length&&!t)return;this.p=this.p.subarray(n),this.v=0}if(t){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}Vt.prototype.c.call(this,t)},r}(),j0=function(){function r(e){this.ondata=e,Os([Rs,V0,function(){return[an,Vt,fc]}],this,0,function(){var t=new fc;onmessage=an(t)},9)}return r}();function Y0(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Fs(r,e,[Rs,V0,function(){return[dc]}],function(n){return Ti(dc(n.data[0]))},3,t)}function dc(r,e){return Do(r.subarray(Yh(r),-8),e||new Ve(W0(r)))}var Ou=function(){function r(e,t){this.c=$h(),this.v=1,Dn.call(this,e,t)}return r.prototype.push=function(e,t){Dn.prototype.push.call(this,e,t)},r.prototype.p=function(e,t){this.c.p(e);var n=br(e,this.o,this.v&&2,t&&4,!t);this.v&&(Jh(n,this.o),this.v=0),t&&Ye(n,n.length-4,this.c.d()),this.ondata(n,t)},r}(),gA=function(){function r(e,t){Os([Ds,G0,function(){return[an,Dn,Ou]}],this,Kh.call(this,e,t),function(n){var i=new Ou(n.data);onmessage=an(i)},10)}return r}();function vA(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Fs(r,e,[Ds,G0,function(){return[Nu]}],function(n){return Ti(Nu(n.data[0],n.data[1]))},4,t)}function Nu(r,e){e||(e={});var t=$h();t.p(r);var n=br(r,e,2,4);return Jh(n,e),Ye(n,n.length-4,t.d()),n}var pc=function(){function r(e){this.v=1,Vt.call(this,e)}return r.prototype.push=function(e,t){if(Vt.prototype.e.call(this,e),this.v){if(this.p.length<2&&!t)return;this.p=this.p.subarray(2),this.v=0}if(t){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}Vt.prototype.c.call(this,t)},r}(),Z0=function(){function r(e){this.ondata=e,Os([Rs,H0,function(){return[an,Vt,pc]}],this,0,function(){var t=new pc;onmessage=an(t)},11)}return r}();function J0(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Fs(r,e,[Rs,H0,function(){return[wo]}],function(n){return Ti(wo(n.data[0],qh(n.data[1])))},5,t)}function wo(r,e){return Do((X0(r),r.subarray(2,-4)),e)}var K0=function(){function r(e){this.G=fc,this.I=Vt,this.Z=pc,this.ondata=e}return r.prototype.push=function(e,t){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,t);else{if(this.p&&this.p.length){var n=new Ve(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var i=this,s=function(){i.ondata.apply(i,arguments)};this.s=this.p[0]==31&&this.p[1]==139&&this.p[2]==8?new this.G(s):(this.p[0]&15)!=8||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(s):new this.Z(s),this.s.push(this.p,t),this.p=null}}},r}(),_A=function(){function r(e){this.G=j0,this.I=Qh,this.Z=Z0,this.ondata=e}return r.prototype.push=function(e,t){K0.prototype.push.call(this,e,t)},r}();function yA(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return r[0]==31&&r[1]==139&&r[2]==8?Y0(r,e,t):(r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31?ef(r,e,t):J0(r,e,t)}function xA(r,e){return r[0]==31&&r[1]==139&&r[2]==8?dc(r,e):(r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31?Ns(r,e):wo(r,e)}var tf=function(r,e,t,n){for(var i in r){var s=r[i],o=e+i;s instanceof Ve?t[o]=[s,n]:Array.isArray(s)?t[o]=[s[0],Fo(n,s[1])]:tf(s,o+"/",t,n)}},vp=typeof TextEncoder<"u"&&new TextEncoder,zu=typeof TextDecoder<"u"&&new TextDecoder,Q0=0;try{zu.decode(Hn,{stream:!0}),Q0=1}catch{}var ev=function(r){for(var e="",t=0;;){var n=r[t++],i=(n>127)+(n>223)+(n>239);if(t+i>r.length)return[e,on(r,t-1)];i?i==3?(n=((n&15)<<18|(r[t++]&63)<<12|(r[t++]&63)<<6|r[t++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):i&1?e+=String.fromCharCode((n&31)<<6|r[t++]&63):e+=String.fromCharCode((n&15)<<12|(r[t++]&63)<<6|r[t++]&63):e+=String.fromCharCode(n)}},bA=function(){function r(e){this.ondata=e,Q0?this.t=new TextDecoder:this.p=Hn}return r.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(t=!!t,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),t),t){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}return}if(!this.p)throw"stream finished";var n=new Ve(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length);var i=ev(n),s=i[0],o=i[1];if(t){if(o.length)throw"invalid utf-8 data";this.p=null}else this.p=o;this.ondata(s,t)},r}(),wA=function(){function r(e){this.ondata=e}return r.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(wi(e),this.d=t||!1)},r}();function wi(r,e){if(e){for(var t=new Ve(r.length),n=0;n<r.length;++n)t[n]=r.charCodeAt(n);return t}if(vp)return vp.encode(r);for(var i=r.length,s=new Ve(r.length+(r.length>>1)),o=0,a=function(u){s[o++]=u},n=0;n<i;++n){if(o+5>s.length){var c=new Ve(o+8+(i-n<<1));c.set(s),s=c}var l=r.charCodeAt(n);l<128||e?a(l):l<2048?(a(192|l>>6),a(128|l&63)):l>55295&&l<57344?(l=65536+(l&1023<<10)|r.charCodeAt(++n)&1023,a(240|l>>18),a(128|l>>12&63),a(128|l>>6&63),a(128|l&63)):(a(224|l>>12),a(128|l>>6&63),a(128|l&63))}return on(s,0,o)}function nf(r,e){if(e){for(var t="",n=0;n<r.length;n+=16384)t+=String.fromCharCode.apply(null,r.subarray(n,n+16384));return t}else{if(zu)return zu.decode(r);var i=ev(r),s=i[0],o=i[1];if(o.length)throw"invalid utf-8 data";return s}}var tv=function(r){return r==1?3:r<6?2:r==9?1:0},nv=function(r,e){return e+30+Dt(r,e+26)+Dt(r,e+28)},iv=function(r,e,t){var n=Dt(r,e+28),i=nf(r.subarray(e+46,e+46+n),!(Dt(r,e+8)&2048)),s=e+46+n,o=ft(r,e+20),a=t&&o==4294967295?rv(r,s):[o,ft(r,e+24),ft(r,e+42)],c=a[0],l=a[1],u=a[2];return[Dt(r,e+10),c,l,i,s+Dt(r,e+30)+Dt(r,e+32),u]},rv=function(r,e){for(;Dt(r,e)!=1;e+=4+Dt(r,e+2));return[Fl(r,e+12),Fl(r,e+4),Fl(r,e+20)]},pi=function(r){var e=0;if(r)for(var t in r){var n=r[t].length;if(n>65535)throw"extra field too long";e+=n+4}return e},Ss=function(r,e,t,n,i,s,o,a){var c=n.length,l=t.extra,u=a&&a.length,h=pi(l);Ye(r,e,o!=null?33639248:67324752),e+=4,o!=null&&(r[e++]=20,r[e++]=t.os),r[e]=20,e+=2,r[e++]=t.flag<<1|(s==null&&8),r[e++]=i&&8,r[e++]=t.compression&255,r[e++]=t.compression>>8;var f=new Date(t.mtime==null?Date.now():t.mtime),d=f.getFullYear()-1980;if(d<0||d>119)throw"date not in range 1980-2099";if(Ye(r,e,d<<25|f.getMonth()+1<<21|f.getDate()<<16|f.getHours()<<11|f.getMinutes()<<5|f.getSeconds()>>>1),e+=4,s!=null&&(Ye(r,e,t.crc),Ye(r,e+4,s),Ye(r,e+8,t.size)),Ye(r,e+12,c),Ye(r,e+14,h),e+=16,o!=null&&(Ye(r,e,u),Ye(r,e+6,t.attrs),Ye(r,e+10,o),e+=14),r.set(n,e),e+=c,h)for(var p in l){var m=l[p],g=m.length;Ye(r,e,+p),Ye(r,e+2,g),r.set(m,e+4),e+=4+g}return u&&(r.set(a,e),e+=u),e},rf=function(r,e,t,n,i){Ye(r,e,101010256),Ye(r,e+8,t),Ye(r,e+10,t),Ye(r,e+12,n),Ye(r,e+16,i)},Mo=function(){function r(e){this.filename=e,this.c=Is(),this.size=0,this.compression=0}return r.prototype.process=function(e,t){this.ondata(null,e,t)},r.prototype.push=function(e,t){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,t&&(this.crc=this.c.d()),this.process(e,t||!1)},r}(),MA=function(){function r(e,t){var n=this;t||(t={}),Mo.call(this,e),this.d=new Dn(t,function(i,s){n.ondata(null,i,s)}),this.compression=8,this.flag=tv(t.level)}return r.prototype.process=function(e,t){try{this.d.push(e,t)}catch(n){this.ondata(n,null,t)}},r.prototype.push=function(e,t){Mo.prototype.push.call(this,e,t)},r}(),SA=function(){function r(e,t){var n=this;t||(t={}),Mo.call(this,e),this.d=new $0(t,function(i,s,o){n.ondata(i,s,o)}),this.compression=8,this.flag=tv(t.level),this.terminate=this.d.terminate}return r.prototype.process=function(e,t){this.d.push(e,t)},r.prototype.push=function(e,t){Mo.prototype.push.call(this,e,t)},r}(),AA=function(){function r(e){this.ondata=e,this.u=[],this.d=1}return r.prototype.add=function(e){var t=this;if(this.d&2)throw"stream finished";var n=wi(e.filename),i=n.length,s=e.comment,o=s&&wi(s),a=i!=e.filename.length||o&&s.length!=o.length,c=i+pi(e.extra)+30;if(i>65535)throw"filename too long";var l=new Ve(c);Ss(l,0,e,n,a);var u=[l],h=function(){for(var g=0,v=u;g<v.length;g++){var _=v[g];t.ondata(null,_,!1)}u=[]},f=this.d;this.d=0;var d=this.u.length,p=Fo(e,{f:n,u:a,o,t:function(){e.terminate&&e.terminate()},r:function(){if(h(),f){var g=t.u[d+1];g?g.r():t.d=1}f=1}}),m=0;e.ondata=function(g,v,_){if(g)t.ondata(g,v,_),t.terminate();else if(m+=v.length,u.push(v),_){var y=new Ve(16);Ye(y,0,134695760),Ye(y,4,e.crc),Ye(y,8,m),Ye(y,12,e.size),u.push(y),p.c=m,p.b=c+m+16,p.crc=e.crc,p.size=e.size,f&&p.r(),f=1}else f&&h()},this.u.push(p)},r.prototype.end=function(){var e=this;if(this.d&2)throw this.d&1?"stream finishing":"stream finished";this.d?this.e():this.u.push({r:function(){!(e.d&1)||(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},r.prototype.e=function(){for(var e=0,t=0,n=0,i=0,s=this.u;i<s.length;i++){var o=s[i];n+=46+o.f.length+pi(o.extra)+(o.o?o.o.length:0)}for(var a=new Ve(n+22),c=0,l=this.u;c<l.length;c++){var o=l[c];Ss(a,e,o,o.f,o.u,o.c,t,o.o),e+=46+o.f.length+pi(o.extra)+(o.o?o.o.length:0),t+=o.b}rf(a,e,this.u.length,n,t),this.ondata(null,a,!0),this.d=2},r.prototype.terminate=function(){for(var e=0,t=this.u;e<t.length;e++){var n=t[e];n.t()}this.d=2},r}();function TA(r,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";var n={};tf(r,"",n,e);var i=Object.keys(n),s=i.length,o=0,a=0,c=s,l=new Array(s),u=[],h=function(){for(var m=0;m<u.length;++m)u[m]()},f=function(){var m=new Ve(a+22),g=o,v=a-o;a=0;for(var _=0;_<c;++_){var y=l[_];try{var x=y.c.length;Ss(m,a,y,y.f,y.u,x);var w=30+y.f.length+pi(y.extra),M=a+w;m.set(y.c,M),Ss(m,o,y,y.f,y.u,x,a,y.m),o+=16+w+(y.m?y.m.length:0),a=M+x}catch(P){return t(P,null)}}rf(m,o,l.length,v,g),t(null,m)};s||f();for(var d=function(m){var g=i[m],v=n[g],_=v[0],y=v[1],x=Is(),w=_.length;x.p(_);var M=wi(g),P=M.length,b=y.comment,T=b&&wi(b),I=T&&T.length,F=pi(y.extra),B=y.level==0?0:8,j=function(D,k){if(D)h(),t(D,null);else{var O=k.length;l[m]=Fo(y,{size:w,crc:x.d(),c:k,f:M,m:T,u:P!=g.length||T&&b.length!=I,compression:B}),o+=30+P+F+O,a+=76+2*(P+F)+(I||0)+O,--s||f()}};if(P>65535&&j("filename too long",null),!B)j(null,_);else if(w<16e4)try{j(null,Oo(_,y))}catch(D){j(D,null)}else u.push(q0(_,y,j))},p=0;p<c;++p)d(p);return h}function EA(r,e){e||(e={});var t={},n=[];tf(r,"",t,e);var i=0,s=0;for(var o in t){var a=t[o],c=a[0],l=a[1],u=l.level==0?0:8,h=wi(o),f=h.length,d=l.comment,p=d&&wi(d),m=p&&p.length,g=pi(l.extra);if(f>65535)throw"filename too long";var v=u?Oo(c,l):c,_=v.length,y=Is();y.p(c),n.push(Fo(l,{size:c.length,crc:y.d(),c:v,f:h,m:p,u:f!=o.length||p&&d.length!=m,o:i,compression:u})),i+=30+f+g+_,s+=76+2*(f+g)+(m||0)+_}for(var x=new Ve(s+22),w=i,M=s-i,P=0;P<n.length;++P){var h=n[P];Ss(x,h.o,h,h.f,h.u,h.c.length);var b=30+h.f.length+pi(h.extra);x.set(h.c,h.o+b),Ss(x,i,h,h.f,h.u,h.c.length,h.o,h.m),i+=16+b+(h.m?h.m.length:0)}return rf(x,i,n.length,M,w),x}var sv=function(){function r(){}return r.prototype.push=function(e,t){this.ondata(null,e,t)},r.compression=0,r}(),CA=function(){function r(){var e=this;this.i=new Vt(function(t,n){e.ondata(null,t,n)})}return r.prototype.push=function(e,t){try{this.i.push(e,t)}catch(n){this.ondata(n,e,t)}},r.compression=8,r}(),PA=function(){function r(e,t){var n=this;t<32e4?this.i=new Vt(function(i,s){n.ondata(null,i,s)}):(this.i=new Qh(function(i,s,o){n.ondata(i,s,o)}),this.terminate=this.i.terminate)}return r.prototype.push=function(e,t){this.i.terminate&&(e=on(e,0)),this.i.push(e,t)},r.compression=8,r}(),LA=function(){function r(e){this.onfile=e,this.k=[],this.o={0:sv},this.p=Hn}return r.prototype.push=function(e,t){var n=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var i=Math.min(this.c,e.length),s=e.subarray(0,i);if(this.c-=i,this.d?this.d.push(s,!this.c):this.k[0].push(s),e=e.subarray(i),e.length)return this.push(e,t)}else{var o=0,a=0,c=void 0,l=void 0;this.p.length?e.length?(l=new Ve(this.p.length+e.length),l.set(this.p),l.set(e,this.p.length)):l=this.p:l=e;for(var u=l.length,h=this.c,f=h&&this.d,d=function(){var v,_=ft(l,a);if(_==67324752){o=1,c=a,p.d=null,p.c=0;var y=Dt(l,a+6),x=Dt(l,a+8),w=y&2048,M=y&8,P=Dt(l,a+26),b=Dt(l,a+28);if(u>a+30+P+b){var T=[];p.k.unshift(T),o=2;var I=ft(l,a+18),F=ft(l,a+22),B=nf(l.subarray(a+30,a+=30+P),!w);I==4294967295?(v=M?[-2]:rv(l,a),I=v[0],F=v[1]):M&&(I=-1),a+=b,p.c=I;var j,D={name:B,compression:x,start:function(){if(!D.ondata)throw"no callback";if(!I)D.ondata(null,Hn,!0);else{var k=n.o[x];if(!k)throw"unknown compression type "+x;j=I<0?new k(B):new k(B,I,F),j.ondata=function(z,V,Q){D.ondata(z,V,Q)};for(var O=0,G=T;O<G.length;O++){var $=G[O];j.push($,!1)}n.k[0]==T&&n.c?n.d=j:j.push(Hn,!0)}},terminate:function(){j&&j.terminate&&j.terminate()}};I>=0&&(D.size=I,D.originalSize=F),p.onfile(D)}return"break"}else if(h){if(_==134695760)return c=a+=12+(h==-2&&8),o=3,p.c=0,"break";if(_==33639248)return c=a-=4,o=3,p.c=0,"break"}},p=this;a<u-4;++a){var m=d();if(m==="break")break}if(this.p=Hn,h<0){var g=o?l.subarray(0,c-12-(h==-2&&8)-(ft(l,c-16)==134695760&&4)):l.subarray(0,a);f?f.push(g,!!o):this.k[+(o==2)].push(g)}if(o&2)return this.push(l.subarray(a),t);this.p=l.subarray(a)}if(t){if(this.c)throw"invalid zip file";this.p=null}},r.prototype.register=function(e){this.o[e.compression]=e},r}();function IA(r,e){if(typeof e!="function")throw"no callback";for(var t=[],n=function(){for(var f=0;f<t.length;++f)t[f]()},i={},s=r.length-22;ft(r,s)!=101010256;--s)if(!s||r.length-s>65558){e("invalid zip file",null);return}var o=Dt(r,s+8);o||e(null,{});var a=o,c=ft(r,s+16),l=c==4294967295;if(l){if(s=ft(r,s-12),ft(r,s)!=101075792){e("invalid zip file",null);return}a=o=ft(r,s+32),c=ft(r,s+48)}for(var u=function(f){var d=iv(r,c,l),p=d[0],m=d[1],g=d[2],v=d[3],_=d[4],y=d[5],x=nv(r,y);c=_;var w=function(P,b){P?(n(),e(P,null)):(i[v]=b,--o||e(null,i))};if(!p)w(null,on(r,x,x+m));else if(p==8){var M=r.subarray(x,x+m);if(m<32e4)try{w(null,Ns(M,new Ve(g)))}catch(P){w(P,null)}else t.push(ef(M,{size:g},w))}else w("unknown compression type "+p,null)},h=0;h<a;++h)u();return n}function RA(r){for(var e={},t=r.length-22;ft(r,t)!=101010256;--t)if(!t||r.length-t>65558)throw"invalid zip file";var n=Dt(r,t+8);if(!n)return{};var i=ft(r,t+16),s=i==4294967295;if(s){if(t=ft(r,t-12),ft(r,t)!=101075792)throw"invalid zip file";n=ft(r,t+32),i=ft(r,t+48)}for(var o=0;o<n;++o){var a=iv(r,i,s),c=a[0],l=a[1],u=a[2],h=a[3],f=a[4],d=a[5],p=nv(r,d);if(i=f,!c)e[h]=on(r,p,p+l);else if(c==8)e[h]=Ns(r.subarray(p,p+l),new Ve(u));else throw"unknown compression type "+c}return e}const DA=Object.freeze(Object.defineProperty({__proto__:null,Deflate:Dn,AsyncDeflate:$0,deflate:q0,deflateSync:Oo,Inflate:Vt,AsyncInflate:Qh,inflate:ef,inflateSync:Ns,Gzip:uc,AsyncGzip:mp,gzip:gp,gzipSync:hc,Gunzip:fc,AsyncGunzip:j0,gunzip:Y0,gunzipSync:dc,Zlib:Ou,AsyncZlib:gA,zlib:vA,zlibSync:Nu,Unzlib:pc,AsyncUnzlib:Z0,unzlib:J0,unzlibSync:wo,compress:gp,AsyncCompress:mp,compressSync:hc,Compress:uc,Decompress:K0,AsyncDecompress:_A,decompress:yA,decompressSync:xA,DecodeUTF8:bA,EncodeUTF8:wA,strToU8:wi,strFromU8:nf,ZipPassThrough:Mo,ZipDeflate:MA,AsyncZipDeflate:SA,Zip:AA,zip:TA,zipSync:EA,UnzipPassThrough:sv,UnzipInflate:CA,AsyncUnzipInflate:PA,Unzip:LA,unzip:IA,unzipSync:RA},Symbol.toStringTag,{value:"Module"}));function ov(r,e,t){const n=t.length-r-1;if(e>=t[n])return n-1;if(e<=t[r])return r;let i=r,s=n,o=Math.floor((i+s)/2);for(;e<t[o]||e>=t[o+1];)e<t[o]?s=o:i=o,o=Math.floor((i+s)/2);return o}function FA(r,e,t,n){const i=[],s=[],o=[];i[0]=1;for(let a=1;a<=t;++a){s[a]=e-n[r+1-a],o[a]=n[r+a]-e;let c=0;for(let l=0;l<a;++l){const u=o[l+1],h=s[a-l],f=i[l]/(u+h);i[l]=c+u*f,c=h*f}i[a]=c}return i}function OA(r,e,t,n){const i=ov(r,n,e),s=FA(i,n,r,e),o=new He(0,0,0,0);for(let a=0;a<=r;++a){const c=t[i-r+a],l=s[a],u=c.w*l;o.x+=c.x*u,o.y+=c.y*u,o.z+=c.z*u,o.w+=c.w*l}return o}function NA(r,e,t,n,i){const s=[];for(let h=0;h<=t;++h)s[h]=0;const o=[];for(let h=0;h<=n;++h)o[h]=s.slice(0);const a=[];for(let h=0;h<=t;++h)a[h]=s.slice(0);a[0][0]=1;const c=s.slice(0),l=s.slice(0);for(let h=1;h<=t;++h){c[h]=e-i[r+1-h],l[h]=i[r+h]-e;let f=0;for(let d=0;d<h;++d){const p=l[d+1],m=c[h-d];a[h][d]=p+m;const g=a[d][h-1]/a[h][d];a[d][h]=f+p*g,f=m*g}a[h][h]=f}for(let h=0;h<=t;++h)o[0][h]=a[h][t];for(let h=0;h<=t;++h){let f=0,d=1;const p=[];for(let m=0;m<=t;++m)p[m]=s.slice(0);p[0][0]=1;for(let m=1;m<=n;++m){let g=0;const v=h-m,_=t-m;h>=m&&(p[d][0]=p[f][0]/a[_+1][v],g=p[d][0]*a[v][_]);const y=v>=-1?1:-v,x=h-1<=_?m-1:t-h;for(let M=y;M<=x;++M)p[d][M]=(p[f][M]-p[f][M-1])/a[_+1][v+M],g+=p[d][M]*a[v+M][_];h<=_&&(p[d][m]=-p[f][m-1]/a[_+1][h],g+=p[d][m]*a[h][_]),o[m][h]=g;const w=f;f=d,d=w}}let u=t;for(let h=1;h<=n;++h){for(let f=0;f<=t;++f)o[h][f]*=u;u*=t-h}return o}function zA(r,e,t,n,i){const s=i<r?i:r,o=[],a=ov(r,n,e),c=NA(a,n,r,s,e),l=[];for(let u=0;u<t.length;++u){const h=t[u].clone(),f=h.w;h.x*=f,h.y*=f,h.z*=f,l[u]=h}for(let u=0;u<=s;++u){const h=l[a-r].clone().multiplyScalar(c[u][0]);for(let f=1;f<=r;++f)h.add(l[a-r+f].clone().multiplyScalar(c[u][f]));o[u]=h}for(let u=s+1;u<=i+1;++u)o[u]=new He(0,0,0);return o}function kA(r,e){let t=1;for(let i=2;i<=r;++i)t*=i;let n=1;for(let i=2;i<=e;++i)n*=i;for(let i=2;i<=r-e;++i)n*=i;return t/n}function BA(r){const e=r.length,t=[],n=[];for(let s=0;s<e;++s){const o=r[s];t[s]=new A(o.x,o.y,o.z),n[s]=o.w}const i=[];for(let s=0;s<e;++s){const o=t[s].clone();for(let a=1;a<=s;++a)o.sub(i[s-a].clone().multiplyScalar(kA(s,a)*n[a]));i[s]=o.divideScalar(n[0])}return i}function UA(r,e,t,n,i){const s=zA(r,e,t,n,i);return BA(s)}class _p extends cn{constructor(e,t,n,i,s){super(),this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=i||0,this.endKnot=s||this.knots.length-1;for(let o=0;o<n.length;++o){const a=n[o];this.controlPoints[o]=new He(a.x,a.y,a.z,a.w)}}getPoint(e,t=new A){const n=t,i=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),s=OA(this.degree,this.knots,this.controlPoints,i);return s.w!==1&&s.divideScalar(s.w),n.set(s.x,s.y,s.z)}getTangent(e,t=new A){const n=t,i=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),s=UA(this.degree,this.knots,this.controlPoints,i,1);return n.copy(s[1]).normalize(),n}}let ke,lt,kt;class VA extends Wt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=s.path===""?ws.extractUrlBase(e):s.path,a=new Rn(this.manager);a.setPath(s.path),a.setResponseType("arraybuffer"),a.setRequestHeader(s.requestHeader),a.setWithCredentials(s.withCredentials),a.load(e,function(c){try{t(s.parse(c,o))}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}parse(e,t){if(qA(e))ke=new $A().parse(e);else{const i=uv(e);if(!jA(i))throw new Error("THREE.FBXLoader: Unknown format.");if(xp(i)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+xp(i));ke=new XA().parse(i)}const n=new xr(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new GA(n,this.manager).parse(ke)}}class GA{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){lt=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),n=this.parseMaterials(t),i=this.parseDeformers(),s=new HA().parse(i);return this.parseScene(i,s,n),kt}parseConnections(){const e=new Map;return"Connections"in ke&&ke.Connections.connections.forEach(function(n){const i=n[0],s=n[1],o=n[2];e.has(i)||e.set(i,{parents:[],children:[]});const a={ID:s,relationship:o};e.get(i).parents.push(a),e.has(s)||e.set(s,{parents:[],children:[]});const c={ID:i,relationship:o};e.get(s).children.push(c)}),e}parseImages(){const e={},t={};if("Video"in ke.Objects){const n=ke.Objects.Video;for(const i in n){const s=n[i],o=parseInt(i);if(e[o]=s.RelativeFilename||s.Filename,"Content"in s){const a=s.Content instanceof ArrayBuffer&&s.Content.byteLength>0,c=typeof s.Content=="string"&&s.Content!=="";if(a||c){const l=this.parseImage(n[i]);t[s.RelativeFilename||s.Filename]=l}}}}for(const n in e){const i=e[n];t[i]!==void 0?e[n]=t[i]:e[n]=e[n].split("\\").pop()}return e}parseImage(e){const t=e.Content,n=e.RelativeFilename||e.Filename,i=n.slice(n.lastIndexOf(".")+1).toLowerCase();let s;switch(i){case"bmp":s="image/bmp";break;case"jpg":case"jpeg":s="image/jpeg";break;case"png":s="image/png";break;case"tif":s="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",n),s="image/tga";break;default:console.warn('FBXLoader: Image type "'+i+'" is not supported.');return}if(typeof t=="string")return"data:"+s+";base64,"+t;{const o=new Uint8Array(t);return window.URL.createObjectURL(new Blob([o],{type:s}))}}parseTextures(e){const t=new Map;if("Texture"in ke.Objects){const n=ke.Objects.Texture;for(const i in n){const s=this.parseTexture(n[i],e);t.set(parseInt(i),s)}}return t}parseTexture(e,t){const n=this.loadTexture(e,t);n.ID=e.id,n.name=e.attrName;const i=e.WrapModeU,s=e.WrapModeV,o=i!==void 0?i.value:0,a=s!==void 0?s.value:0;if(n.wrapS=o===0?ir:St,n.wrapT=a===0?ir:St,"Scaling"in e){const c=e.Scaling.value;n.repeat.x=c[0],n.repeat.y=c[1]}if("Translation"in e){const c=e.Translation.value;n.offset.x=c[0],n.offset.y=c[1]}return n}loadTexture(e,t){let n;const i=this.textureLoader.path,s=lt.get(e.id).children;s!==void 0&&s.length>0&&t[s[0].ID]!==void 0&&(n=t[s[0].ID],(n.indexOf("blob:")===0||n.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let o;const a=e.FileName.slice(-3).toLowerCase();if(a==="tga"){const c=this.manager.getHandler(".tga");c===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),o=new pt):(c.setPath(this.textureLoader.path),o=c.load(n))}else a==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),o=new pt):o=this.textureLoader.load(n);return this.textureLoader.setPath(i),o}parseMaterials(e){const t=new Map;if("Material"in ke.Objects){const n=ke.Objects.Material;for(const i in n){const s=this.parseMaterial(n[i],e);s!==null&&t.set(parseInt(i),s)}}return t}parseMaterial(e,t){const n=e.id,i=e.attrName;let s=e.ShadingModel;if(typeof s=="object"&&(s=s.value),!lt.has(n))return null;const o=this.parseParameters(e,t,n);let a;switch(s.toLowerCase()){case"phong":a=new eo;break;case"lambert":a=new Oh;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',s),a=new eo;break}return a.setValues(o),a.name=i,a}parseParameters(e,t,n){const i={};e.BumpFactor&&(i.bumpScale=e.BumpFactor.value),e.Diffuse?i.color=new oe().fromArray(e.Diffuse.value):e.DiffuseColor&&(e.DiffuseColor.type==="Color"||e.DiffuseColor.type==="ColorRGB")&&(i.color=new oe().fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(i.displacementScale=e.DisplacementFactor.value),e.Emissive?i.emissive=new oe().fromArray(e.Emissive.value):e.EmissiveColor&&(e.EmissiveColor.type==="Color"||e.EmissiveColor.type==="ColorRGB")&&(i.emissive=new oe().fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(i.opacity=parseFloat(e.Opacity.value)),i.opacity<1&&(i.transparent=!0),e.ReflectionFactor&&(i.reflectivity=e.ReflectionFactor.value),e.Shininess&&(i.shininess=e.Shininess.value),e.Specular?i.specular=new oe().fromArray(e.Specular.value):e.SpecularColor&&e.SpecularColor.type==="Color"&&(i.specular=new oe().fromArray(e.SpecularColor.value));const s=this;return lt.get(n).children.forEach(function(o){const a=o.relationship;switch(a){case"Bump":i.bumpMap=s.getTexture(t,o.ID);break;case"Maya|TEX_ao_map":i.aoMap=s.getTexture(t,o.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":i.map=s.getTexture(t,o.ID),i.map!==void 0&&(i.map.encoding=Ge);break;case"DisplacementColor":i.displacementMap=s.getTexture(t,o.ID);break;case"EmissiveColor":i.emissiveMap=s.getTexture(t,o.ID),i.emissiveMap!==void 0&&(i.emissiveMap.encoding=Ge);break;case"NormalMap":case"Maya|TEX_normal_map":i.normalMap=s.getTexture(t,o.ID);break;case"ReflectionColor":i.envMap=s.getTexture(t,o.ID),i.envMap!==void 0&&(i.envMap.mapping=rs,i.envMap.encoding=Ge);break;case"SpecularColor":i.specularMap=s.getTexture(t,o.ID),i.specularMap!==void 0&&(i.specularMap.encoding=Ge);break;case"TransparentColor":case"TransparencyFactor":i.alphaMap=s.getTexture(t,o.ID),i.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",a);break}}),i}getTexture(e,t){return"LayeredTexture"in ke.Objects&&t in ke.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=lt.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in ke.Objects){const n=ke.Objects.Deformer;for(const i in n){const s=n[i],o=lt.get(parseInt(i));if(s.attrType==="Skin"){const a=this.parseSkeleton(o,n);a.ID=i,o.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),a.geometryID=o.parents[0].ID,e[i]=a}else if(s.attrType==="BlendShape"){const a={id:i};a.rawTargets=this.parseMorphTargets(o,n),a.id=i,o.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[i]=a}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const n=[];return e.children.forEach(function(i){const s=t[i.ID];if(s.attrType!=="Cluster")return;const o={ID:i.ID,indices:[],weights:[],transformLink:new xe().fromArray(s.TransformLink.a)};"Indexes"in s&&(o.indices=s.Indexes.a,o.weights=s.Weights.a),n.push(o)}),{rawBones:n,bones:[]}}parseMorphTargets(e,t){const n=[];for(let i=0;i<e.children.length;i++){const s=e.children[i],o=t[s.ID],a={name:o.attrName,initialWeight:o.DeformPercent,id:o.id,fullWeights:o.FullWeights.a};if(o.attrType!=="BlendShapeChannel")return;a.geoID=lt.get(parseInt(s.ID)).children.filter(function(c){return c.relationship===void 0})[0].ID,n.push(a)}return n}parseScene(e,t,n){kt=new fi;const i=this.parseModels(e.skeletons,t,n),s=ke.Objects.Model,o=this;i.forEach(function(c){const l=s[c.ID];o.setLookAtProperties(c,l),lt.get(c.ID).parents.forEach(function(h){const f=i.get(h.ID);f!==void 0&&f.add(c)}),c.parent===null&&kt.add(c)}),this.bindSkeleton(e.skeletons,t,i),this.createAmbientLight(),kt.traverse(function(c){if(c.userData.transformData){c.parent&&(c.userData.transformData.parentMatrix=c.parent.matrix,c.userData.transformData.parentMatrixWorld=c.parent.matrixWorld);const l=cv(c.userData.transformData);c.applyMatrix4(l),c.updateWorldMatrix()}});const a=new WA().parse();kt.children.length===1&&kt.children[0].isGroup&&(kt.children[0].animations=a,kt=kt.children[0]),kt.animations=a}parseModels(e,t,n){const i=new Map,s=ke.Objects.Model;for(const o in s){const a=parseInt(o),c=s[o],l=lt.get(a);let u=this.buildSkeleton(l,e,a,c.attrName);if(!u){switch(c.attrType){case"Camera":u=this.createCamera(l);break;case"Light":u=this.createLight(l);break;case"Mesh":u=this.createMesh(l,t,n);break;case"NurbsCurve":u=this.createCurve(l,t);break;case"LimbNode":case"Root":u=new fo;break;case"Null":default:u=new fi;break}u.name=c.attrName?Be.sanitizeNodeName(c.attrName):"",u.ID=a}this.getTransformData(u,c),i.set(a,u)}return i}buildSkeleton(e,t,n,i){let s=null;return e.parents.forEach(function(o){for(const a in t){const c=t[a];c.rawBones.forEach(function(l,u){if(l.ID===o.ID){const h=s;s=new fo,s.matrixWorld.copy(l.transformLink),s.name=i?Be.sanitizeNodeName(i):"",s.ID=n,c.bones[u]=s,h!==null&&s.add(h)}})}}),s}createCamera(e){let t,n;if(e.children.forEach(function(i){const s=ke.Objects.NodeAttribute[i.ID];s!==void 0&&(n=s)}),n===void 0)t=new Xe;else{let i=0;n.CameraProjectionType!==void 0&&n.CameraProjectionType.value===1&&(i=1);let s=1;n.NearPlane!==void 0&&(s=n.NearPlane.value/1e3);let o=1e3;n.FarPlane!==void 0&&(o=n.FarPlane.value/1e3);let a=window.innerWidth,c=window.innerHeight;n.AspectWidth!==void 0&&n.AspectHeight!==void 0&&(a=n.AspectWidth.value,c=n.AspectHeight.value);const l=a/c;let u=45;n.FieldOfView!==void 0&&(u=n.FieldOfView.value);const h=n.FocalLength?n.FocalLength.value:null;switch(i){case 0:t=new xt(u,l,s,o),h!==null&&t.setFocalLength(h);break;case 1:t=new gr(-a/2,a/2,c/2,-c/2,s,o);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+i+"."),t=new Xe;break}}return t}createLight(e){let t,n;if(e.children.forEach(function(i){const s=ke.Objects.NodeAttribute[i.ID];s!==void 0&&(n=s)}),n===void 0)t=new Xe;else{let i;n.LightType===void 0?i=0:i=n.LightType.value;let s=16777215;n.Color!==void 0&&(s=new oe().fromArray(n.Color.value));let o=n.Intensity===void 0?1:n.Intensity.value/100;n.CastLightOnObject!==void 0&&n.CastLightOnObject.value===0&&(o=0);let a=0;n.FarAttenuationEnd!==void 0&&(n.EnableFarAttenuation!==void 0&&n.EnableFarAttenuation.value===0?a=0:a=n.FarAttenuationEnd.value);const c=1;switch(i){case 0:t=new yo(s,o,a,c);break;case 1:t=new Dc(s,o);break;case 2:let l=Math.PI/3;n.InnerAngle!==void 0&&(l=gn.degToRad(n.InnerAngle.value));let u=0;n.OuterAngle!==void 0&&(u=gn.degToRad(n.OuterAngle.value),u=Math.max(u,1)),t=new Uh(s,o,a,l,u,c);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),t=new yo(s,o);break}n.CastShadows!==void 0&&n.CastShadows.value===1&&(t.castShadow=!0)}return t}createMesh(e,t,n){let i,s=null,o=null;const a=[];return e.children.forEach(function(c){t.has(c.ID)&&(s=t.get(c.ID)),n.has(c.ID)&&a.push(n.get(c.ID))}),a.length>1?o=a:a.length>0?o=a[0]:(o=new eo({color:13421772}),a.push(o)),"color"in s.attributes&&a.forEach(function(c){c.vertexColors=!0}),s.FBX_Deformer?(i=new Ah(s,o),i.normalizeSkinWeights()):i=new bt(s,o),i}createCurve(e,t){const n=e.children.reduce(function(s,o){return t.has(o.ID)&&(s=t.get(o.ID)),s},null),i=new Pt({color:3342591,linewidth:1});return new Yn(n,i)}getTransformData(e,t){const n={};"InheritType"in t&&(n.inheritType=parseInt(t.InheritType.value)),"RotationOrder"in t?n.eulerOrder=lv(t.RotationOrder.value):n.eulerOrder="ZYX","Lcl_Translation"in t&&(n.translation=t.Lcl_Translation.value),"PreRotation"in t&&(n.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(n.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(n.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(n.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(n.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(n.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(n.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(n.rotationPivot=t.RotationPivot.value),e.userData.transformData=n}setLookAtProperties(e,t){"LookAtProperty"in t&&lt.get(e.ID).children.forEach(function(i){if(i.relationship==="LookAtProperty"){const s=ke.Objects.Model[i.ID];if("Lcl_Translation"in s){const o=s.Lcl_Translation.value;e.target!==void 0?(e.target.position.fromArray(o),kt.add(e.target)):e.lookAt(new A().fromArray(o))}}})}bindSkeleton(e,t,n){const i=this.parsePoseNodes();for(const s in e){const o=e[s];lt.get(parseInt(o.ID)).parents.forEach(function(c){if(t.has(c.ID)){const l=c.ID;lt.get(l).parents.forEach(function(h){n.has(h.ID)&&n.get(h.ID).bind(new Lo(o.bones),i[h.ID])})}})}}parsePoseNodes(){const e={};if("Pose"in ke.Objects){const t=ke.Objects.Pose;for(const n in t)if(t[n].attrType==="BindPose"&&t[n].NbPoseNodes>0){const i=t[n].PoseNode;Array.isArray(i)?i.forEach(function(s){e[s.Node]=new xe().fromArray(s.Matrix.a)}):e[i.Node]=new xe().fromArray(i.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in ke&&"AmbientColor"in ke.GlobalSettings){const e=ke.GlobalSettings.AmbientColor.value,t=e[0],n=e[1],i=e[2];if(t!==0||n!==0||i!==0){const s=new oe(t,n,i);kt.add(new Fc(s,1))}}}}class HA{parse(e){const t=new Map;if("Geometry"in ke.Objects){const n=ke.Objects.Geometry;for(const i in n){const s=lt.get(parseInt(i)),o=this.parseGeometry(s,n[i],e);t.set(parseInt(i),o)}}return t}parseGeometry(e,t,n){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,n);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,n){const i=n.skeletons,s=[],o=e.parents.map(function(h){return ke.Objects.Model[h.ID]});if(o.length===0)return;const a=e.children.reduce(function(h,f){return i[f.ID]!==void 0&&(h=i[f.ID]),h},null);e.children.forEach(function(h){n.morphTargets[h.ID]!==void 0&&s.push(n.morphTargets[h.ID])});const c=o[0],l={};"RotationOrder"in c&&(l.eulerOrder=lv(c.RotationOrder.value)),"InheritType"in c&&(l.inheritType=parseInt(c.InheritType.value)),"GeometricTranslation"in c&&(l.translation=c.GeometricTranslation.value),"GeometricRotation"in c&&(l.rotation=c.GeometricRotation.value),"GeometricScaling"in c&&(l.scale=c.GeometricScaling.value);const u=cv(l);return this.genGeometry(t,a,s,u)}genGeometry(e,t,n,i){const s=new Pe;e.attrName&&(s.name=e.attrName);const o=this.parseGeoNode(e,t),a=this.genBuffers(o),c=new _e(a.vertex,3);if(c.applyMatrix4(i),s.setAttribute("position",c),a.colors.length>0&&s.setAttribute("color",new _e(a.colors,3)),t&&(s.setAttribute("skinIndex",new Mc(a.weightsIndices,4)),s.setAttribute("skinWeight",new _e(a.vertexWeights,4)),s.FBX_Deformer=t),a.normal.length>0){const l=new Ft().getNormalMatrix(i),u=new _e(a.normal,3);u.applyNormalMatrix(l),s.setAttribute("normal",u)}if(a.uvs.forEach(function(l,u){let h="uv"+(u+1).toString();u===0&&(h="uv"),s.setAttribute(h,new _e(a.uvs[u],2))}),o.material&&o.material.mappingType!=="AllSame"){let l=a.materialIndex[0],u=0;if(a.materialIndex.forEach(function(h,f){h!==l&&(s.addGroup(u,f-u,l),l=h,u=f)}),s.groups.length>0){const h=s.groups[s.groups.length-1],f=h.start+h.count;f!==a.materialIndex.length&&s.addGroup(f,a.materialIndex.length-f,l)}s.groups.length===0&&s.addGroup(0,a.materialIndex.length,a.materialIndex[0])}return this.addMorphTargets(s,e,n,i),s}parseGeoNode(e,t){const n={};if(n.vertexPositions=e.Vertices!==void 0?e.Vertices.a:[],n.vertexIndices=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(n.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(n.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(n.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){n.uv=[];let i=0;for(;e.LayerElementUV[i];)e.LayerElementUV[i].UV&&n.uv.push(this.parseUVs(e.LayerElementUV[i])),i++}return n.weightTable={},t!==null&&(n.skeleton=t,t.rawBones.forEach(function(i,s){i.indices.forEach(function(o,a){n.weightTable[o]===void 0&&(n.weightTable[o]=[]),n.weightTable[o].push({id:s,weight:i.weights[a]})})})),n}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let n=0,i=0,s=!1,o=[],a=[],c=[],l=[],u=[],h=[];const f=this;return e.vertexIndices.forEach(function(d,p){let m,g=!1;d<0&&(d=d^-1,g=!0);let v=[],_=[];if(o.push(d*3,d*3+1,d*3+2),e.color){const y=Ca(p,n,d,e.color);c.push(y[0],y[1],y[2])}if(e.skeleton){if(e.weightTable[d]!==void 0&&e.weightTable[d].forEach(function(y){_.push(y.weight),v.push(y.id)}),_.length>4){s||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),s=!0);const y=[0,0,0,0],x=[0,0,0,0];_.forEach(function(w,M){let P=w,b=v[M];x.forEach(function(T,I,F){if(P>T){F[I]=P,P=T;const B=y[I];y[I]=b,b=B}})}),v=y,_=x}for(;_.length<4;)_.push(0),v.push(0);for(let y=0;y<4;++y)u.push(_[y]),h.push(v[y])}if(e.normal){const y=Ca(p,n,d,e.normal);a.push(y[0],y[1],y[2])}e.material&&e.material.mappingType!=="AllSame"&&(m=Ca(p,n,d,e.material)[0]),e.uv&&e.uv.forEach(function(y,x){const w=Ca(p,n,d,y);l[x]===void 0&&(l[x]=[]),l[x].push(w[0]),l[x].push(w[1])}),i++,g&&(f.genFace(t,e,o,m,a,c,l,u,h,i),n++,i=0,o=[],a=[],c=[],l=[],u=[],h=[])}),t}genFace(e,t,n,i,s,o,a,c,l,u){for(let h=2;h<u;h++)e.vertex.push(t.vertexPositions[n[0]]),e.vertex.push(t.vertexPositions[n[1]]),e.vertex.push(t.vertexPositions[n[2]]),e.vertex.push(t.vertexPositions[n[(h-1)*3]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+1]]),e.vertex.push(t.vertexPositions[n[(h-1)*3+2]]),e.vertex.push(t.vertexPositions[n[h*3]]),e.vertex.push(t.vertexPositions[n[h*3+1]]),e.vertex.push(t.vertexPositions[n[h*3+2]]),t.skeleton&&(e.vertexWeights.push(c[0]),e.vertexWeights.push(c[1]),e.vertexWeights.push(c[2]),e.vertexWeights.push(c[3]),e.vertexWeights.push(c[(h-1)*4]),e.vertexWeights.push(c[(h-1)*4+1]),e.vertexWeights.push(c[(h-1)*4+2]),e.vertexWeights.push(c[(h-1)*4+3]),e.vertexWeights.push(c[h*4]),e.vertexWeights.push(c[h*4+1]),e.vertexWeights.push(c[h*4+2]),e.vertexWeights.push(c[h*4+3]),e.weightsIndices.push(l[0]),e.weightsIndices.push(l[1]),e.weightsIndices.push(l[2]),e.weightsIndices.push(l[3]),e.weightsIndices.push(l[(h-1)*4]),e.weightsIndices.push(l[(h-1)*4+1]),e.weightsIndices.push(l[(h-1)*4+2]),e.weightsIndices.push(l[(h-1)*4+3]),e.weightsIndices.push(l[h*4]),e.weightsIndices.push(l[h*4+1]),e.weightsIndices.push(l[h*4+2]),e.weightsIndices.push(l[h*4+3])),t.color&&(e.colors.push(o[0]),e.colors.push(o[1]),e.colors.push(o[2]),e.colors.push(o[(h-1)*3]),e.colors.push(o[(h-1)*3+1]),e.colors.push(o[(h-1)*3+2]),e.colors.push(o[h*3]),e.colors.push(o[h*3+1]),e.colors.push(o[h*3+2])),t.material&&t.material.mappingType!=="AllSame"&&(e.materialIndex.push(i),e.materialIndex.push(i),e.materialIndex.push(i)),t.normal&&(e.normal.push(s[0]),e.normal.push(s[1]),e.normal.push(s[2]),e.normal.push(s[(h-1)*3]),e.normal.push(s[(h-1)*3+1]),e.normal.push(s[(h-1)*3+2]),e.normal.push(s[h*3]),e.normal.push(s[h*3+1]),e.normal.push(s[h*3+2])),t.uv&&t.uv.forEach(function(f,d){e.uvs[d]===void 0&&(e.uvs[d]=[]),e.uvs[d].push(a[d][0]),e.uvs[d].push(a[d][1]),e.uvs[d].push(a[d][(h-1)*2]),e.uvs[d].push(a[d][(h-1)*2+1]),e.uvs[d].push(a[d][h*2]),e.uvs[d].push(a[d][h*2+1])})}addMorphTargets(e,t,n,i){if(n.length===0)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const s=this;n.forEach(function(o){o.rawTargets.forEach(function(a){const c=ke.Objects.Geometry[a.geoID];c!==void 0&&s.genMorphGeometry(e,t,c,i,a.name)})})}genMorphGeometry(e,t,n,i,s){const o=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],a=n.Vertices!==void 0?n.Vertices.a:[],c=n.Indexes!==void 0?n.Indexes.a:[],l=e.attributes.position.count*3,u=new Float32Array(l);for(let p=0;p<c.length;p++){const m=c[p]*3;u[m]=a[p*3],u[m+1]=a[p*3+1],u[m+2]=a[p*3+2]}const h={vertexIndices:o,vertexPositions:u},f=this.genBuffers(h),d=new _e(f.vertex,3);d.name=s||n.attrName,d.applyMatrix4(i),e.morphAttributes.position.push(d)}parseNormals(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Normals.a;let s=[];return n==="IndexToDirect"&&("NormalIndex"in e?s=e.NormalIndex.a:"NormalsIndex"in e&&(s=e.NormalsIndex.a)),{dataSize:3,buffer:i,indices:s,mappingType:t,referenceType:n}}parseUVs(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.UV.a;let s=[];return n==="IndexToDirect"&&(s=e.UVIndex.a),{dataSize:2,buffer:i,indices:s,mappingType:t,referenceType:n}}parseVertexColors(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Colors.a;let s=[];return n==="IndexToDirect"&&(s=e.ColorIndex.a),{dataSize:4,buffer:i,indices:s,mappingType:t,referenceType:n}}parseMaterialIndices(e){const t=e.MappingInformationType,n=e.ReferenceInformationType;if(t==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};const i=e.Materials.a,s=[];for(let o=0;o<i.length;++o)s.push(o);return{dataSize:1,buffer:i,indices:s,mappingType:t,referenceType:n}}parseNurbsGeometry(e){if(_p===void 0)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new Pe;const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new Pe;const n=t-1,i=e.KnotVector.a,s=[],o=e.Points.a;for(let h=0,f=o.length;h<f;h+=4)s.push(new He().fromArray(o,h));let a,c;if(e.Form==="Closed")s.push(s[0]);else if(e.Form==="Periodic"){a=n,c=i.length-1-a;for(let h=0;h<n;++h)s.push(s[h])}const u=new _p(n,i,s,a,c).getPoints(s.length*12);return new Pe().setFromPoints(u)}}class WA{parse(){const e=[],t=this.parseClips();if(t!==void 0)for(const n in t){const i=t[n],s=this.addClip(i);e.push(s)}return e}parseClips(){if(ke.Objects.AnimationCurve===void 0)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=ke.Objects.AnimationCurveNode,t=new Map;for(const n in e){const i=e[n];if(i.attrName.match(/S|R|T|DeformPercent/)!==null){const s={id:i.id,attr:i.attrName,curves:{}};t.set(s.id,s)}}return t}parseAnimationCurves(e){const t=ke.Objects.AnimationCurve;for(const n in t){const i={id:t[n].id,times:t[n].KeyTime.a.map(YA),values:t[n].KeyValueFloat.a},s=lt.get(i.id);if(s!==void 0){const o=s.parents[0].ID,a=s.parents[0].relationship;a.match(/X/)?e.get(o).curves.x=i:a.match(/Y/)?e.get(o).curves.y=i:a.match(/Z/)?e.get(o).curves.z=i:a.match(/d|DeformPercent/)&&e.has(o)&&(e.get(o).curves.morph=i)}}}parseAnimationLayers(e){const t=ke.Objects.AnimationLayer,n=new Map;for(const i in t){const s=[],o=lt.get(parseInt(i));o!==void 0&&(o.children.forEach(function(c,l){if(e.has(c.ID)){const u=e.get(c.ID);if(u.curves.x!==void 0||u.curves.y!==void 0||u.curves.z!==void 0){if(s[l]===void 0){const h=lt.get(c.ID).parents.filter(function(f){return f.relationship!==void 0})[0].ID;if(h!==void 0){const f=ke.Objects.Model[h.toString()];if(f===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",c);return}const d={modelName:f.attrName?Be.sanitizeNodeName(f.attrName):"",ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};kt.traverse(function(p){p.ID===f.id&&(d.transform=p.matrix,p.userData.transformData&&(d.eulerOrder=p.userData.transformData.eulerOrder))}),d.transform||(d.transform=new xe),"PreRotation"in f&&(d.preRotation=f.PreRotation.value),"PostRotation"in f&&(d.postRotation=f.PostRotation.value),s[l]=d}}s[l]&&(s[l][u.attr]=u)}else if(u.curves.morph!==void 0){if(s[l]===void 0){const h=lt.get(c.ID).parents.filter(function(v){return v.relationship!==void 0})[0].ID,f=lt.get(h).parents[0].ID,d=lt.get(f).parents[0].ID,p=lt.get(d).parents[0].ID,m=ke.Objects.Model[p],g={modelName:m.attrName?Be.sanitizeNodeName(m.attrName):"",morphName:ke.Objects.Deformer[h].attrName};s[l]=g}s[l][u.attr]=u}}}),n.set(parseInt(i),s))}return n}parseAnimStacks(e){const t=ke.Objects.AnimationStack,n={};for(const i in t){const s=lt.get(parseInt(i)).children;s.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const o=e.get(s[0].ID);n[i]={name:t[i].attrName,layer:o}}return n}addClip(e){let t=[];const n=this;return e.layer.forEach(function(i){t=t.concat(n.generateTracks(i))}),new ur(e.name,-1,t)}generateTracks(e){const t=[];let n=new A,i=new _t,s=new A;if(e.transform&&e.transform.decompose(n,i,s),n=n.toArray(),i=new vn().setFromQuaternion(i,e.eulerOrder).toArray(),s=s.toArray(),e.T!==void 0&&Object.keys(e.T.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.T.curves,n,"position");o!==void 0&&t.push(o)}if(e.R!==void 0&&Object.keys(e.R.curves).length>0){const o=this.generateRotationTrack(e.modelName,e.R.curves,i,e.preRotation,e.postRotation,e.eulerOrder);o!==void 0&&t.push(o)}if(e.S!==void 0&&Object.keys(e.S.curves).length>0){const o=this.generateVectorTrack(e.modelName,e.S.curves,s,"scale");o!==void 0&&t.push(o)}if(e.DeformPercent!==void 0){const o=this.generateMorphTrack(e);o!==void 0&&t.push(o)}return t}generateVectorTrack(e,t,n,i){const s=this.getTimesForAllAxes(t),o=this.getKeyframeTrackValues(s,t,n);return new bs(e+"."+i,s,o)}generateRotationTrack(e,t,n,i,s,o){t.x!==void 0&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(gn.degToRad)),t.y!==void 0&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(gn.degToRad)),t.z!==void 0&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(gn.degToRad));const a=this.getTimesForAllAxes(t),c=this.getKeyframeTrackValues(a,t,n);i!==void 0&&(i=i.map(gn.degToRad),i.push(o),i=new vn().fromArray(i),i=new _t().setFromEuler(i)),s!==void 0&&(s=s.map(gn.degToRad),s.push(o),s=new vn().fromArray(s),s=new _t().setFromEuler(s).invert());const l=new _t,u=new vn,h=[];for(let f=0;f<c.length;f+=3)u.set(c[f],c[f+1],c[f+2],o),l.setFromEuler(u),i!==void 0&&l.premultiply(i),s!==void 0&&l.multiply(s),l.toArray(h,f/3*4);return new _r(e+".quaternion",a,h)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,n=t.values.map(function(s){return s/100}),i=kt.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new xs(e.modelName+".morphTargetInfluences["+i+"]",t.times,n)}getTimesForAllAxes(e){let t=[];if(e.x!==void 0&&(t=t.concat(e.x.times)),e.y!==void 0&&(t=t.concat(e.y.times)),e.z!==void 0&&(t=t.concat(e.z.times)),t=t.sort(function(n,i){return n-i}),t.length>1){let n=1,i=t[0];for(let s=1;s<t.length;s++){const o=t[s];o!==i&&(t[n]=o,i=o,n++)}t=t.slice(0,n)}return t}getKeyframeTrackValues(e,t,n){const i=n,s=[];let o=-1,a=-1,c=-1;return e.forEach(function(l){if(t.x&&(o=t.x.times.indexOf(l)),t.y&&(a=t.y.times.indexOf(l)),t.z&&(c=t.z.times.indexOf(l)),o!==-1){const u=t.x.values[o];s.push(u),i[0]=u}else s.push(i[0]);if(a!==-1){const u=t.y.values[a];s.push(u),i[1]=u}else s.push(i[1]);if(c!==-1){const u=t.z.values[c];s.push(u),i[2]=u}else s.push(i[2])}),s}interpolateRotations(e){for(let t=1;t<e.values.length;t++){const n=e.values[t-1],i=e.values[t]-n,s=Math.abs(i);if(s>=180){const o=s/180,a=i/o;let c=n+a;const l=e.times[t-1],h=(e.times[t]-l)/o;let f=l+h;const d=[],p=[];for(;f<e.times[t];)d.push(f),f+=h,p.push(c),c+=a;e.times=bp(e.times,t,d),e.values=bp(e.values,t,p)}}}}class XA{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new av,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,n=e.split(/[\r\n]+/);return n.forEach(function(i,s){const o=i.match(/^[\s\t]*;/),a=i.match(/^[\s\t]*$/);if(o||a)return;const c=i.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),l=i.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),u=i.match("^\\t{"+(t.currentIndent-1)+"}}");c?t.parseNodeBegin(i,c):l?t.parseNodeProperty(i,l,n[++s]):u?t.popStack():i.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(i)}),this.allNodes}parseNodeBegin(e,t){const n=t[1].trim().replace(/^"/,"").replace(/"$/,""),i=t[2].split(",").map(function(c){return c.trim().replace(/^"/,"").replace(/"$/,"")}),s={name:n},o=this.parseNodeAttr(i),a=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(n,s):n in a?(n==="PoseNode"?a.PoseNode.push(s):a[n].id!==void 0&&(a[n]={},a[n][a[n].id]=a[n]),o.id!==""&&(a[n][o.id]=s)):typeof o.id=="number"?(a[n]={},a[n][o.id]=s):n!=="Properties70"&&(n==="PoseNode"?a[n]=[s]:a[n]=s),typeof o.id=="number"&&(s.id=o.id),o.name!==""&&(s.attrName=o.name),o.type!==""&&(s.attrType=o.type),this.pushStack(s)}parseNodeAttr(e){let t=e[0];e[0]!==""&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let n="",i="";return e.length>1&&(n=e[1].replace(/^(\w+)::/,""),i=e[2]),{id:t,name:n,type:i}}parseNodeProperty(e,t,n){let i=t[1].replace(/^"/,"").replace(/"$/,"").trim(),s=t[2].replace(/^"/,"").replace(/"$/,"").trim();i==="Content"&&s===","&&(s=n.replace(/"/g,"").replace(/,$/,"").trim());const o=this.getCurrentNode();if(o.name==="Properties70"){this.parseNodeSpecialProperty(e,i,s);return}if(i==="C"){const c=s.split(",").slice(1),l=parseInt(c[0]),u=parseInt(c[1]);let h=s.split(",").slice(3);h=h.map(function(f){return f.trim().replace(/^"/,"")}),i="connections",s=[l,u],JA(s,h),o[i]===void 0&&(o[i]=[])}i==="Node"&&(o.id=s),i in o&&Array.isArray(o[i])?o[i].push(s):i!=="a"?o[i]=s:o.a=s,this.setCurrentProp(o,i),i==="a"&&s.slice(-1)!==","&&(o.a=Nl(s))}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,e.slice(-1)!==","&&(t.a=Nl(t.a))}parseNodeSpecialProperty(e,t,n){const i=n.split('",').map(function(u){return u.trim().replace(/^\"/,"").replace(/\s/,"_")}),s=i[0],o=i[1],a=i[2],c=i[3];let l=i[4];switch(o){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":l=parseFloat(l);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":l=Nl(l);break}this.getPrevNode()[s]={type:o,type2:a,flag:c,value:l},this.setCurrentProp(this.getPrevNode(),s)}}class $A{parse(e){const t=new yp(e);t.skip(23);const n=t.getUint32();if(n<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+n);const i=new av;for(;!this.endOfContent(t);){const s=this.parseNode(t,n);s!==null&&i.add(s.name,s)}return i}endOfContent(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const n={},i=t>=7500?e.getUint64():e.getUint32(),s=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const o=e.getUint8(),a=e.getString(o);if(i===0)return null;const c=[];for(let f=0;f<s;f++)c.push(this.parseProperty(e));const l=c.length>0?c[0]:"",u=c.length>1?c[1]:"",h=c.length>2?c[2]:"";for(n.singleProperty=s===1&&e.getOffset()===i;i>e.getOffset();){const f=this.parseNode(e,t);f!==null&&this.parseSubNode(a,n,f)}return n.propertyList=c,typeof l=="number"&&(n.id=l),u!==""&&(n.attrName=u),h!==""&&(n.attrType=h),a!==""&&(n.name=a),n}parseSubNode(e,t,n){if(n.singleProperty===!0){const i=n.propertyList[0];Array.isArray(i)?(t[n.name]=n,n.a=i):t[n.name]=i}else if(e==="Connections"&&n.name==="C"){const i=[];n.propertyList.forEach(function(s,o){o!==0&&i.push(s)}),t.connections===void 0&&(t.connections=[]),t.connections.push(i)}else if(n.name==="Properties70")Object.keys(n).forEach(function(s){t[s]=n[s]});else if(e==="Properties70"&&n.name==="P"){let i=n.propertyList[0],s=n.propertyList[1];const o=n.propertyList[2],a=n.propertyList[3];let c;i.indexOf("Lcl ")===0&&(i=i.replace("Lcl ","Lcl_")),s.indexOf("Lcl ")===0&&(s=s.replace("Lcl ","Lcl_")),s==="Color"||s==="ColorRGB"||s==="Vector"||s==="Vector3D"||s.indexOf("Lcl_")===0?c=[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:c=n.propertyList[4],t[i]={type:s,type2:o,flag:a,value:c}}else t[n.name]===void 0?typeof n.id=="number"?(t[n.name]={},t[n.name][n.id]=n):t[n.name]=n:n.name==="PoseNode"?(Array.isArray(t[n.name])||(t[n.name]=[t[n.name]]),t[n.name].push(n)):t[n.name][n.id]===void 0&&(t[n.name][n.id]=n)}parseProperty(e){const t=e.getString(1);let n;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return n=e.getUint32(),e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const i=e.getUint32(),s=e.getUint32(),o=e.getUint32();if(s===0)switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}typeof DA>"u"&&console.error("THREE.FBXLoader: External library fflate.min.js required.");const a=wo(new Uint8Array(e.getArrayBuffer(o))),c=new yp(a.buffer);switch(t){case"b":case"c":return c.getBooleanArray(i);case"d":return c.getFloat64Array(i);case"f":return c.getFloat32Array(i);case"i":return c.getInt32Array(i);case"l":return c.getInt64Array(i)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}}class yp{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=t!==void 0?t:!0}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(e){const t=[];for(let n=0;n<e;n++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t&2147483648?(t=~t&4294967295,e=~e&4294967295,e===4294967295&&(t=t+1&4294967295),e=e+1&4294967295,-(t*4294967296+e)):t*4294967296+e}getInt64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t*4294967296+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){let t=[];for(let i=0;i<e;i++)t[i]=this.getUint8();const n=t.indexOf(0);return n>=0&&(t=t.slice(0,n)),ws.decodeText(new Uint8Array(t))}}class av{add(e,t){this[e]=t}}function qA(r){const e="Kaydara FBX Binary  \0";return r.byteLength>=e.length&&e===uv(r,0,e.length)}function jA(r){const e=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let t=0;function n(i){const s=r[i-1];return r=r.slice(t+i),t++,s}for(let i=0;i<e.length;++i)if(n(1)===e[i])return!1;return!0}function xp(r){const e=/FBXVersion: (\d+)/,t=r.match(e);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function YA(r){return r/46186158e3}const ZA=[];function Ca(r,e,t,n){let i;switch(n.mappingType){case"ByPolygonVertex":i=r;break;case"ByPolygon":i=e;break;case"ByVertice":i=t;break;case"AllSame":i=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}n.referenceType==="IndexToDirect"&&(i=n.indices[i]);const s=i*n.dataSize,o=s+n.dataSize;return KA(ZA,n.buffer,s,o)}const Ol=new vn,Hr=new A;function cv(r){const e=new xe,t=new xe,n=new xe,i=new xe,s=new xe,o=new xe,a=new xe,c=new xe,l=new xe,u=new xe,h=new xe,f=new xe,d=r.inheritType?r.inheritType:0;if(r.translation&&e.setPosition(Hr.fromArray(r.translation)),r.preRotation){const I=r.preRotation.map(gn.degToRad);I.push(r.eulerOrder),t.makeRotationFromEuler(Ol.fromArray(I))}if(r.rotation){const I=r.rotation.map(gn.degToRad);I.push(r.eulerOrder),n.makeRotationFromEuler(Ol.fromArray(I))}if(r.postRotation){const I=r.postRotation.map(gn.degToRad);I.push(r.eulerOrder),i.makeRotationFromEuler(Ol.fromArray(I)),i.invert()}r.scale&&s.scale(Hr.fromArray(r.scale)),r.scalingOffset&&a.setPosition(Hr.fromArray(r.scalingOffset)),r.scalingPivot&&o.setPosition(Hr.fromArray(r.scalingPivot)),r.rotationOffset&&c.setPosition(Hr.fromArray(r.rotationOffset)),r.rotationPivot&&l.setPosition(Hr.fromArray(r.rotationPivot)),r.parentMatrixWorld&&(h.copy(r.parentMatrix),u.copy(r.parentMatrixWorld));const p=t.clone().multiply(n).multiply(i),m=new xe;m.extractRotation(u);const g=new xe;g.copyPosition(u);const v=g.clone().invert().multiply(u),_=m.clone().invert().multiply(v),y=s,x=new xe;if(d===0)x.copy(m).multiply(p).multiply(_).multiply(y);else if(d===1)x.copy(m).multiply(_).multiply(p).multiply(y);else{const F=new xe().scale(new A().setFromMatrixScale(h)).clone().invert(),B=_.clone().multiply(F);x.copy(m).multiply(p).multiply(B).multiply(y)}const w=l.clone().invert(),M=o.clone().invert();let P=e.clone().multiply(c).multiply(l).multiply(t).multiply(n).multiply(i).multiply(w).multiply(a).multiply(o).multiply(s).multiply(M);const b=new xe().copyPosition(P),T=u.clone().multiply(b);return f.copyPosition(T),P=f.clone().multiply(x),P.premultiply(u.invert()),P}function lv(r){r=r||0;const e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return r===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[r]}function Nl(r){return r.split(",").map(function(t){return parseFloat(t)})}function uv(r,e,t){return e===void 0&&(e=0),t===void 0&&(t=r.byteLength),ws.decodeText(new Uint8Array(r,e,t))}function JA(r,e){for(let t=0,n=r.length,i=e.length;t<i;t++,n++)r[n]=e[t]}function KA(r,e,t,n){for(let i=t,s=0;i<n;i++,s++)r[s]=e[i];return r}function bp(r,e,t){return r.slice(0,e).concat(t).concat(r.slice(e))}const hv=r=>r&&new Promise(e=>{new VA().load(r,e)}),fv=r=>r&&new Promise(e=>{new xr().load(r,e)}),QA=["px.png","nx.png","py.png","ny.png","pz.png","nz.png"],eT=r=>r&&new Promise(e=>{new u0().setPath(`${r}/`).load(QA,e)}),tT=["c100007_01","c100007_05","c100007_09","c100034_01","c100035_01","c100036_01","c100037_01","c100041_01"],nT=async r=>await(await fetch(r)).json(),Bc=async r=>(await nT(r)).data,iT=(...r)=>e=>r.reduce((t,n)=>n(t),e),rT=r=>[...new Set(r)],Wn=r=>r==="false"?!1:!!r,dv=(r,e,t)=>{if(!e.length)return;const n=e.pop(),i=e.reduce((s,o)=>s==null?void 0:s[o],r);i&&(i[n]=t)};function sf(r){return!!/[0-9A-Fa-f]{6}/.test(r)}function Xa(r){return sf(r)&&!r.startsWith("#")?new oe(`#${r}`):new oe(r)}async function sT(r=100){return await new Promise(e=>setTimeout(e,r))}function pv(r,e="="){const[t,...n]=r.split(e),i=n.join(e);return[t,i]}const oT=r=>r.startsWith("w302"),wp=([r,...e])=>`${r.toUpperCase()}${e.join("")}`;function aT(r){var t;return r==="smith"?"dragon":r.endsWith("h")?"story":tT.includes(r)?"spAdventurer":(t={c:"adventurer",b:"boss",d:"dragon",e:"enemy",h:"high boss",o:"object",r:"raid boss",w:"weapon"}[r[0]])!=null?t:"other"}function cT(r=PT){const e=new wh(r);return e.outputEncoding=Ge,e}function lT(r={}){const{fov:e,aspect:t,near:n,far:i}={...IT,...r};return new xt(e,t,n,i)}async function uT(r){if(r.startsWith("img:")){const e=r.replace("img:",""),t=await fv(e);return t.encoding=Ge,t.center.set(.5,0),t}if(r.startsWith("sky:")){const e=r.replace("sky:",""),t=await eT(e);return t.encoding=Ge,t}if(r==="transparent")return null;if(sf(r)){const e=r.startsWith("#")?r:`#${r}`;return new oe(e)}}function hT(r){var e,t,n,i;(t=(e=r.map)==null?void 0:e.dispose)==null||t.call(e),(i=(n=r.userData.backupMap)==null?void 0:n.dispose)==null||i.call(n),r.dispose()}const mv=r=>{const e=new xr().load(r);return e.encoding=Ge,e};function fT(r){const e=[],t=[];return r.traverse(n=>{n.isMesh&&e.push(n),n.isBone&&t.push(n)}),[e,t]}function dT(r){var t,n;if(!r)return;[r.material].flat().forEach(i=>{var s,o,a,c,l,u;(o=(s=i.map)==null?void 0:s.dispose)==null||o.call(s),(l=(c=(a=i.userData)==null?void 0:a.backupMap)==null?void 0:c.dispose)==null||l.call(c),(u=i.dispose)==null||u.call(i)}),(n=(t=r.geometry)==null?void 0:t.dispose)==null||n.call(t)}const pT=()=>{const r=new Date,e=r.toDateString().replaceAll(" ","_"),t=r.toLocaleTimeString().replaceAll(":","-").replaceAll(" ","");return`${e}_${t}`},gv=r=>r?r.split("/").reduce((t,n)=>{const[i,s]=n.split("=");return i&&s&&(t[i]=s),t},{}):{},mT=`
varying vec3 vViewPosition;

struct BlinnPhongMaterial {

	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;

};

void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;

}

void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong

#define Material_LightProbeLOD( material )	(0)
`,gT=`
#ifdef USE_MATCAP

	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks
	vec4 matcapColor = texture2D( matcap, uv );

	#ifdef MATCAP_BLENDING_MULTIPLY

		outgoingLight *= matcapColor.rgb;

	#elif defined( MATCAP_BLENDING_ADD )

		outgoingLight += matcapColor.rgb;

	#endif

#endif
`,Pa={defines:{TOON:!0,MATCAP:!0,MATCAP_BLENDING_ADD:!0},uniforms:Co.merge([Et.toon.uniforms,Et.phong.uniforms,Et.matcap.uniforms]),vertexShader:Et.phong.vertexShader,fragmentShader:Et.phong.fragmentShader.replace("#include <common>",`
					#ifdef USE_MATCAP
						uniform sampler2D matcap;
					#endif

					#include <common>
				`).replace("#include <envmap_common_pars_fragment>",`
					#include <gradientmap_pars_fragment>
					#include <envmap_common_pars_fragment>
				`).replace("#include <lights_phong_pars_fragment>",mT).replace("#include <envmap_fragment>",`
					#include <envmap_fragment>
					${gT}
				`)};class vv extends Ot{constructor(e){super(),this._matcapCombine=nc,this.emissiveIntensity=1,this.normalMapType=Mi,this.combine=nr,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.lights=!0,this.vertexShader=Pa.vertexShader,this.fragmentShader=Pa.fragmentShader,this.defines=Object.assign({},Pa.defines),Object.defineProperty(this,"matcapCombine",{get:function(){return this._matcapCombine},set:function(n){switch(this._matcapCombine=n,n){case nr:this.defines.MATCAP_BLENDING_MULTIPLY=!0,delete this.defines.MATCAP_BLENDING_ADD;break;default:case nc:this.defines.MATCAP_BLENDING_ADD=!0,delete this.defines.MATCAP_BLENDING_MULTIPLY;break}}}),this.uniforms=Co.clone(Pa.uniforms);const t=["specular","shininess","opacity","diffuse","map","matcap","gradientMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacemantBias","displacemantMap","displacemantScale","specularMap","alphaMap","envMap","reflectivity","refractionRatio"];for(const n of t)Object.defineProperty(this,n,{get:function(){return this.uniforms[n].value},set:function(i){this.uniforms[n].value=i}});Object.defineProperty(this,"color",Object.getOwnPropertyDescriptor(this,"diffuse")),this.setValues(e)}copy(e){return super.copy(e),this.matcapCombine=e.matcapCombine,this.emissiveIntensity=e.emissiveIntensity,this.normalMapType=e.normalMapType,this.combine=e.combine,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}vv.prototype.isMMDToonMaterial=!0;const vT=["color","emissive","specular"],_T=["wireframe","metalness","opacity","roughness","shininess","transparent","emissiveIntensity","transmission","thickness","ior"],_v=["type","flatShading","showTexture","gradientMap","matcap"],yT=[...vT,..._T,..._v],xT=["transparent","opacity","wireframe","showTexture","color"],bT={Basic:[],Toon:["emissive","emissiveIntensity","gradientMap"],Lambert:["emissive","emissiveIntensity"],Phong:["emissive","emissiveIntensity","specular","shininess","flatShading"],Standard:["emissive","emissiveIntensity","metalness","roughness","flatShading"],Physical:["emissive","emissiveIntensity","metalness","roughness","flatShading","transmission","thickness","ior"],Matcap:["flatShading","matcap"],MMDToon:["emissive","emissiveIntensity","specular","shininess","matcap","gradientMap","flatShading"]},qt=r=>`${r}`,zl=r=>sf(r)?`${r.startsWith("#")?"":"#"}${r}`:r,wT=r=>Array.isArray(r)?r.join(","):r,of={wireframe:{name:"Wireframe",type:"boolean",default:!1,valueMap:Wn,toString:qt},showTexture:{name:"Texture",type:"boolean",default:!0,valueMap:Wn,toString:qt},transparent:{name:"Transparent",type:"boolean",default:!1,valueMap:Wn,toString:qt},flatShading:{name:"Flat Shading",type:"boolean",default:!1,valueMap:Wn,toString:qt},color:{name:"Color",type:"color",default:"#ffffff",valueMap:Xa,toString:zl},emissive:{name:"Emissive",type:"color",default:"#000000",valueMap:Xa,toString:zl},opacity:{name:"Opacity",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:qt},emissiveIntensity:{name:"Emissive Intensity",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:qt},specular:{name:"Specular",type:"color",default:"#111111",valueMap:Xa,toString:zl},metalness:{name:"Metalness",type:"percentage",default:0,min:0,max:1,valueMap:parseFloat,toString:qt},roughness:{name:"Roughness",type:"percentage",default:1,min:0,max:1,valueMap:parseFloat,toString:qt},shininess:{name:"Shininess",type:"number",default:30,min:1,max:100,valueMap:parseFloat,toString:qt},gradientMap:{name:"Gradient Map",type:"select",default:"none",valueMap:yv,toString:wT},matcap:{name:"Matcap",type:"select",default:"matcap_fresnel.jpg",valueMap:xv,toString:qt},transmission:{name:"Transmission",type:"number",default:1,min:0,max:1,valueMap:parseFloat,toString:qt},thickness:{name:"Thickness",type:"number",default:.01,min:0,max:10,valueMap:parseFloat,toString:qt},ior:{name:"Index-of-refraction",type:"number",default:1.5,min:1,max:2.333,valueMap:parseFloat,toString:qt}},MT=Object.fromEntries(Object.entries(of).map(([r,{default:e}])=>[r,e])),Ui={...MT,type:"Basic"},ST=Object.fromEntries(Object.entries(of).map(([r,{valueMap:e}])=>[r,e])),AT=Object.fromEntries(Object.entries(of).map(([r,{toString:e}])=>[r,e])),kl=r=>[...xT,...bT[r]],TT=(r,e={})=>{if(r==="MMDToon")return new vv(e);const t=`Mesh${r}Material`;return new S0[t](e)},Mp=(r,{matType:e="Basic",texturePath:t="",force:n=!1}={})=>{r.forEach(i=>{const s=[i.material].flat(),o=Array.isArray(i.material);if(!n&&!t){const a=`isMesh${e}Material`;if(!s.some(l=>!l[a]))return}s.forEach((a,c)=>{var h,f,d,p;const l=t?new xr().load(t):s[c].map;t&&(l.encoding=Ge);const u=TT(e);if(u.name=a.name,u.map=l,u.userData.backupMap=a.userData.backupMap,t&&((f=(h=a.map)==null?void 0:h.dispose)==null||f.call(h),(p=(d=a.userData.backupMap)==null?void 0:d.dispose)==null||p.call(d)),a.dispose(),o){i.material[c]=u;return}i.material=u})})},ET=r=>Array.isArray(r)?r:r.split(",").map(e=>parseInt(e));function yv(r){const e=ET(r),t=e.length;if(t<2)return null;const n=Uint8Array.from(e),i=new Ji(n,t,1,dh);return i.minFilter=i.magFilter=ut,i.generateMipmaps=!1,i}const CT=r=>r.includes("/")||r.includes(":")?r:`${dA}/${r}`;function xv(r){const e=CT(r);return e?mv(e):null}const PT={alpha:!0,antialias:!0},LT="#cccccc",IT={type:"Perspective",fov:45,aspect:1,far:300,near:.01},RT="c100001_01",$r={enabled:!0,size:5,color:"#000000",opacity:1},DT={noBackground:!0,fileName:"screenshot",frameRate:30},FT={frameRate:30,fileName:"ani",appendDate:!0},Sp=1,ku=30,OT={directional:{color:"#ffffff",intensity:.8,position:[1,0,2]},ambient:{color:"#444444",intensity:1},point:{color:"#ffffff",intensity:1}},Bl={"No Mapping":yn,Linear:ah,Reinhard:ch,Cineon:lh,"ACES Filmic":uh},No={addEventListener(r,e){var n,i;if(!e)return;(n=this._listeners)!=null||(this._listeners={});const t=this._listeners;return r=r.toLowerCase(),(i=t[r])!=null||(t[r]=[]),t[r].includes(e)||t[r].push(e),e},hasEventListener(r,e){var t,n;return r=r.toLowerCase(),!!((n=(t=this._listeners)==null?void 0:t[r])!=null&&n.includes(e))},removeEventListener(r,e){var i;r=r.toLowerCase();const t=(i=this._listeners)==null?void 0:i[r];if(!t)return;const n=t.indexOf(e);n!==-1&&t.splice(n,1)},dispatchEvent(r){var i,s;const e=(i=r.type)==null?void 0:i.toLowerCase(),t=(s=this._listeners)==null?void 0:s[e];if(!t)return;r.target=this,[...t].forEach(o=>o.call(this,r))},addCountedEventListener(r,e,t=1){const n=this;function i(s){e.call(n,s),t--,t===0&&n.removeEventListener(r,i)}this.addEventListener(r,i)}},NT={face1:[2,1],face2:[0,0],face3:[1,0],face4:[2,0],face5:[3,0],face6:[0,-1],face7:[1,-1],face8:[2,-1],face9:[3,-1]},bv={},zT=async()=>{const r=await Bc(`${kc}/face-offset.json`);Object.assign(bv,r)},Ap=r=>bv[r]||[0,0],Bu={},kT=async()=>{const r=await Bc(`${kc}/camera-position.json`);Object.assign(Bu,r)},BT=r=>{var e;return(e=Bu[r])!=null?e:Bu[r[0]]},Uu={},UT=async()=>{const r=await Bc(`${kc}/control-position.json`);Object.assign(Uu,r)},VT=r=>{var e;return(e=Uu[r])!=null?e:Uu[r[0]]},Tp=r=>NT[`face${r}`],GT=(r,e)=>{const t={x:0,y:0};if(r!==e){const[n,i]=Tp(e),[s,o]=Tp(r);t.x=s-n,t.y=o-i}return[t.x,t.y]},HT=(r,e)=>{const t={x:0,y:0};if(r!==e){const[n,i]=Ap(e),[s,o]=Ap(r);t.x=s-n,t.y=o-i}return[t.x,t.y]},Uc=r=>new Proxy(Object.assign(r,No),{get(e,t){return e[t]},set(e,t,n){return e[t]=n,e.dispatchEvent({type:"change",propName:t,value:n}),!0}}),wv=/mEye_[0-9]/m,Mv=/mMouth_[0-9]/m,WT=/[0-9]{2}/,Sv=["eye","mouth"];function XT(r){const{type:e,meshes:t}=r;return e==="adventurer"?$T(r):t.some(({name:i})=>i.match(/mEye|mMouth/))?qT(r):r}function $T(r){const{meshes:e,id:t}=r,n=l=>`${A0}/${l}/${l}.png`,i=e.find(({name:l})=>l==="mBodyAll"),s={eyeIdx:2,eyeBaseIdx:2,mouthIdx:2,mouthBaseIdx:2,eyeTexture:t,mouthTexture:t},o={type:"uv",reset:function(){this.eyeIdx=this.eyeBaseIdx,this.mouthIdx=this.mouthBaseIdx}},a=l=>([u,h])=>{var _;if(!i)return;const f=`mt${wp(l)}CH`,d=(_=i.geometry.groups)==null?void 0:_.find(y=>{var x;return((x=i.material[y.materialIndex])==null?void 0:x.name)===f});if(!d)return;const{start:p,count:m}=d,g=p+m,v=i.geometry.attributes.uv;for(let y=p;y<g;y++){const x=v.getX(y)+.25*u,w=v.getY(y)+.25*h;v.setXY(y,x,w)}v.needsUpdate=!0},c=l=>u=>{var p,m;if(!i)return;const h=`mt${wp(l)}CH`,f=(m=(p=i.material).find)==null?void 0:m.call(p,({name:g})=>g===h);if(!f)return;const d=n(u);f.map.dispose(),f.map=mv(d),f.needsUpdate=!0};return Sv.forEach(l=>{Object.defineProperties(o,{[`${l}Idx`]:{get(){return s[`${l}Idx`]},set(u){const h=parseInt(u),f=this[`${l}Idx`];s[`${l}Idx`]=h;const d=GT(h,f);a(l)(d)}},[`${l}BaseIdx`]:{get(){return s[`${l}BaseIdx`]},set(u){s[`${l}BaseIdx`]=u,this[`${l}Idx`]=u}},[`${l}Texture`]:{get(){return s[`${l}Texture`]},set(u){const h=this[`${l}Texture`];s[`${l}Texture`]=u,c(l)(u);const f=HT(u,h);a(l)(f)}}})}),r.face=Uc(o),r}function qT(r){const{meshes:e}=r,[t,n]=jT(e);[...t,...n].forEach(c=>c.frustumCulled=!1);const i={eye:t,mouth:n},s={eyeIdx:"",eyeBaseIdx:"",mouthIdx:"",mouthBaseIdx:""},o={eyeList:t,mouthList:n,type:"meshes",reset:function(){this.eyeIdx=this.eyeBaseIdx,this.mouthIdx=this.mouthBaseIdx}},a=c=>l=>{i[c].forEach(u=>{const{name:h}=u,f=WT.exec(h)[0];u.visible=parseInt(f)===l})};return Sv.forEach(c=>Object.defineProperties(o,{[`${c}Idx`]:{get(){return s[`${c}Idx`]},set(l){const u=parseInt(l);a(c)(u),s[`${c}Idx`]=`${u}`}},[`${c}BaseIdx`]:{get(){return s[`${c}BaseIdx`]},set(l){s[`${c}BaseIdx`]=l,this[`${c}Idx`]=l}}})),o.eyeBaseIdx=Sp,o.mouthBaseIdx=Sp,r.face=Uc(o),r}function jT(r){const e=r.filter(({name:n})=>n.match(wv)),t=r.filter(({name:n})=>n.match(Mv));return[e,t]}function YT(r){const{model:e,uniqueId:t}=r,[n,i]=fT(e);return Object.defineProperty(i,"list",{value:rT(i.map(({name:s})=>s))}),Object.defineProperty(n,"visible",{get(){return this.filter(({visible:s})=>s)}}),i.forEach(s=>{s.name=`${t}|${s.name}`}),Object.defineProperties(r,{meshes:{get(){return n}},bones:{get(){return i}}})}const Av={},ZT=async()=>{const r=await Bc(`${kc}/model-parts.json`);Object.assign(Av,r)},JT=r=>Av[r],KT=/mParts([A-Za-z]+)/,Ep=/mParts[A-Za-z]+_([A-Za-z]*)/;function QT(r){const{meshes:e,id:t}=r,n=JT(t),i=[],s=[];if(e.forEach(l=>{var h;let{name:u}=l;if(!!(u!=null&&u.match)){if((u.includes("Effect")||u.includes("Extension"))&&(l.visible=!1),(h=n==null?void 0:n.custom)!=null&&h[u]&&(u=l.name=n.custom[u]),u.match(/mParts/)){i.push(l);return}!u.match(wv)&&!u.match(Mv)&&s.push(l)}}),!i.length&&s.length<2)return r;const o=Object.defineProperties({},{list:{get(){return Object.keys(this)},enumerable:!1},reset:{value:function(){this.list.forEach(l=>this[l].reset())},enumerable:!1},others:{get(){return s},enumerable:!1}});if(r.parts=o,!i.length)return r;const a=new Set(i.map(({name:l})=>{var u;return(u=KT.exec(l))==null?void 0:u[1]}).sort((l,u)=>l>u?1:-1)),c=l=>i.filter(({name:u})=>u.includes(`mParts${l}`)).sort((u,h)=>u.name>h.name?1:-1);return a.forEach(l=>{var g,v,_;const u=n==null?void 0:n[l],h=(v=(g=u==null?void 0:u.name)==null?void 0:g.replaceAll(" ","_"))!=null?v:l,f=u==null?void 0:u.options,d=c(l);d.forEach(y=>y.frustumCulled=!1);const p=d.map(({name:y})=>{var w,M,P;const x=(M=(w=Ep.exec(y))==null?void 0:w[1])!=null?M:"default";return(P=f==null?void 0:f[x])!=null?P:x}),m=(_=u==null?void 0:u.default)!=null?_:p[0];o[h]={_meshes:d,list:p,default:m!=null?m:p[0]},Object.defineProperties(o[h],{current:{get(){var P,b,T;const y=d.filter(({visible:I})=>I).length;if(y===0)return"None";if(y!==1)return"custom";const w=(P=d.find(({visible:I})=>I).name.match(Ep))==null?void 0:P[1];return(T=(b=f==null?void 0:f[w!=null?w:"default"])!=null?b:w)!=null?T:"default"},set(y){if(y.toLowerCase()==="none"){this._meshes.forEach((w,M)=>{w.visible=!1});return}if(!this.list.includes(y))return;const x=this.list.indexOf(y);this._meshes.forEach((w,M)=>{w.visible=M===x})}},index:{get(){return this.current==="custom"?NaN:this.list.indexOf(this.current)},set(y){this._meshes.forEach((x,w)=>{x.visible=w===Number(y)})}},reset:{value:function(){this.current=this.default}}})}),o.reset(),r.parts=o,r}const eE=r=>e=>{const t=e.meshes,n={...Ui,...r},{type:i}=n;Mp(t,{force:!0,matType:i});let s={type:i,showTexture:!0},o=kl(i);const a={get code(){const{type:c,propList:l}=this,u=[];return c!==Ui.type&&u.push(`type=${c}`),l.forEach(f=>{const d=AT[f],p=d(this[f]),m=d(Ui[f]);p!==m&&u.push(`${f}=${p}`)}),u.join("/").replaceAll("#","")},set code(c){const l=Object.keys(Ui),u={...Ui,...gv(c)};l.forEach(h=>{this[h]=u[h]})},toString(){const{code:c}=this;return c?`mat=(${c})`:""},get list(){return t.flatMap(({material:c})=>c)},get propList(){return o},set type(c){if(this.type===c)return;o=kl(c),Mp(t,{matType:c}),s.type=c;const l={...s};s={showTexture:l.showTexture},o.forEach(u=>this[u]=l[u]),s=l},set flatShading(c){const l=Wn(c);l!==this.flatShading&&(s.flatShading=l,this.propList.includes("flatShading")&&this.list.forEach(u=>{u.flatShading=l,u.needsUpdate=!0}))},set gradientMap(c){var h,f;if(c===this.gradientMap||(s.gradientMap=c,!this.propList.includes("gradientMap")))return;const l=(h=this.list[0])==null?void 0:h.gradientMap;(f=l==null?void 0:l.dispose)==null||f.call(l);const u=c==="none"?null:yv(c);this.list.forEach(d=>{d.gradientMap=u,d.needsUpdate=!0})},set showTexture(c){const l=Wn(c);if(this.showTexture===l)return;s.showTexture=l;const u=l?h=>{h.map=h.userData.backupMap,h.userData.backupMap=null,h.needsUpdate=!0}:h=>{h.userData.backupMap=h.map,h.map=null,h.needsUpdate=!0};this.list.forEach(u)},set matcap(c){var h,f;if(s.matcap===c||(s.matcap=c,!this.propList.includes("matcap")))return;const l=(h=this.list[0])==null?void 0:h.matcap;(f=l==null?void 0:l.dispose)==null||f.call(l);const u=xv(c);this.list.forEach(d=>{d.matcap=u,d.needsUpdate=!0})}};return yT.forEach(c=>Object.defineProperty(a,c,{get(){return s[c]},...!_v.includes(c)&&{set(l){l!==this[c]&&(s[c]=l,this.propList.includes(c)&&this.list.forEach(u=>u[c]=ST[c](l)))}}})),kl(i).forEach(c=>a[c]=n[c]),s={...Ui,...s},e.material=Uc(a),e},tE=`uniform float opacity;\r
uniform vec3 color;\r
\r
void main() {\r
	gl_FragColor = vec4( color, opacity );\r
}\r
`,nE=`uniform float size;\r
\r
#include <skinning_pars_vertex>\r
\r
void main() {\r
	#include <skinbase_vertex>\r
	\r
    vec3 transformed = position + normal * 0.0005 * size;\r
        \r
	#include <skinning_vertex>\r
	#include <project_vertex>\r
}`,iE=r=>new Ot({side:Ut,transparent:!0,depthFunc:oh,vertexShader:nE,fragmentShader:tE,uniforms:r});function rE(r,e){const{material:t}=r,n=Array.isArray(r.material);[t].flat().forEach(hT),r.material=n?new Array(r.material.length).fill(e):e}function sE(r,e){const t=iE(e),n=[],i=["Eff","Extension"];return r.forEach(s=>{const{name:o}=s;if(i.some(c=>o.includes(c)))return;const a=s.clone();a.name=`outline-${s.name}`,rE(a,t),s.isSkinnedMesh&&a.bind(s.skeleton,s.bindMatrix),s.add(a),n.push(a)}),n}const oE={size:parseFloat,opacity:parseFloat,color:Xa},aE=r=>e=>{const t={...$r,...r},n=e.meshes,i={size:{value:t.size},opacity:{value:t.opacity},color:{value:new oe(t.color)}},s=sE(n,i),o={...t,enabled:!0},a={get propList(){return["enabled","color","size","opacity"]},get enabled(){return o.enabled},set enabled(c){const l=Wn(c);s.forEach(u=>u.visible=l),o.enabled=l},get code(){if(!this.enabled)return"none";const c=[];return Object.keys($r).forEach(l=>{const u=this[l];u!==$r[l]&&c.push(`${l}=${u}`)}),c.join("/").replaceAll("#","")},set code(c){if(c==="none"){this.enabled=!1;return}const l=Object.keys($r),u={...$r,...gv(c)};l.forEach(h=>{this[h]=u[h]})},toString(){const{code:c}=this;return c?`ol=(${c})`:""}};return["size","opacity","color"].forEach(c=>Object.defineProperty(a,c,{get(){return o[c]},set(l){l!==this[c]&&(o[c]=l,i[c].value=oE[c](l))}})),a.enabled=t.enabled,e.outline=Uc(a),e},cE=["push","pop","shift","unshift","splice","reverse","sort"];class Xn extends Array{constructor(...e){super(...e),Object.assign(this,No),cE.forEach(t=>{Object.defineProperty(this,t,{value:(...n)=>{Array.prototype[t].call(this,...n),this.dispatchEvent({type:"change",method:t,args:n})},enumerable:!1})})}remove(e){const t=this.indexOf(e);t!==-1&&this.splice(t,1)}}const Cp={chainName:"",chainCode:"",chainLength:0,aniIdx:0,clipDuration:0,clipTimeScale:1,action:null,aniAction:[],aniActionPointer:0};function Tv(r){return r.split(">").map(lE)}function lE(r){const[e,...t]=r.split("&"),n=uE(t);return{aniName:e,...n}}function uE(r){const e={},t=[],n={r:{name:"reps",map:parseInt},ts:{name:"timeScale",map:parseFloat},dur:{name:"duration",map:hE}};return r.forEach(i=>{const[s,o]=pv(i);if(s.startsWith("@")){const l=fE(o.replace(/[()]/g,""));l.time=parseFloat(s.slice(1)),t.push(l);return}if(!n[s])return;const{name:a,map:c}=n[s];e[a]=c(o)}),e.aniAction=t.filter(({time:i})=>i<=100&&i>=0).sort((i,s)=>i.time-s.time),e}function hE(r){if(!r)return[0,100];const e=r.split("-").slice(0,2).map(parseFloat),t=e.length===2?e:[0,e[0]];return t.some(n=>n>100||n<0)||t[0]>t[1]?[0,100]:t}function fE(r){return r.split("/").reduce((t,n)=>{const[i,s]=pv(n);return{...t,...dE(i,s)}},{})}const Pp={ei:{name:"face.eyeIdx",valueMap:parseInt},mi:{name:"face.mouthIdx",valueMap:parseInt},et:{name:"face.eyeTexture"},mt:{name:"face.mouthTexture"}};function dE(r,e){var i;if(r in Pp){const{name:s,valueMap:o}=Pp[r];return{[s]:(i=o==null?void 0:o(e))!=null?i:e}}let t=r,n=e;return r.startsWith("att")&&t.replace("att","attachment"),r.startsWith("parts")&&(t+="index",n=parseInt(e)),{[t]:n}}const pE=r=>`${T0}/${r}.json`;function mE(r,e){if(r.startsWith("fbx:"))return gE(r);if(r.startsWith("ex:")){const[,n]=r.split(":"),i=e==null?void 0:e.find(({uuid:s})=>n===s);return Promise.resolve(i.clone())}const t=pE(r);return new Promise(n=>fetch(t).then(i=>i.json()).then(i=>ur.parse(i)).then(n))}async function gE(r){const e=r.replace("fbx:",""),[t,n]=e.split("+"),{animations:i}=await hv(t);return n?i.find(({name:s})=>s===n):i[0]}function vE(r,e=null){return Promise.all(r.map(t=>mE(t,e)))}function _E(r,e=[]){return r.map((t,n)=>{const i=e[n];if(!i||i[0]===0&&i[1]===100)return t;const s=t.duration*ku,[o,a]=i.map(c=>Math.round(c*s/100));return tt.subclip(t,t.name,o,a,ku)})}async function yE(r,e=null){const t=Tv(r),n=t.map(({aniName:l})=>l),i=t.map(({duration:l})=>l),s=t.map(({aniName:l,duration:u,...h})=>({...h})),o=await vE(n,e),a=_E(o,i);return{code:r,clips:a,mod:s,get duration(){return s.some(({timeScale:u})=>u===0)?1/0:a.map((u,h)=>{var f,d;return u.duration/Math.abs((f=s[h].timeScale)!=null?f:1)*((d=s[h].reps)!=null?d:1)}).reduce((u,h)=>u+h,0)}}}const xE=/[a-z][0-9]{6}/;function bE(r){var h;const{model:e,uniqueId:t,bones:n,id:i,viewer:s}=r,o=s.userData.ani,a=new _0(e),c=(h=n==null?void 0:n.list)!=null?h:[],l={...No,mixer:a,chain:{},current:{...Cp},toString(){var d;const f=(d=this.chain.default)==null?void 0:d.code;return f?`ani=${f}`:""},async addChain(f,{name:d="default",autoplay:p=!0}={}){var g;if(!f||((g=this.chain[d])==null?void 0:g.code)===f)return;a.stopAllAction();const m=await yE(f,o);m.clips.forEach(v=>{v.tracks=v.tracks.reduce((_,y)=>{let x=y.name.split(".")[0];return xE.test(x)&&(y.name.replace(x,i),x=i),c.includes(x)&&(y.name=`${t}|${y.name}`,_.push(y)),_},[])}),this.chain[d]=m,a.addEventListener("finished",u),p&&this.play(d)},play(f=this.current.chainName||"default"){const d=this.chain[f];!d||(this.current.chainName=f,this.current.chainCode=d.code,this.current.chainLength=d.clips.length,this.aniIdx=0)},pause(){this.current.action&&(this.current.action.paused=!0)},resume(){this.current.action&&(this.current.action.paused=!1)},stop(){a.stopAllAction()},reset(){const f=this.current.chainName;this.stop(),this.current={...Cp},this.chain[f]=void 0},update(f){var v;a.update(f);const{current:d}=this,{action:p,aniAction:m,clipDuration:g}=d;if(!(!m[d.aniActionPointer]||!p))for(;(p==null?void 0:p.time)>((v=m[d.aniActionPointer])==null?void 0:v.time)*g/100;)this.applyAniAction(m[d.aniActionPointer]),this.current.aniActionPointer++},applyAniAction(f){r.dispatchEvent({type:"aniAction",id:t,aniAction:f});const{time:d,...p}=f;Object.entries(p).forEach(([m,g])=>{const v=m.split(".");dv(r,v,g)})},nextFrame(f=1,d=ku){if(!this.isPaused)return;const{clipTimeScale:p,clipDuration:m,action:g}=this.current,v=f*p/d;if(g.time+=v,g.time>=m){const _=g.time-m;u(),this.pause(),this.current.action.time+=_*this.current.clipTimeScale}},setTime(f){const{clipDuration:d,action:p}=this.current;!d||f>d||(p.time=f)},get isPaused(){var f;return(f=this.current.action)==null?void 0:f.paused},get aniIdx(){return this.current.aniIdx},set aniIdx(f){if(f>=this.current.chainLength)return;this.current.aniIdx=f,this.current.aniActionPointer=0;const d={type:f===0?"chainStart":"chainMove",index:f,uniqueId:t,chainName:this.current.chainName};this.dispatchEvent(d),a.stopAllAction();const p=this.chain[this.current.chainName],m=p.mod[f],{timeScale:g,reps:v,aniAction:_}=m,y=p.clips[f],x=a.clipAction(y);x.timeScale=g!=null?g:1,x.setLoop(ph,v!=null?v:1),this.current.clipDuration=y.duration,this.current.action=x,this.current.aniAction=_,this.current.aniActionPointer=0,this.current.clipTimeScale=g!=null?g:1,x.play()}};function u(){const{aniIdx:f,chainLength:d}=l.current,p=(f+1)%d;if(p===0){l.dispatchEvent({type:"ChainFinished",chainName:l.current.chainName});const{face:m}=r;m&&(m.eyeIdx=m.eyeBaseIdx,m.mouthIdx=m.mouthBaseIdx)}l.aniIdx=p}return r.animation=l,r.addEventListener("TimeUpdated",({dt:f})=>l.update(f)),r}function wE(r){const{model:e,bones:t,uniqueId:n}=r,i={};return Object.defineProperty(i,"list",{get(){return Object.values(this).flat()}}),Object.defineProperty(i,"traverse",{value:function(u){this.list.forEach(h=>{var f,d;u(h),(d=(f=h.attachment)==null?void 0:f.traverse)==null||d.call(f,u)})}}),Object.assign(r,{attachment:i,parent:null,parentBone:"",attach:(u,h="root")=>{var d;i[h]=(d=i[h])!=null?d:new Xn;const f=h==="root"?e:t.find(({name:p})=>p===`${n}|${h}`);!(f!=null&&f.add)||(u.detach(),f.add(u.model),i[h].push(u),u.parent=r,u.parentBone=h,r.dispatchEvent({type:"AttachmentChanged"}))},remove:(u,h="")=>{var d,p,m;const f=h||Object.keys(i).find(g=>i[g].indexOf(u)!==-1);!f||((p=(d=i[f]).remove)==null||p.call(d,u),(m=u.model.parent)==null||m.remove(u.model),r.dispatchEvent({type:"AttachmentChanged"}))},detach:()=>{var f;(f=e.parent)==null||f.remove(e);const{parent:u,parentBone:h}=r;!u||(u.remove(r,h),r.parent=r.parentBone=null)},attachTo:(u,h="root")=>{var f;r.detach(),(f=u==null?void 0:u.attach)==null||f.call(u,r,h)}})}function ME(r){const{material:e,id:t}=r,n=no.source.fbx,i=Lp(t);oT(t)&&async function(){const c=a(i),l=new xr().load(c);l.encoding=Ge,l.name=i,e.list.forEach(u=>{var h;return u.map=(h=u.map)!=null?h:l})}();let s=i;Object.defineProperty(r,"texture",{get(){return s},set(c){if(!c){this.texture=i;return}if(c===s)return;const l=a(c),[,u]=o(c),[,h]=o(this.texture),f=e.list.filter(d=>{var p,m,g,v;return((m=(p=d.map)==null?void 0:p.name)==null?void 0:m.includes(h))||((v=(g=d.userData.backupMap)==null?void 0:g.name)==null?void 0:v.includes(h))});!f.length||(async function(){const d=await fv(l);d.name=u,d.encoding=Ge,f.forEach(p=>{var m,g,v,_;p.map&&((g=(m=p.map).dispose)==null||g.call(m),p.map=d),p.userData.backupMap&&((_=(v=p.userData.backupMap).dispose)==null||_.call(v),p.userData.backupMap=d)})}(),s=c)}});function o(c){const[l,u]=c.split(">"),h=l||t,f=u||Lp(h);return[h,f]}function a(c){const[l,u]=o(c);return`${n}/${l}/${u}.png`}return r}const Lp=r=>r.match(/_[0-9]{2}/)||r.startsWith("h")?r:`>${r}_01`,SE=`uniform float uTime;\r
uniform float uSpread;\r
uniform float uThreshold;\r
uniform float uSpeed;\r
uniform float uParticleSize;\r
uniform float uAuraSize;\r
\r
attribute float aRandom;\r
\r
varying float vIsParticle;\r
varying float vRandom;\r
\r
#include <skinning_pars_vertex>\r
void main() {\r
    #include <skinbase_vertex>\r
\r
    vec3 transformed = position + normal * 0.005 * uSpread;\r
\r
    #include <skinning_vertex>\r
\r
    vec3 objectNormal = normal;\r
\r
	#include <skinnormal_vertex>\r
    \r
    vec4 viewPosition = viewMatrix * modelMatrix * vec4(transformed, 1.0);\r
    float yDisplacement = fract( uTime * uSpeed + aRandom ) * 0.1;\r
    viewPosition.y += yDisplacement;\r
    viewPosition.x += sin( uTime * aRandom * uSpeed + aRandom ) * 0.02;\r
    \r
    gl_Position = projectionMatrix * viewPosition;\r
    \r
    objectNormal.z *= objectNormal.z > 0.7 ? -1.0 : 1.0;\r
    vIsParticle = objectNormal.z - uThreshold;\r
\r
    gl_PointSize = vIsParticle > 0.0 ? uParticleSize : uAuraSize;\r
    gl_PointSize /= -viewPosition.z;\r
\r
    vRandom = aRandom;\r
}\r
`,AE=`uniform sampler2D uTexture;\r
\r
uniform float uTime;\r
uniform float uParticleOpacity;\r
uniform float uAuraOpacity;\r
uniform vec3 uColor;\r
uniform vec3 uColor2;\r
\r
varying float vRandom;\r
varying float vIsParticle;\r
\r
void main(){\r
    vec4 textureColor = texture2D( uTexture, gl_PointCoord );\r
    textureColor.a = length( textureColor.rgb ) ;\r
    textureColor.a *= abs( 1.0 - fract( uTime + vRandom ) ) * 0.5;\r
    textureColor.rgb = mix( uColor, uColor2,  textureColor.a * 2.0 );\r
    textureColor.a *= vIsParticle > 0.0 ? uParticleOpacity * 4.0 : uAuraOpacity;\r
\r
    gl_FragColor = textureColor;\r
    gl_FragColor /= vIsParticle > 0.0 ? 2.0 : 4.0;\r
}\r
`,$a=[{name:"time",uName:"uTime",defaultValue:0,valueMap:Number},{name:"speed",uName:"uSpeed",defaultValue:1,valueMap:Number},{name:"particleOpacity",uName:"uParticleOpacity",defaultValue:.3,valueMap:Number},{name:"auraOpacity",uName:"uAuraOpacity",defaultValue:.3,valueMap:Number},{name:"particleSize",uName:"uParticleSize",defaultValue:10,valueMap:Number},{name:"auraSize",uName:"uAuraSize",defaultValue:100,valueMap:Number},{name:"spread",uName:"uSpread",defaultValue:5,valueMap:Number},{name:"threshold",uName:"uThreshold",defaultValue:.3,valueMap:Number},{name:"texture",uName:"uTexture",defaultValue:"img/textures/particle/cloud.png",valueMap:r=>new xr().load(r)},{name:"color",uName:"uColor",defaultValue:"#ffffff",valueMap:r=>new oe(r)},{name:"color2",uName:"uColor2",defaultValue:"#33ffff",valueMap:r=>new oe(r)}],TE={aura:["visible",...$a.slice(1).map(({name:r})=>r)]},EE=(r="aura")=>(e,t={})=>{if(!!(e!=null&&e.length)&&r==="aura")return PE(e,t)};function CE(r){return new Ot({vertexShader:SE,fragmentShader:AE,uniforms:r,transparent:!0,blending:ec,depthWrite:!1,side:mi})}function PE(r,e){const t=$a.map(c=>{var d;const{uName:l,defaultValue:u,valueMap:h}=c,f=(d=h==null?void 0:h(u))!=null?d:u;return[l,{value:f}]}),n=Object.fromEntries(t),i=CE(n),s=[];r.forEach(c=>{const{name:l}=c.geometry;if(l.startsWith("mEye")||l.startsWith("mMouth"))return;const u=c.geometry.clone(),h=u.attributes.position.count,f=new Float32Array(h).fill(0).map(()=>Math.random()-.5);u.setAttribute("aRandom",new et(f,1)),u.deleteAttribute("color"),u.deleteAttribute("uv");const d=new Eh(u,i);d.name="aura",c.isSkinnedMesh&&(d.type="SkinnedMesh",d.isSkinnedMesh=!0,d.skeleton=c.skeleton,d.bindMatrix=c.bindMatrix,d.bindMatrixInverse=c.bindMatrixInverse,d.bindMode=c.bindMode,d.bind=c.bind,d.clone=c.clone,d.initBones=c.initBones,d.normalizeSkinWeights=c.normalizeSkinWeights,d.pose=c.pose,d.updateMatrixWorld=c.updateMatrixWorld),c.add(d),s.push(d)});const o={visible:!0},a={name:"aura",onDispose:()=>{},get list(){return s},get propList(){return TE.aura},get visible(){return o.visible},set visible(c){const l=Wn(c);this.list.forEach(u=>u.visible=l),o.visible=l},dispose(){this.onDispose(),this.list.forEach(c=>{var l,u,h,f,d;(l=c.parent)==null||l.remove(c),(h=(u=c.material).dispose)==null||h.call(u),(d=(f=c.geometry).dispose)==null||d.call(f)})},set code(c){c.split("/").forEach(u=>{const[h,f]=u.split("=");!$a.map(({name:d})=>d).includes(h)||(this[h]=f)})}};return $a.forEach(c=>{const{name:l,uName:u,defaultValue:h,valueMap:f}=c;o[l]=h,Object.defineProperty(a,l,{get(){return o[l]},set(d){var p;o[l]=d,n[u].value=(p=f==null?void 0:f(d))!=null?p:d}})}),a.onTimeUpdate=({time:c})=>a.time=c,Object.entries(e).forEach(([c,l])=>a[c]=l),a}function LE(r){const{meshes:e}=r,t={list:new Xn,dispose(){this.list.forEach(n=>{var i;return(i=n.dispose)==null?void 0:i.call(n)})},add(n="aura",i={}){const s=EE(n)(e,i);return s.onDispose=()=>this.list.remove(s),this.list.push(s),r.addEventListener("TimeUpdated",s.onTimeUpdate),s}};return r.particle=t,r}const IE=r=>{var a,c;if(r.dispatchEvent({type:"dispose"}),!r)return;const{model:e,meshes:t,outline:n,particle:i,viewer:s}=r;i==null||i.list.forEach(l=>l.dispose()),(a=e.parent)!=null&&a.isScene&&(e.parent.remove(e),s.loadedModel.remove(r)),(c=r.detach)==null||c.call(r),[t.reverse(),n==null?void 0:n.all].flat().forEach(dT)};function RE(r){const{x:e,y:t,z:n}=r;return[e,t,n].map(i=>i||"").join()}const DE={position:",,",rotation:",,",scale:"1,1,1"},FE={position:"pos",rotation:"rot",scale:"scl"};function OE(r){return Object.assign(r,{...r.isDLModel&&{toString(){const{id:e,animation:t,outline:n,material:i}=this,s=Object.entries(DE).map(([o,a])=>{const c=RE(this[o]);return c===a?"":`${FE[o]}=${c}`});return[`id=${e}`,...s,t,n,i].filter(o=>`${o}`).join("/")}},dispose(){const{attachment:e,parent:t,parentBone:n}=this;e.list.forEach(i=>i.dispose()),t==null||t.remove(this,n),this.dispatchEvent({type:"dispose"}),IE(this)}})}let af=(r=21)=>crypto.getRandomValues(new Uint8Array(r)).reduce((e,t)=>(t&=63,t<36?e+=t.toString(36):t<62?e+=(t-26).toString(36).toUpperCase():t>62?e+="-":e+="_",e),"");function NE(r,e){const{id:t,material:n,outline:i,viewer:s}=e,o=[YT,QT,wE,aE(i),eE(n),ME,XT,bE,LE,OE],a={...No,isDLModel:!0,model:r,id:t,uniqueId:af(),type:aT(t),viewer:s,userData:{},_time:0,update(c){var l;this._time+=c,(l=this.attachment)==null||l.list.forEach(u=>{var h;return(h=u.update)==null?void 0:h.call(u,c)}),this.dispatchEvent({type:"TimeUpdated",dt:c,time:this._time})},set scale(c){var u;if((u=c.includes)!=null&&u.call(c,",")){const[h,f,d]=c.split(",").map(p=>p?parseFloat(p):1);this.model.scale.set(h,f,d);return}const l=Number(c)||1;this.model.scale.set(l,l,l)},get scale(){const{scale:c}=this.model,{x:l,y:u,z:h}=c;return l===u&&l===h?l:[l,u,h].join(",")},set visible(c){this.model.visible=Wn(c)}};return["position","rotation","visible"].forEach(c=>Object.defineProperty(a,c,{get(){return this.model[c]},enumerable:!0})),r.userData.container=a,iT(...o)(a)}const Ip={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );
			gl_FragColor.a *= opacity;


		}`};class Vc{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const zE=new gr(-1,1,1,-1,0,1),cf=new Pe;cf.setAttribute("position",new _e([-1,3,0,-1,-1,0,3,-1,0],3));cf.setAttribute("uv",new _e([0,2,0,0,2,0],2));class kE{constructor(e){this._mesh=new bt(cf,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,zE)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class Vu extends Vc{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof Ot?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Co.clone(e.uniforms),this.material=new Ot({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new kE(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}const Ev=Object.freeze(Object.defineProperty({__proto__:null,ShaderPass:Vu},Symbol.toStringTag,{value:"Module"}));class Rp extends Vc{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const i=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),s.buffers.stencil.setFunc(i.ALWAYS,o,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(i.EQUAL,1,4294967295),s.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),s.buffers.stencil.setLocked(!0)}}class BE extends Vc{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class UE{constructor(e,t){if(this.renderer=e,t===void 0){const n=e.getSize(new q);this._pixelRatio=e.getPixelRatio(),this._width=n.width,this._height=n.height,t=new Gt(this._width*this._pixelRatio,this._height*this._pixelRatio),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],Ip===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),Vu===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new Vu(Ip),this.clock=new zc}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let i=0,s=this.passes.length;i<s;i++){const o=this.passes[i];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),c=this.renderer.state.buffers.stencil;c.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),c.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}Rp!==void 0&&(o instanceof Rp?n=!0:o instanceof BE&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new q);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(n,i),this.renderTarget2.setSize(n,i);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new gr(-1,1,1,-1,0,1);const Cv=new Pe;Cv.setAttribute("position",new _e([-1,3,0,-1,-1,0,3,-1,0],3));Cv.setAttribute("uv",new _e([0,2,0,0,2,0],2));class VE extends Vc{constructor(e,t,n,i,s){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=i,this.clearAlpha=s!==void 0?s:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new oe}render(e,t,n){const i=e.autoClear;e.autoClear=!1;let s,o;this.overrideMaterial!==void 0&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,s),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=o),e.autoClear=i}}function Dp({renderer:r,scene:e,camera:t}){const n=GE(),i=new UE(r,n),s=new VE(e,t);return i.addPass(s),i}const GE=()=>new Gt(800,600,{minFilter:rt,magFilter:rt,format:Yt,encoding:Ge}),Ul={bloom:WE,pixel:$E,afterimage:JE,sobel:qE,halftone:jE,dotscreen:YE,bokeh:ZE,smaa:XE};async function HE(r,e){var n;r=r.toLowerCase();const t=await((n=Ul[r])==null?void 0:n.call(Ul,e));return t.type=r,t.name=lf[r].name,t}function zo(r,e){Object.defineProperty(r,"propList",{value:e}),e.forEach(t=>{Object.defineProperty(r,t,{get(){return this.uniforms[t].value},set(n){this.uniforms[t].value=n}})})}async function WE({resolution:r=new q(800,600),strength:e=.3,radius:t=.5,threshold:n=.8}={}){const{UnrealBloomPass:i}=await it(()=>import("./UnrealBloomPass.2fb63a5c.js"),[]),s=new i(r,e,t,n);return Object.defineProperty(s,"propList",{value:["radius","strength","threshold"],writable:!1}),s}async function XE({renderer:r}){const{SMAAPass:e}=await it(()=>import("./SMAAPass.87598dad.js"),[]),t=new q;r.getSize(t);const n=new e(t.x,t.y);return Object.defineProperty(n,"propList",{value:[],writable:!1}),n}async function $E({renderer:r}){const{ShaderPass:e}=await it(()=>Promise.resolve().then(()=>Ev),void 0),{PixelShader:t}=await it(()=>import("./PixelShader.ee1b9117.js"),[]),n=new e(t),i=new q;return r.getSize(i),i.multiplyScalar(window.devicePixelRatio),n.uniforms.resolution.value=i,zo(n,["pixelSize"]),n.pixelSize=10,n}async function qE({renderer:r}){const{ShaderPass:e}=await it(()=>Promise.resolve().then(()=>Ev),void 0),{SobelOperatorShader:t}=await it(()=>import("./SobelOperatorShader.d3f5a8bf.js"),[]),n=new q;r.getSize(n),n.multiplyScalar(window.devicePixelRatio);const i=new e(t);return i.uniforms.resolution.value.x=n.x,i.uniforms.resolution.value.y=n.y,Object.defineProperty(i,"propList",{value:[],writable:!1}),i}async function jE({renderer:r}){const{HalftonePass:e}=await it(()=>import("./HalftonePass.d7fcef47.js"),[]),t=new q;r.getSize(t);const n=new e(t.x,t.y,{radius:4});return zo(n,["greyscale","radius","scatter","shape"]),n}async function YE(){const{DotScreenPass:r}=await it(()=>import("./DotScreenPass.f46f21ab.js"),[]),e=new r;return zo(e,["scale","center"]),e}async function ZE({scene:r,camera:e}){const{BokehPass:t}=await it(()=>import("./BokehPass.e849f13b.js"),[]),n=new t(r,e,{});return zo(n,["focus","aperture","aspect"]),n}async function JE(){const{AfterimagePass:r}=await it(()=>import("./AfterimagePass.65ea2a6c.js"),[]),e=new r(.7);return zo(e,["damp"]),e}function KE(r){var o;const{name:e,type:t}=r,n=(o=lf[t].propList)!=null?o:[],i={};return n.forEach(a=>{Object.defineProperty(i,a,{get(){return r[a]},set(c){r[a]=c},enumerable:!0})}),{target:r,name:e,type:t,params:i,id:af()}}const lf={bloom:{name:"Bloom",propList:["enabled","radius","strength","threshold"]},pixel:{name:"Pixelate",propList:["enabled","pixelSize"]},afterimage:{name:"Afterimage",propList:["enabled","damp"]},sobel:{name:"Sobel",propList:["enabled"]},halftone:{name:"Halftone",propList:["enabled","greyscale","radius","scatter","shape"]},dotscreen:{name:"Dot Screen",propList:["enabled","scale"]},bokeh:{name:"Bokeh",propList:["enabled","focus","aperture","aspect"]},smaa:{name:"SMAA",propList:["enabled"]}};Object.entries(lf).map(([r,{name:e}])=>({value:r,label:e}));var qr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function lC(r){var e=r.default;if(typeof e=="function"){var t=function(){return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(r).forEach(function(n){var i=Object.getOwnPropertyDescriptor(r,n);Object.defineProperty(t,n,i.get?i:{enumerable:!0,get:function(){return r[n]}})}),t}var Pv={exports:{}};(function(r,e){(function(t,n){r.exports=n()})(qr,function(){var t=function(){function n(d){return o.appendChild(d.dom),d}function i(d){for(var p=0;p<o.children.length;p++)o.children[p].style.display=p===d?"block":"none";s=d}var s=0,o=document.createElement("div");o.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",o.addEventListener("click",function(d){d.preventDefault(),i(++s%o.children.length)},!1);var a=(performance||Date).now(),c=a,l=0,u=n(new t.Panel("FPS","#0ff","#002")),h=n(new t.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=n(new t.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:o,addPanel:n,showPanel:i,begin:function(){a=(performance||Date).now()},end:function(){l++;var d=(performance||Date).now();if(h.update(d-a,200),d>c+1e3&&(u.update(1e3*l/(d-c),100),c=d,l=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return d},update:function(){a=this.end()},domElement:o,setMode:i}};return t.Panel=function(n,i,s){var o=1/0,a=0,c=Math.round,l=c(window.devicePixelRatio||1),u=80*l,h=48*l,f=3*l,d=2*l,p=3*l,m=15*l,g=74*l,v=30*l,_=document.createElement("canvas");_.width=u,_.height=h,_.style.cssText="width:80px;height:48px";var y=_.getContext("2d");return y.font="bold "+9*l+"px Helvetica,Arial,sans-serif",y.textBaseline="top",y.fillStyle=s,y.fillRect(0,0,u,h),y.fillStyle=i,y.fillText(n,f,d),y.fillRect(p,m,g,v),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p,m,g,v),{dom:_,update:function(x,w){o=Math.min(o,x),a=Math.max(a,x),y.fillStyle=s,y.globalAlpha=1,y.fillRect(0,0,u,m),y.fillStyle=i,y.fillText(c(x)+" "+n+" ("+c(o)+"-"+c(a)+")",f,d),y.drawImage(_,p+l,m,g-l,v,p,m,g-l,v),y.fillRect(p+g-l,m,l,v),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p+g-l,m,l,c((1-x/w)*v))}}},t})})(Pv);const QE=Pv.exports;var Gc={exports:{}};(function(r,e){(function(t,n){n()})(qr,function(){function t(l,u){return typeof u>"u"?u={autoBom:!1}:typeof u!="object"&&(console.warn("Deprecated: Expected third argument to be a object"),u={autoBom:!u}),u.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(l.type)?new Blob(["\uFEFF",l],{type:l.type}):l}function n(l,u,h){var f=new XMLHttpRequest;f.open("GET",l),f.responseType="blob",f.onload=function(){c(f.response,u,h)},f.onerror=function(){console.error("could not download file")},f.send()}function i(l){var u=new XMLHttpRequest;u.open("HEAD",l,!1);try{u.send()}catch{}return 200<=u.status&&299>=u.status}function s(l){try{l.dispatchEvent(new MouseEvent("click"))}catch{var u=document.createEvent("MouseEvents");u.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),l.dispatchEvent(u)}}var o=typeof window=="object"&&window.window===window?window:typeof self=="object"&&self.self===self?self:typeof qr=="object"&&qr.global===qr?qr:void 0,a=o.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),c=o.saveAs||(typeof window!="object"||window!==o?function(){}:"download"in HTMLAnchorElement.prototype&&!a?function(l,u,h){var f=o.URL||o.webkitURL,d=document.createElement("a");u=u||l.name||"download",d.download=u,d.rel="noopener",typeof l=="string"?(d.href=l,d.origin===location.origin?s(d):i(d.href)?n(l,u,h):s(d,d.target="_blank")):(d.href=f.createObjectURL(l),setTimeout(function(){f.revokeObjectURL(d.href)},4e4),setTimeout(function(){s(d)},0))}:"msSaveOrOpenBlob"in navigator?function(l,u,h){if(u=u||l.name||"download",typeof l!="string")navigator.msSaveOrOpenBlob(t(l,h),u);else if(i(l))n(l,u,h);else{var f=document.createElement("a");f.href=l,f.target="_blank",setTimeout(function(){s(f)})}}:function(l,u,h,f){if(f=f||open("","_blank"),f&&(f.document.title=f.document.body.innerText="downloading..."),typeof l=="string")return n(l,u,h);var d=l.type==="application/octet-stream",p=/constructor/i.test(o.HTMLElement)||o.safari,m=/CriOS\/[\d]+/.test(navigator.userAgent);if((m||d&&p||a)&&typeof FileReader<"u"){var g=new FileReader;g.onloadend=function(){var y=g.result;y=m?y:y.replace(/^data:[^;]*;/,"data:attachment/file;"),f?f.location.href=y:location=y,f=null},g.readAsDataURL(l)}else{var v=o.URL||o.webkitURL,_=v.createObjectURL(l);f?f.location=_:location.href=_,f=null,setTimeout(function(){v.revokeObjectURL(_)},4e4)}});o.saveAs=c.saveAs=c,r.exports=c})})(Gc);const e2=["video/mp4;codecs=h264","video/webm;codecs=h264","video/webm;codecs=vp9","video/webm;codecs=vp8","video/webm"],La=e2.filter(MediaRecorder.isTypeSupported);function t2(r){if(!La.length)return;const e=[],t=La[0],n={settings:{...FT,mimeType:t},get supportedMimeTypes(){return La},get mimeType(){return this.settings.mimeType},set mimeType(i){La.includes(i)&&(this.settings.mimeType=i)},start(){if(this.recorder)return;const{fileName:i,frameRate:s,mimeType:o}=this.settings,a=r.captureStream(s||30),c=a.getTracks()[0],l=new MediaRecorder(a,{mimeType:o});l.onstart=()=>e.length=0,l.ondataavailable=({data:u})=>e.push(u),l.onstop=()=>{c.stop(),this.recorder=void 0;const u=this.settings.mimeType.includes("webm")?"webm":"mp4",h=new Blob(e,{type:`video/${u}`}),f=this.settings.appendDate?`_${pT()}`:"",d=`${i||"ani"}${f}.${u}`;Gc.exports.saveAs(h,d)},l.start(),this.recorder=l},get state(){var i,s;return(s=(i=this.recorder)==null?void 0:i.state)!=null?s:"idle"}};return["pause","resume","stop"].forEach(i=>{Object.defineProperty(n,i,{value:()=>{var s;return(s=n.recorder)==null?void 0:s[i]()}})}),n}function n2(r){let e=1,t=!1,n=!1;const i=()=>{r.stats.begin(),r.controls.update();const l=t?-e:e,u=r.clock.getDelta()*l;n||r.update(u),r.render(),r.stats.end()};let s=!1;const o=()=>{s||(r.render(),s=!0,setTimeout(()=>s=!1,50))};let a="";return{start(){a!=="active"&&(r.renderer.setAnimationLoop(i),r.controls.removeEventListener("change",o),a="active")},stop(){a!=="inactive"&&(r.renderer.setAnimationLoop(null),r.controls.addEventListener("change",o),a="inactive")},pause(){n=!0},resume(){n=!1},get state(){return a},get timeScale(){return e},set timeScale(l){const u=parseFloat(l);e=isNaN(u)?1:Math.abs(u)},get reverse(){return t},set reverse(l){t=!!l},get paused(){return n},set paused(l){n=!!l}}}const i2=async r=>{const{zip:e}=await it(()=>import("./browser.83a5952f.js"),[]);return new Promise(t=>e(r,{},(n,i)=>t(new Blob([i]))))},r2=r=>{const e=r.indexOf(",");return r.slice(e+1,1/0)},s2=async r=>{if(r=await r,r instanceof Blob&&(r=await r.arrayBuffer()),r instanceof ArrayBuffer)return new Uint8Array(r);if(typeof r=="string"){const e=r.startsWith("data")?r2(r):r,t=window.atob(e);return Uint8Array.from(t,n=>n.charCodeAt(0))}};async function o2(r){const e=await Promise.all(r.map(({data:n})=>s2(n))),t=Object.fromEntries(r.map(({name:n},i)=>[n,[e[i],{level:0,consume:!0}]]));return i2(t)}async function a2(r,e){const t=r.length.toString().length,n=r.map((i,s)=>{const o=s.toString().padStart(t,"0");return{name:`${e||"ss"}_${o}.png`,data:i}});return o2(n)}function c2(r,e){const t=document.createElement("a");t.style.display="none",t.href=r,t.download=e,document.body.appendChild(t),t.click(),document.body.removeChild(t)}async function Gu(r,e="frames"){const t=await a2(r,e);Gc.exports.saveAs(t,`${e}.zip`)}function l2(r){const{canvas:e,scene:t}=r;return{settings:DT,downloadFrame(i=1){const{noBackground:s,fileName:o}=this.settings,a=s&&!r.postProcessing.enabled;let c=null;const l=()=>[t.background,c]=[c,t.background];if(r.loop.state==="inactive"||i===1){a&&l(),r.render();const d=e.toDataURL();a&&l(),c2(d,`${o}.png`),r.render();return}let u=0;const h=[];a&&r.addCountedEventListener("beforeRender",l);function f(){const d=e.toDataURL("image/png");h.push(d),++u===i&&(a&&r.addCountedEventListener("beforeRender",l),Gu(h,o))}r.addCountedEventListener("afterRender",f,i)},getFrame(){let i;const{noBackground:s}=this.settings;if(s&&!r.postProcessing.enabled){let a=null;[t.background,a]=[a,t.background],r.render(),i=e.toDataURL("image/png"),[t.background,a]=[a,t.background],r.render()}else r.render(),i=e.toDataURL("image/png");return i},getAllFrames(i){var p,m;const s=i==null?void 0:i.animation.current.chainName;if(!s||i.animation.chain[s].duration===1/0)return;console.info("main thread locked");const a=r.loop.state;r.loop.stop(),(m=(p=i.face)==null?void 0:p.reset)==null||m.call(p),i.animation.stop();const c=[],{frameRate:l,noBackground:u}=this.settings,h=1/(l||30);let f=null,d=!0;for(u&&([t.background,f]=[f,t.background]),i.animation.addCountedEventListener("chainFinished",()=>d=!1),i.animation.play();d;){r.update(h);const g=e.toDataURL();c.push(g)}return console.info("main thread unlocked"),u&&([t.background,f]=[f,t.background]),a==="active"&&r.loop.start(),c},downloadAllFrames(i=0){const s=r.model[i],o=this.getAllFrames(s),{fileName:a}=this.settings;Gu(o,a)},getAllFramesAsArrayBuffer(i){var y,x;const s=i==null?void 0:i.animation.current.chainName;if(!s||i.animation.chain[s].duration===1/0)return;console.info("main thread locked");const a=r.renderer.getContext(),c=r.loop.state;(x=(y=i.face)==null?void 0:y.reset)==null||x.call(y),r.loop.stop(),i.animation.stop();const l=[],{frameRate:u,noBackground:h}=this.settings,f=1/(u||30),{width:d,height:p}=e,g=d*p*4;let v=null,_=!0;for(h&&([t.background,v]=[v,t.background]),i.animation.addCountedEventListener("chainFinished",()=>_=!1),i.animation.play();_;){r.update(f);const w=new Uint8Array(g);a.readPixels(0,0,d,p,a.RGBA,a.UNSIGNED_BYTE,w);const M=u2(w,{width:d,height:p});l.push(M.buffer)}return console.info("main thread unlocked"),h&&([t.background,v]=[v,t.background]),c==="active"&&r.loop.start(),l}}}function u2(r,{width:e,height:t}){const n=t/2|0,i=e*4,s=new Uint8Array(e*4);for(let o=0;o<n;++o){const a=o*i,c=(t-o-1)*i;s.set(r.subarray(a,a+i)),r.copyWithin(a,c,c+i),r.set(s,c)}return r}const h2=()=>Promise.all([zT(),kT(),UT(),ZT()]),f2={directional:Dc,ambient:Fc,point:yo},d2={directional:b0,point:x0},p2=r=>{var c,l;const e=f2[r];if(!e)return null;const t=OT[r],{color:n,intensity:i,...s}=t,o=new e(n,i);o.name=(l=(c=o.type)==null?void 0:c.replace)==null?void 0:l.call(c,"Light","");const a=d2[r];return a&&(o.helper=new a(o),Object.defineProperty(o,"showHelper",{get(){return o.helper.visible},set(u){o.helper.visible=!!u,o.helper.update()}}),o.showHelper=!1),Object.defineProperty(o,"colorCode",{get(){return"#"+this.color.getHexString()},set(u){var h,f;this.color=new oe(u),(f=(h=this.helper)==null?void 0:h.update)==null||f.call(h)}}),Object.entries(s).forEach(([u,h])=>{o[u].isVector3?o[u].set(...h):o[u]=h}),o};function m2(r){const e={list:new Xn,add:t=>{const n=p2(t);if(!!n)return r.scene.add(n),n.helper&&(r.scene.add(n.helper),n.helper.update()),e.list.push(n),n.remove=()=>{var i,s,o,a,c;e.list.remove(n),n.helper&&((i=n.parent)==null||i.remove(n.helper),(o=(s=n.helper).dispose)==null||o.call(s)),(a=n.parent)==null||a.remove(n),(c=n.dispose)==null||c.call(n)},n}};return e}const Fp={"<":">","(":")","[":"]","{":"}"},g2=r=>{let e="";const t=[],n=[];for(const i of r){if(t.length){e+=i;const s=t.at(-1);i===Fp[s]&&t.pop();continue}if(i==="/"){e&&n.push(e),e="";continue}e+=i,i in Fp&&t.push(i)}return e&&n.push(e),n},Lv=r=>g2(r).reduce((t,n)=>{const[i,...s]=n.split("="),o=s==null?void 0:s.join("=");return i&&o&&t.push([i,o]),t},[]),v2={mat:{keys:["material","code"],valueMap:r=>r.slice(1,-1)},ol:{keys:["outline","code"],valueMap:r=>r.slice(1,-1)},ei:{keys:["face","eyeBaseIdx"]},et:{keys:["face","eyeTexture"]},mi:{keys:["face","mouthBaseIdx"]},mt:{keys:["face","mouthTexture"]},tx:{keys:["texture"]},scl:{keys:["scale"]}};async function _2(r){const e=Lv(r),t=Object.fromEntries(e),{id:n}=t,i=await this.loadDLModel(n);return await y2(i,t),i}async function y2(r,e){const{ani:t,...n}=e;Object.entries(n).forEach(([i,s])=>{var u;const o=v2[i];if(!o)return;const{keys:a,valueMap:c}=o,l=(u=c==null?void 0:c(s))!=null?u:s;dv(r,a,l)}),t&&await r.animation.addChain(t)}const uf=class{constructor(){ln(this,"userData",{ani:new Xn});ln(this,"dataLoaded",!1);ln(this,"initData",async()=>{await h2(),this.dataLoaded=!0,this.dispatchEvent({type:"dataLoaded"})});ln(this,"_background","");ln(this,"model",new Xn);ln(this,"loadedModel",new Xn);ln(this,"loadModelFromCode",_2);ln(this,"settings",{outline:$r,material:Ui});ln(this,"viewport",{width:0,height:0,set(e,t){this.width=e,this.height=t}});Object.assign(this,No);const e=new Mh;this.scene=e,this.background=LT,this.clock=new zc;const t=lT();this.camera=t;const n=m2(this);n.add("directional"),n.add("ambient"),this.light=n;const i=cT();this.renderer=i,this.canvas=i.domElement,this.screenshot=l2(this),this.record=t2(this.canvas),this.controls=new fA(this.camera,this.canvas),this.postProcessing={enabled:!1,passes:new Xn,composer:Dp({renderer:i,scene:e,camera:t}),async addPass(s,o={}){const a=await HE(s,{...o,renderer:i,scene:e,camera:t});this.composer.addPass(a);const c=KE(a),{passes:l}=this,u=this;return c.remove=()=>{l.remove(c),u.refresh()},l.push(c),a},async refresh(){this.composer=Dp({renderer:i,scene:e,camera:t});const s=this.passes.map(({type:a,params:c})=>({type:a,params:Object.entries(c)}));this.passes.length=0;const{length:o}=s;for(let a=0;a<o;a++){const{type:c,params:l}=s[a],u=await this.addPass(c);l.forEach(([h,f])=>void(u[h]=f))}},updatePasses(s){this.passes.length=0,this.passes.splice(0,0,...s),this.refresh()}},this.stats=new QE,this.loop=n2(this),this.loop.start(),console.info("%cDragalia Lost Model Viewer","color:yellow;background-color:black;font-size:1.5rem;text-shadow: 0 0 0.5rem white")}get background(){return this._background}set background(e){var n,i;if(this._background===e)return;this._background="loading",(i=(n=this.scene.background)==null?void 0:n.dispose)==null||i.call(n);const t=this;(async function(){t.scene.background=await uT(e),t._background=e,e.startsWith("img:")&&t.updateBgAspectRatio()})()}get toneMapping(){var t,n;const{toneMapping:e}=this.renderer;return(n=(t=Object.entries(Bl).find(([,i])=>i===e))==null?void 0:t[0])!=null?n:"Unknown"}set toneMapping(e){const t=Bl[e]?e:"No Mapping";this.renderer.toneMapping=Bl[t]}get pixelRatio(){return this.renderer.getPixelRatio()}set pixelRatio(e){this.renderer.setPixelRatio(e),this.postProcessing.composer.setPixelRatio(e)}get unusedModel(){return this.loadedModel.filter(e=>!this.model.includes(e))}async loadDLModel(e=RT){this.dataLoaded||await new Promise(o=>this.addCountedEventListener("dataLoaded",o));const t=uf.getModelPath(e),n=await hv(t);n.name=e;const i={id:e,outline:this.settings.outline,material:this.settings.material,viewer:this},s=NE(n,i);return this.loadedModel.push(s),s.addEventListener("dispose",()=>this.loadedModel.remove(s)),s}add(e){var t;(t=e.detach)==null||t.call(e),this.model.push(e),this.scene.add(e.model),e.parent=this}remove(e){this.model.remove(e),this.scene.remove(e.model)}disposeAllModels(){this.loadedModel.forEach(e=>{var t;return(t=e.dispose)==null?void 0:t.call(e)}),this.model.length=0}static getModelPath(e){return`${this.source.fbx}/${e}/${e}.fbx`}async setViewport(e,t){var o;await sT(200);const n=e!=null?e:window.innerWidth,i=t!=null?t:window.innerHeight;this.viewport.set(n,i),this.renderer.setSize(n,i);const s=n/i;return this.camera.aspect=s,this.camera.updateProjectionMatrix(),(o=this.postProcessing.composer)==null||o.setSize(n,i),this.background.startsWith("img:")&&this.updateBgAspectRatio(),this}updateBgAspectRatio(){if(!this.background.startsWith("img:"))return;const{width:e,height:t}=this.viewport,n=e/t,{background:i}=this.scene,{naturalWidth:s,naturalHeight:o}=i.image,a=s/o,c=n/a,l=n>a?[1,1/c]:[c,1];i.repeat.set(...l)}update(e){var t;(t=this.animation)==null||t.update(e),this.model.forEach(n=>{var i;return(i=n.update)==null?void 0:i.call(n,e)}),this.loop.state==="inactive"&&this.render(),this.dispatchEvent({type:"timeUpdate",dt:e})}stopAll(){this.model.forEach(e=>{var t,n;return(n=(t=e.animation)==null?void 0:t.stop)==null?void 0:n.call(t)})}playAll(){this.model.forEach(e=>{var t,n;return(n=(t=e.animation)==null?void 0:t.play)==null?void 0:n.call(t)})}render(){this.dispatchEvent({type:"beforeRender"}),this.postProcessing.enabled?this.postProcessing.composer.render():this.renderer.render(this.scene,this.camera),this.dispatchEvent({type:"afterRender"})}toString(){return"Dragalia Lost Model Viewer"}dispose(){var e,t,n;this.model.forEach(i=>i.dispose()),(t=(e=this.scene.background)==null?void 0:e.dispose)==null||t.call(e),(n=this.renderer.renderLists)==null||n.dispose(),this.renderer.dispose()}};let no=uf;ln(no,"source",{fbx:A0,ani:T0});var jt={fullscreenEnabled:0,fullscreenElement:1,requestFullscreen:2,exitFullscreen:3,fullscreenchange:4,fullscreenerror:5,fullscreen:6},Op=["webkitFullscreenEnabled","webkitFullscreenElement","webkitRequestFullscreen","webkitExitFullscreen","webkitfullscreenchange","webkitfullscreenerror","-webkit-full-screen"],Np=["mozFullScreenEnabled","mozFullScreenElement","mozRequestFullScreen","mozCancelFullScreen","mozfullscreenchange","mozfullscreenerror","-moz-full-screen"],zp=["msFullscreenEnabled","msFullscreenElement","msRequestFullscreen","msExitFullscreen","MSFullscreenChange","MSFullscreenError","-ms-fullscreen"],Bt=typeof window<"u"&&typeof window.document<"u"?window.document:{},en="fullscreenEnabled"in Bt&&Object.keys(jt)||Op[0]in Bt&&Op||Np[0]in Bt&&Np||zp[0]in Bt&&zp||[],x2={requestFullscreen:function(r){return r[en[jt.requestFullscreen]]()},requestFullscreenFunction:function(r){return r[en[jt.requestFullscreen]]},get exitFullscreen(){return Bt[en[jt.exitFullscreen]].bind(Bt)},get fullscreenPseudoClass(){return":"+en[jt.fullscreen]},addEventListener:function(r,e,t){return Bt.addEventListener(en[jt[r]],e,t)},removeEventListener:function(r,e,t){return Bt.removeEventListener(en[jt[r]],e,t)},get fullscreenEnabled(){return Boolean(Bt[en[jt.fullscreenEnabled]])},set fullscreenEnabled(r){},get fullscreenElement(){return Bt[en[jt.fullscreenElement]]},set fullscreenElement(r){},get onfullscreenchange(){return Bt[("on"+en[jt.fullscreenchange]).toLowerCase()]},set onfullscreenchange(r){return Bt[("on"+en[jt.fullscreenchange]).toLowerCase()]=r},get onfullscreenerror(){return Bt[("on"+en[jt.fullscreenerror]).toLowerCase()]},set onfullscreenerror(r){return Bt[("on"+en[jt.fullscreenerror]).toLowerCase()]=r}};const Ia=x2,dt=new no;dt.initData();dt.setViewport();dt.userData.specialCapture={frameRate:30,duration:5,program:"rotate"};window.addEventListener("resize",()=>dt.setViewport());dt.canvas.addEventListener("dblclick",b2);window.viewer=dt;window.model=dt.model;window.getFrame=dt.screenshot.getFrame;window.downloadFrames=Gu;window.saveAs=Gc.exports.saveAs;window.THREE=S0;window.makeGif=async r=>{const{makeGif:e}=await it(()=>import("./index.3a92bef7.js"),[]);return await e(r)};function b2(){!Ia.fullscreenEnabled||(Ia.fullscreenElement?Ia.exitFullscreen():Ia.requestFullscreen(dt.canvas))}function w2(){try{return window.self!==window.top}catch{return!0}}let kp="";const Iv=w2(),M2=Iv?!1:!window.location.hash.includes("showSettings=false"),S2=Iv?!1:!window.location.hash.includes("showAC=false"),A2=r=>({showSettings:M2,toggleSettings:()=>r(e=>void(e.showSettings=!e.showSettings)),loadingMsg:"",setLoadingMsg:e=>r(t=>void(t.loadingMsg=e)),showTimeControl:S2,toggleTimeControl:()=>r(e=>void(e.showTimeControl=!e.showTimeControl)),showFrameRate:!1,toggleFrameRate:()=>r(e=>void(e.showFrameRate=!e.showFrameRate)),sidebar:{open:!0,toggle:()=>r(({sidebar:e})=>void(e.open=!e.open)),settings:{tab:"Model",setTab:e=>r(({sidebar:t})=>void(t.settings.tab=e))},modal:{mode:"",handleSelect:void 0,open:(e,t)=>{kp=dt.loop.state,dt.loop.stop(),r(({sidebar:n})=>{const{modal:i}=n;i.mode=e,i.handleSelect=t})},close:()=>{kp==="active"&&dt.loop.start(),r(({sidebar:e})=>{const{modal:t}=e;t.mode="",t.handleSelect=void 0})}},manageMode:"single",setManageMode:e=>r(({sidebar:t})=>void(t.manageMode=e))},chainMaker:{target:null,setTarget:e=>r(({chainMaker:t})=>void(t.target=e))},dock:{mode:"",handleSelect:void 0,open:(e="",t)=>r(({dock:n})=>{n.mode=e,n.handleSelect=t}),close:()=>r(({dock:e})=>{e.mode="",e.handleSelect=void 0})}});var T2=0;function dn(r,e,t,n,i){var s,o,a={};for(o in e)o=="ref"?s=e[o]:a[o]=e[o];var c={type:r,props:a,key:t,ref:s,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:--T2,__source:i,__self:n};if(typeof r=="function"&&(s=r.defaultProps))for(o in s)a[o]===void 0&&(a[o]=s[o]);return be.vnode&&be.vnode(c),c}const E2=Ht(()=>it(()=>import("./index.e8d3f88a.js"),["assets/index.e8d3f88a.js","assets/index.aa80096d.css","assets/TabBar.43700283.js","assets/ButtonBase.364ccf33.js","assets/Gallery.2a841c24.js","assets/Popover.d771b8f3.js","assets/createSvgIcon.367d6de6.js","assets/Box.51910987.js","assets/DialogTitle.ca07fc52.js","assets/ColorPicker.45f596f5.js","assets/ColorPicker.a4b8921d.css","assets/ColorButton.743db584.js","assets/Button.ca13eae1.js","assets/file2dataURL.f1f8a32d.js"])),C2=Ht(()=>it(()=>import("./index.90078dc1.js"),["assets/index.90078dc1.js","assets/styles.2ff56570.css","assets/lists.d978aa67.js","assets/lists.4341b07e.css","assets/createSvgIcon.367d6de6.js","assets/ButtonBase.364ccf33.js","assets/Gallery.2a841c24.js","assets/Popover.d771b8f3.js","assets/Box.51910987.js","assets/DialogTitle.ca07fc52.js","assets/Close.9f31cc41.js","assets/filterConfig.4edc9f02.js","assets/filterConfig.ea114570.css","assets/GlowToggle.b16abd7a.js","assets/GlowToggle.eb519626.css","assets/styles.85f37e03.js","assets/styles.6d95f099.css","assets/index.fdf29615.js"])),P2=Ht(()=>it(()=>import("./index.d93c6268.js"),["assets/index.d93c6268.js","assets/index.a584847b.css","assets/styles.2ff56570.css","assets/lists.d978aa67.js","assets/lists.4341b07e.css","assets/createSvgIcon.367d6de6.js","assets/ButtonBase.364ccf33.js","assets/Gallery.2a841c24.js","assets/Popover.d771b8f3.js","assets/Box.51910987.js","assets/DialogTitle.ca07fc52.js","assets/Close.9f31cc41.js","assets/Stretcher.7ea87186.js","assets/Stretcher.c7840dc6.css","assets/TabBar.43700283.js","assets/Button.ca13eae1.js","assets/ModelIcon.1466fdb9.js","assets/aniFunction.c75b14e2.js","assets/Selector.da06cf5f.js","assets/Selector.88a094c7.css","assets/GlowToggle.b16abd7a.js","assets/GlowToggle.eb519626.css","assets/useKey.281d29ed.js","assets/file2dataURL.f1f8a32d.js","assets/useToggleState.5d0bb8e6.js","assets/Check.6237dc79.js"])),L2=Ht(()=>it(()=>import("./index.63c8498e.js"),["assets/index.63c8498e.js","assets/styles.2ff56570.css","assets/AddWeapon.5f73d639.js","assets/AddWeapon.45b642d6.css","assets/lists.d978aa67.js","assets/lists.4341b07e.css","assets/createSvgIcon.367d6de6.js","assets/ButtonBase.364ccf33.js","assets/Gallery.2a841c24.js","assets/Popover.d771b8f3.js","assets/Box.51910987.js","assets/DialogTitle.ca07fc52.js","assets/Close.9f31cc41.js","assets/filterConfig.4edc9f02.js","assets/filterConfig.ea114570.css","assets/GlowToggle.b16abd7a.js","assets/GlowToggle.eb519626.css","assets/index.fdf29615.js","assets/useToggleState.5d0bb8e6.js","assets/ModelIcon.1466fdb9.js"])),I2=Ht(()=>it(()=>import("./ColorSelect.40f502ac.js"),["assets/ColorSelect.40f502ac.js","assets/ColorPicker.45f596f5.js","assets/ColorPicker.a4b8921d.css","assets/ColorButton.743db584.js","assets/Button.ca13eae1.js","assets/ButtonBase.364ccf33.js","assets/DialogTitle.ca07fc52.js"])),R2=Ht(()=>it(()=>import("./index.a194eaeb.js"),["assets/index.a194eaeb.js","assets/FaceSelect.ed9fe051.js","assets/FaceSelect.febe3778.css","assets/useKey.281d29ed.js","assets/FacePartSelector.52e9f65c.js","assets/Selector.da06cf5f.js","assets/Selector.88a094c7.css","assets/GlowToggle.b16abd7a.js","assets/GlowToggle.eb519626.css","assets/MeshMouthSelect.e8c1dde3.js","assets/MeshMouthSelect.7f49998c.css","assets/Box.51910987.js","assets/ButtonBase.364ccf33.js","assets/DialogTitle.ca07fc52.js","assets/Button.ca13eae1.js"])),D2=Ht(()=>it(()=>import("./index.639b25aa.js"),["assets/index.639b25aa.js","assets/styles.2ff56570.css","assets/FaceTexture.4d8b168c.js","assets/useToggleState.5d0bb8e6.js","assets/lists.d978aa67.js","assets/lists.4341b07e.css","assets/createSvgIcon.367d6de6.js","assets/ButtonBase.364ccf33.js","assets/Gallery.2a841c24.js","assets/Popover.d771b8f3.js","assets/Box.51910987.js","assets/DialogTitle.ca07fc52.js","assets/Close.9f31cc41.js","assets/FacePartSelector.52e9f65c.js","assets/Selector.da06cf5f.js","assets/Selector.88a094c7.css","assets/GlowToggle.b16abd7a.js","assets/GlowToggle.eb519626.css","assets/filterConfig.4edc9f02.js","assets/filterConfig.ea114570.css","assets/styles.85f37e03.js","assets/styles.6d95f099.css"])),F2=Ht(()=>it(()=>import("./index.b2357128.js"),["assets/index.b2357128.js","assets/index.98b9a174.css","assets/styles.2ff56570.css","assets/useKey.281d29ed.js","assets/Stretcher.7ea87186.js","assets/Stretcher.c7840dc6.css","assets/BoneManager.db4fbf33.js","assets/BoneManager.bf3fbd2c.css","assets/ModelIcon.1466fdb9.js","assets/Accordion.9d5c1cda.js","assets/Accordion.09fd7fc3.css","assets/useToggleState.5d0bb8e6.js","assets/createSvgIcon.367d6de6.js","assets/ButtonBase.364ccf33.js","assets/filterConfig.4edc9f02.js","assets/filterConfig.ea114570.css","assets/Gallery.2a841c24.js","assets/Popover.d771b8f3.js","assets/Box.51910987.js","assets/DialogTitle.ca07fc52.js","assets/GlowToggle.b16abd7a.js","assets/GlowToggle.eb519626.css","assets/lists.d978aa67.js","assets/lists.4341b07e.css","assets/Close.9f31cc41.js","assets/ColorButton.743db584.js","assets/Button.ca13eae1.js","assets/SkipPrevious.8b8b8cd8.js","assets/FaceSelect.ed9fe051.js","assets/FaceSelect.febe3778.css","assets/FacePartSelector.52e9f65c.js","assets/Selector.da06cf5f.js","assets/Selector.88a094c7.css","assets/MeshMouthSelect.e8c1dde3.js","assets/MeshMouthSelect.7f49998c.css","assets/FaceTexture.4d8b168c.js","assets/styles.85f37e03.js","assets/styles.6d95f099.css","assets/AddWeapon.5f73d639.js","assets/AddWeapon.45b642d6.css","assets/index.fdf29615.js"])),Bp=Ht(()=>it(()=>import("./index.5a84a4ec.js"),["assets/index.5a84a4ec.js","assets/index.045f3dd6.css","assets/MeshMouthSelect.e8c1dde3.js","assets/MeshMouthSelect.7f49998c.css","assets/Box.51910987.js","assets/ButtonBase.364ccf33.js","assets/DialogTitle.ca07fc52.js","assets/Button.ca13eae1.js"])),O2=Ht(()=>it(()=>import("./index.40ed5e04.js"),["assets/index.40ed5e04.js","assets/index.79f787e2.css","assets/styles.2ff56570.css","assets/useKey.281d29ed.js","assets/Accordion.9d5c1cda.js","assets/Accordion.09fd7fc3.css","assets/useToggleState.5d0bb8e6.js","assets/createSvgIcon.367d6de6.js","assets/ButtonBase.364ccf33.js","assets/ModelIcon.1466fdb9.js","assets/Button.ca13eae1.js","assets/Check.6237dc79.js","assets/DialogTitle.ca07fc52.js","assets/Box.51910987.js"])),Up={background:E2,model:C2,animation:P2,weapon:L2,color:I2,face:R2,faceTexture:D2,attachment:F2,target:O2,eye:({onSelect:r})=>dn(Bp,{part:"eye",onSelect:r}),mouth:({onSelect:r})=>dn(Bp,{part:"mouth",onSelect:r})},N2=(r,e)=>({Component:void 0,props:void 0,openModal:(t,n)=>r(i=>{i.props=n,i.Component=t}),close:()=>r(t=>t.Component=void 0),onClose:void 0,reset:()=>r(t=>{t.Component=t.props=t.onClose=void 0}),getInput:async t=>{if(!Up[t])return null;const{close:n,reset:i}=e(),s=new Promise((o,a)=>{const c=(...l)=>o(l);r(l=>{l.onClose=()=>{a(),n()},l.props={onSelect:c,onAfterSelect:n},l.Component=Up[t]})});try{return await s}catch{return null}finally{i()}},inputModel:()=>e().getInput("model"),inputAni:()=>e().getInput("animation"),inputColor:async()=>{const t=await e().getInput("color");return t==null?void 0:t[0]},inputTarget:()=>e().getInput("target"),inputEye:()=>e().getInput("eye"),inputMouth:()=>e().getInput("mouth")}),z2=r=>({activeModel:void 0,setActiveModel:e=>r({activeModel:e})}),k2=r=>({open:!1,toggle:()=>r(e=>e.open=!e.open),target:null,setTarget:e=>r(t=>{!e||(e.userData.chain||(e.userData.chain=new Xn),t.target=e)})}),B2=r=>(e,t,n)=>r(i=>e(E_(i)),t,n),ko=r=>Yu(B2(r)),Hu=ko(A2),uC=Yu(z2),hC=Yu(k2),fC=ko(Lm),dC=ko(Lm),U2=ko(C_),pC=ko(N2);function V2(){return new Worker("/dl-model/assets/fetchWorker.841d8105.js")}const G2=r=>{const e=new V2;return new Promise(t=>{e.addEventListener("message",n=>{e.terminate(),t(n.data)}),e.postMessage(r)})};function Rv(){return new Worker("/dl-model/assets/dbWorker.9464fd3f.js")}const Dv=(r,e)=>{const t=new Rv;return new Promise(n=>{t.addEventListener("message",()=>{n(),t.terminate()}),t.postMessage({type:"put",store:e,value:r})})};function H2(){return new Worker("/dl-model/assets/searchWorker.20599182.js")}async function W2(r,e="",t=["name"]){if(!e||!t.length)return r;const n=new H2;return new Promise(i=>{n.addEventListener("message",s=>{n.terminate(),i(s.data)}),n.postMessage({fullList:r,query:e,keys:t})})}const mC=async r=>{const e=Object.values(r).flat();await Dv(e,"model"),console.info("Model DB Initialized")},gC=r=>Hc({type:"get",store:"model",value:r}),vC=r=>Hc({type:"search",store:"model",index:"name",value:r}),_C=async r=>{const t=(await Hc({type:"getByKeyRange",store:"model",value:"c100000_00-c199999_99"})).filter(({id:n})=>!n.endsWith("h"));return W2(t,r)},X2=()=>Hc({type:"getMap",store:"model",index:"name"}),Hc=r=>{const e=new Rv;return new Promise(t=>{e.addEventListener("message",n=>{e.terminate(),t(n.data)}),e.postMessage(r)})},So={},$2=async()=>{if(Object.keys(So).length)return;const r="ani-personal",e=(await G2([r]))[r];Object.assign(So,e)},Fv=$2(),yC=r=>So[r],q2=r=>{var e,t;return(t=(e=So[r])==null?void 0:e[0])!=null?t:r.startsWith("c")?{name:"Bob",code:"CMN_MWM_03"}:null},xC=async()=>{const r=await X2();await Fv;const e=Object.entries(So).flatMap(([t,n])=>{const i=r.get(t);return n.map(s=>({...s,user:t,fullName:`${i} ${s.name}`}))});await Dv(e,"animation")},j2="cccccc",Y2="c100001_01",Vp=(r,e="Unknown")=>{const t=Tv(r),{length:n}=t,i=t.map((s,o)=>{const{aniName:a,reps:c=1,timeScale:l=1,duration:u=[0,100],aniAction:h}=s,f=n>1?e+` #${o+1}`:e;return{id:af(),name:f,aniName:a,reps:c,timeScale:l,duration:u,aniAction:h}});return Xn.from(i)},Gp={ts:{key:"timeScale",defaultValue:1},r:{key:"reps",defaultValue:1}},Z2={"face.eyeIdx":"ei","face.mouthIdx":"mi"},bC=r=>r.map(J2).join(">"),J2=r=>{const{aniName:e}=r,t=K2(r),n=Q2(r),i=eC(r);return`${e}${t}${n}${i}`},K2=r=>{const e=[];return Object.keys(Gp).forEach(t=>{const{key:n,defaultValue:i}=Gp[t];r[n]&&r[n]!==i&&e.push(`&${t}=${r[n]}`)}),e.join("")},Q2=r=>{const{duration:e=[0,100]}=r,[t,n]=e;return t!==0?`&dur=${t}-${n}`:n===100?"":`&dur=${n}`},eC=r=>{const{aniAction:e}=r;if(!e.length)return"";const t=e.map(n=>{const{time:i,...s}=n,o=Object.entries(s).map(([a,c])=>{var l;return`${(l=Z2[a])!=null?l:a}=${c}`});return`@${i}=(${o.join("/")})`});return"&"+t.join("&")};function tC(r){if(!(r!=null&&r.userData))return;const{type:e,id:t}=r,{name:n}=r.userData;r.userData.aniSelectState={category:e==="adventurer"?"Adv":"Personal",personalAni:{source:t,sourceName:n}}}function Vl(){const r=decodeURI(window.location.hash),e=Lv(r),t=Object.fromEntries(e);nC(t),iC(r)}function nC(r){const{bg:e=j2,showAC:t="true",showSettings:n="true"}=r;dt.background=e,Hu.setState({showTimeControl:Gf(t)}),Hu.setState({showSettings:Gf(n)})}async function iC(r){dt.disposeAllModels(),setTimeout(async()=>{var o;const e=r.includes("id=")?r:r+`/id=${Y2}`,t=await dt.loadModelFromCode(e);dt.add(t);const n=t.type==="adventurer"?"Adv":"Personal";U2.getState().setCategory(n),tC(t);const{id:i}=t;if(!r.includes("camPos=")){const a=BT(i);dt.camera.position.set(...a)}const s=VT(i);if(dt.controls.target.set(...s),r.includes("ani=")){const a=(o=t.animation.current.chainCode)!=null?o:"";a&&(t.userData.chain=Vp(a,"init"))}else{const a=q2(i);if(a){const{code:c,name:l}=a;t.animation.addChain(c),t.userData.chain=Vp(c,l)}}})}const rC=Ht(()=>it(()=>import("./index.4a5a9dbe.js"),["assets/index.4a5a9dbe.js","assets/index.0f03617c.css","assets/styles.2ff56570.css","assets/createSvgIcon.367d6de6.js","assets/ButtonBase.364ccf33.js","assets/BoneManager.db4fbf33.js","assets/BoneManager.bf3fbd2c.css","assets/ModelIcon.1466fdb9.js","assets/Accordion.9d5c1cda.js","assets/Accordion.09fd7fc3.css","assets/useToggleState.5d0bb8e6.js","assets/filterConfig.4edc9f02.js","assets/filterConfig.ea114570.css","assets/Gallery.2a841c24.js","assets/Popover.d771b8f3.js","assets/Box.51910987.js","assets/DialogTitle.ca07fc52.js","assets/GlowToggle.b16abd7a.js","assets/GlowToggle.eb519626.css","assets/lists.d978aa67.js","assets/lists.4341b07e.css","assets/Close.9f31cc41.js","assets/ColorButton.743db584.js","assets/Button.ca13eae1.js","assets/SkipPrevious.8b8b8cd8.js","assets/useKey.281d29ed.js","assets/FaceSelect.ed9fe051.js","assets/FaceSelect.febe3778.css","assets/FacePartSelector.52e9f65c.js","assets/Selector.da06cf5f.js","assets/Selector.88a094c7.css","assets/MeshMouthSelect.e8c1dde3.js","assets/MeshMouthSelect.7f49998c.css","assets/FaceTexture.4d8b168c.js","assets/styles.85f37e03.js","assets/styles.6d95f099.css","assets/AddWeapon.5f73d639.js","assets/AddWeapon.45b642d6.css","assets/index.fdf29615.js","assets/TabBar.43700283.js","assets/aniFunction.c75b14e2.js"])),sC=Ht(()=>it(()=>import("./index.8e25be69.js"),["assets/index.8e25be69.js","assets/index.0a450c69.css","assets/useToggleState.5d0bb8e6.js","assets/GlowToggle.b16abd7a.js","assets/GlowToggle.eb519626.css","assets/Button.ca13eae1.js","assets/ButtonBase.364ccf33.js","assets/Popover.d771b8f3.js","assets/SkipPrevious.8b8b8cd8.js","assets/createSvgIcon.367d6de6.js","assets/Close.9f31cc41.js"]));function oC(){const r=f_(),e=pn(),t=pn(),{loadingMsg:n,showTimeControl:i,showSettings:s,showFrameRate:o}=Hu();return Qi(()=>(r&&Fv.then(Vl),window.addEventListener("hashchange",Vl),()=>window.removeEventListener("hashchange",Vl))),Qi(()=>{e.current.appendChild(dt.canvas),dt.stats.dom.style.position="",t.current.appendChild(dt.stats.dom)},[]),dn(xn,{children:[s&&dn($i,{fallback:null,children:dn(rC,{})}),dn("div",{className:"mount",ref:a=>e.current=a}),dn("div",{className:"stats",style:{display:o?"unset":"none"},ref:a=>t.current=a}),n&&dn("div",{className:"loading-msg",children:n}),i&&dn($i,{fallback:null,children:dn(sC,{})})]})}es(dn(oC,{}),document.getElementById("app"));export{Dv as $,Gc as A,it as B,wp as C,a2 as D,o2 as E,vc as F,pC as G,bC as H,af as I,G2 as J,mC as K,Fv as L,xC as M,f_ as N,cC as O,IT as P,rT as Q,um as R,qu as S,sm as T,Sm as U,dm as V,nm as W,hm as X,rm as Y,Yu as Z,Qi as _,$i as a,Hc as a0,Ln as a1,lm as a2,E_ as a3,Ap as a4,A0 as a5,Lp as a6,_C as a7,vC as a8,W2 as a9,gn as aA,Be as aB,ao as aC,xe as aD,Mh as aE,co as aF,ic as aG,rc as aH,hh as aI,dr as aJ,St as aK,ir as aL,oo as aM,Ge as aN,qr as aO,lC as aP,Za as aQ,_n as aR,dC as aa,Ht as ab,VA as ac,yC as ad,oe as ae,Vc as af,q as ag,Gt as ah,Co as ai,Ot as aj,A as ak,Ip as al,ec as am,Si as an,kE as ao,pt as ap,rt as aq,ut as ar,xh as as,yg as at,qn as au,Xi as av,yi as aw,Yt as ax,mi as ay,et as az,uC as b,Vp as c,Up as d,dn as e,BT as f,q2 as g,VT as h,tC as i,U2 as j,h_ as k,fC as l,gC as m,hC as n,ns as o,xn as p,om as q,xm as r,pn as s,Bl as t,Hu as u,dt as v,gc as w,Mm as x,mc as y,lf as z};
